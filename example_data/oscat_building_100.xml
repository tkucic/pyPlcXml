<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://www.plcopen.org/xml/tc6_0200">
  <fileHeader companyName="" productName="CODESYS" productVersion="CODESYS V3.5 SP16" creationDateTime="2021-04-18T12:39:37.2567666" />
  <contentHeader name="BUILDING" version="1.0.0.0" modificationDateTime="2021-02-23T13:09:34" organization="OSCAT" author="OSCAT">
    <Comment>OSCAT Library with Building POUs.</Comment>
    <coordinateInfo>
      <fbd>
        <scaling x="1" y="1" />
      </fbd>
      <ld>
        <scaling x="1" y="1" />
      </ld>
      <sfc>
        <scaling x="1" y="1" />
      </sfc>
    </coordinateInfo>
    <addData>
      <data name="http://www.3s-software.com/plcopenxml/projectinformation" handleUnknown="implementation">
        <ProjectInformation>
          <property name="Author" type="string">OSCAT</property>
          <property name="Company" type="string">OSCAT</property>
          <property name="DefaultNamespace" type="string">OSCAT_BUILDING</property>
          <property name="Description" type="string">OSCAT Library with Building POUs.</property>
          <property name="LanguageModelAttribute" type="string">qualified-access-only</property>
          <property name="Placeholder" type="string">OSCAT_BUILDING</property>
          <property name="Project" type="string">oscat_building_100</property>
          <property name="Title" type="string">BUILDING</property>
          <property name="Version" type="version">1.0.0.0</property>
          <property name="Version string" type="string" />
          <property name="library-category-list" type="library-category-list">Application|Utils</property>
        </ProjectInformation>
      </data>
    </addData>
  </contentHeader>
  <types>
    <dataTypes />
    <pous>
      <pou name="ACTUATOR_2P" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="TEST">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ARE">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
          </inputVars>
          <inOutVars>
            <variable name="ARX">
              <type>
                <BOOL />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="CYCLE_TIME">
              <type>
                <TIME />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="SENS">
              <type>
                <BYTE />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="SELF_ACT_TIME">
              <type>
                <TIME />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="SELF_ACT_PULSE">
              <type>
                <TIME />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="SELF_ACT_CYCLES">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="OUT">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ARO">
              <type>
                <BOOL />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="timer">
              <type>
                <derived name="AUTORUN" />
              </type>
            </variable>
            <variable name="pwgen">
              <type>
                <derived name="OSCAT_BASIC.GEN_PULSE" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* run the autorun timer *)
timer(trun := SELF_ACT_PULSE * (2 * SELF_ACT_CYCLES), toff := SELF_ACT_TIME, Test := TEST, ARE := ARE, arx := ARX);
ARO := timer.ARO;

(* run the pulse width generator *)
IF aro THEN
	pwgen(PTL := SELF_ACT_PULSE, PTH := SELF_ACT_PULSE);
	out := pwgen.Q;
ELSIF in &lt; sens THEN
	out := FALSE;
ELSIF in &gt; BYTE#255 - sens THEN
	out := TRUE;
ELSE
	pwgen.PTH := (CYCLE_TIME * OSCAT_BASIC.BAND_B(IN,SENS)) / 255;
	pwgen.PTL := CYCLE_TIME - pwgen.PTH;
	pwgen();
	out := pwgen.Q;
END_IF;



(* revision history
hm	7.10.2006 		rev 1.1
	changed error pos could not reach 1 or 0 under certain conditions due to error in code.
	changed on and off in force and force_in for better usability.

hm	17.1.2007		rev 1.2
	deleted unused variable time_overflow

hm	15.9.2007		rev 1.3
	replaced time() with T_PLC_MS for compatibility and performance reasons

hm	19. 11 2007		rev 1.4
	replaced left over statement time() with tx

hm	27. 12. 2007	REV 1.5
	CHANGED CODE FOR BETTER PERFORMANCE

hm	21. oct. 2008	rev 1.6
	code optimized

hm	23. nov. 2008	rev 2.0
	new code using library modules

hm	24. jan. 2009	rev 2.1
	deleted unused var inb
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>6fcee7c5-7494-4d07-a1f7-8f0356f564d2</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="ACTUATOR_3P" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="TEST">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ARE">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="END_POS">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="T_RUN">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#1m0s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_EXT">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#10s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_CAL">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#10m0s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_DIAG">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#14400m0s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="SWITCH_AVAIL">
              <type>
                <BOOL />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </inputVars>
          <inOutVars>
            <variable name="ARX">
              <type>
                <BOOL />
              </type>
            </variable>
          </inOutVars>
          <outputVars>
            <variable name="OUT1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="OUT2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="POS">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="ERROR">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="STATUS">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="ramp">
              <type>
                <derived name="OSCAT_BASIC._RMP_NEXT" />
              </type>
            </variable>
            <variable name="tx">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="next_cal">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="next_diag">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="last">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="start">
              <type>
                <TIME />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* read system timer *)
tx := DWORD_TO_TIME(OSCAT_BASIC.T_PLC_MS());

(* check test input *)
IF TEST THEN
	status := 103;
	start := tx;
	ARX := TRUE;
END_IF;

CASE status OF
	0:	(* power on setup *)
		IF ARE AND NOT ARX THEN
			status := 103;
			start := tx;
			ARX := TRUE;
		END_IF;

	100:	(* normal operation *)
		(* check for auto diagnostics *)
		IF T_DIAG &gt; T#0s AND tx &gt; next_diag AND ARE AND NOT ARX THEN
				status := 103;
				start := tx;
				ARX := TRUE;

		(* check for auto calibration *)
		ELSIF T_CAL &gt; T#0s AND tx &gt; next_cal AND ARE AND NOT ARX THEN
			IF pos &gt; BYTE#127 THEN
				OUT1 := TRUE;
				OUT2 := FALSE;
				ramp.IN := 255;
				ARX := TRUE;
			ELSE
				OUT1 := FALSE;
				OUT2 := TRUE;
				ramp.IN := 0;
				ARX := TRUE;
			END_IF;
			status := 101;
			start := tx;
		ELSE
			(* increment next_cal if not active *)
			IF NOT(OUT1 OR OUT2) THEN next_cal := next_cal + (tx-last); END_IF;
			(* set ramp generator to IN *)
			ramp.IN := IN;
		END_IF;

	101:	(* calibrate *)
		IF tx - start &lt; T_EXT THEN
			next_cal := tx + T_CAL;
		ELSIF SWITCH_AVAIL AND END_POS THEN
			STATUS := 100;
			ARX := FALSE;
		ELSIF tx - start &gt; T_EXT + T_RUN THEN
			ERROR := SWITCH_AVAIL;
			ARX := FALSE;
		END_IF;

	103:	(* diagnostics up*)
		(* run up for T_ext *)
		IF tx - start &lt; T_EXT THEN
			ERROR := FALSE;
			ramp.TR := T_RUN;
			ramp.TF := T_RUN;
			OUT1 := TRUE;
			OUT2 := FALSE;
			ramp.IN := 255;
		ELSIF SWITCH_AVAIL AND END_POS THEN
			ramp.TR := tx - start;
			STATUS := 104;
		ELSIF tx - start &gt; T_EXT + T_RUN THEN
			ERROR := SWITCH_AVAIL;
			STATUS := 104;
			start := tx;
		END_IF;

	104:	(* diagnostics dn*)
		IF tx - start &lt; T_ext THEN
			OUT1 := FALSE;
			OUT2 := TRUE;
			ramp.IN := 0;
			next_diag := tx + T_DIAG;
		ELSIF SWITCH_AVAIL AND END_POS THEN
			ramp.TR := tx - start;
			(* check if runtimes differ by more than 10% *)
			IF DINT_TO_TIME(ABS(TIME_TO_DINT(ramp.TR) - TIME_TO_DINT(ramp.TF))*10) &gt; T_RUN THEN error := TRUE; END_IF;
			STATUS := 100;
			ARX := FALSE;
			next_cal := tx + T_CAL;
		ELSIF tx - start &gt; T_EXT + T_RUN THEN
			IF SWITCH_AVAIL THEN ERROR := TRUE; END_IF;
			STATUS := 100;
			ARX := FALSE;
			next_CAL := tx + T_CAL;
		END_IF;
END_CASE;

(* internal flap simulation and output activation *)
ramp(OUT := POS);
IF STATUS = 100 THEN
	OUT1 := ramp.UP;
	OUT2 := ramp.DN;
END_IF;

(* adjust position if end switch is active *)
IF SWITCH_AVAIL AND END_POS THEN
	POS := SEL(POS &gt; 127, 0, 255);
	next_cal := tx + T_CAL;
END_IF;

(* set last to tx for next cycle *)
last := tx;



(* revision history

hm	19. oct 2006	rev 1.1
	added security checks for end_switch to avoid overrun of the end_switch, hans

hm	23. jan 2007	rev 1.2
	deleted unused variables force_on and force_off

hm	15. sep 2007	 rev 1.3
	replaced Time() with T_PLC_MS for compatibility and performance reasons

hm	28. jan 2010	rev 2.0
	new code and new features

*)
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>45e70587-b9d6-4356-a0c3-054dde3af084</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="ACTUATOR_A" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="I1">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="IS">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="I2">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="RV">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="DX">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="RUNTIME">
              <type>
                <TIME />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="SELF_ACT_TIME">
              <type>
                <TIME />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="OUT_MIN">
              <type>
                <WORD />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="OUT_MAX">
              <type>
                <WORD />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Y">
              <type>
                <WORD />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="timer">
              <type>
                <derived name="OSCAT_BASIC.CYCLE_4" />
              </type>
            </variable>
            <variable name="dx_edge">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* run the system timer, if self_act_time = t#0s then state is set to 0 *)
timer(T0 := RUNTIME, T1 := RUNTIME, T3 := SELF_ACT_TIME, sl := DX AND NOT dx_edge, sx := 0, S0 := SELF_ACT_TIME &gt; t#0s);
dx_edge := dx;

CASE timer.STATE OF
	0: 	(* self act min value *)
		Y := OUT_MIN;
	1:	(* self_act max value *)
		Y := OUT_MAX;
	3:	(* normal operation *)
		IF rv THEN
			Y := OUT_MAX - (OUT_MAX - OUT_MIN) * SEL(IS, I1, I2) / 255;
		ELSE
			Y := (OUT_MAX - OUT_MIN) * SEL(IS, I1, I2) / 255 + OUT_MIN;
		END_IF;
END_CASE;




(*
hm 	8. nov. 2008	rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>5f799073-37dc-4119-b35f-5f2adbfecd47</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="ACTUATOR_COIL" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="self_act_cycle">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#14400m0s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="self_act_time">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#1s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="OUT">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="STATUS">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="last">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="init">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="tx">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="now">
              <type>
                <DWORD />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* read system time *)
now := OSCAT_BASIC.T_PLC_MS();

(* initialize for first cycle *)
IF NOT init THEN
	last := now;
	init := TRUE;
ELSIF IN THEN
	OUT := TRUE;
	STATUS := 101; (* activated by input *)
	LAST := now;
ELSE
	OUT := FALSE;
	STATUS := 100; (* disabled *)
	(* now we need to check for self activation *)
	tx := now - last;
	IF (self_act_cycle &gt; T#0s) AND (tx &gt;= TIME_TO_DWORD(self_act_cycle)) THEN
		OUT := TRUE;
		STATUS := 102; (* auto activation *)
		IF tx &gt;= TIME_TO_DWORD(self_act_cycle + self_act_time) THEN
			last := now;
			OUT := FALSE;
			STATUS := 100; (* idle *)
		END_IF;
	END_IF;
END_IF;



(*
revision history:

hm		1. jun. 2008 	rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>013a3b1a-e2d0-44ce-8e4b-c381584745fd</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="ACTUATOR_PUMP" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="MANUAL">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="RST">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="MIN_ONTIME">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#10s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="MIN_OFFTIME">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#10s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="RUN_EVERY">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#10000m0s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="PUMP">
              <type>
                <BOOL />
              </type>
            </variable>
          </outputVars>
          <inOutVars>
            <variable name="RUNTIME">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="CYCLES">
              <type>
                <UDINT />
              </type>
            </variable>
          </inOutVars>
          <localVars>
            <variable name="tx">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="last_change">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="meter">
              <type>
                <derived name="OSCAT_BASIC.ontime" />
              </type>
            </variable>
            <variable name="old_man">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="init">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">tx := DWORD_TO_TIME(OSCAT_BASIC.T_PLC_MS());

IF NOT init THEN
	init := TRUE;
	last_change := tx;
ELSIF rst THEN
	rst := FALSE;
	runtime := 0;
	cycles := 0;
ELSIF manual AND NOT pump AND NOT old_man THEN
	last_change := tx;
	pump := TRUE;
ELSIF NOT manual AND old_man AND pump AND NOT in THEN
	last_change := tx;
	pump := FALSE;
ELSIF in AND NOT pump AND tx - last_change &gt;= min_offtime THEN
	last_change := tx;
	pump := TRUE;
ELSIF pump AND NOT in AND NOT manual AND tx - last_change &gt;= min_ontime THEN
	last_change := tx;
	pump := FALSE;
ELSIF NOT pump AND (tx - last_change &gt;= run_every) AND (run_every &gt; T#0s) THEN
	last_change := tx;
	pump := TRUE;
END_IF;

meter(in := pump, seconds := runtime, cycles := cycles);
old_man := manual;



(*
hm	27.12.2006		rev 1.1
	fixed a failure while the pump would run for tmin after startup.

hm	15.9.2007		rev 1.2
	replaced Time() with T_PLC_MS for compatibility and performance reasons

hm	13. oct. 2008	rev 1.3
	auto activation can now be disabled when run_every = t#0s

hm	21. oct. 2008	rev 1.4
	changed to use ontime rev 2.0

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>66c5a3de-d4dc-4ebd-8847-4b0bed91b13f</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="ACTUATOR_UD" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="UD">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ON">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Manual">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Up">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Dn">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="off">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="YUP_in">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="YDN_in">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="TON">
              <type>
                <TIME />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="TOFF">
              <type>
                <TIME />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="out_return">
              <type>
                <BOOL />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Yup">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Ydn">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="status">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="tx">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="last">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="init">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* read system time *)
tx := DWORD_TO_TIME(OSCAT_BASIC.T_PLC_MS());

IF NOT init THEN
	(* INITIALIZATION AT FIRST CALL *)
	last := tx;
	init := TRUE;
ELSIF off THEN
	(* emergency shut off detected *)
	Yup := FALSE;
	ydn := FALSE;
	last := tx;
	status := 101;

(* Watch FOR MIN TON TIME *)
ELSIF ((Yup OR Ydn) AND tx - last &lt; Ton) THEN
	RETURN;
ELSIF NOT yup AND NOT ydn AND tx - last &lt; toff THEN
	RETURN;

(* manual operation *)
ELSIF manual THEN
	status := 102;
	(* directional chage set both outs 0 first *)
	IF yup AND NOT up OR ydn AND NOT dn THEN
		ydn := FALSE;
		yup := FALSE;
		last := tx;
	(* manual up operation *)
	ELSIF UP AND NOT DN AND NOT OFF THEN
		Ydn := FALSE;
		Yup := TRUE;
		last := tx;
		status := 103;
	(* manual down operation *)
	ELSIF DN AND NOT UP AND NOT OFF THEN
		Yup := FALSE;
		Ydn := TRUE;
		last := tx;
		status := 104;
	(* maual mode but no up or down *)
	ELSE
		IF YUP OR YDN THEN LAST := tx; END_IF;
		Yup := FALSE;
		ydn := FALSE;
	END_IF;

(* automatic operation *)
ELSE
	(* directional change set outputs low first *)
	IF yup AND NOT ud OR ydn AND UD THEN
		yup := FALSE;
		ydn := FALSE;
		last := tx;
	(* automatic up operation *)
	ELSIF Ud AND on AND NOT OFF THEN
		Ydn := FALSE;
		Yup := TRUE;
		last := tx;
		status := 111;

	(* automatic down operation *)
	ELSIF NOT UD AND on AND NOT OFF THEN
		Yup := FALSE;
		Ydn := TRUE;
		last := tx;
		status := 112;
	(* standby mode *)
	ELSE
		IF Yup OR Ydn THEN last := tx; END_IF;
		Yup := FALSE;
		Ydn := FALSE;
		status := 110;
	END_IF;
END_IF;

(* make sure Yup and Ydn are never on at the same time *)
IF Ydn AND Yup_in AND out_return THEN
	Ydn := FALSE;
	status := 1;
END_IF;
IF Yup AND Ydn_in AND out_return THEN
	Yup := FALSE;
	status := 2;
END_IF;



(* revision history
hm 22. jan 2007	rev 1.1
	added status output
	changed inputs ton, toff to config variables
	added config var out_return to enable yup_in and Ydn_in
	manual mod will override automatic mode 

hm	15.9.2007	rev 1.2
	replaced Time() with T_PLC_MS for compatibility and performance reasons

hm	17. oct. 2008	rev 1.3
	deleted unnecessary initialization with 0
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b1bc27a5-b58d-4601-a305-b41eabe81d3a</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="AUTORUN" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="TEST">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ARE">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
          </inputVars>
          <inOutVars>
            <variable name="ARX">
              <type>
                <BOOL />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="TRUN">
              <type>
                <TIME />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="TOFF">
              <type>
                <TIME />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="OUT">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ARO">
              <type>
                <BOOL />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="timer">
              <type>
                <derived name="OSCAT_BASIC._RMP_B" />
              </type>
            </variable>
            <variable name="val">
              <type>
                <BYTE />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* run the integrator when T_off &gt; T#0s *)
IF TOFF &gt; T#0s THEN
	timer(DIR:= OUT, TR := SEL(OUT, TOFF, TRUN), RMP := val);
ELSE
	val := 255;
END_IF;


(* when timer = 0 or test then initiate autorun until timer reaches 255 *)
IF (NOT ARX AND ARE AND val = 0) OR TEST THEN
	val := 0;
	ARO := TRUE;
	ARX := TRUE;
ELSIF val = 255 AND ARO THEN
	ARO := FALSE;
	ARX := FALSE;
END_IF;

(* output is true when autorun ARO is true or in = TRUE *)
out := IN OR ARO;



(* revision history
hm 20. nov. 2008	rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>8d9c3dbc-393b-4c70-a0ee-83a32ce4372f</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CLICK" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="in">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="single">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="double">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="triple">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="status">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <inputVars>
            <variable name="T_debounce">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#10ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_short">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#200ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_pause">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#500ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_reconfig">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#1m0s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </inputVars>
          <localVars>
            <variable name="s_in">
              <type>
                <derived name="SW_RECONFIG" />
              </type>
            </variable>
            <variable name="tx">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="state">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="last">
              <type>
                <TIME />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* reconfiguration and debounce circuitry *)
s_in(in := in, TD := T_debounce, TR := T_reconfig);

(* read system time *)
tx := DWORD_TO_TIME(OSCAT_BASIC.T_PLC_MS());

(* count the mumber of clicks *)
IF s_in.Q XOR Q THEN
	last := tx;
	IF s_in.Q THEN state := state + 1; END_IF;
END_IF;
Q := s_in.Q;

(* set outputs *)
IF state &gt; 0 THEN
	IF (Q AND tx - last &gt; t_short) OR (NOT Q AND tx - last &gt; t_pause) THEN
		CASE state OF
			1:	single := TRUE;
				status := 111;
			2:	double := TRUE;
				status := 112;
			3:	triple := TRUE;
				status := 113;
		END_CASE;
		state := 0;
	END_IF;
ELSIF NOT q THEN
	single := FALSE;
	double := FALSE;
	triple := FALSE;
	status := 110;
	last := tx;
	state := 0;
END_IF;





(* revision history

15 Feb 2007	rev 1.0	hm
	created original version

18.5.2007	rev 1.1 hm
	corrected an error while execution would stop after t_reconfig elapsed.

15.9.2007	rev 1.2 hm
	replaced Time() with T_PLC_MS for compatibility and performance reasons

28. dec. 2008	rev 2.0
	rewritten using modular approach

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>828878b3-d802-44db-b13f-fe451fd39b54</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CLICK_MODE" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="SINGLE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="DOUBLE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="LONG">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="TP_LONG">
              <type>
                <BOOL />
              </type>
            </variable>
          </outputVars>
          <inputVars>
            <variable name="T_LONG">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#500ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </inputVars>
          <localVars>
            <variable name="Timer">
              <type>
                <derived name="OSCAT_BASIC.TP" />
              </type>
            </variable>
            <variable name="cnt">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="last">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* when input goes high start the timer to decode pulses *)
timer(in := IN, PT := T_LONG);
single := FALSE;
double := FALSE;

IF timer.Q THEN
	(* decode pulses while the timer is active *)
	IF NOT in AND last THEN	cnt := cnt + 1; END_IF;
ELSE
	CASE cnt OF
		1 : single := TRUE;
		2 : double := TRUE;
	END_CASE;
	cnt := 0;
END_IF;
last := in;
TP_LONG := NOT timer.Q AND (NOT LONG) AND IN;
LONG := NOT timer.Q AND in;




(* revision history

hm	13. nov. 2008	rev 1.0
	original release

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>f8ca43c7-f257-4d34-9e23-939415f1f67b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="DEBOUNCE" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="TD">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="PM">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q">
              <type>
                <BOOL />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="deb">
              <type>
                <derived name="OSCAT_BASIC.TOF" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
IF NOT deb.Q AND IN THEN
	(* rising edge on input detetced a *)
	Q := TRUE;
ELSIF NOT PM THEN
	Q := deb.Q;
ELSE
	Q := FALSE;
END_IF;

(* run debounce timer *)
deb(IN := IN, PT := TD);



(*
hm 22. sep. 2008	rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>7ec970fa-9f02-41e9-8ed4-95a6897dc06e</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="DIMM_2" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="SET">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="VAL">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="255" />
              </initialValue>
            </variable>
            <variable name="I1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="I2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="RST">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="T_DEBOUNCE">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#10ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_ON_MAX">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_DIMM_START">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#1s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_DIMM">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#3s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="MIN_ON">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="50" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="MAX_ON">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="255" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="RST_OUT">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="SOFT_DIMM">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="DBL1_TOG">
              <type>
                <BOOL />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="DBL2_TOG">
              <type>
                <BOOL />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="DBL1_SET">
              <type>
                <BOOL />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="DBL2_SET">
              <type>
                <BOOL />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="DBL1_POS">
              <type>
                <BYTE />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="DBL2_POS">
              <type>
                <BYTE />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="D1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="D2">
              <type>
                <BOOL />
              </type>
            </variable>
          </outputVars>
          <inOutVars>
            <variable name="OUT">
              <type>
                <BYTE />
              </type>
            </variable>
          </inOutVars>
          <localVars>
            <variable name="t1">
              <type>
                <derived name="OSCAT_BASIC.TOF" />
              </type>
            </variable>
            <variable name="t2">
              <type>
                <derived name="OSCAT_BASIC.TOF" />
              </type>
            </variable>
            <variable name="dc1">
              <type>
                <derived name="CLICK_MODE" />
              </type>
            </variable>
            <variable name="dc2">
              <type>
                <derived name="CLICK_MODE" />
              </type>
            </variable>
            <variable name="t3">
              <type>
                <derived name="OSCAT_BASIC.TON" />
              </type>
            </variable>
            <variable name="dim">
              <type>
                <derived name="OSCAT_BASIC._RMP_B" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* debouncing for inputs i1 and i2 *)
t1(IN := I1, PT := T_DEBOUNCE);
t2(IN := I2, PT := T_DEBOUNCE);
dc1(in := t1.Q, T_LONG := T_DIMM_START);
dc2(in := t2.Q, T_LONG := T_DIMM_START);


IF RST THEN
	IF RST_OUT THEN out := 0; END_IF;
	Q := FALSE;
	D1 := FALSE;
	D2 := FALSE;
ELSIF set THEN
	OUT := VAL;
	Q := TRUE;
ELSIF dc1.SINGLE THEN
	(* single click on i1 turns the dimmer on *)
	out := LIMIT(MAX(MIN_ON,1), out, MAX_ON);
	Q := TRUE;
ELSIF dc2.SINGLE THEN
	(* single click on i2 turns the dimmer off *)
	Q := FALSE;
ELSIF dc1.TP_LONG THEN
	(* continuous on at i1 dimms up *)
	IF NOT Q THEN
		out := SEL(SOFT_DIMM, LIMIT(MAX(MIN_ON,1), out, MAX_ON), 1);
	END_IF;
	Q := TRUE;
	dim.DIR := TRUE;
ELSIF dc2.TP_LONG THEN
	(* continuous on at i2 dimms down *)
	dim.DIR := FALSE;
END_IF;

(* set the double click output *)
IF NOT DBL1_TOG THEN D1 := FALSE; END_IF;
IF dc1.DOUBLE THEN
	IF DBL1_SET THEN
		OUT := DBL1_POS;
		Q := TRUE;
	ELSE
		D1 := NOT D1;
	END_IF;
END_IF;
IF NOT DBL2_TOG THEN D2 := FALSE; END_IF;
IF dc2.DOUBLE THEN
	IF DBL2_SET THEN
		OUT := DBL2_POS;
		Q := TRUE;
	ELSE
		D2 := NOT D2;
	END_IF;
END_IF;


(* while dimming is active ramp the output out up or down *)
dim(dir := dc2.LONG, e := dc1.LONG OR dc2.LONG , TR := T_DIMM, rmp := out);

(* turn off output if a value of 0 is reached *)
IF out = 0 THEN Q := FALSE; END_IF;

(* limit the maximum runtime *)
IF t_ON_MAX &gt; t#0s THEN
	t3(in := q, pt := T_ON_MAX);
	Q := Q XOR t3.Q;
END_IF;




(* revision history

hm 22. mar. 2009	rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b9718039-081b-4abf-87c1-3d9f812458f4</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="DIMM_I" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="SET">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="VAL">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="255" />
              </initialValue>
            </variable>
            <variable name="IN">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="RST">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="T_DEBOUNCE">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#10ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_RECONFIG">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#10s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_ON_MAX">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_DIMM_START">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#1s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_DIMM">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#3s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="MIN_ON">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="50" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="MAX_ON">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="255" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="SOFT_DIMM">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="DBL_toggle">
              <type>
                <BOOL />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="RST_OUT">
              <type>
                <BOOL />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="DBL">
              <type>
                <BOOL />
              </type>
            </variable>
          </outputVars>
          <inOutVars>
            <variable name="OUT">
              <type>
                <BYTE />
              </type>
            </variable>
          </inOutVars>
          <localVars>
            <variable name="config">
              <type>
                <derived name="SW_RECONFIG" />
              </type>
            </variable>
            <variable name="decode">
              <type>
                <derived name="CLICK_MODE" />
              </type>
            </variable>
            <variable name="t3">
              <type>
                <derived name="OSCAT_BASIC.TON" />
              </type>
            </variable>
            <variable name="dim">
              <type>
                <derived name="OSCAT_BASIC._RMP_B" />
              </type>
            </variable>
            <variable name="dir">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* the input is first sent through auto reconfiguration and debouncing *)
config(IN := IN, TD := T_DEBOUNCE, TR := T_RECONFIG);
decode(in := config.Q, T_LONG := T_DIMM_START);

IF RST THEN
	IF rst_out THEN out := 0; END_IF;
	Q := FALSE;
	dir := out &gt; 127;
ELSIF set THEN
	out := val;
	Q := TRUE;
	(* set direction to up when value &lt; 127 otherwise set dir down dir is reversed because next action will reverse again *)
	dir := out &gt; 127;
ELSIF decode.SINGLE THEN
	(* a single click reverses output Q *)
	Q := NOT Q;
	(* when dimmer is turned on we need to limit out to min and max limits *)
	IF Q THEN	out := LIMIT(MAX(MIN_ON,1), out, MAX_ON);	END_IF;
	(* set the appropriate direction of dimmer dir is reversed because next action will reverse again *)
	dir := out &gt; 127;
ELSIF decode.TP_LONG THEN
	IF NOT Q THEN
		IF SOFT_DIMM THEN
			OUT := 1;
			dir := TRUE;
		ELSE
			OUT := LIMIT(MAX(MIN_ON,1), out, MAX_ON);
			DIR := out &lt; 127;
		END_IF;
		Q := TRUE;
	ELSE
		(* reverse direction with every long click *)
		dir := NOT dir;
	END_IF;
END_IF;

(* set the double click output *)
IF NOT dbl_toggle THEN dbl := FALSE; END_IF;
IF decode.DOUBLE THEN dbl := NOT dbl; END_IF;

(* while dimming is active ramp the output out up or down *)
dim(DIR := dir, e := decode.LONG AND Q, TR := T_DIMM, rmp := out);

(* reverse direction when limits are reached *)
IF out = 0 THEN
	dir := TRUE;
ELSIF out = 255 THEN
	dir := FALSE;
END_IF;

(* limit the maximum runtime *)
IF t_ON_MAX &gt; t#0s THEN
	t3(in := q, pt := T_ON_MAX);
	Q := Q XOR t3.Q;
END_IF;




(* revision history

hm 22.1.2007		rev 1.1
	deleted unused structure ramp

hm 2.feb 2007		rev 1.2
	changed structure to read time() at the beginning for better time consistency if a higher priorized tak interrupts dimm_i
	added statements in case structure for state 1 to allow for short 1 cycle input pulses

hm 	15.9.2007		rev 1.3
	replaced Time() with T_PLC_MS for compatibility and performance reasons

hm	30. sep. 2008	rev 1.4
	added Input VAL to supply value for set input
	added setup parameter init_val

hm	22. oct. 2008	rev 2.0
	new code and features

hm	14. nov. 2008	rev 2.1
	added soft_dimm feature

hm	16. nov. 2008	rev 2.2
	added reset out feature

hm	26. jan. 2009	rev 2.3
	dimming will also reverse at out = 0
	rst will override set
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>c349feba-fd15-4ff4-ab62-0b3b41cf803a</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="F_LAMP" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="SWITCH">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="DIMM">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="255" />
              </initialValue>
            </variable>
            <variable name="RST">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="LAMP">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="STATUS">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <inOutVars>
            <variable name="ONTIME">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="CYCLES">
              <type>
                <UDINT />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="T_NO_DIMM">
              <type>
                <UINT />
              </type>
              <initialValue>
                <simpleValue value="100" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_MAINTENANCE">
              <type>
                <UINT />
              </type>
              <initialValue>
                <simpleValue value="15000" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </inputVars>
          <localVars>
            <variable name="runtime">
              <type>
                <derived name="OSCAT_BASIC.ONTIME" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">runtime(in := switch, seconds := ontime, cycles := cycles);

IF RST THEN
	ONTIME := 0;
	CYCLES := 0;
END_IF;
IF SWITCH THEN
	IF ontime &lt; T_NO_DIMM * 3600 THEN
		LAMP := 255;
		STATUS := 111;
	ELSE
		LAMP := DIMM;
		STATUS := 112;
	END_IF;
ELSE
	LAMP := 0;
	STATUS := 110;
END_IF;


IF ontime &gt;= T_maintenance * 3600 AND T_Maintenance &gt; 0 THEN
	status := 120;
END_IF;



(* revision history
hm	8. feb. 2007	rev 1.1
	original version

hm	22. oct. 2008	rev 1.2
	changed use of ontime for ontime 2.0
	ontime is now in seconds not hours
*)

</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>fc5ba884-3eb4-44b7-9401-f18bdf3a6b09</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="PULSE_LENGTH" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="in">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="short">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="middle">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="long">
              <type>
                <BOOL />
              </type>
            </variable>
          </outputVars>
          <inputVars>
            <variable name="T_short">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#100ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_long">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#1s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </inputVars>
          <localVars>
            <variable name="tx">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="tn">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="edge">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* read system time *)
tx := DWORD_TO_TIME(OSCAT_BASIC.T_PLC_MS());

(* reset outputs, they should only be active 1 cycle *)
short := FALSE;
Middle := FALSE;
long := FALSE;

(* detect rising edge *)
IF in AND NOT edge THEN
	edge := TRUE;
	tn := tx;

(* detect for falling edge *)
ELSIF NOT in AND edge THEN
	edge := FALSE;
	tn := tx - tn;
	IF tn &lt; t_short THEN
		short := TRUE;
	ELSIF tn &gt; t_long THEN
		long := TRUE;
	ELSE
		Middle := TRUE;
	END_IF;

(* generate long pulse as soon as T_long is reached *)
ELSIF in AND tx - tn &gt; t_long THEN
	long := TRUE;
END_IF;


(* revision history

hm	15. feb 2006	rev 1.0
	original version

hm	15 sep 2007		rev 1.1
	replaced Time() with T_PLC_MS for compatibility and performance reasons

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>100305c3-6969-4b7a-aff5-899e5b9710b6</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="PULSE_T" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="T1">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="T2">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="RST">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q">
              <type>
                <BOOL />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="init">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="last">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="tx">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="edge">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">tx := DWORD_TO_TIME(OSCAT_BASIC.T_PLC_MS());
IF NOT init THEN
	init := TRUE;
	last := tx;
ELSIF RST THEN
	(* asynchronous reset *)
	Q := FALSE;
ELSIF IN AND NOT edge AND NOT Q THEN
	(* a rising edge on in will reversre the output status, if new pulse is startet the start time is stored in last *)
	last := tx;
	Q := TRUE;
ELSIF NOT IN AND edge AND ((tx - last) &gt; T1) THEN
	(* a falling edge on IN will clear the output if in was high for more then T1 *)
	Q := FALSE;
ELSIF (tx - last) &gt;= T2 THEN
	(* timeout for long pulse if second click did not occur or in stays high *)
	Q := FALSE;
END_IF;

edge := IN;

(* revision histroy
hm	15. jul. 2008	rev 1.0
	original release


*)	
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ab437450-a8e3-4451-afed-67f841721c02</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="SW_RECONFIG" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="TD">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="TR">
              <type>
                <TIME />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q">
              <type>
                <BOOL />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="T1">
              <type>
                <derived name="OSCAT_BASIC.TON" />
              </type>
            </variable>
            <variable name="T2">
              <type>
                <derived name="OSCAT_BASIC.TON" />
              </type>
            </variable>
            <variable name="INV">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* run debounce circuit *)
t1(in := IN, PT := TD);

IF tr &gt; t#0s THEN
	(* generate output *)
	Q := t1.Q XOR inv;
	(* reconfiguration timer *)
	T2(in := Q, pt := TR);
	(* when T2.Q goes high then reverse INV *)
	IF T2.Q THEN INV := NOT INV; END_IF;
ELSE
	Q := t1.Q;
END_IF;



(* revision history
hm	22.10.2008	rev 1.0
	original version

*)
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>a50d6857-386c-47aa-8b5a-b38b4988c3f4</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="SWITCH_I" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="set">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="in">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="rst">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="T_debounce">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#10ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_reconfig">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#1s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_on_max">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q">
              <type>
                <BOOL />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="state">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="edge">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="r_edge">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="T_on">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="tx">
              <type>
                <TIME />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* read system time *)
tx := DWORD_TO_TIME(OSCAT_BASIC.T_PLC_MS());

(* asynchronous set and reset first *)
IF set AND NOT rst THEN
	Q := TRUE;
	T_on := tx;
ELSIF rst THEN
	Q := FALSE;
(* check FOR input edge AND start debounce timer *)
ELSIF (in XOR edge) AND NOT (state = 1) THEN
	state := 1;
	T_on := Tx;
(* edge was detected and debounce time elapsed *)
ELSIF (state = 1) AND (Tx - t_debounce &gt;= T_on) THEN
	state := 2;
	(* react on rising or falling edge depending on r_edge *)
	IF r_edge XOR in THEN Q := NOT Q; END_IF;
(* wait for T_reconfig and adjust r_edge *)
ELSIF state = 2 AND Tx - t_reconfig &gt;= T_on THEN
	r_edge := in;
END_IF;
IF Q AND T_on_max &gt; t#0ms AND Tx &gt;= T_on + T_on_max THEN
	Q := FALSE;
END_IF;
edge := in;

(* revision history

hm	4 aug 2006	rev 1.0
	original version

hm	15.9.2007	rev 1.1
	replaced Time() with T_PLC_MS for compatibility and performance reasons

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>55750a8e-95e3-47f4-9a93-b56f7f28b76b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="SWITCH_X" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="IN2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="IN3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="IN4">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="IN5">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="IN6">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Q2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Q3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Q4">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Q5">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Q6">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Q31">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Q41">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Q51">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Q61">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Q32">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Q42">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Q52">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Q62">
              <type>
                <BOOL />
              </type>
            </variable>
          </outputVars>
          <inputVars>
            <variable name="t_debounce">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#50ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </inputVars>
          <localVars>
            <variable name="init">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="T1">
              <type>
                <derived name="OSCAT_BASIC.TOF" />
              </type>
            </variable>
            <variable name="T2">
              <type>
                <derived name="OSCAT_BASIC.TOF" />
              </type>
            </variable>
            <variable name="T3">
              <type>
                <derived name="OSCAT_BASIC.TOF" />
              </type>
            </variable>
            <variable name="T4">
              <type>
                <derived name="OSCAT_BASIC.TOF" />
              </type>
            </variable>
            <variable name="T5">
              <type>
                <derived name="OSCAT_BASIC.TOF" />
              </type>
            </variable>
            <variable name="T6">
              <type>
                <derived name="OSCAT_BASIC.TOF" />
              </type>
            </variable>
            <variable name="tx">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="x1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="x2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="E1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="E2">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* initialize on startup *)
IF NOT init THEN
	init := TRUE;
	IF t_debounce &lt; t#50ms THEN tx := t#50ms; ELSE tx := t_debounce; END_IF;
	T1(PT := Tx);
	T2(PT := Tx);
	T3(PT := Tx);
	T4(PT := Tx);
	T5(PT := Tx);
	T6(PT := Tx);
ELSE
	Q1 := FALSE;
	Q2 := FALSE;
	Q3 := FALSE;
	Q4 := FALSE;
	Q5 := FALSE;
	Q6 := FALSE;
	Q31 := FALSE;
	Q41 := FALSE;
	Q51 := FALSE;
	Q61 := FALSE;
	Q32 := FALSE;
	Q42 := FALSE;
	Q52 := FALSE;
	Q62 := FALSE;
END_IF;

(* read inputs and debounce *)
	T1(IN := IN1);
	T2(IN := IN2);
	T3(IN := IN3);
	T4(IN := IN4);
	T5(IN := IN5);
	T6(IN := IN6);

(* detect edge of IN1 and IN2 *)
IF t1.Q AND NOT E1 THEN X1 := TRUE; END_IF;
IF t2.Q AND NOT E2 THEN X2 := TRUE; END_IF;

IF t1.Q THEN
	IF t3.q THEN
		q31 := TRUE;
		X1 := FALSE;
	ELSIF t4.q THEN
		q41 := TRUE;
		X1 := FALSE;
	ELSIF t5.q THEN
		q51 := TRUE;
		X1 := FALSE;
	ELSIF t6.q THEN
		q61 := TRUE;
		X1 := FALSE;
	END_IF;
ELSIF t2.Q THEN
	IF t3.q THEN
		q32 := TRUE;
		X2 := FALSE;
	ELSIF t4.q THEN
		q42 := TRUE;
		X2 := FALSE;
	ELSIF t5.q THEN
		q52 := TRUE;
		X2 := FALSE;
	ELSIF t6.q THEN
		q62 := TRUE;
		X2 := FALSE;
	END_IF;
(* in1 was active alone *)
ELSIF NOT T1.Q AND E1 AND X1 THEN
	Q1 := TRUE;
	X1 := FALSE;
ELSIF NOT T2.Q AND E2 AND X2 THEN
	Q2 := TRUE;
	X2 := FALSE;
ELSIF T3.Q THEN
	Q3 := TRUE;
ELSIF T4.Q THEN
	Q4 := TRUE;
ELSIF T5.Q THEN
	Q5 := TRUE;
ELSIF T6.Q THEN
	Q6 := TRUE;
END_IF;

(* save state of in1 and in2 *)
E1 := T1.Q;
E2 := T2.Q;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>acb25ded-957e-437f-bbbc-b629e0a0e88f</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TIMER_1" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="E">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="DTI">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="START">
              <type>
                <TOD />
              </type>
            </variable>
            <variable name="DURATION">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="DAY">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="2#1111111" />
              </initialValue>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="stop">
              <type>
                <TIME />
              </type>
            </variable>
          </outputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF E THEN
	stop := TOD_TO_TIME(START) + DURATION;
	IF stop &gt; T#24h THEN stop := stop - T#24h; END_IF;
	Q := OSCAT_BASIC.TIMECHECK(DT_TO_TOD(DTI), START, TIME_TO_TOD(stop)) AND (SHR(BYTE#128, OSCAT_BASIC.DAY_OF_WEEK(DT_TO_DATE(DTI))) AND DAY) &gt; BYTE#0;
ELSE
	Q := FALSE; (* clear output when e is not true *)
END_IF;


(*
1.12.2006 hm		rev 1.1
	corrected an error with pulse width = 0.

25.12.2006 hm		rev 1.2
	corrected an error when timer overflows.

14.apr 2007 hm		rev 1.3
	corrected an error while while output would not go active when start year would be 1970.
	increase accuracy by checking every 100ms
	added init section to compensate for timer overflow

15.9.2007 hm		rev 1.4
	replaced Time() with T_PLC_MS for compatibility and performance reasons

hm	1. okt 2007		rev 1.5
	corrected an error while output would not stay active over midnight.

hm	17. jan 2008	rev 1.6
	New code with better performance  
	Output is now only active during the time of day it is supposed to 
	no pulse is generated at power up

hm	7. oct. 2008	rev 1.7
	changed function weekday to day_of_week

hm	23. oct. 2008	rev 2.0
	new code, added input E, now days can be selected by bits in byte day

hm	6. nov. 2008	rev 2.1
	added default for input EN and input DAY

hm 16. dec 2009	rev 2.2
	fixed a bug over midnight

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>da2d6e69-1776-4078-889b-7bd73923eb49</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TIMER_2" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="DT_in">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="start">
              <type>
                <TOD />
              </type>
            </variable>
            <variable name="duration">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="mode">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="HOLIDAY">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q">
              <type>
                <BOOL />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="last_check">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="dat">
              <type>
                <DATE />
              </type>
            </variable>
            <variable name="daytime">
              <type>
                <TOD />
              </type>
            </variable>
            <variable name="activation">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="tx">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="enabled">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="init">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="wday">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
          <localVars retain="true">
            <variable name="run_date">
              <type>
                <DATE />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* read system time *)
tx := DWORD_TO_TIME(OSCAT_BASIC.T_PLC_MS());

IF NOT init THEN
	init := TRUE;
	last_check := tx - t#100ms;
END_IF;

(* for performance resons exit if execution is not necessary *)
IF tx - last_check &lt; T#100ms THEN RETURN; END_IF;

(* calculate temp variables *)
dat := DT_TO_DATE(dt_in);
daytime := DT_TO_TOD(dt_in);
wday := OSCAT_BASIC.DAY_OF_WEEK(dat);

(* calculate if any action is necessary today *)
CASE mode OF
	1..7:	(* mondays to fridays *)
		enabled := wday = BYTE_TO_INT(mode);
	11:	(* every day *)
		enabled := TRUE;
	12..16:	(* every nth day *)
		enabled := (DATE_TO_DWORD(dat)/86400) MOD (mode - 10) = 0;
	20:	(* monday - friday *)
		enabled := wday &lt;= 5;
	21:	(* saturday and sunday *)
		enabled := wday &gt; 5;
	22: (* workdays only *)
		enabled := wday &lt;= 5 AND NOT holiday;
	23:	(* holidays and weekends *)
		enabled := wday &gt; 5 OR holiday;
	24:	(* holidays only *)
		enabled := holiday;
	25:	(* 1st day of the month *)
		enabled := OSCAT_BASIC.DAY_OF_MONTH(dat) = 1;
	26:	(* last day of month *)
		enabled := OSCAT_BASIC.DAY_OF_MONTH(dat + T#1D) = 1;
	27:	(* 31st of december *)
		enabled := OSCAT_BASIC.DAY_OF_MONTH(dat) = 31 AND OSCAT_BASIC.MONTH_OF_DATE(dat) = 12;
	28:	(* 1st of january *)
		enabled := OSCAT_BASIC.DAY_OF_YEAR(dat) = 1;
ELSE
	enabled := FALSE;
END_CASE;

(* set output if necessary *)
IF enabled AND NOT Q AND daytime &gt;= start AND run_date &lt;&gt; dat THEN
	Q := TRUE;
	activation := tx;
	run_date := dat;
ELSIF Q AND tx - activation &gt;= duration THEN
	Q := FALSE;
END_IF;
last_check := Tx;


(* revision history
hm 22.2.2007		rev 1.1
	changed VAR RETAIN PERSISTENT to VAR RETAIN for better compatibility
	wago lon contollers do not support persisitent

hm	15.9.2007		rev 1.2
	replaced Time() with T_PLC_MS for compatibility and performance reasons

hm	7. oct. 2008	rev 1.3
	changed function month to month_of_date

hm	20. oct. 2008	rev 1.4
	improved performance
	deleted unnecessary trunc

hm	22. dec. 2008	rev 1.5
	make sure timer_2 is executed in the first cycle

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>13dddc1f-7d21-44a6-82d2-1a83e084d9b8</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TIMER_EVENT_DECODE" pouType="function">
        <interface>
          <returnType>
            <derived name="OSCAT_BASIC.TIMER_EVENT" />
          </returnType>
          <inputVars>
            <variable name="EVENT">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="LANG">
              <type>
                <INT />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="pos">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="start">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="stop">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="pt">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="1" upper="255" />
                      <baseType>
                        <BYTE />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="step">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="tmp">
              <type>
                <string length="60" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* a timer event is specified as follows:
	$typ;ch;day;start;duration;land;lor#
$ 		= start of definition
typ 	= type of definition	(number)
channel	= channel number		(number)
day 	= day number			(number)
start	= start time			(time of day)
duration= duration of event		(time)
land	= mask for output AND	(8bit value)
lor		= mask for ourput OR	(8bit value)
#		= end of definition
*)

(* check for start and ending character *)
IF (OSCAT_BASIC.LEFT(event,1) &lt;&gt; '&lt;') AND (OSCAT_BASIC.RIGHT(event,1) &lt;&gt; '&gt;') THEN RETURN; END_IF;
stop := OSCAT_BASIC.LEN(event);
pt := ADR(event);
start := 2;

(* parse the string for next ; *)
FOR pos := 2 TO stop DO
	IF pt^[pos] = 59 OR pt^[pos] = 62 THEN
		tmp := OSCAT_BASIC.MID(event, pos - start, start);
		CASE step OF
			0:	(* read type *)
				TIMER_EVENT_DECODE.typ := OSCAT_BASIC.FSTRING_TO_BYTE(tmp);

			1:	(* read channel *)
				TIMER_EVENT_DECODE.channel := OSCAT_BASIC.FSTRING_TO_BYTE(tmp);

			2:	(* read day *)
				IF OSCAT_BASIC.IS_CC(tmp,'0123456789abcdefABCDEF#') THEN
					TIMER_EVENT_DECODE.day := OSCAT_BASIC.FSTRING_TO_BYTE(tmp);
				ELSIF TIMER_EVENT_DECODE.typ = 2 THEN
					TIMER_EVENT_DECODE.DAY := OSCAT_BASIC.FSTRING_TO_WEEK(tmp, LANG);
				ELSE
					TIMER_EVENT_DECODE.DAY := INT_TO_BYTE(OSCAT_BASIC.FSTRING_TO_WEEKDAY(tmp, LANG));
				END_IF;

			3:	(* read start *)
				TIMER_EVENT_DECODE.start := STRING_TO_TOD(tmp);

			4:	(* read duaration *)
				TIMER_EVENT_DECODE.duration := STRING_TO_TIME(tmp);

			5:	(* read land *)
				TIMER_EVENT_DECODE.land := OSCAT_BASIC.FSTRING_TO_BYTE(tmp);

			6:	(* read lor *)
				TIMER_EVENT_DECODE.LOR := OSCAT_BASIC.FSTRING_TO_BYTE(tmp);
		END_CASE;
		start := pos + 1;
		step := step + 1;
	END_IF;
END_FOR;




(* revision history
hm	17. jun 2008	rev 1.0
	original version

hm	25. oct. 2008	rev 1.1
	adding input lang for language selection
*)
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>5d572296-c0bf-48d8-a831-e4254e26237e</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TIMER_EXT" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="ENA">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="ON">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="OFF">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="MAN">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="SWITCH">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="DT_IN">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="SUN_RISE">
              <type>
                <TOD />
              </type>
            </variable>
            <variable name="SUN_SET">
              <type>
                <TOD />
              </type>
            </variable>
            <variable name="HOLIDAY">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="T_DEBOUNCE">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#100ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_RISE_START">
              <type>
                <TIME />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_RISE_STOP">
              <type>
                <TIME />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_SET_START">
              <type>
                <TIME />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_SET_STOP">
              <type>
                <TIME />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_DAY_START">
              <type>
                <TOD />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_DAY_STOP">
              <type>
                <TOD />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="ENABLE_SATURDAY">
              <type>
                <BOOL />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="ENABLE_SUNDAY">
              <type>
                <BOOL />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="ENABLE_HOLIDAY">
              <type>
                <BOOL />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="STATUS">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="mx">
              <type>
                <derived name="OSCAT_BASIC.MANUAL_2" />
              </type>
            </variable>
            <variable name="deb">
              <type>
                <derived name="DEBOUNCE" />
              </type>
            </variable>
            <variable name="tdx">
              <type>
                <TOD />
              </type>
            </variable>
            <variable name="wdx">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="tc">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="tx">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="tl">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="qx">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="init">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* lösche die millisekunden bei sunrise und sunset *)
SUN_RISE := DWORD_TO_TOD(TOD_TO_DWORD(SUN_RISE) / 1000 * 1000);
SUN_SET := DWORD_TO_TOD(TOD_TO_DWORD(SUN_SET) / 1000 * 1000);

(* measure cycle time tc and make sure this circuitry is not called more then once in 200ms*)
tx := OSCAT_BASIC.T_PLC_MS();
IF NOT init THEN
	init := TRUE;
	tl := tx;
END_IF;
tc := DWORD_TO_TIME(tx - tl);
IF tc &lt; t#200ms THEN RETURN; END_IF;
tl := tx;

(* debounce *)
deb(in := SWITCH, TD := T_DEBOUNCE, PM := TRUE);

(* read time of day and strip off all milliseconds *)
tdx := DT_TO_TOD(dt_in);
wdx := OSCAT_BASIC.DAY_OF_WEEK(DT_TO_DATE(dt_in));

(* automatic output control *)
IF deb.Q THEN
	qx := NOT qx;
	status := 110;
ELSIF holiday AND NOT enable_holiday THEN
	qx := FALSE;
ELSIF wdx = 6 AND NOT enable_saturday THEN
	qx := FALSE;
ELSIF wdx = 7 AND NOT enable_sunday THEN
	qx := FALSE;
ELSIF T_day_start &gt; TOD#00:00 AND tdx - T_DAY_START &lt;= tc THEN
	(* turn on at specified daytime *)
	qx := TRUE;
	status := 111;
ELSIF T_DAY_STOP &gt; TOD#00:00 AND tdx - T_DAY_STOP &lt;= tc THEN
	(* turn off at specific daytime *)
	qx := FALSE;
	status := 112;
ELSIF T_RISE_START &gt; T#0s AND tdx - SUN_RISE + T_RISE_START &lt;= tc THEN
	(* turn on before sunrise *)
	qx := TRUE;
	status := 113;
ELSIF T_RISE_STOP &gt; T#0s AND tdx - SUN_RISE - T_RISE_STOP &lt;= tc THEN
	(* turn off after sunrise *)
	qx := FALSE;
	status := 114;
ELSIF T_SET_start &gt; T#0s AND tdx - SUN_SET + T_SET_START &lt;= tc THEN
	(* turn on before sunset *)
	qx := TRUE;
	status := 115;
ELSIF T_SET_STOP &gt; t#0s AND tdx - SUN_SET - T_SET_STOP &lt;= tc THEN
	(* turn off after sunset *)
	qx := FALSE;
	status := 116;
END_IF;


(* mnaual and output control *)
mx(in := qx, ena := ENA, on := ON, off := OFF, man := MAN);
Q := mx.Q;

(* set the status output *)
IF mx.STATUS &gt; 100 THEN status := mx.STATUS; END_IF;



(*
hm 	7. oct. 2008	rev 1.0
	original version

hm	6. nov. 2008	rev 1.1
	added default = true for ena input
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>22c7731d-e875-45bf-a276-326e0b1dfe75</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TIMER_P4" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="DTIME">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="TREF_0">
              <type>
                <TOD />
              </type>
            </variable>
            <variable name="TREF_1">
              <type>
                <TOD />
              </type>
            </variable>
            <variable name="HOLY">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="L0">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="L1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="L2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="L3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="OFS">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="ENQ">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="MAN">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="MI">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="RST">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <inOutVars>
            <variable name="PROG">
              <type>
                <array>
                  <dimension lower="0" upper="array_max" />
                  <baseType>
                    <derived name="OSCAT_BASIC.TIMER_EVENT" />
                  </baseType>
                </array>
              </type>
            </variable>
          </inOutVars>
          <outputVars>
            <variable name="Q0">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Q1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Q2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Q3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="STATUS">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars constant="true">
            <variable name="array_max">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="63" />
              </initialValue>
            </variable>
            <variable name="channel_max">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="3" />
              </initialValue>
            </variable>
          </localVars>
          <localVars>
            <variable name="day_start">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="start">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="event">
              <type>
                <derived name="OSCAT_BASIC.TIMER_EVENT" />
              </type>
            </variable>
            <variable name="pos">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="last_execute">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="current_day">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="mask">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="ma">
              <type>
                <array>
                  <dimension lower="0" upper="channel_max" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="mo">
              <type>
                <array>
                  <dimension lower="0" upper="channel_max" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="qn">
              <type>
                <array>
                  <dimension lower="0" upper="channel_max" />
                  <baseType>
                    <BOOL />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="qs">
              <type>
                <array>
                  <dimension lower="0" upper="channel_max" />
                  <baseType>
                    <BOOL />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="channel">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="tx">
              <type>
                <TOD />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* for performance reasons we only execute the code at the beginning of a new second *)

IF RST THEN
	(* reset all events to last active on 1.1.1970 *)
	last_execute := DT#1970-1-1-00:00;
	FOR pos := 0 TO ARRAY_MAX DO
		IF (PROG[pos].CHANNEL &gt;= OFS) AND (PROG[pos].CHANNEL &lt; (OFS + 4)) THEN PROG[pos].LAST := last_execute; END_IF;
	END_FOR;

	(* reset all set markers and logic masks *)
	FOR pos := 0 TO channel_max DO
		qs[pos] := FALSE;
	END_FOR;

(* normal operation *)
ELSIF dtime &lt;&gt; last_execute THEN
	(* save the actual second for next execution test *)
	last_execute := DTIME;

	(* calculate dt for the start of the day to be used in comparisons *)
	day_start := DATE_TO_DT(DT_TO_DATE(DTIME));

	(* set all qn to FALSE *)
	FOR pos := 0 TO channel_max DO qn[pos] := FALSE; END_FOR;

	(* search the array PROG for timer events *)
	FOR pos := 0 TO ARRAY_MAX DO
		event := prog[pos];
		channel := event.CHANNEL - OFS;
		IF (event.TYP &gt; 0) AND (channel &gt;= 0) AND (channel &lt;= channel_max) THEN
			ma[channel] := event.LAND;
			mo[channel] := event.LOR;
			CASE event.TYP OF
				1:	(* daily event *)
					start := day_start + TOD_TO_TIME(event.start);
					qn[channel] := dtime &gt;= start AND dtime &lt;= start + event.DURATION;

				2: 	(* event by selected weekdays *)
					IF (SHR(BYTE#128, OSCAT_BASIC.DAY_OF_WEEK(DT_TO_DATE(Dtime))) AND event.DAY) &gt; 0 THEN
						start := day_start + TOD_TO_TIME(event.start);
						qn[channel] := dtime &gt;= start AND dtime &lt;= start + event.DURATION;
					END_IF;

				3:	(* event every N days *)
					IF current_day MOD event.DAY = 0 THEN
						start := day_start + TOD_TO_TIME(event.start);
						qn[channel] := dtime &gt;= start AND dtime &lt;= start + event.DURATION;
					END_IF;

				10:	(* weekly event exactly once a week the weekday is specified in day, 1= mo *)
					IF OSCAT_BASIC.DAY_OF_WEEK(DT_TO_DATE(DTIME)) = BYTE_TO_INT(event.DAY) THEN
						start := day_start + TOD_TO_TIME(event.start);
						qn[channel] := dtime &gt;= start AND dtime &lt;= start + event.DURATION;
					END_IF;

				20:	(* monthly event *)
					IF OSCAT_BASIC.DAY_OF_MONTH(DT_TO_DATE(DTIME)) = BYTE_TO_INT(event.DAY) THEN
						start := day_start + TOD_TO_TIME(event.start);
						qn[channel] := dtime &gt;= start AND dtime &lt;= start + event.DURATION;
					END_IF;

				21:	(* event on last day of month *)
					IF DT_TO_DATE(DTIME) = OSCAT_BASIC.MONTH_END(DT_TO_DATE(dtime)) THEN
						start := day_start + TOD_TO_TIME(event.start);
						qn[channel] := dtime &gt;= start AND dtime &lt;= start + event.DURATION;
					END_IF;

				30:	(* yearly event on a specific day specified in day *)
					IF OSCAT_BASIC.DAY_OF_YEAR(DT_TO_DATE(DTIME)) = BYTE_TO_INT(event.DAY) THEN
						start := day_start + TOD_TO_TIME(event.start);
						qn[channel] := dtime &gt;= start AND dtime &lt;= start + event.DURATION;
					END_IF;

				31:	(* event on last day of year *)
					IF DT_TO_DATE(DTIME) = OSCAT_BASIC.YEAR_END(OSCAT_BASIC.YEAR_OF_DATE(DT_TO_DATE(dtime))) THEN
						start := day_start + TOD_TO_TIME(event.start);
						qn[channel] := dtime &gt;= start AND dtime &lt;= start + event.DURATION;
					END_IF;

				40:	(* event on leap days *)
					IF OSCAT_BASIC.LEAP_DAY(DT_TO_DATE(dtime)) THEN
						start := day_start + TOD_TO_TIME(event.start);
						qn[channel] := dtime &gt;= start AND dtime &lt;= start + event.DURATION;
					END_IF;

				41: (* event on holidays *)
					IF HOLY THEN
						start := day_start + TOD_TO_TIME(event.start);
						qn[channel] := dtime &gt;= start AND dtime &lt;= start + event.DURATION;
					END_IF;

				42: (* event on holidays and weekends *)
					IF (Holy OR (OSCAT_BASIC.DAY_OF_WEEK(DT_TO_DATE(dtime)) = 6) OR (OSCAT_BASIC.DAY_OF_WEEK(DT_TO_DATE(dtime)) = 7)) THEN
						start := day_start + TOD_TO_TIME(event.start);
						qn[channel] := dtime &gt;= start AND dtime &lt;= start + event.DURATION;
					END_IF;

				43:	(* event on workdays Mo-FR and no holiday *)
					IF OSCAT_BASIC.DAY_OF_WEEK(DT_TO_DATE(dtime)) &lt; 6 THEN
						start := day_start + TOD_TO_TIME(event.start);
						qn[channel] := dtime &gt;= start AND dtime &lt;= start + event.DURATION;
					END_IF;

				50: (* event after reference time *)
					CASE prog[pos].DAY OF
						0:	tx := tref_0;
						1:	tx := tref_1;
					ELSE
						tx := TOD#00:00;
					END_CASE;
					start := day_start + TOD_TO_TIME(tx) + TOD_TO_TIME(event.start);
					qn[channel] := dtime &gt;= start AND dtime &lt;= start + event.DURATION;

				51:	(* event before reference time *)
					CASE prog[pos].DAY OF
						0:	tx := tref_0;
						1:	tx := tref_1;
					ELSE
						tx := TOD#00:00;
					END_CASE;
					start := day_start + TOD_TO_TIME(tx) - TOD_TO_TIME(event.start);
					qn[channel] := dtime &gt;= start AND dtime &lt;= start + event.DURATION;

				52 : (* set output at specific time + offset  *)
					CASE prog[pos].DAY OF
						0:	tx := tref_0;
						1:	tx := tref_1;
					ELSE
						tx := TOD#00:00;
					END_CASE;
					start := day_start + TOD_TO_TIME(tx) + TOD_TO_TIME(event.start);
					IF dtime &gt;= start AND day_start &gt; event.LAST THEN
						qs[channel] := TRUE;
						prog[pos].LAST := day_start;
					END_IF;

				53 : (* reset output at specific time + offset *)
					CASE prog[pos].DAY OF
						0:	tx := tref_0;
						1:	tx := tref_1;
					ELSE
						tx := TOD#00:00;
					END_CASE;
					start := day_start + TOD_TO_TIME(tx) + TOD_TO_TIME(event.start);
					IF dtime &gt;= start AND day_start &gt; event.LAST THEN
						qs[channel] := FALSE;
						prog[pos].LAST := day_start;
					END_IF;

				54 : (* set output at specific time - offset  *)
					CASE prog[pos].DAY OF
						0:	tx := tref_0;
						1:	tx := tref_1;
					ELSE
						tx := TOD#00:00;
					END_CASE;
					start := day_start + TOD_TO_TIME(tx) - TOD_TO_TIME(event.start);
					IF dtime &gt;= start AND day_start &gt; event.LAST THEN
						qs[channel] := TRUE;
						prog[pos].LAST := day_start;
					END_IF;

				55 : (* reset output at specific time - offset *)
					CASE prog[pos].DAY OF
						0:	tx := tref_0;
						1:	tx := tref_1;
					ELSE
						tx := TOD#00:00;
					END_CASE;
					start := day_start + TOD_TO_TIME(tx) - TOD_TO_TIME(event.start);
					IF dtime &gt;= start AND day_start &gt; event.LAST THEN
						qs[channel] := FALSE;
						prog[pos].LAST := day_start;
					END_IF;
			END_CASE;
		END_IF;
	END_FOR;
END_IF;

(* prepare the logical input mask *)
mask := 255;
mask.0 := L0;
mask.1 := L1;
mask.2 := L2;
mask.3 := L3;

(* set the outputs *)
Q0 := ENQ AND ((qn[0] OR qs[0]) AND ((ma[0] AND mask) = ma[0]) OR ((mo[0] AND mask) &gt; 0) OR (man AND MI.0));
Q1 := ENQ AND ((qn[1] OR qs[1]) AND ((ma[1] AND mask) = ma[1]) OR ((mo[1] AND mask) &gt; 1) OR (man AND MI.1));
Q2 := ENQ AND ((qn[2] OR qs[2]) AND ((ma[2] AND mask) = ma[2]) OR ((mo[2] AND mask) &gt; 2) OR (man AND MI.2));
Q3 := ENQ AND ((qn[3] OR qs[3]) AND ((ma[3] AND mask) = ma[3]) OR ((mo[3] AND mask) &gt; 3) OR (man AND MI.3));

(* set status *)
IF NOT enq THEN
	status := 100;
ELSIF man THEN
	status := 101;
ELSE
	status := 102;
END_IF;



(* revision history
hm	17. jun 2008	rev 1.0
	original version

hm	9. oct. 2008	rev 1.1
	changed function year to year_of_date
	changed function weekday to day_of_week
	changed structure of program to be more efficient
	changed input DIS to ENQ

hm	18. oct. 2008	rev 1.2
	changed type of input OFS from int to byte
	added typecasts to avoid warnings

hm	28. feb. 2009	rev 1.3
	array was not correctly initialized

hm	26. jan 2011	rev 1.4
	changed code to allow events over midnight
*)
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>0d6e9df2-b59a-427e-aa58-bc82c0c31992</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="AIR_DENSITY" pouType="function">
        <interface>
          <returnType>
            <REAL />
          </returnType>
          <inputVars>
            <variable name="T">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="P">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="RH">
              <type>
                <REAL />
              </type>
            </variable>
          </inputVars>
          <localVars constant="true">
            <variable name="RL">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="287.05" />
              </initialValue>
            </variable>
            <variable name="RX">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="0.003773319" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">AIR_DENSITY := OSCAT_BASIC.phys.PN * (1.0 - RH * SDD(T, TRUE) * RX / P) / (RL * ( T - OSCAT_BASIC.phys.T0));

(* original code used for rev 1.0

SDD := SDD(T,FALSE);
RF := RL / (1- RH*SDD/P*RX);
Air_density := P / (RF * (T-TK));

*)

(* revision history

hm	29.10.2007	rev 1.0
	original version

hm	4.12.2007		rev 1.1
	changed code for better performance

hm	18. oct. 2008	rev 1.2
	using phys constants

hm	13. mar. 2009	rev 1.3
	real constants updated to new systax using dot

*)

</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>71caf2cc-b9b3-4138-8b8e-f6c68be904aa</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="AIR_ENTHALPY" pouType="function">
        <interface>
          <returnType>
            <REAL />
          </returnType>
          <inputVars>
            <variable name="T">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="RH">
              <type>
                <REAL />
              </type>
            </variable>
          </inputVars>
          <localVars constant="true">
            <variable name="CPL">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="1.00482" />
              </initialValue>
            </variable>
            <variable name="CW">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="1.86" />
              </initialValue>
            </variable>
            <variable name="LH">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="2500.78" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">AIR_ENTHALPY := CPL * T + (CW * T + LH) * DEW_CON(RH,T);

(* revision history

hm	31.10.2007	rev 1.0
	original version

hm	2.11.2007		rev 1.1
	deleted unused variable RF

hm	2.12.2007		rev 1.2
	changed code for better performance
*)

</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>289175fa-f576-456a-a46f-c1ae747d36e0</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="BOILER" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="T_upper">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="T_lower">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="Pressure">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="enable">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="Req_1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Req_2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Boost">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="t_upper_min">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="50" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="t_upper_max">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="60" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_lower_enable">
              <type>
                <BOOL />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_lower_max">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="60" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_request_1">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="70" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_request_2">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="50" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_request_hys">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="5" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_protect_high">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="80" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_protect_low">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="10" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Heat">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="error">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="status">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="edge">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="boost_mode">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="flag_0">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="flag_1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="flag_2">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* read sensors and check for valid data *)
IF t_upper &gt; t_protect_high THEN
	status := 1;
	heat := FALSE;
	error := TRUE;
ELSIF t_upper &lt; t_protect_low THEN
	status := 2;
	heat :=	TRUE;
	error := TRUE;
ELSIF t_lower &gt; T_protect_high AND t_lower_enable THEN
	status := 3;
	heat := FALSE;
	error := TRUE;
ELSIF t_lower &lt; t_protect_low AND t_lower_enable THEN
	status := 4;
	heat := TRUE;
	error := TRUE;
ELSIF NOT pressure THEN
	status := 5;
	heat := FALSE;
	error := TRUE;
ELSIF req_1 OR req_2 OR enable OR boost THEN
	error := FALSE;

	(* determine if heat needs to be turned on *)
	IF boost AND NOT edge AND t_upper &lt; t_upper_max THEN
		status := 101;
		heat := TRUE;
		boost_mode := TRUE;
	ELSIF enable AND t_upper &lt; T_upper_min THEN
		status := 102;
		heat := TRUE;
	ELSIF req_1 AND t_upper &lt; T_request_1 THEN
		status := 103;
		heat := TRUE;
	ELSIF req_2 AND t_upper &lt; t_request_2 THEN
		status := 104;
		heat := TRUE;
	END_IF;

	(* determine the shut off temperature *)
	IF heat THEN
		IF (enable OR boost_mode) THEN
			flag_0 := TRUE;
			IF T_lower_enable AND T_lower &gt; T_lower_max THEN
				flag_0 := boost_mode := FALSE;
			ELSIF NOT T_lower_enable AND T_upper &gt; T_upper_max THEN
				flag_0 := boost_mode := FALSE;
			END_IF;
		ELSE
			flag_0 := FALSE;
		END_IF;
		flag_1 := (req_1 AND T_upper &gt; T_request_1 + T_request_hys) AND req_1;
		flag_2 := (req_2 AND T_upper &gt; T_request_2 + T_request_hys) AND req_2;

		(* shut off heat if no longer needed *)
		heat := flag_0 OR flag_1 OR flag_2;
		IF heat = FALSE THEN status := 100; END_IF;
	END_IF;
ELSE
	status := 100;
	heat := FALSE;
	error := FALSE;
END_IF;
edge := boost;


(* revision history
hm	27. feb. 2007	rev 1.0
	original version

hm	16. oct. 2008	rev 1.1
	improved performance

hm	13. mar. 2009	rev 1.2
	real constants updated to new systax using dot
	replaced double assignments
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>bc7457e4-31a9-4acc-910a-c585e99da1ca</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="BURNER" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="in">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="stage2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="over_temp">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="oil_temp">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="Flame">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="rst">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="rst_timer">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="pre_heat_time">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#5s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="pre_vent_time">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#15s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="pre_ignite_time">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#5s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="post_ignite_time">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#25s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="stage2_delay">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#10s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="safety_time">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#5s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="lockout_time">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#10s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="multiple_ignition">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="KW1">
              <type>
                <REAL />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="KW2">
              <type>
                <REAL />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="motor">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="coil1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="coil2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="pre_heat">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ignite">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="KWh">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="status">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="fail">
              <type>
                <BOOL />
              </type>
            </variable>
          </outputVars>
          <inOutVars>
            <variable name="runtime1">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="runtime2">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="cycles">
              <type>
                <UDINT />
              </type>
            </variable>
          </inOutVars>
          <localVars>
            <variable name="state">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="last">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="tx">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="last_change">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="timer1">
              <type>
                <derived name="OSCAT_BASIC.ONTIME" />
              </type>
            </variable>
            <variable name="timer2">
              <type>
                <derived name="OSCAT_BASIC.ONTIME" />
              </type>
            </variable>
            <variable name="oil_temp_last">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="cycles2">
              <type>
                <UDINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* read system time *)
tx := DWORD_TO_TIME(OSCAT_BASIC.T_PLC_MS());

(* check rst input and overtemp *)
IF rst OR over_temp OR state = 0 THEN
	IF status &gt; 0 AND tx - last_change &gt;= lockout_time AND rst THEN
		status := 110;
		fail := FALSE;
		state := 1;
	ELSE
		(* normaler reset *)
		motor := FALSE;
		coil1 := FALSE;
		coil2 := FALSE;
		ignite := FALSE;
		pre_heat := FALSE;
		IF over_temp THEN
			status := 9;
			fail := TRUE;
		END_IF;
		last_change := tx;
		last := tx;
		state := 1;
	END_IF;
END_IF;

(* check for timer rst and rst timer if true *)
IF rst_timer THEN
	runtime1 := 0;
	runtime2 := 0;
	cycles := 0;
	cycles2 := 0;
END_IF;

(* quit here if an error is present *)
IF (status &gt; 0 AND status &lt; 100) OR rst THEN RETURN; END_IF;

(* start sequence *)
CASE state OF

1:	(* in signal starts oil pre heating *)
	IF in AND flame THEN
		state := 7;
		pre_heat := FALSE;
		status := 2;
		last_change := tx;
	ELSIF in THEN
		pre_heat := TRUE;
		state := 2;
		last_change := tx;
	END_IF;

2:	(* after pre_heating time start motor *)
	IF (tx- last_change &gt;= pre_heat_time AND oil_temp) OR (oil_temp AND NOT oil_temp_last) THEN
		motor := TRUE;
		state := 3;
		last_change := tx;
	(* pre_heat_time ist abgelaufen und oil_temp ist nicht aktiv *)
	ELSIF tx - last_change &gt;= pre_heat_time AND NOT oil_temp THEN
		state := 7;
		pre_heat := FALSE;
		status := 1;
		last_change := tx;
	(* flame monitor cannot be active at this time *)
	ELSIF flame THEN
		state := 7;
		pre_heat := FALSE;
		status := 2;
		last_change := tx;
	END_IF;

3:	(* abwarten bis zündung eingeschaltet werden kann *)
	IF tx - last_change &gt;= pre_vent_time - pre_ignite_time THEN
		ignite := TRUE;
		state := 4;
		last_change := tx;
	(* flame monitor cannot be active at this time *)
	ELSIF flame THEN
		state := 7;
		pre_heat := FALSE;
		motor := FALSE;
		status := 3;
		last_change := tx;
	END_IF;

4:	(* warten bis oelzufuhr geoeffnet werden darf *)
	IF tx - last_change &gt;= pre_ignite_time THEN
		coil1 := TRUE;
		state := 5;
		last_change := tx;
	END_IF;

5:	(* warten auf flammwaechter und falls noetig abschalten *)
	IF tx - last_change &gt;= safety_time OR flame THEN
		IF NOT flame THEN
			(* notabschaltung da flammwaechster nicht angesprochen hat *)
			state := 7;
			motor := FALSE;
			coil1 := FALSE;
			pre_heat := FALSE;
			ignite := FALSE;
			status := 4;
			last_change := tx;
		ELSE
			state := 6;
			last_change := tx;
		END_IF;
	END_IF;

6:	(* brenner läuft, flammueberwachung und nach ablauf der nachigniteszeit ignite abschalten *)
	IF NOT flame AND NOT multiple_ignition THEN
		(* notabschaltung da flammwaechster keine flamme meldet *)
		state := 7;
		motor := FALSE;
		coil1 := FALSE;
		coil2 := FALSE;
		pre_heat := FALSE;
		ignite := FALSE;
		status := 5;
		last_change := tx;
	ELSIF NOT flame AND multiple_ignition THEN
		ignite := TRUE;
		state := 5;
		coil2 := FALSE;
		last_change := tx;
	ELSE
		IF tx - last_change &gt;= post_ignite_time THEN
			(* post_ignite_time abgelaufen, ignite abschalten *)
			ignite := FALSE;
		END_IF;
		IF tx - last_change &gt;= stage2_delay AND stage2 THEN
			coil2 := TRUE;
		ELSE
			coil2 := FALSE;
		END_IF;
	END_IF;
END_CASE;

(* abschaltung wenn kein eingangssignal *)
IF NOT in THEN
	state := 1;
	motor := FALSE;
	coil1 := FALSE;
	coil2 := FALSE;
	ignite := FALSE;
	pre_heat := FALSE;
	last_change := tx;
END_IF;

(* runtimezähler *)
timer1(in := flame AND in AND motor AND coil1 AND NOT coil2, seconds := runtime1, cycles := cycles);
timer2(in := flame AND in AND motor AND coil1 AND coil2, seconds := runtime2, cycles := cycles2);
KWH := UDINT_TO_REAL(runtime1) * KW1 / 3600.0 + UDINT_TO_REAL(runtime2) * KW2 / 3600.0;

(* zeit fuer naechsten aufruf merken *)
last := tx;

(* set fail output IF ERROR and Status  if normal operation *)

IF status &gt; 0 AND status &lt; 100 THEN
	fail := TRUE;
ELSE
	fail := FALSE;
	IF NOT in THEN
		status := 110;
	ELSIF flame AND in AND motor AND coil2 AND coil1 THEN
		status := 113;
	ELSIF flame AND in AND motor AND coil1 THEN
		status := 112;
	ELSE
		status := 111;
	END_IF;
END_IF;



(*
31.12.2006	hm		rev 1.1
	added pre_heat timing and output
	flame monitor before ignition will generate error on status output
	added output for KWh

31.12.2006	hm		rev 1.2
	added oil_temp_input

31.12.2006	hm		rev 1.3
	changed status output to be byte instead of bool

22.1.2007		hm		rev 1.4
	renamed fail output to status
	added output cycles
	corrected an error while pre_heat would be on when an error was present
	added coil2 output and stage2 input

15.9.2007		hm		rev 1.5
	replaced Time() with T_PLC_MS for compatibility and performance reasons

hm	21. oct. 2008	rev 1.6
	changed code to use new ontime rev 2.0	
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>f212ae4f-183e-4c5e-b084-6ffcae8ec490</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="DEW_CON" pouType="function">
        <interface>
          <returnType>
            <REAL />
          </returnType>
          <inputVars>
            <variable name="RH">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="T">
              <type>
                <REAL />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*	this code is good to read but need to be improoved
	SDD := 6.1078*EXPT(10,(a*T)/(b+T));
	DD := RH/100 * SDD;
	V := LOG(DD/6.1078);
	TD := b*V/(a-v);
	dew_con := 0.1 * mw / RU * DD / (T - TK);
*)
IF RH &gt; 0.0 AND T &gt; -50.0 THEN
	DEW_CON := 2.166824303E-2 * RH * SDD(T,FALSE)  / (T - OSCAT_BASIC.phys.T0);
ELSE
	DEW_CON := 0.0;
END_IF;

(*
Bezeichnungen:
r = relative Luftfeuchte
T = Temperatur in °C
TK = Temperatur in Kelvin (TK = T + 273.15)
TD = Taupunkttemperatur in °C
DD = Dampfdruck in hPa
SDD = Sättigungsdampfdruck in hPa

Parameter:
a = 7.5, b = 237.3 für T &gt;= 0
a = 7.6, b = 240.7 für T &lt; 0 über Wasser (Taupunkt)
a = 9.5, b = 265.5 für T &lt; 0 über Eis (Frostpunkt)

R* = 8314.3 J/(kmol*K) (universelle Gaskonstante)
mw = 18.016 kg (Molekulargewicht des Wasserdampfes)
AF = absolute Feuchte in g Wasserdampf pro m3 Luft

Formeln:

   1. SDD(T) = 6.1078 * 10^((a*T)/(b+T))
   2. DD(r,T) = r/100 * SDD(T)
   3. r(T,TD) = 100 * SDD(TD) / SDD(T)
   4. TD(r,T) = b*v/(a-v) mit v(r,T) = log10(DD(r,T)/6.1078)
   5. AF(r,TK) = 10^5 * mw/R* * DD(r,T)/TK; AF(TD,TK) = 10^5 * mw/R* * SDD(TD)/TK 

*)

(* revision history

hm 29 apr 2007	rev 1.0
	original version

hm	13.sep 2007	rev 1.1
	improoved coding for speed
	deleted unused variabled SDD,DD,V, TD

hm	2. dec 2007	rev 1.2
	changed code for better performance
	output is now in Gramms / Qubic meter

hm	14. oct. 2008	rev 1.3
	performance improvement

hm	18. oct. 2008	rev 1.4
	using phys constants

hm	13. mar. 2009	rev 1.5
	improved code

hm	19. jan. 2011	rev 1.6
	return value 0.0 if RH &lt;= 0.0

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>c05dbb5e-ee0f-4280-831b-30b89ffc938b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="DEW_RH" pouType="function">
        <interface>
          <returnType>
            <REAL />
          </returnType>
          <inputVars>
            <variable name="VC">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="T">
              <type>
                <REAL />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">DEW_RH := LIMIT(0.0, VC / DEW_CON(1.0, T), 100.0);

(* code before rev 1.1
dew_rh := VC / dew_con(100,T) * 100;
IF dew_rh &gt; 100 THEN dew_rh := 100; END_IF;
*)

(* revision history
hm	29. apr 2007	rev 1.0
	original version

hm	2. 12. 2007	rev 1.1
	new code for better performance

hm	13. mar. 2009	rev 1.2
	real constants updated to new systax using dot

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>1131a176-d242-46c4-8d11-0164aeb522d8</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="DEW_TEMP" pouType="function">
        <interface>
          <returnType>
            <REAL />
          </returnType>
          <inputVars>
            <variable name="RH">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="T">
              <type>
                <REAL />
              </type>
            </variable>
          </inputVars>
          <localVars constant="true">
            <variable name="a">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="7.5" />
              </initialValue>
            </variable>
            <variable name="b">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="237.3" />
              </initialValue>
            </variable>
          </localVars>
          <localVars>
            <variable name="V">
              <type>
                <REAL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF rh &gt; 0.0 THEN
(*	old code was rewritten for better performance
	SDD := 6.1078*EXPT(10,(a*T)/(b+T));
	DD := RH/100 * SDD;
	V := LOG(DD/6.1078);
	dew_temp := b*V/(a-v);
*)
	V := LOG(RH * 0.01 * OSCAT_BASIC.EXP10((a*T) / (b+T)));
	DEW_TEMP := b*V / (a-V);
ELSE
	DEW_TEMP:= OSCAT_BASIC.phys.T0;
END_IF;

(* revision history

hm		2.10.2006	rev 1.0
	original version created

hm		29.4.2007	rev 1.1
	checked for rh not to be 0 because log(0) is not defined

hm		13.9.2007	rev 1.2
	code rewritten for better performance

hm	2. dec 2007	rev 1.3
	changed code for better performance

hm	8. jan 2008	rev 1.4
	further improvement in performance

hm	18. oct. 2008	rev 1.5
	using phys constants	

hm	13. mar. 2009	rev 1.6
	real constants updated to new systax using dot
	function will now return -273.15 °C for RH = 0
*)

(*
Bezeichnungen:
r = relative Luftfeuchte
T = Temperatur in °C
TK = Temperatur in Kelvin (TK = T + 273.15)
TD = Taupunkttemperatur in °C
DD = Dampfdruck in hPa
SDD = Sättigungsdampfdruck in hPa

Parameter:
a = 7.5, b = 237.3 für T &gt;= 0
a = 7.6, b = 240.7 für T &lt; 0 über Wasser (Taupunkt)
a = 9.5, b = 265.5 für T &lt; 0 über Eis (Frostpunkt)

R* = 8314.3 J/(kmol*K) (universelle Gaskonstante)
mw = 18.016 kg (Molekulargewicht des Wasserdampfes)
AF = absolute Feuchte in g Wasserdampf pro m3 Luft

Formeln:

   1. SDD(T) = 6.1078 * 10^((a*T)/(b+T))
   2. DD(r,T) = r/100 * SDD(T)
   3. r(T,TD) = 100 * SDD(TD) / SDD(T)
   4. TD(r,T) = b*v/(a-v) mit v(r,T) = log10(DD(r,T)/6.1078)
   5. AF(r,TK) = 10^5 * mw/R* * DD(r,T)/TK; AF(TD,TK) = 10^5 * mw/R* * SDD(TD)/TK 

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b0fd6ec3-3206-4370-8add-95298b57192f</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="HEAT_INDEX" pouType="function">
        <interface>
          <returnType>
            <REAL />
          </returnType>
          <inputVars>
            <variable name="T">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="RH">
              <type>
                <REAL />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="RH2">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="T2">
              <type>
                <REAL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF RH &lt; 20.0 OR T &lt; 20.0 THEN
	HEAT_INDEX := T;
ELSE
	RH2 := RH * RH;
	T := OSCAT_BASIC.C_TO_F(T);
	T2 := T * T;
	HEAT_INDEX := -42.379 + 2.04901523 * T - 6.83783E-3 * T2
			+ RH * (10.1433127 - 0.22475541 * T + 1.22874E-3 * T2)
			+ RH2 * (8.5282E-4 * T - 5.481717E-2 - 1.99E-6 * T2);
	HEAT_INDEX := OSCAT_BASIC.F_TO_C(HEAT_INDEX);
END_IF;

(* revision history

hm 27.2.2007		rev 1.1
	deleted unused variables rh3 and T3

hm	2.12.2007		rev 1.2
	changed code for better performance

hm	13. mar. 2009	rev 1.3
	real constants updated to new systax using dot

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>3754b9e3-75b9-464e-bf73-5369a3109f50</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="HEAT_METER" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="TF">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="TR">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="LPH">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="E">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="RST">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="CP">
              <type>
                <REAL />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="Density">
              <type>
                <REAL />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="Content">
              <type>
                <REAL />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="Pulse_Mode">
              <type>
                <BOOL />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="Return_meter">
              <type>
                <BOOL />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="AVG_time">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#5s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="C">
              <type>
                <REAL />
              </type>
            </variable>
          </outputVars>
          <inOutVars>
            <variable name="Y">
              <type>
                <REAL />
              </type>
            </variable>
          </inOutVars>
          <localVars>
            <variable name="tx">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="last">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="int1">
              <type>
                <derived name="OSCAT_BASIC.FT_INT2" />
              </type>
            </variable>
            <variable name="edge">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="x">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="init">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="y_last">
              <type>
                <REAL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF rst THEN
	int1(rst := TRUE);
	int1.rst := FALSE;
	C := 0.0;
	Y := 0.0;
ELSIF e THEN
	X := (WATER_DENSITY(SEL(return_meter, TF, TR), FALSE) * (WATER_ENTHALPY(TF) - WATER_ENTHALPY(TR)) * (1.0 - content) + CP * Density * content * (TF-TR));
END_IF;

(* integrate or add consumption *)
int1(run := NOT pulse_mode AND e, in := X * LPH * 2.77777777777E-4);
IF pulse_mode THEN
	IF NOT edge AND E THEN Y := Y + X * LPH; END_IF;
ELSE
	Y := int1.Out;
END_IF;

(* store the value of e *)
edge := e;

(* read system_time *)
tx := OSCAT_BASIC.T_PLC_MS();

(* only init at startup necessary *)
IF NOT init THEN
	init := TRUE;
	last := tx;
END_IF;

(* calculate the current consumption *)
IF (tx - last &gt;= TIME_TO_DWORD(AVG_TIME)) AND (avg_time &gt; T#0s) THEN
	last := tx;
	C := (Y - Y_last) * 3.6E6 / DWORD_TO_REAL(TIME_TO_DWORD(AVG_TIME));
	Y_last := Y;
END_IF;



(* revision history
hm	16. nov. 2007	rev 1.0
	original version

hm	24. dec. 2007	rev 1.1
	added config variable return_meter
	added output C for current consumption

hm	6. mar. 2008	rev 1.2
	corrected an error in pulse mode

hm	16. mar. 2008	rev 1.3
	added type conversion to avoid warnings under codesys 3.0

hm	21. oct. 2008	rev 1.4
	improved code

hm	6. nov. 2008	rev 1.5
	changed to FT_INT2 to avoid overrun at hig values

hm	8. feb. 2009	rev 1.6
	changes Y to be I/O

hm	23. mar. 2009	rev 1.7
	real constants updated to new systax using dot
	corected error in formula

hm	27. jul 2009	rev 1.8
	output C is now calculated in J/h

hm	13. nov. 2009	rev 1.9
	output C is now calculated correctly

hm	23. jan. 2011	rev 1.10
	corrected an error with pulse_mode
*)
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b56d3fc3-3bc1-49b0-83af-226ad5c82e97</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="HEAT_TEMP" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="T_EXT">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="T_INT">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="OFFSET">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="T_REQ">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="TY_MAX">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="70" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="TY_MIN">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="25" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="TY_CONFIG">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="70" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_INT_CONFIG">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="20" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_EXT_CONFIG">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="-15" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_DIFF">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="10" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="C">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="1.33" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="H">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="3" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="TY">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="HEAT">
              <type>
                <BOOL />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="tr">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="tx">
              <type>
                <REAL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">tr := T_INT + OFFSET;
tx := (tr - T_EXT) / (T_INT_CONFIG - T_EXT_CONFIG);

IF T_EXT + H &gt; tr THEN
	TY := 0.0;
ELSE
	TY := LIMIT(TY_MIN, tr + T_DIFF * 0.5 * tx + (TY_CONFIG - T_DIFF * 0.5 - tr) * EXPT(tx, 1.0 / C), TY_MAX);
END_IF;

TY := MAX(TY, T_REQ);
HEAT := TY &gt; 0.0;


(*

tv=ti+(tvmax-ti)*((ti-tau)/(ti-taumin))^(1/n)

tv aktuelle Vorlauftemp.
ti Raumtemperatur innen (20°C)
tau aktuelle Außentemperatur
taumin minimale Außentemperatur -12°C oder -15°C
n Heizkörperexponent (meistens 1,33)
Fußbodenheizung = 1,1
Wandheizung 1,3

Normen z. B. DIN 4703, DIN 4725 oder die Literatur, z. B Recknagel Abschnitt 1.3.5.

*)


(* revision history
hm	27. jan. 2008	rev 1.0
	original version

hm	26. sep. 2008	rev 1.1
	moved T_INT from config to Input
	added config variable H
	corrected error in formula

hm	13. mar. 2009	rev 1.2
	improved code

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>1830db3c-09ba-4013-88d6-447217449d81</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="LEGIONELLA" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="manual">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="temp_boiler">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="temp_return">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="100" />
              </initialValue>
            </variable>
            <variable name="DT_in">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="rst">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="T_start">
              <type>
                <TOD />
              </type>
              <initialValue>
                <simpleValue value="TIME_OF_DAY#3:0" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="day">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="7" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="temp_set">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="70" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="temp_offset">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="10" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="temp_hys">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="5" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="t_max_heat">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#10m0s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="t_max_ret">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#10m0s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="tp_0">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#5m0s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="TP_1">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#5m0s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="tp_2">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#5m0s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="tp_3">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#5m0s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="tp_4">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#5m0s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="tp_5">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#5m0s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="tp_6">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#5m0s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="tp_7">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#5m0s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Heat">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="pump">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="valve0">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="valve1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="valve2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="valve3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="valve4">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="valve5">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="valve6">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="valve7">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="run">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Status">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="X1">
              <type>
                <derived name="TIMER_1" />
              </type>
            </variable>
            <variable name="x2">
              <type>
                <derived name="OSCAT_BASIC.SEQUENCE_8" />
              </type>
            </variable>
            <variable name="x3">
              <type>
                <derived name="OSCAT_BASIC.HYST_1" />
              </type>
            </variable>
            <variable name="init">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* startup initialization *)
IF NOT init THEN
	init := TRUE;
	X1.day := SHR(BYTE#128,day);
	X1.start := T_start;
	X3.low := Temp_offset + temp_set;
	X3.high := Temp_hys + X3.low;
	X2.wait0 := T_max_heat;
	X2.delay0 := TP_0;
	X2.delay1 := TP_1;
	X2.delay2 := TP_2;
	X2.delay3 := TP_3;
	X2.delay4 := TP_4;
	X2.delay5 := TP_5;
	X2.delay6 := TP_6;
	X2.delay7 := TP_7;
	X2.wait1 := T_max_ret;
	X2.wait2 := T_max_ret;
	X2.wait3 := T_max_ret;
	X2.wait4 := T_max_ret;
	X2.wait5 := T_max_ret;
	X2.wait6 := T_max_ret;
	X2.wait7 := T_max_ret;
	X2();
END_IF;

(* oerational code *)
X1(DTi := DT_in);
IF X1.Q OR MANUAL OR x2.run THEN
	X3(in := temp_boiler);
	X2.in0 := X3.Q OR x3.win;
	X2.in1 := temp_return &gt;= temp_set;
	X2.in2 := x2.in1;
	X2.in3 := x2.in1;
	X2.in4 := x2.in1;
	X2.in5 := x2.in1;
	X2.in6 := x2.in1;
	X2.in7 := x2.in1;
	X2.rst := rst;
	X2(start := X1.Q OR MANUAL);
	run := x2.run;
	pump := x2.qx;
	Heat := NOT X3.Q AND x2.run;
	valve0 := X2.Q0;
	valve1 := X2.Q1;
	valve2 := X2.Q2;
	valve3 := X2.Q3;
	valve4 := X2.Q4;
	valve5 := X2.Q5;
	valve6 := X2.Q6;
	valve7 := X2.Q7;
	pump := X2.qx;
	status := X2.status;
ELSE;
	X2(start :=0);
	status := x2.status;
END_IF;

(* revision history

hm 17.jan 2007	rev 1.1
	rewritten to st for higher performance
	changes eeror output to esr compatible status output

hm	23. 10.2008	rev 1.2
	update code to use new version of timer_1

hm	13. mar. 2009	rev 1.3
	real constants updated to new systax using dot
	using new module sequence_8
*)


</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>54fa1828-dbbe-4338-b16a-f4f98c1d0f3d</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="SDD" pouType="function">
        <interface>
          <returnType>
            <REAL />
          </returnType>
          <inputVars>
            <variable name="T">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="ICE">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF ice THEN
	SDD := 611.153 * EXP(22.4433 * T / (272.186 + T));
ELSE
	SDD := 611.213 * EXP(17.5043 * T / (241.2 + T));
END_IF;



(* revision history

hm 29 oct 2007		rev 1.0
	original version

hm	2. dec 2007		rev 1.1
	changed code for better performance
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>909087f0-e578-4c24-8d9e-7b09da2c3359</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="SDD_NH3" pouType="function">
        <interface>
          <returnType>
            <REAL />
          </returnType>
          <inputVars>
            <variable name="T">
              <type>
                <REAL />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
calculate according to NIST
Antoine Equation Parameters
log10(P) = A - (B / (T + C))
	P = vapor pressure (bar)
	T = temperature (K)
Temperature (K)	A	B	C	Reference	Comment

 T = 164.0 - 239.5, A =	3.18757, B =506.713, C=-80.78	Stull, 1947	Coefficents calculated by NIST from author's data.
 T = 239.5 - 371.4, A =	4.86886, B = 1113.928, C = -10.409	Stull, 1947	Coefficents calculated by NIST from author's data.
*)



IF T &lt; -33.65 THEN
	SDD_NH3 := EXP(7.3396511649 - ( 1166.7498002 / ( T + 192.37 )));
ELSE
	SDD_NH3 := EXP(11.210964456 - ( 2564.9140075 / ( T + 262.741 )));
END_IF;



(* revision history

hm 19 aug 2009		rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>7fd3732a-88c4-428f-81b8-1c63938dee06</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="SDT_NH3" pouType="function">
        <interface>
          <returnType>
            <REAL />
          </returnType>
          <inputVars>
            <variable name="P">
              <type>
                <REAL />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
calculate according to NIST
Antoine Equation Parameters
log10(P) = A - (B / (T + C))
	P = vapor pressure (bar)
	T = temperature (K)
Temperature (K)	A	B	C	Reference	Comment

 T = 164.0 - 239.5, A =	3.18757, B =506.713, C=-80.78	Stull, 1947	Coefficents calculated by NIST from author's data.
 T = 239.5 - 371.4, A =	4.86886, B = 1113.928, C = -10.409	Stull, 1947	Coefficents calculated by NIST from author's data.
*)


IF P &lt; 1.0E-3 THEN
	SDT_NH3 := -110.0;
ELSIF P &lt; 1.0 THEN
	SDT_NH3 := 506.713 / (3.18757 - LOG(P)) - 192.37 ;
ELSE
	SDT_NH3 := 1113.928 / (4.86886 - LOG(P)) - 262.71 ;
END_IF;



(* revision history

hm 20 aug 2009		rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>5edfc34e-fc76-4979-815c-d14d814d37a1</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="T_AVG24" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="TS">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="DTI">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="RST">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="T_FILTER">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#10m0s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="SCALE">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="OFS">
              <type>
                <REAL />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="TA">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="TP">
              <type>
                <BOOL />
              </type>
            </variable>
          </outputVars>
          <inOutVars>
            <variable name="T24">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="T24_MAX">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="T24_MIN">
              <type>
                <REAL />
              </type>
            </variable>
          </inOutVars>
          <localVars>
            <variable name="samples">
              <type>
                <array>
                  <dimension lower="0" upper="47" />
                  <baseType>
                    <INT />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="pos">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="init">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ft1">
              <type>
                <derived name="OSCAT_BASIC.FILTER_I" />
              </type>
            </variable>
            <variable name="sum">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="last">
              <type>
                <DT />
              </type>
            </variable>
          </localVars>
          <tempVars>
            <variable name="tmp_max">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="tmp_min">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="i">
              <type>
                <INT />
              </type>
            </variable>
          </tempVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* first filter the sensor readings *)
ft1(X := TS, T := T_FILTER);

IF rst OR NOT init THEN
	init := TRUE;
	IF T24 = -1000.0 THEN t24 := INT_TO_REAL(ft1.Y) * 0.1; END_IF;
	FOR pos := 0 TO 47 DO
		samples[pos] := REAL_TO_INT(T24 * 10.0);
	END_FOR;
	pos := 0;
	sum := INT_TO_DINT(samples[0]) * 48;
	(* calculate the output value *)
	TA := (INT_TO_REAL(ft1.Y) * 0.1 + OFS) * SCALE;
	T24 := (DINT_TO_REAL(sum) * 0.00208333333333 + OFS) * SCALE;
	tp := TRUE;
ELSIF DT_TO_DWORD(dti) / 60 MOD 30 = 0 AND DTI &gt; last THEN
	(* make sure we onlyexecute once every 30 mins *)
	last := DTI + T#1m;
	(* sample the temperature every 30 mins and store in ring buffer samples *)
	(* sum always holds the sum of the array *)
	(* subtract the oldest sample from sum *)
	sum := sum - INT_TO_DINT(samples[pos]);
	(* strore the new sample *)
	samples[pos] := ft1.Y;
	(* add the new sample to sum *)
	sum := sum + INT_TO_DINT(samples[pos]);
	(* increment the counter for the next sample *)
	pos := OSCAT_BASIC.INC1(pos, 48);
	(* calculate the output value *)
	TA := (INT_TO_REAL(ft1.Y) * 0.1 + OFS) * SCALE;
	T24 := (DINT_TO_REAL(sum) * 0.00208333333333 + OFS) * SCALE;
	(* calculate the min and max over the last 24 hours *)
	tmp_max := -32000;
	tmp_min := 32000;
	FOR i := 0 TO 47 DO
		tmp_max := MAX(tmp_max, samples[i]);
		tmp_min := MIN(tmp_min, samples[i]);
	END_FOR;
	T24_MAX := (INT_TO_REAL(tmp_max) * 0.1 + OFS) * SCALE;
	T24_MIN := (INT_TO_REAL(tmp_min) * 0.1 + OFS) * SCALE;
	tp := TRUE;
ELSE
	tp := FALSE;
END_IF;





(* revision history
hm	3. nov. 2008	rev 1.0
	original version

hm	8. feb. 2009	rev 1.1
	changes sign of OFS
	added outputs t24_min and t24_max

hm	13. mar. 2009	rev 1.2
	improved code
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>5a109ed4-9076-4849-ba76-8fa6bf2a2836</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TANK_LEVEL" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="LEVEL">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="LEAK">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ACLR">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="MAX_VALVE_TIME">
              <type>
                <TIME />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="LEVEL_DELAY_TIME">
              <type>
                <TIME />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="VALVE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ALARM">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="STATUS">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="cx">
              <type>
                <derived name="ACTUATOR_COIL" />
              </type>
            </variable>
            <variable name="tn">
              <type>
                <derived name="OSCAT_BASIC.TON" />
              </type>
            </variable>
            <variable name="tl">
              <type>
                <derived name="OSCAT_BASIC.TONOF" />
              </type>
            </variable>
            <variable name="open">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* preprocess the level information *)
tl(in := level, T_ON := level_delay_time, T_OFF := level_delay_time);
open := tl.Q;

(* start logic *)
IF ALARM THEN
	(* check for ACLR if ALARM is present *)
	IF ACLR THEN
		ALARM := FALSE;
		STATUS := 101; (* aclr pressed *)
		cx(in := FALSE);
	END_IF;
	RETURN;
ELSIF LEAK THEN
	(* leakeage detected *)
	cx(in := FALSE);
	ALARM := TRUE;
	STATUS := 1;	(* leakeage error *)
ELSIF open THEN
	(* valve needs to be opened because level is too low *)
	cx(in := TRUE);
	STATUS := 102; (* valve open by low level *)
ELSE
	(* valve needs to be closed *)
	cx(in := FALSE);
	STATUS := 100; (* valve idle *)
END_IF;

(* check if valve is open too long and generate alarm if necessary *)
tn(in := cx.out AND (MAX_VALVE_TIME &gt; T#0s), PT := MAX_VALVE_TIME);
IF tn.Q THEN
	ALARM := TRUE;
	STATUS := 2; (* overtime error *)
	cx(in := FALSE);
END_IF;

(* set output signal *)
VALVE := cx.out;


(* revision history
hm 27. feb 2007	rev 1.0
	original version

hm	24. jul 2009	rev 1.1
	changed parameters of tonof

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>0a826e55-2201-434c-a9cd-8e42e6300b80</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TANK_VOL1" pouType="function">
        <interface>
          <returnType>
            <REAL />
          </returnType>
          <inputVars>
            <variable name="TR">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="TL">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="H">
              <type>
                <REAL />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">TANK_VOL1 := OSCAT_BASIC.CIRCLE_SEG(TR, H) * TL;


(* revision histroy
hm	10. mar 2010	rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>9798e088-dd0a-4457-8999-40575797557b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TANK_VOL2" pouType="function">
        <interface>
          <returnType>
            <REAL />
          </returnType>
          <inputVars>
            <variable name="TR">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="H">
              <type>
                <REAL />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">TANK_VOL2 := OSCAT_BASIC.math.PI * H * H * (TR - H/3.0);

(* revision histroy
hm	10. mar 2010	rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>15d2355e-b088-45a6-a515-b3e1d24e6c00</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TEMP_EXT" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="t_ext1">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="t_ext2">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="t_ext3">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="t_ext_config">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="dt_in">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="t_ext_min">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="-40" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="t_ext_max">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="60" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="t_ext_default">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="-10" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="heat_period_start">
              <type>
                <DATE />
              </type>
              <initialValue>
                <simpleValue value="DATE#1970-9-1" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="heat_period_stop">
              <type>
                <DATE />
              </type>
              <initialValue>
                <simpleValue value="DATE#1970-4-30" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="cool_period_start">
              <type>
                <DATE />
              </type>
              <initialValue>
                <simpleValue value="DATE#1970-4-1" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="cool_period_stop">
              <type>
                <DATE />
              </type>
              <initialValue>
                <simpleValue value="DATE#1970-9-30" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="heat_start_temp_day">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="15" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="heat_start_temp_night">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="10" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="heat_stop_temp">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="18" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="cool_start_temp_day">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="26" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="cool_start_temp_night">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="26" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="cool_stop_temp">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="24" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="start_day">
              <type>
                <TOD />
              </type>
              <initialValue>
                <simpleValue value="TIME_OF_DAY#9:0" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="start_night">
              <type>
                <TOD />
              </type>
              <initialValue>
                <simpleValue value="TIME_OF_DAY#21:0" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="CYCLE_TIME">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#10m0s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="t_ext">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="heat">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="cool">
              <type>
                <BOOL />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="tx">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="last_run">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="init">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="cool_start">
              <type>
                <DATE />
              </type>
            </variable>
            <variable name="cool_stop">
              <type>
                <DATE />
              </type>
            </variable>
            <variable name="heat_start">
              <type>
                <DATE />
              </type>
            </variable>
            <variable name="heat_stop">
              <type>
                <DATE />
              </type>
            </variable>
            <variable name="xdate">
              <type>
                <DATE />
              </type>
            </variable>
            <variable name="day">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF NOT init THEN
	init := TRUE;
	heat_start := OSCAT_BASIC.SET_DATE(1972,OSCAT_BASIC.MONTH_OF_DATE(heat_period_start),OSCAT_BASIC.DAY_OF_MONTH(heat_period_start));
	heat_stop := OSCAT_BASIC.SET_DATE(1972,OSCAT_BASIC.MONTH_OF_DATE(heat_period_stop),OSCAT_BASIC.DAY_OF_MONTH(heat_period_stop));
	cool_start := OSCAT_BASIC.SET_DATE(1972,OSCAT_BASIC.MONTH_OF_DATE(cool_period_start),OSCAT_BASIC.DAY_OF_MONTH(cool_period_start));
	cool_stop := OSCAT_BASIC.SET_DATE(1972,OSCAT_BASIC.MONTH_OF_DATE(cool_period_stop),OSCAT_BASIC.DAY_OF_MONTH(cool_period_stop));
END_IF;

(* read system time *)
tx := DWORD_TO_TIME(OSCAT_BASIC.T_PLC_MS());

(* for efficiency exit isf this program has been executed less then 1min ago *)
IF tx - last_run &lt; cycle_time THEN RETURN; END_IF;

(* calculate frequently used variables *)
xdate := OSCAT_BASIC.SET_DATE(1972,OSCAT_BASIC.MONTH_OF_DATE(DT_TO_DATE(dt_in)),OSCAT_BASIC.DAY_OF_MONTH(DT_TO_DATE(dt_in)));
day := DT_TO_TOD(dt_in) &gt;= start_day AND  DT_TO_TOD(dt_in) &lt; start_night;

(* read the correct external temperature depending on the t_ext_config setting *)
t_ext := OSCAT_BASIC.MULTI_IN(t_ext1, t_ext2, t_ext3, t_ext_default, t_ext_min, t_ext_max, t_ext_config);

(* dtermine heating *)
IF (heat_start &lt;= heat_stop AND xdate &gt;= heat_start AND xdate &lt;= heat_stop) OR (heat_start &gt; heat_stop AND (xdate &gt;= heat_start OR xdate &lt;= heat_stop)) THEN
	(* heating period id true check for temperature *)
	IF day AND t_ext &lt;= heat_start_temp_day THEN
		heat := TRUE;
	ELSIF NOT day AND t_ext &lt;= heat_start_temp_night THEN
		heat := TRUE;
	ELSIF t_ext &gt;= heat_stop_temp THEN
		heat := FALSE;
	END_IF;
ELSE
	heat := FALSE;
END_IF;

(* dtermine cooling *)
IF (cool_start &lt;= cool_stop AND xdate &gt;= cool_start AND xdate &lt;= cool_stop) OR (cool_start &gt; cool_stop AND (xdate &gt;= cool_start OR xdate &lt;= cool_stop)) THEN
	(* cooling period is true check for temperature *)
	IF day AND t_ext &gt;= cool_start_temp_day THEN
		cool := TRUE;
	ELSIF NOT day AND t_ext &gt;= cool_start_temp_night THEN
		cool := TRUE;
	ELSIF t_ext &lt;= cool_stop_temp THEN
		cool := FALSE;
	END_IF;
ELSE
	cool := FALSE;
END_IF;

last_run := tx;

(* revision history
hm	6 dec 2006	rev 1.0
	original version

hm	15.9.2007		rev 1.1
	replaced Time() with T_PLC_MS for compatibility and performance reasons

hm	7. oct. 2008	rev 1.2
	changed name of function month to month_of_date

hm	13. mar. 2009	rev 1.3
	real constants updated to new systax using dot

*)
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>8266090f-161e-4cea-b1c7-095963a0f734</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="WATER_CP" pouType="function">
        <interface>
          <returnType>
            <REAL />
          </returnType>
          <inputVars>
            <variable name="T">
              <type>
                <REAL />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="Pts">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="10" />
              </initialValue>
            </variable>
            <variable name="data">
              <type>
                <array>
                  <dimension lower="1" upper="20" />
                  <dimension lower="0" upper="1" />
                  <baseType>
                    <REAL />
                  </baseType>
                </array>
              </type>
              <initialValue>
                <arrayValue>
                  <value>
                    <simpleValue value="0" />
                  </value>
                  <value>
                    <simpleValue value="4.228" />
                  </value>
                  <value>
                    <simpleValue value="5" />
                  </value>
                  <value>
                    <simpleValue value="4.2" />
                  </value>
                  <value>
                    <simpleValue value="10" />
                  </value>
                  <value>
                    <simpleValue value="4.188" />
                  </value>
                  <value>
                    <simpleValue value="15" />
                  </value>
                  <value>
                    <simpleValue value="4.184" />
                  </value>
                  <value>
                    <simpleValue value="50" />
                  </value>
                  <value>
                    <simpleValue value="4.181" />
                  </value>
                  <value>
                    <simpleValue value="60" />
                  </value>
                  <value>
                    <simpleValue value="4.183" />
                  </value>
                  <value>
                    <simpleValue value="70" />
                  </value>
                  <value>
                    <simpleValue value="4.187" />
                  </value>
                  <value>
                    <simpleValue value="80" />
                  </value>
                  <value>
                    <simpleValue value="4.194" />
                  </value>
                  <value>
                    <simpleValue value="90" />
                  </value>
                  <value>
                    <simpleValue value="4.204" />
                  </value>
                  <value>
                    <simpleValue value="100" />
                  </value>
                  <value>
                    <simpleValue value="4.22" />
                  </value>
                </arrayValue>
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">WATER_CP := OSCAT_BASIC.LINEAR_INT(T, Data, Pts);


(*
    °C - die Celsius-Temperatur in Grad Celsius
    v – das spezifische Volumen in Kubikdezimeter je Kilogramm dm³/kg
    h – die spezifische Enthalpie in Kilojoule je Kilogramm 	kJ/kg
    u – die spezifische Innere Energie in Kilojoule je Kilogramm 	kJ/kg
    s – die spezifische Entropie in Kilojoule je Kilogramm mal Kelvin 	kJ/(kg·K)
    cp - die spezifische Wärmekapazität bei konstantem Druck in Kilojoule je Kilogramm mal Kelvin 	kJ/(kg·K)
    Y – Volumenausdehnungskoeffizient in 10-3 durch Kelvin  10-3/K
    L – Wärmeleitfähigkeit in Milliwatt je Meter mal Kelvin  mW / (m·K) 
    n – Viskosität in Mikropascal mal Sekunde uPa·s 	
    s ? – Oberflächenspannung in Millinewton je Meter  mN/m


°C 		v 				h 			u 		s 			cp 		Y 		L		n		s	
-20		1,006580	
0 		1,000160 		0,06 		-0,04 	-0,0001 	4,228 	-0,080 	561,0 	1792 	75,65
4		1,000028
5 		1,0000 		21,1 		21,0 	0,076 		4,200 	0,011 	570,6 	1518 	74,95
10 		1,0003 		42,1 		42,0 	0,151 		4,188 	0,087 	580,0 	1306 	74,22
15 		1,0009 		63,0 		62,9 	0,224 		4,184 	0,152 	589,4 	1137 	73,49
20 		1,001797 		83,9 		83,8 	0,296 		4,183 	0,209 	598,4 	1001 	72,74
25 		1,0029 		104,8 		104,7 	0,367 		4,183 	0,259 	607,2 	890,4 	71,98
30 		1,0044 		125,8 		125,7 	0,437 		4,183 	0,305 	615,5 	797,7 	71,20
35 		1,0060 		146,7 		146,6 	0,505 		4,183 	0,347 	623,3 	719,6 	70,41
40 		1,007842 		167,58 	167,5 	0,572 		4,182 	0,386 	630,6 	653,3 	69,60
45 		1,0099 		188,5 		188,4 	0,638 		4,182 	0,423 	637,3 	596,3 	68,78
50 		1,0121 		209,4 		209,3 	0,704 		4,181 	0,457 	643,6 	547,1 	67,95
60 		1,017089 		251,2 		251,1 	0,831 		4,183 	0,522 	654,4 	466,6 	66,24
70 		1,0227 		293,1 		293,0 	0,955 		4,187 	0,583 	663,1 	404,1 	64,49
80 		1,029027 		335,0 		334,9 	1,075 		4,194 	0,640 	670,0 	354,5 	62,68
90 		1,0359 		377,0 		376,9 	1,193 		4,204 	0,696 	675,3 	314,6 	60,82
99,63 	1,0431 		417,5 		417,4 	1,303 		4,217 	0,748 	679,0 	283,0 	58,99
100	1,043453		419,1

Stoffdaten von Wasser Quelle Wickipedia

Wasser hat unter Normaldruck seine größte Dichte von 1000 Kilogramm pro Kubikmeter bei 3,98 °C und zeigt damit eine Dichteanomalie. 
Diese besteht darin, dass sich Wasser unterhalb von 3,98 °C bei weiterer Temperaturverringerung, auch beim Wechsel zum festen 
Aggregatzustand, wieder ausdehnt, was man nur von wenigen Stoffen kennt. Die derzeit genauesten publizierten Werte für die maximale 
Dichte liegen bei (999,974950 ± 0,00084) kg/m³ und bei (3,983 ± 0,00067) °C für die Temperatur, bei der dieser Wert erreicht wird. 
Die Werte stellen einen Mittelwert der von verschiedenen physikalischen Instituten veröffentlichten Zahlen dar (Stand 2001).

Die Berechnung der Dichte von luftfreiem Wasser DLF in Abhängigkeit von der Temperatur T ([T] = °C) kann mit Hilfe der folgenden 
Virialgleichung erfolgen:
: \frac{D_{\rm LF}}{\rm g/l} = \frac{a_0 + a_1 T + a_2 T^2 + a_3 T^3 + a_4 T^4 + a_5 T^5}{1 + b T}.
mit den Koeffizienten: a0 = 999,83952; a1 = 16,952577 (°C)-1; a2 = -7,9905127·10-3 (°C)-2; a3 = -4,6241757·10-5 (°C)-3; 
a4 = 1,0584601·10-7 (°C)-4; a5 = -2,8103006·10-10 (°C)-5 und b = 0,0168872. 
Für die Berechnung der Dichte von luftgesättigtem Wasser korrigiert man den Wert nach 
DLG/(g/l) = DLF/(g/l) - 0,004612 + 0,000106 (°C)-1·T. (Quelle: PTB-Mitteilungen 100/3-90)

*)

(* revision history

hm	29.10.2007	rev 1.0
	original version

hm	27. dec 2007	rev 1.1
	increased accuracy

hm	13. mar. 2009	rev 1.2
	real constants updated to new systax using dot

*)
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>f1ec6032-8ef3-4d95-afc9-0853499ec1c4</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="WATER_DENSITY" pouType="function">
        <interface>
          <returnType>
            <REAL />
          </returnType>
          <inputVars>
            <variable name="T">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="Sat">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <localVars constant="true">
            <variable name="a0">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="999.83952" />
              </initialValue>
            </variable>
            <variable name="a1">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="16.952577" />
              </initialValue>
            </variable>
            <variable name="a2">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="-0.0079905127" />
              </initialValue>
            </variable>
            <variable name="a3">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="-4.6241757E-05" />
              </initialValue>
            </variable>
            <variable name="a4">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="1.0584601E-07" />
              </initialValue>
            </variable>
            <variable name="a5">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="-2.8103006E-10" />
              </initialValue>
            </variable>
            <variable name="b">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="0.0168872" />
              </initialValue>
            </variable>
          </localVars>
          <localVars>
            <variable name="T2">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="T4">
              <type>
                <REAL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">T2 := T * T;
T4 := T2 * T2;
WATER_DENSITY := (a0 + a1*T + a2*T2 + a3*T2*T + a4*T4 + a5*T4*T) / (1.0 + b*T);
IF sat THEN WATER_DENSITY := WATER_DENSITY - 0.004612 + 0.000106 * T; END_IF;


(* revision history

hm	13.9.2007		rev 1.0
	original version

hm	2.12.2007		rev 1.1
	changed code for better performance

hm	13. mar. 2009	rev 1.2
	real constants updated to new systax using dot

*)

(*
    °C - die Celsius-Temperatur in Grad Celsius
    v – das spezifische Volumen in Kubikdezimeter je Kilogramm dm³/kg
    h – die spezifische Enthalpie in Kilojoule je Kilogramm 	kJ/kg
    u – die spezifische Innere Energie in Kilojoule je Kilogramm 	kJ/kg
    s – die spezifische Entropie in Kilojoule je Kilogramm mal Kelvin 	kJ/(kg·K)
    cp - die spezifische Wärmekapazität bei konstantem Druck in Kilojoule je Kilogramm mal Kelvin 	kJ/(kg·K)
    Y – Volumenausdehnungskoeffizient in 10-3 durch Kelvin  10-3/K
    L – Wärmeleitfähigkeit in Milliwatt je Meter mal Kelvin  mW / (m·K) 
    n – Viskosität in Mikropascal mal Sekunde uPa·s 	
    s ? – Oberflächenspannung in Millinewton je Meter  mN/m


°C 		v 				h 			u 		s 			cp 		Y 		L		n		s	
-20		1,006580	
0 		1,000160 		0,06 		-0,04 	-0,0001 	4,228 	-0,080 	561,0 	1792 	75,65
4		1,000028
5 		1,0000 		21,1 		21,0 	0,076 		4,200 	0,011 	570,6 	1518 	74,95
10 		1,0003 		42,1 		42,0 	0,151 		4,188 	0,087 	580,0 	1306 	74,22
15 		1,0009 		63,0 		62,9 	0,224 		4,184 	0,152 	589,4 	1137 	73,49
20 		1,001797 		83,9 		83,8 	0,296 		4,183 	0,209 	598,4 	1001 	72,74
25 		1,0029 		104,8 		104,7 	0,367 		4,183 	0,259 	607,2 	890,4 	71,98
30 		1,0044 		125,8 		125,7 	0,437 		4,183 	0,305 	615,5 	797,7 	71,20
35 		1,0060 		146,7 		146,6 	0,505 		4,183 	0,347 	623,3 	719,6 	70,41
40 		1,007842 		167,58 	167,5 	0,572 		4,182 	0,386 	630,6 	653,3 	69,60
45 		1,0099 		188,5 		188,4 	0,638 		4,182 	0,423 	637,3 	596,3 	68,78
50 		1,0121 		209,4 		209,3 	0,704 		4,181 	0,457 	643,6 	547,1 	67,95
60 		1,017089 		251,2 		251,1 	0,831 		4,183 	0,522 	654,4 	466,6 	66,24
70 		1,0227 		293,1 		293,0 	0,955 		4,187 	0,583 	663,1 	404,1 	64,49
80 		1,029027 		335,0 		334,9 	1,075 		4,194 	0,640 	670,0 	354,5 	62,68
90 		1,0359 		377,0 		376,9 	1,193 		4,204 	0,696 	675,3 	314,6 	60,82
99,63 	1,0431 		417,5 		417,4 	1,303 		4,217 	0,748 	679,0 	283,0 	58,99
100	1,043453		419,1

Stoffdaten von Wasser Quelle Wickipedia

*)

</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e4ef6438-a9bb-4634-9426-183aa7734d20</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="WATER_ENTHALPY" pouType="function">
        <interface>
          <returnType>
            <REAL />
          </returnType>
          <inputVars>
            <variable name="T">
              <type>
                <REAL />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="Pts">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="11" />
              </initialValue>
            </variable>
            <variable name="data">
              <type>
                <array>
                  <dimension lower="1" upper="20" />
                  <dimension lower="0" upper="1" />
                  <baseType>
                    <REAL />
                  </baseType>
                </array>
              </type>
              <initialValue>
                <arrayValue>
                  <value>
                    <simpleValue value="0" />
                  </value>
                  <value>
                    <simpleValue value="0.06" />
                  </value>
                  <value>
                    <simpleValue value="10" />
                  </value>
                  <value>
                    <simpleValue value="42.1" />
                  </value>
                  <value>
                    <simpleValue value="20" />
                  </value>
                  <value>
                    <simpleValue value="83.9" />
                  </value>
                  <value>
                    <simpleValue value="30" />
                  </value>
                  <value>
                    <simpleValue value="125.8" />
                  </value>
                  <value>
                    <simpleValue value="40" />
                  </value>
                  <value>
                    <simpleValue value="167.58" />
                  </value>
                  <value>
                    <simpleValue value="50" />
                  </value>
                  <value>
                    <simpleValue value="209.4" />
                  </value>
                  <value>
                    <simpleValue value="60" />
                  </value>
                  <value>
                    <simpleValue value="251.2" />
                  </value>
                  <value>
                    <simpleValue value="70" />
                  </value>
                  <value>
                    <simpleValue value="293.1" />
                  </value>
                  <value>
                    <simpleValue value="80" />
                  </value>
                  <value>
                    <simpleValue value="335" />
                  </value>
                  <value>
                    <simpleValue value="90" />
                  </value>
                  <value>
                    <simpleValue value="377" />
                  </value>
                  <value>
                    <simpleValue value="100" />
                  </value>
                  <value>
                    <simpleValue value="419.1" />
                  </value>
                </arrayValue>
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">WATER_ENTHALPY := OSCAT_BASIC.LINEAR_INT(T, Data, Pts);



(*
    °C - die Celsius-Temperatur in Grad Celsius
    v – das spezifische Volumen in Kubikdezimeter je Kilogramm dm³/kg
    h – die spezifische Enthalpie in Kilojoule je Kilogramm 	kJ/kg
    u – die spezifische Innere Energie in Kilojoule je Kilogramm 	kJ/kg
    s – die spezifische Entropie in Kilojoule je Kilogramm mal Kelvin 	kJ/(kg·K)
    cp - die spezifische Wärmekapazität bei konstantem Druck in Kilojoule je Kilogramm mal Kelvin 	kJ/(kg·K)
    Y – Volumenausdehnungskoeffizient in 10-3 durch Kelvin  10-3/K
    L – Wärmeleitfähigkeit in Milliwatt je Meter mal Kelvin  mW / (m·K) 
    n – Viskosität in Mikropascal mal Sekunde uPa·s 	
    s ? – Oberflächenspannung in Millinewton je Meter  mN/m


°C 		v 				h 			u 		s 			cp 		Y 		L		n		s	
-20		1,006580	
0 		1,000160 		0,06 		-0,04 	-0,0001 	4,228 	-0,080 	561,0 	1792 	75,65
4		1,000028
5 		1,0000 		21,1 		21,0 	0,076 		4,200 	0,011 	570,6 	1518 	74,95
10 		1,0003 		42,1 		42,0 	0,151 		4,188 	0,087 	580,0 	1306 	74,22
15 		1,0009 		63,0 		62,9 	0,224 		4,184 	0,152 	589,4 	1137 	73,49
20 		1,001797 		83,9 		83,8 	0,296 		4,183 	0,209 	598,4 	1001 	72,74
25 		1,0029 		104,8 		104,7 	0,367 		4,183 	0,259 	607,2 	890,4 	71,98
30 		1,0044 		125,8 		125,7 	0,437 		4,183 	0,305 	615,5 	797,7 	71,20
35 		1,0060 		146,7 		146,6 	0,505 		4,183 	0,347 	623,3 	719,6 	70,41
40 		1,007842 		167,58 	167,5 	0,572 		4,182 	0,386 	630,6 	653,3 	69,60
45 		1,0099 		188,5 		188,4 	0,638 		4,182 	0,423 	637,3 	596,3 	68,78
50 		1,0121 		209,4 		209,3 	0,704 		4,181 	0,457 	643,6 	547,1 	67,95
60 		1,017089 		251,2 		251,1 	0,831 		4,183 	0,522 	654,4 	466,6 	66,24
70 		1,0227 		293,1 		293,0 	0,955 		4,187 	0,583 	663,1 	404,1 	64,49
80 		1,029027 		335,0 		334,9 	1,075 		4,194 	0,640 	670,0 	354,5 	62,68
90 		1,0359 		377,0 		376,9 	1,193 		4,204 	0,696 	675,3 	314,6 	60,82
99,63 	1,0431 		417,5 		417,4 	1,303 		4,217 	0,748 	679,0 	283,0 	58,99
100	1,043453		419,1

Stoffdaten von Wasser Quelle Wickipedia

Wasser hat unter Normaldruck seine größte Dichte von 1000 Kilogramm pro Kubikmeter bei 3,98 °C und zeigt damit eine Dichteanomalie. 
Diese besteht darin, dass sich Wasser unterhalb von 3,98 °C bei weiterer Temperaturverringerung, auch beim Wechsel zum festen 
Aggregatzustand, wieder ausdehnt, was man nur von wenigen Stoffen kennt. Die derzeit genauesten publizierten Werte für die maximale 
Dichte liegen bei (999,974950 ± 0,00084) kg/m³ und bei (3,983 ± 0,00067) °C für die Temperatur, bei der dieser Wert erreicht wird. 
Die Werte stellen einen Mittelwert der von verschiedenen physikalischen Instituten veröffentlichten Zahlen dar (Stand 2001).

Die Berechnung der Dichte von luftfreiem Wasser DLF in Abhängigkeit von der Temperatur T ([T] = °C) kann mit Hilfe der folgenden 
Virialgleichung erfolgen:
: \frac{D_{\rm LF}}{\rm g/l} = \frac{a_0 + a_1 T + a_2 T^2 + a_3 T^3 + a_4 T^4 + a_5 T^5}{1 + b T}.
mit den Koeffizienten: a0 = 999,83952; a1 = 16,952577 (°C)-1; a2 = -7,9905127·10-3 (°C)-2; a3 = -4,6241757·10-5 (°C)-3; 
a4 = 1,0584601·10-7 (°C)-4; a5 = -2,8103006·10-10 (°C)-5 und b = 0,0168872. 
Für die Berechnung der Dichte von luftgesättigtem Wasser korrigiert man den Wert nach 
DLG/(g/l) = DLF/(g/l) - 0,004612 + 0,000106 (°C)-1·T. (Quelle: PTB-Mitteilungen 100/3-90)

*)

(* revision history
hm	13. mar. 2009	rev 1.0
	original version

hm	13. mar. 2009	rev 1.1
	real constants updated to new systax using dot

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>941ebc16-1868-4024-bed1-b0c2ad8b988d</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="WCT" pouType="function">
        <interface>
          <returnType>
            <REAL />
          </returnType>
          <inputVars>
            <variable name="T">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="V">
              <type>
                <REAL />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF V &lt; 5.0 OR T &gt; 10.0 THEN
	WCT := T;
ELSE
	WCT := 13.12 + 0.6215 * T +(0.3965 * T - 11.37) * EXP(LN(v) * 0.16);
END_IF;


(* revision history
hm	7 feb 2007		rev 1.0
	original version

hm	7 dec 2007	rev 1.1
	changed code for better performance

hm	13. mar. 2009	rev 1.2
	real constants updated to new systax using dot

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>6eb2cb3f-6f6b-476c-846a-9d87e1b25785</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="BLIND_ACTUATOR" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="UP">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="DN">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="S_IN">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="T_UD">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#10s0ms" />
              </initialValue>
            </variable>
            <variable name="T_ANGLE">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#3s0ms" />
              </initialValue>
            </variable>
            <variable name="T_LOCKOUT">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#100ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="POS">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="ANG">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="QU">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="QD">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="STATUS">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="position">
              <type>
                <derived name="OSCAT_BASIC.RMP_B" />
              </type>
            </variable>
            <variable name="angle">
              <type>
                <derived name="OSCAT_BASIC.RMP_B" />
              </type>
            </variable>
            <variable name="lock">
              <type>
                <derived name="OSCAT_BASIC.INTERLOCK" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* make sure only one motor is active at a given time *)
lock(i1 := UP, I2 := DN, TL := T_lockout);

(* ramp up or down to simulate the angle position of the blind slats *)
angle(e := lock.Q1 OR lock.Q2, UP := lock.Q1, PT := T_Angle);
position(e := lock.Q1 AND angle.high OR lock.Q2 AND angle.low, up := lock.Q1, PT := T_UD);

(* set the outputs *)
pos := position.Out;
ang := angle.Out;

(* set the outputs *)
QU := lock.Q1;
QD := lock.Q2;

(* set the status output *)
IF UP AND DN THEN
	 status := 1;			(* error up and down together are not allowed *)
ELSIF UP THEN
	status := 121;
ELSIF DN THEN
	status := 122;
ELSE
	status := S_IN;
END_IF;


(* revision history
hm	29. sep 2007	rev 1.0
	original release

hm	6. oct 2007	rev 1.1
	rearanged outputs

hm	18. oct. 2008	rev 1.2
	changed calls for rmp_B because of change in RMP_B

hm	27. jul. 2009	rev 1.3
	changes status to be 12X

ae	08. mar. 2010 rev 1.4	
	at aPosition

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b09bf5b4-0cbd-4a76-a289-5c41164396d3</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="BLIND_CONTROL" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="UP">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="DN">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="S_IN">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="PI">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="AI">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="T_UD">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="T_ANGLE">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="SENS">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="5" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_LOCKOUT">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#100ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="POS">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="ANG">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="MU">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="MD">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="STATUS">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="act">
              <type>
                <derived name="BLIND_ACTUATOR" />
              </type>
            </variable>
            <variable name="delta">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="bTimeTest">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="iPos">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="iAngel">
              <type>
                <BYTE />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF bTimeTest THEN
	PI:=iPos;
	AI:=iAngel;
	UP:=TRUE;
	DN:=TRUE;
END_IF

(* Check Position*)
act(T_UD:=T_UD, T_ANGLE:=T_ANGLE, T_lockout := T_Lockout);

IF UP AND DN THEN
	(* automatic modus detected *)
	(* first find correct position *)
	IF BYTE_TO_INT(act.pos) &lt; BYTE_TO_INT(pi) - delta THEN
		act.UP := TRUE;
		act.DN := FALSE;
		delta := 0;
		STATUS := 121;
	ELSIF BYTE_TO_INT(act.pos) &gt; BYTE_TO_INT(pi) + delta THEN
		act.UP := FALSE;
		act.DN := TRUE;
		delta := 0;
		STATUS := 122;
	(* regulate angle *)
	ELSIF BYTE_TO_INT(act.ang) &lt; BYTE_TO_INT(ai) - delta AND T_angle &gt; T#100ms THEN
		act.UP := TRUE;
		act.DN := FALSE;
		delta := sens/2;
		STATUS := 123;
	ELSIF BYTE_TO_INT(act.ang) &gt; BYTE_TO_INT(ai) + delta AND T_angle &gt; T#100ms THEN
		act.UP := FALSE;
		act.DN := TRUE;
		delta := sens/2;
		STATUS := 124;
	(* correct position reached *)
	ELSE
		act.UP := FALSE;
		act.DN := FALSE;
		delta := sens;
		STATUS := S_IN;
	END_IF;
ELSE
	act.UP := UP;
	act.DN := DN;
	STATUS := S_IN;
END_IF;

(* blind control calls blind_actuator *)
act(T_UD:=T_UD, T_ANGLE:=T_ANGLE, T_lockout := T_Lockout);
pos := act.pos;
ang := act.ang;
MU := act.QU;
md := act.QD;
status := act.status;

(* revision history
hm	29. sep 2007	rev 1.0
	original release

hm	6. oct 2007	rev 1.1
	rearranged outputs
	integrated blind_actuator into blind_control

hm	16. oct 2007	rev 1.2
	ignore angle when t_angle = 0

hm 29. oct 2007	rev 1.3
	added lockout configuration time for motor direction change
	sens has a setup value of 5

hm	27. jul. 2009	rev 1.4
	changed status handling

ae	08. mar. 2010	rev 1.5
	at aPosition bevor control
	at tolerance "delta := sens/2;"

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>f78b8028-cfff-419a-b125-1540923d5aa3</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="BLIND_CONTROL_S" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="UP">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="DN">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="S_IN">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="125" />
              </initialValue>
            </variable>
            <variable name="PI">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="T_UP">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="T_DN">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="RU">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="RD">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="T_LOCKOUT">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#100ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="T_EXT">
              <type>
                <TIME />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="EXT_TRIG">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="5" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="R_POS_TOP">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="255" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="R_POS_BOT">
              <type>
                <BYTE />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="POS">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="MU">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="MD">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="STATUS">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="rmp">
              <type>
                <derived name="OSCAT_BASIC._RMP_NEXT" />
              </type>
            </variable>
            <variable name="tx">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="last">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="PI_last">
              <type>
                <BYTE />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
(* status definition
	121 = manual up				manual up operation UP = true and DN = false
	122 = manual down			manual down operation DN = true and UP = false
	123 = auto positioning		automatic mode DN = UP = TRUE
	124 = revert					revert from top or bottom
	125 = nothing					default input for S_IN
	127 = Lockout time			lockout between directional change
	128 = calibrate				calibrate after power up
	129 = extend					extend runtime at top or bottom for continuous calibration
*)

(* read system time *)
tx := DWORD_TO_TIME(OSCAT_BASIC.T_PLC_MS());

(* check inputs and start state machine *)
IF UP  AND NOT DN THEN
	(*  manual UP *)
	rmp.IN := 255;
	STATUS := 121;
ELSIF DN AND NOT UP THEN
	(* manual DN *)
	rmp.IN := 0;
	STATUS := 122;
ELSIF NOT (UP OR DN) THEN
	(* manual standby mode *)
	rmp.IN := PI;
	STATUS := S_IN;
END_IF;

(* simulate pos output *)
rmp(E := UP OR DN, TR := T_UP, TF := T_DN, TL := T_LOCKOUT, OUT := POS);

(* state machine *)
CASE STATUS OF
	0:		(* power up init *)
		last := tx;
		PI_last := PI XOR BYTE#255;
		STATUS := 128;		(* calibrate *)

	121: 	(* manual up *)
		MU := TRUE;
		MD := FALSE;
		IF POS &gt;= (BYTE#255 - EXT_TRIG) THEN
			(* extend cycle if top is reached *)
			POS := 255;
			last := tx;
			STATUS := 129;	(* extend *)
		END_IF;

	122:	(* manual down *)
		MD := TRUE;
		MU := FALSE;
		IF POS &lt;= EXT_TRIG THEN
			(* extend cycle if bottom is reached *)
			POS := 0;
			last := tx;
			STATUS := 129;	(* extend *)
		END_IF;

	123:	(* auto positioning *)
		MD := rmp.DN;
		MU := rmp.UP;
		IF NOT (rmp.DN OR rmp.UP) THEN
			(* automatic position is reached *)
			IF POS &lt;= EXT_TRIG THEN
				(* extend at bottom *)
				MD := TRUE;
				last := tx;
				STATUS := 129;	(* extend *)
			ELSIF POS &gt;= (BYTE#255 - EXT_TRIG)  THEN
				(* extend at top *)
				MU := TRUE;
				last := tx;
				STATUS := 129;	(* extend *)
			ELSE
				STATUS := S_IN;
			END_IF;
		END_IF;

	124:	(* revert from top or bottom *)
		MD := rmp.DN;
		MU := rmp.UP;
		IF NOT(rmp.DN OR rmp.UP) THEN
(*		IF POS = rmp.IN THEN  *)
			PI_last := PI;
			STATUS := S_IN;
		END_IF;

	127:	(* lockout time *)
		IF (tx - last) &gt;= T_LOCKOUT THEN
				STATUS := S_IN;
		END_IF;

	128:	(* calibration *)
		MU := TRUE;
		MD := FALSE;
		rmp.IN := 255;
		IF (tx - last) &gt;= (T_UP +  T_EXT) THEN
			MU := FALSE;
			last := tx;
			STATUS := 127;	(* lockout *)
		END_IF;

	129: (* extend mode *)
		IF (tx - last) &gt;= T_EXT THEN
			MU := FALSE;
			MD := FALSE;
			last := tx;
			STATUS := 127;	(* lockout *)
		END_IF;

ELSE
	MU := FALSE;
	MD := FALSE;
	IF PI &lt;&gt; PI_last THEN
		PI_last := PI;
		rmp.IN := PI;
		STATUS := 123;	(* auto positioning *)
	ELSIF POS = 0 AND RU THEN
		rmp.IN := R_POS_BOT;
		STATUS := 124;	(* revert *)
	ELSIF pos = 255 AND RD THEN
		rmp.IN := R_POS_TOP;
		STATUS := 124;	(* revert *)
	ELSE
		STATUS := S_IN;
	END_IF;
END_CASE;



(* revision history

hm	9. mar. 2009	rev 1.0
	original release

hf	27. jul 2009	rev 1.1
	major code changes and updates

hf	23. Jan 2010	rev 1.2
	fixed a bug during calibration
	added T_UP and T_DN

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>a45905b5-b2c5-4529-a7a9-be202d0d0c64</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="BLIND_INPUT" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="POS">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="ANG">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="S1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="S2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="IN">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="PI">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="AI">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="SINGLE_SWITCH">
              <type>
                <BOOL />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="CLICK_EN">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="CLICK_TIME">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#500ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="MAX_RUNTIME">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#1m0s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="MANUAL_TIMEOUT">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#60m0s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="DEBOUNCE_TIME">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#20ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="DBL_CLK1">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="DBL_POS1">
              <type>
                <BYTE />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="DBL_ANG1">
              <type>
                <BYTE />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="DBL_CLK2">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="DBL_POS2">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="255" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="DBL_ANG2">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="255" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="D1_TOGGLE">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="D2_TOGGLE">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="MASTER_MODE">
              <type>
                <BOOL />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="QU">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="QD">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="STATUS">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="PO">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="255" />
              </initialValue>
            </variable>
            <variable name="AO">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="255" />
              </initialValue>
            </variable>
            <variable name="D1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="D2">
              <type>
                <BOOL />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="s1e">
              <type>
                <derived name="OSCAT_BASIC.TOF" />
              </type>
            </variable>
            <variable name="s2e">
              <type>
                <derived name="OSCAT_BASIC.TOF" />
              </type>
            </variable>
            <variable name="s1d">
              <type>
                <derived name="CLICK_MODE" />
              </type>
            </variable>
            <variable name="s2d">
              <type>
                <derived name="CLICK_MODE" />
              </type>
            </variable>
            <variable name="dir">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="tx">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="last">
              <type>
                <TIME />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* read system timer *)
tx := DWORD_TO_TIME(OSCAT_BASIC.T_PLC_MS());

(* inputs S1 and S2 are debounced and then decoded for multiple clicks *)
s1e(in := S1, pt := DEBOUNCE_TIME);
s2e(in := S2, pt := DEBOUNCE_TIME);
s1d(in := (s1e.Q AND NOT SINGLE_SWITCH) OR (s1e.Q AND SINGLE_SWITCH AND dir), t_long := CLICK_TIME);
s2d(in := (s2e.Q AND NOT SINGLE_SWITCH) OR (s1e.Q AND SINGLE_SWITCH AND NOT dir), t_long := CLICK_TIME);

(* if d1 and d2 are not toggle clear them to make sure they are only active for oine cycle *)
IF NOT d1_toggle THEN d1 := FALSE; END_IF;
IF NOT d2_toggle THEN d2 := FALSE; END_IF;

(* decode actions *)
IF (s1d.LONG AND s2d.LONG) OR (status = 139) THEN
   status := 139;
   IF NOT (s1d.LONG OR s2d.LONG)  THEN status := 130; END_IF;
ELSIF s1d.tp_LONG THEN
	status := 132;
ELSIF s2d.tp_LONG THEN
	status := 133;
ELSIF  s1d.SINGLE THEN
	IF click_en THEN
		(* if running then we stop otherwise start new direction *)
		IF QU XOR QD THEN
			status := 131;
		ELSE
			status := 134;
			last := tx;
			dir := NOT dir;
		END_IF;
	END_IF;
ELSIF  s2d.SINGLE THEN
	IF click_en THEN
		(* if running then we stop otherwise start new direction *)
		IF QU XOR QD THEN
			status := 131;
		ELSE
			status := 135;
			last := tx;
			dir := NOT dir;
		END_IF;
	END_IF;
ELSIF in THEN
	status := 136;
	last := tx;
ELSIF s1d.DOUBLE THEN
	IF dbl_clk1 THEN
		(* a position need to be set for a double click on S1 *)
		status := 137;
		last := tx;
	ELSE
		(* toggle the output when dbl_clk1 is not active *)
		D1 := NOT D1;
	END_IF;
ELSIF s2d.DOUBLE THEN
	IF dbl_clk2 THEN
		(* a position need to be set for a double click on S2 *)
		status := 138;
		last := tx;
	ELSE
		(* toggle the output when dbl_clk2 is not active *)
		(* in single switch mode we need to toggle d1 instead of d2 *)
		IF single_switch THEN D1 := NOT D1; ELSE D2 := NOT D2; END_IF;
	END_IF;
END_IF;


(* state machine *)
CASE status OF
	0:		(* power up operation *)
			status := 130;

	130:	(* automatic operation standby *)
			IF NOT master_mode THEN
				PO := POS;
				AO := ANG;
			END_IF;
			QU := TRUE;
			QD := TRUE;

	131:	(* manual operation standby *)
			QU := FALSE;
			QD := FALSE;
			PO := POS;
			AO := ANG;
			(* manual mode will be ended when timeout is reached *)
			IF tx - last &gt;= manual_timeout THEN
				status := 130;
			END_IF;

	132:	(* manual operation up *)
			QU := TRUE;
			QD := FALSE;
			PO := POS; AO := ANG;
			last := tx;
			IF NOT s1d.LONG THEN status := 131; dir := NOT dir; END_IF;

	133:	(* manual operation down *)
			QU := FALSE;
			QD := TRUE;
			PO := POS; AO := ANG;
			last := tx;
			IF NOT s2d.LONG THEN	status := 131; dir := NOT dir; END_IF;

	134:	(* manual operation single click up *)
			QU := TRUE;
			QD := FALSE;
			PO := POS; AO := ANG;
			IF tx - last &gt;= max_runtime THEN status := 131; END_IF;

	135:	(* manual operation single click dn *)
			QU := FALSE;
			QD := TRUE;
			PO := POS; AO := ANG;
			IF tx - last &gt;= max_runtime THEN status := 131;	END_IF;

	136:	(* forced input in = true *)
			QU := TRUE;
			QD := TRUE;
			PO := PI; AO := AI;
			IF tx-last &gt;= max_runtime THEN status := 130; END_IF;

	137:	(* double click1 position *)
			QU := TRUE;
			QD := TRUE;
			PO := DBL_POS1;
			AO := DBL_ANG1;
			IF tx - last &gt;= max_runtime THEN status := 131; END_IF;

	138:	(* double click2 position *)
			QU := TRUE;
			QD := TRUE;
			PO := DBL_POS2;
			AO := DBL_ANG2;
			IF tx - last &gt;= max_runtime THEN status := 131; END_IF;

	   139:   (* manual operation standby *)
	         QU := FALSE;
	         QD := FALSE;
	         PO := POS;
	         AO := ANG;

END_CASE;


(* revision history
hm	29. sep 2007	rev 1.0
	original release

hm	6. oct 2007		rev 1.1
	renamed ps and as to po and ao

hm	30. dec 2007	rev 1.2
	added click_timeout variable and function

hm	16. jul. 2008	rev 1.3
	rewirtten code to allow for more functionality
	added single click mode with single_switch.
	added Debounce for inputs S1 and S2
	added double_click functionality

hm	26. sep. 2008	rev 1.4
	corrected an error while POS and ANG was transferred to outputs PO and AO during automatic modes

hm	22. jan 2009	rev 1.5
	added pulse mode for double click outputs
	added automatic mode for IN

hm	27. jul 2009	rev 1.6
	changed status 0 to 130

HF	12. nov. 2009	rev 1.7
	added state 139
	set defaults for QU, QD, PO

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ea08b749-0235-44d2-bc23-dfefba38cd98</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="BLIND_NIGHT" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="UP">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="DN">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="S_IN">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="PI">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="AI">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="E_NIGHT">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="E_DAY">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="DTIN">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="SUNRISE">
              <type>
                <TOD />
              </type>
            </variable>
            <variable name="SUNSET">
              <type>
                <TOD />
              </type>
            </variable>
            <variable name="SUNRISE_OFFSET">
              <type>
                <TIME />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="SUNSET_OFFSET">
              <type>
                <TIME />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="NIGHT_POSITION">
              <type>
                <BYTE />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="NIGHT_ANGLE">
              <type>
                <BYTE />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="QU">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="QD">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="STATUS">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="PO">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="AO">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="night">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="last_night">
              <type>
                <DATE />
              </type>
            </variable>
            <variable name="last_day">
              <type>
                <DATE />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF NOT (up AND dn) AND night THEN
	(* manual operation at night will cancel operation for one night *)
	night := FALSE;
ELSIF (DT_TO_TOD(dtin) &gt; sunset + sunset_offset) AND (last_night &lt; DT_TO_DATE(dtin)) AND NOT night AND e_night THEN
	(* enable night *)
	night := TRUE;
	last_night := DT_TO_DATE(dtin);
ELSIF (DT_TO_TOD(dtin) &gt; sunrise + sunrise_offset) AND (last_day &lt; DT_TO_DATE(dtin)) AND night AND e_day AND (last_night &lt; DT_TO_DATE(dtin)) THEN
	(* disable night *)
	night := FALSE;
	last_day := DT_TO_DATE(dtin);
END_IF;

(* shade at night only in auto mode and enable = true *)
IF UP AND DN AND night THEN
	status := 141;
	po := night_position;
	ao := night_angle;
ELSE
	QU := UP;
	QD := DN;
	po := pi;
	ao := ai;
	status := s_in;
END_IF;


(* revision history
hm	29. sep 2007	rev 1.0
	original version

hm	5. oct 2007		rev 1.1
	added enable input

hm	6. oct 2007		rev 1.2
	added pos and angle inputs and outputs
	night position and angle can now be configured
	any manual operation at night will cancel night operation

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>449bb120-62a7-4931-b4e5-bd0d568ae220</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="BLIND_SCENE" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="UP">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="DN">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="S_IN">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="PI">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="AI">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="ENABLE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="SWRITE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="SCENE">
              <type>
                <BYTE />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="QU">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="QD">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="STATUS">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="PO">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="AO">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars retain="true">
            <variable name="sx">
              <type>
                <array>
                  <dimension lower="0" upper="15" />
                  <dimension lower="0" upper="2" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
          </localVars>
          <tempVars>
            <variable name="x">
              <type>
                <BYTE />
              </type>
            </variable>
          </tempVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* delete all bits except the lower 4 of scene *)
x := scene AND 16#0F;

IF enable AND sx[x,2] &gt; 0 AND UP AND DN THEN
	po := sx[x,0];
	ao := sx[x,1];
	status := 160 + x;  (* Status number is 160 to 175 for the 16 scenes *)
	QU := TRUE;
	QD := TRUE;
ELSE
	QU := UP;
	QD := DN;
	status := S_IN;
	po := pi;
	ao := ai;
END_IF;

(* write scene if necessary *)
IF swrite THEN
	status := 176;		(* write scene *)
	sx[x,0] := pi;
	sx[x,1] := ai;
	IF enable THEN sx[x,2] := 1; ELSE sx[x,2] := 0; END_IF; (* if sx[x,2] = 0 the scene is disabled *)
END_IF;


(* revision history
hm	24. oct 2007	rev 1.0
	original release

hm		29.1.2008	rev 1.1
	replaced shr/shl with and for better performance
*)

</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>52de05d8-db10-454b-9f5b-e9f5ed991e25</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="BLIND_SECURITY" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="UP">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="DN">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="S_IN">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="PI">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="AI">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="FIRE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="WIND">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ALARM">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="DOOR">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="RAIN">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Alarm_UP">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="WIND_UP">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="RAIN_UP">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="QU">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="QD">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="STATUS">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="PO">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="AO">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF Fire THEN
	QU := TRUE;
	QD := FALSE;
	status := 111;
ELSIF Wind THEN
	QU := Wind_up;
	QD := NOT wind_up;
	status := 112;
ELSIF alarm THEN
	QU := Alarm_up;
	QD := NOT Alarm_up;
	status := 113;
ELSIF Door THEN
	QU := TRUE;
	QD := FALSE;
	status := 114;
ELSIF Rain AND NOT (up XOR dn) THEN
	QU := rain_up;
	QD := NOT rain_up;
	status := 115;
ELSE
	QU := UP;
	QD := DN;
	status := S_IN;
	po := pi;
	ao := ai;
END_IF;


(* revision history
hm	29. sep 2007	rev 1.0
	original release

hm	6. oct 2007		rev 1.1
	added pos and angle inputs and outputs
	manual will override rain position
	alarm position can now be configured

hm		12. feb. 2008	rev 1.2
	added config variables rain_up and wind_up
	position for rain and wind is now configurable
*)

</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>0f5bacdb-61d8-4ae9-94ef-eb3d853b6fc9</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="BLIND_SET" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="UP">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="DN">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="S_IN">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="PI">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="AI">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="IN">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="PX">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="AX">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="OVERRIDE_MANUAL">
              <type>
                <BOOL />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="RESTORE_POSITION">
              <type>
                <BOOL />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="RESTORE_TIME">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#1m0s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="QU">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="QD">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="STATUS">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="PO">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="AO">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="tx">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="ps">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="as">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="last">
              <type>
                <TIME />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* read system time *)
tx := DWORD_TO_TIME(OSCAT_BASIC.T_PLC_MS());

(* check inputs *)
IF IN THEN
	IF override_manual OR (UP AND DN) THEN
		status := 178;
	END_IF;
END_IF;

(* state machine *)
CASE STATUS OF
	0: (* power on state *)
		status := S_IN;

	178: (* force values from PX and AX *)
		PO := PX;
		AO := AX;
		QU := TRUE;
		QD := TRUE;
		(* check for end of forced position *)
		IF NOT in THEN
			STATUS := SEL(RESTORE_POSITION, S_IN, 179);
			last := tx;
		END_IF;

	179: (* restore previous position *)
		PO := ps;
		AO := as;
		IF ((PO = PI) AND (AO = AI))  OR tx - last &gt;= RESTORE_TIME THEN
			status := S_IN;
		END_IF;

ELSE
	(* no operation transfer inputs to outputs *)
	PO := PI;
	ps := PI;
	AO := AI;
	as := AI;
	STATUS := S_IN;
	QU := UP;
	QD := DN;
END_CASE;


(* revision history
hm	27. jul 2009	rev 1.0
	original release

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>a9755b7c-6e5c-4453-a1df-b928964aeacc</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="BLIND_SHADE" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="UP">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="DN">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="S_IN">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="PI">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="AI">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="ENABLE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="SUN">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <inOutVars>
            <variable name="CX">
              <type>
                <derived name="OSCAT_BASIC.CALENDAR" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="sunrise_offset">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#60m0s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="sunset_preset">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#60m0s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="direction">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="180" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="angle_offset">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="80" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="slat_width">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="80" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="Slat_spacing">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="60" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="Shade_delay">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#1m0s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="Shade_pos">
              <type>
                <BYTE />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="QU">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="QD">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="STATUS">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="PO">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="AO">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="angle">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="sun_delay">
              <type>
                <derived name="OSCAT_BASIC.TOF" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* the input sun is sent through tof which will delay the shade for the time shade_delay *)
sun_delay(IN := sun, PT := shade_delay);

IF UP AND DN AND enable AND sun_delay.Q AND cx.SUN_HOR &gt; direction - angle_offset AND cx.SUN_HOR &lt; direction + angle_offset AND
	DT_TO_TOD(cx.UTC) &gt; cx.SUN_RISE + sunrise_offset AND DT_TO_TOD(cx.UTC) &lt; cx.SUN_SET - sunset_preset THEN
	status := 151;
	QU := UP;
	QD := DN;
	(* position is predefined *)
	po := shade_pos;
	(* shading is active now calculate the slat angle *)
	(* calculate the max angle for the blind *)
	angle := OSCAT_BASIC.DEG(ATAN(slat_spacing / slat_width));
	(* check if sun angle is between 0 and max angle *)
	IF cx.SUN_VER &gt; 0.0 AND cx.SUN_VER &lt; angle THEN
		angle := cx.SUN_VER + OSCAT_BASIC.DEG(ACOS(COS(OSCAT_BASIC.RAD(cx.SUN_VER))*slat_spacing / Slat_width));
		ao := INT_TO_BYTE(DINT_TO_INT(LIMIT(0,TRUNC(angle * 2.833333333), 255)));
	ELSE
		ao := 255;
	END_IF;
ELSE
	QU := UP;
	QD := DN;
	po := pi;
	ao := ai;
	status := S_IN;
END_IF;

(* revision history
hm	15 oct. 2007	rev 1.0
	original version

hm	19. oct 2007	rev 1.1
	manual mode was not detected because outputs were checked and not inputs UP and DN

hm	24. nov 2007	rev 1.2
	added shade_delay to avoid constant up and down if sun is out parcially

hm	8. feb 2009	rev 1.3
	added shading position shade_pos to be configured
	changed inputs to utilize calendar data structure

hm	13. mar. 2009	rev 1.4
	improved code

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>5f276429-2b1b-46df-b643-fccb4dc8582a</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="BLIND_SHADE_S" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="UP">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="DN">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="S_IN">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="PI">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="ENABLE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="SUN">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="HORZ1">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="100" />
              </initialValue>
            </variable>
            <variable name="HORZ2">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="260" />
              </initialValue>
            </variable>
            <variable name="VERT">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="90" />
              </initialValue>
            </variable>
            <variable name="ALERT">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
          </inputVars>
          <inOutVars>
            <variable name="CX">
              <type>
                <derived name="OSCAT_BASIC.calendar" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="sunrise_offset">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#60m0s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="sunset_preset">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#60m0s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="shade_delay">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#1m0s0ms" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="shade_pos">
              <type>
                <BYTE />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="QU">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="QD">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="STATUS">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="PO">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="sun_delay">
              <type>
                <derived name="OSCAT_BASIC.TOF" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* status definition
   151 = shadow               move shutter down for shadowing
   152 = alert                  move shutter up by setting QU:=TRUE when door is open.
*)

(* the input sun is sent through tof which will delay the shade for the time shade_delay *)
sun_delay(IN := sun, PT := shade_delay);

IF ALERT THEN
   QU := TRUE;
   QD := FALSE;
   STATUS := 152;
ELSIF UP AND DN AND ENABLE AND sun_delay.Q
AND (CX.SUN_HOR &gt; HORZ1) AND (CX.SUN_HOR &lt; HORZ2)
AND (CX.SUN_VER &lt; VERT)
AND (DT_TO_TOD(CX.UTC) &gt; CX.SUN_RISE + sunrise_offset) AND (DT_TO_TOD(CX.UTC) &lt; CX.SUN_SET - sunset_preset) THEN
   QU := UP;
   QD := DN;
   STATUS := 151;
   (* Calculate Position, must be shade_pos or less *)
   PO := MIN(PI, shade_pos);
ELSE
   QU := UP;
   QD := DN;
   PO := PI;
   STATUS := S_IN;
END_IF;



(* revision history
hf	12 nov. 2009	rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>856173cc-b6c9-4a62-86d4-4e3c2cda928f</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="BUILDING_VERSION" pouType="function">
        <interface>
          <returnType>
            <DWORD />
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF in THEN
	BUILDING_VERSION := DATE_TO_DWORD(D#2011-02-3);
ELSE
	BUILDING_VERSION := 100;
END_IF;

(* revision history
hm	6. oct 2006	rev 1.0
	original version

hm	16. dec 2007	rev 1.1
	added possibility to return date and version depending on IN.

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e9cfa683-34a0-4085-b267-0c88f43ea58b</ObjectId>
          </data>
        </addData>
      </pou>
    </pous>
  </types>
  <instances>
    <configurations />
  </instances>
  <addData>
    <data name="http://www.3s-software.com/plcopenxml/globalvars" handleUnknown="implementation">
      <globalVars name="Constants">
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>35324da6-a252-4666-aa39-8b36e7f757df</ObjectId>
          </data>
        </addData>
      </globalVars>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/globalvars" handleUnknown="implementation">
      <globalVars name="Globale_Variablen">
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>a1aaac4e-dd19-45d6-9a38-096033f76e10</ObjectId>
          </data>
        </addData>
      </globalVars>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/globalvars" handleUnknown="implementation">
      <globalVars name="Setup_Data">
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b0157da5-9a58-4d25-bb91-2800ba734067</ObjectId>
          </data>
        </addData>
      </globalVars>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/globalvars" handleUnknown="implementation">
      <globalVars name="PersistentVars">
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>abdff2f4-06fd-4876-aee6-5f16b18c187c</ObjectId>
          </data>
        </addData>
      </globalVars>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/libraries" handleUnknown="implementation">
      <Libraries>
        <Library Name="#OSCAT_BASIC" Namespace="OSCAT_BASIC" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="BASIC, * (OSCAT)" />
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>9e9d2a4f-a89e-4ad0-910a-0fc00043c558</ObjectId>
          </data>
        </addData>
      </Libraries>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/projectstructure" handleUnknown="discard">
      <ProjectStructure>
        <Folder Name="Global Variables">
          <Object Name="Constants" ObjectId="35324da6-a252-4666-aa39-8b36e7f757df" />
          <Object Name="Globale_Variablen" ObjectId="a1aaac4e-dd19-45d6-9a38-096033f76e10" />
          <Object Name="Setup_Data" ObjectId="b0157da5-9a58-4d25-bb91-2800ba734067" />
        </Folder>
        <Object Name="Library Manager" ObjectId="9e9d2a4f-a89e-4ad0-910a-0fc00043c558" />
        <Object Name="PersistentVars" ObjectId="abdff2f4-06fd-4876-aee6-5f16b18c187c" />
        <Folder Name="POUs">
          <Folder Name="actuators">
            <Object Name="ACTUATOR_2P" ObjectId="6fcee7c5-7494-4d07-a1f7-8f0356f564d2" />
            <Object Name="ACTUATOR_3P" ObjectId="45e70587-b9d6-4356-a0c3-054dde3af084" />
            <Object Name="ACTUATOR_A" ObjectId="5f799073-37dc-4119-b35f-5f2adbfecd47" />
            <Object Name="ACTUATOR_COIL" ObjectId="013a3b1a-e2d0-44ce-8e4b-c381584745fd" />
            <Object Name="ACTUATOR_PUMP" ObjectId="66c5a3de-d4dc-4ebd-8847-4b0bed91b13f" />
            <Object Name="ACTUATOR_UD" ObjectId="b1bc27a5-b58d-4601-a305-b41eabe81d3a" />
            <Object Name="AUTORUN" ObjectId="8d9c3dbc-393b-4c70-a0ee-83a32ce4372f" />
          </Folder>
          <Folder Name="electrical">
            <Object Name="CLICK" ObjectId="828878b3-d802-44db-b13f-fe451fd39b54" />
            <Object Name="CLICK_MODE" ObjectId="f8ca43c7-f257-4d34-9e23-939415f1f67b" />
            <Object Name="DEBOUNCE" ObjectId="7ec970fa-9f02-41e9-8ed4-95a6897dc06e" />
            <Object Name="DIMM_2" ObjectId="b9718039-081b-4abf-87c1-3d9f812458f4" />
            <Object Name="DIMM_I" ObjectId="c349feba-fd15-4ff4-ab62-0b3b41cf803a" />
            <Object Name="F_LAMP" ObjectId="fc5ba884-3eb4-44b7-9401-f18bdf3a6b09" />
            <Object Name="PULSE_LENGTH" ObjectId="100305c3-6969-4b7a-aff5-899e5b9710b6" />
            <Object Name="PULSE_T" ObjectId="ab437450-a8e3-4451-afed-67f841721c02" />
            <Object Name="SW_RECONFIG" ObjectId="a50d6857-386c-47aa-8b5a-b38b4988c3f4" />
            <Object Name="SWITCH_I" ObjectId="55750a8e-95e3-47f4-9a93-b56f7f28b76b" />
            <Object Name="SWITCH_X" ObjectId="acb25ded-957e-437f-bbbc-b629e0a0e88f" />
            <Object Name="TIMER_1" ObjectId="da2d6e69-1776-4078-889b-7bd73923eb49" />
            <Object Name="TIMER_2" ObjectId="13dddc1f-7d21-44a6-82d2-1a83e084d9b8" />
            <Object Name="TIMER_EVENT_DECODE" ObjectId="5d572296-c0bf-48d8-a831-e4254e26237e" />
            <Object Name="TIMER_EXT" ObjectId="22c7731d-e875-45bf-a276-326e0b1dfe75" />
            <Object Name="TIMER_P4" ObjectId="0d6e9df2-b59a-427e-aa58-bc82c0c31992" />
          </Folder>
          <Folder Name="HLK">
            <Object Name="AIR_DENSITY" ObjectId="71caf2cc-b9b3-4138-8b8e-f6c68be904aa" />
            <Object Name="AIR_ENTHALPY" ObjectId="289175fa-f576-456a-a46f-c1ae747d36e0" />
            <Object Name="BOILER" ObjectId="bc7457e4-31a9-4acc-910a-c585e99da1ca" />
            <Object Name="BURNER" ObjectId="f212ae4f-183e-4c5e-b084-6ffcae8ec490" />
            <Object Name="DEW_CON" ObjectId="c05dbb5e-ee0f-4280-831b-30b89ffc938b" />
            <Object Name="DEW_RH" ObjectId="1131a176-d242-46c4-8d11-0164aeb522d8" />
            <Object Name="DEW_TEMP" ObjectId="b0fd6ec3-3206-4370-8add-95298b57192f" />
            <Object Name="HEAT_INDEX" ObjectId="3754b9e3-75b9-464e-bf73-5369a3109f50" />
            <Object Name="HEAT_METER" ObjectId="b56d3fc3-3bc1-49b0-83af-226ad5c82e97" />
            <Object Name="HEAT_TEMP" ObjectId="1830db3c-09ba-4013-88d6-447217449d81" />
            <Object Name="LEGIONELLA" ObjectId="54fa1828-dbbe-4338-b16a-f4f98c1d0f3d" />
            <Object Name="SDD" ObjectId="909087f0-e578-4c24-8d9e-7b09da2c3359" />
            <Object Name="SDD_NH3" ObjectId="7fd3732a-88c4-428f-81b8-1c63938dee06" />
            <Object Name="SDT_NH3" ObjectId="5edfc34e-fc76-4979-815c-d14d814d37a1" />
            <Object Name="T_AVG24" ObjectId="5a109ed4-9076-4849-ba76-8fa6bf2a2836" />
            <Object Name="TANK_LEVEL" ObjectId="0a826e55-2201-434c-a9cd-8e42e6300b80" />
            <Object Name="TANK_VOL1" ObjectId="9798e088-dd0a-4457-8999-40575797557b" />
            <Object Name="TANK_VOL2" ObjectId="15d2355e-b088-45a6-a515-b3e1d24e6c00" />
            <Object Name="TEMP_EXT" ObjectId="8266090f-161e-4cea-b1c7-095963a0f734" />
            <Object Name="WATER_CP" ObjectId="f1ec6032-8ef3-4d95-afc9-0853499ec1c4" />
            <Object Name="WATER_DENSITY" ObjectId="e4ef6438-a9bb-4634-9426-183aa7734d20" />
            <Object Name="WATER_ENTHALPY" ObjectId="941ebc16-1868-4024-bed1-b0c2ad8b988d" />
            <Object Name="WCT" ObjectId="6eb2cb3f-6f6b-476c-846a-9d87e1b25785" />
          </Folder>
          <Folder Name="Jalousie">
            <Object Name="BLIND_ACTUATOR" ObjectId="b09bf5b4-0cbd-4a76-a289-5c41164396d3" />
            <Object Name="BLIND_CONTROL" ObjectId="f78b8028-cfff-419a-b125-1540923d5aa3" />
            <Object Name="BLIND_CONTROL_S" ObjectId="a45905b5-b2c5-4529-a7a9-be202d0d0c64" />
            <Object Name="BLIND_INPUT" ObjectId="ea08b749-0235-44d2-bc23-dfefba38cd98" />
            <Object Name="BLIND_NIGHT" ObjectId="449bb120-62a7-4931-b4e5-bd0d568ae220" />
            <Object Name="BLIND_SCENE" ObjectId="52de05d8-db10-454b-9f5b-e9f5ed991e25" />
            <Object Name="BLIND_SECURITY" ObjectId="0f5bacdb-61d8-4ae9-94ef-eb3d853b6fc9" />
            <Object Name="BLIND_SET" ObjectId="a9755b7c-6e5c-4453-a1df-b928964aeacc" />
            <Object Name="BLIND_SHADE" ObjectId="5f276429-2b1b-46df-b643-fccb4dc8582a" />
            <Object Name="BLIND_SHADE_S" ObjectId="856173cc-b6c9-4a62-86d4-4e3c2cda928f" />
          </Folder>
          <Folder Name="Other">
            <Object Name="BUILDING_VERSION" ObjectId="e9cfa683-34a0-4085-b267-0c88f43ea58b" />
          </Folder>
        </Folder>
        <Object Name="Project Information" ObjectId="11c0fc3a-9bcf-4dd8-ac38-efb93363e521" />
      </ProjectStructure>
    </data>
  </addData>
</project>
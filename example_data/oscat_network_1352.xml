<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://www.plcopen.org/xml/tc6_0200">
  <fileHeader companyName="" productName="CODESYS" productVersion="CODESYS V3.5 SP16" creationDateTime="2021-04-18T12:40:34.2115358" />
  <contentHeader name="NETWORK" version="1.3.5.2" modificationDateTime="2021-03-02T15:47:52" organization="OSCAT" author="OSCAT">
    <Comment>Oscat Network Version 07/2017 aus *.lib
Formale Korrekturen von annD und Referenzen "Variabeln LOCAL_DT et.al." für Kompatibilität mit Codesys 3.5.16.0 und Oscat_Basic 3.3.4.0 angepasst</Comment>
    <coordinateInfo>
      <fbd>
        <scaling x="1" y="1" />
      </fbd>
      <ld>
        <scaling x="1" y="1" />
      </ld>
      <sfc>
        <scaling x="1" y="1" />
      </sfc>
    </coordinateInfo>
    <addData>
      <data name="http://www.3s-software.com/plcopenxml/projectinformation" handleUnknown="implementation">
        <ProjectInformation>
          <property name="Author" type="string">OSCAT</property>
          <property name="Company" type="string">OSCAT</property>
          <property name="DefaultNamespace" type="string">OSCAT_NETWORK</property>
          <property name="Description" type="string">Oscat Network Version 07/2017 aus *.lib
Formale Korrekturen von annD und Referenzen "Variabeln LOCAL_DT et.al." für Kompatibilität mit Codesys 3.5.16.0 und Oscat_Basic 3.3.4.0 angepasst</property>
          <property name="Project" type="string">oscat_network_1352</property>
          <property name="Title" type="string">NETWORK</property>
          <property name="Version" type="version">1.3.5.2</property>
          <property name="Version string" type="string" />
          <property name="library-category-list" type="library-category-list">Application|Utils</property>
        </ProjectInformation>
      </data>
    </addData>
  </contentHeader>
  <types>
    <dataTypes>
      <dataType name="DLOG_CRON_DATA">
        <baseType>
          <struct>
            <variable name="CE">
              <type>
                <array>
                  <dimension lower="0" upper="5" />
                  <baseType>
                    <derived name="DLOG_CRON_ELEMENT" />
                  </baseType>
                </array>
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>722a5aa6-341c-49d4-ab8e-7c304b874dc1</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="DLOG_CRON_ELEMENT">
        <baseType>
          <struct>
            <variable name="ELEMENTS">
              <type>
                <array>
                  <dimension lower="0" upper="59" />
                  <baseType>
                    <BOOL />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="VALUE">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="VALUE_MIN">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="VALUE_MAX">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="ALL_SELECTED">
              <type>
                <BOOL />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>c26978bb-462c-44a4-8b99-5a3208ba608b</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="DLOG_DATA">
        <baseType>
          <struct>
            <variable name="STORE_TYPE">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="ADD_COM">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="ADD_DATA_REQ">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="CLOCK_TRIG">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ID_MAX">
              <type>
                <USINT />
              </type>
            </variable>
            <variable name="DTI">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="UCB">
              <type>
                <derived name="UNI_CIRCULAR_BUFFER_DATA" />
              </type>
            </variable>
            <variable name="LOAD_TIME_MAX">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="NEW_FILE">
              <type>
                <string />
              </type>
            </variable>
            <variable name="NEW_FILE_SIZE">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="NEW_FILE_RTRIG">
              <type>
                <BOOL />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e2797ee2-534c-4d70-95d4-8dd73be64d0f</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="DLOG_REAL_ARRAY_DATA">
        <baseType>
          <array>
            <dimension lower="1" upper="64" />
            <baseType>
              <derived name="DLOG_REAL_ARRAY_ELEMENT" />
            </baseType>
          </array>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d1868660-f0b1-40fe-8f60-2d5882ef5a06</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="DLOG_REAL_ARRAY_ELEMENT">
        <baseType>
          <struct>
            <variable name="VALUE">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="DELTA">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="COLUMN">
              <type>
                <string length="10" />
              </type>
            </variable>
            <variable name="_DELTA_LAST">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="_VALUE_LAST">
              <type>
                <REAL />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>0ff196eb-6877-4d7c-829a-36171f1189fd</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="DLOG_RETAIN">
        <baseType>
          <struct>
            <variable name="FN_REM">
              <type>
                <string />
              </type>
            </variable>
            <variable name="COLOR">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="HEAD">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="TRIG_CNT">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="TRIG_CNT_TOTAL">
              <type>
                <UDINT />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>21d0bd37-1704-408b-a79a-96ffc7232d5f</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="DLOG_SAVE">
        <baseType>
          <struct>
            <variable name="FN_REM">
              <type>
                <string />
              </type>
            </variable>
            <variable name="COLOR">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="HEAD">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="TRIG_CNT">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="TRIG_CNT_TOTAL">
              <type>
                <UDINT />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>bc9831bc-4d9f-4cf2-9e56-c617e9c134f7</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="LOG_CONTROL">
        <baseType>
          <struct>
            <variable name="NEW_MSG">
              <type>
                <string length="LOG_SIZE" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> neue Nachricht für den Datenbuffer </xhtml>
              </documentation>
            </variable>
            <variable name="NEW_MSG_OPTION">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="LEVEL">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="SIZE">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="LOG_MAX" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Anzahl der Strings im LOG_DATA </xhtml>
              </documentation>
            </variable>
            <variable name="RESET">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Nachrichtenbuffer löschen </xhtml>
              </documentation>
            </variable>
            <variable name="PRINTF">
              <type>
                <derived name="PRINTF_DATA" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Array PRINTF Parameter </xhtml>
              </documentation>
            </variable>
            <variable name="MSG">
              <type>
                <array>
                  <dimension lower="0" upper="LOG_MAX" />
                  <baseType>
                    <string length="LOG_SIZE" />
                  </baseType>
                </array>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Array Message </xhtml>
              </documentation>
            </variable>
            <variable name="MSG_OPTION">
              <type>
                <array>
                  <dimension lower="0" upper="LOG_MAX" />
                  <baseType>
                    <DWORD />
                  </baseType>
                </array>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Array Options </xhtml>
              </documentation>
            </variable>
            <variable name="UPDATE_COUNT">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Updatezähler </xhtml>
              </documentation>
            </variable>
            <variable name="IDX">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> aktueller Nachrichten-Index </xhtml>
              </documentation>
            </variable>
            <variable name="RING_MODE">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Bufferüberlauf erkannt </xhtml>
              </documentation>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>da9b26af-a7e2-443f-ade7-c781426d690e</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="PRINTF_DATA">
        <baseType>
          <array>
            <dimension lower="1" upper="11" />
            <baseType>
              <string length="LOG_SIZE" />
            </baseType>
          </array>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>f0be90b6-94f9-4574-baaf-2a8fd6544c98</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="UNI_CIRCULAR_BUF">
        <baseType>
          <array>
            <dimension lower="0" upper="8191" />
            <baseType>
              <BYTE />
            </baseType>
          </array>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>5acf4d1a-7471-482f-bddb-abb5b5f8ae32</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="UNI_CIRCULAR_BUFFER_DATA">
        <baseType>
          <struct>
            <variable name="D_MODE">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="D_SIZE">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="D_HEAD">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="D_STRING">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="D_REAL">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="D_DWORD">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="BUF_SIZE">
              <type>
                <UINT />
              </type>
            </variable>
            <variable name="BUF_COUNT">
              <type>
                <UINT />
              </type>
            </variable>
            <variable name="BUF_USED">
              <type>
                <USINT />
              </type>
            </variable>
            <variable name="BUF_USED_MAX">
              <type>
                <USINT />
              </type>
            </variable>
            <variable name="BUF_DATA_CNT">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="BUF_DATA_LOST">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="BUF">
              <type>
                <derived name="UNI_CIRCULAR_BUF" />
              </type>
            </variable>
            <variable name="_GetStart">
              <type>
                <UINT />
              </type>
            </variable>
            <variable name="_GetEnd">
              <type>
                <UINT />
              </type>
            </variable>
            <variable name="_Last">
              <type>
                <UINT />
              </type>
            </variable>
            <variable name="_First">
              <type>
                <UINT />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>f0761d57-a9be-460d-99aa-9c0a83858af6</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="us_LOG_VIEWPORT">
        <baseType>
          <struct>
            <variable name="LINE_ARRAY">
              <type>
                <array>
                  <dimension lower="1" upper="40" />
                  <baseType>
                    <INT />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Anzahl der sichtbaren Nachtrichten </xhtml>
              </documentation>
            </variable>
            <variable name="UPDATE_COUNT">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Updatezähler </xhtml>
              </documentation>
            </variable>
            <variable name="MOVE_TO_X">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Steuerung der Nachrichtenanzeige </xhtml>
              </documentation>
            </variable>
            <variable name="UPDATE">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Daten wurden geändert -&gt; neuzeichnen </xhtml>
              </documentation>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>1ed8b6d0-aec4-4ecc-bec0-9d824b64006f</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="MYSQL_COM">
        <baseType>
          <struct>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="SQL_CON">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="SQL_URL">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="SQL_PACKET_NO">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="TIMEOUT">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="DNS_IP4">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="SQL_RCV_STATE">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="ERROR_C">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="ERROR_T">
              <type>
                <BYTE />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>50e94682-b7bd-4469-b8bf-142573aa27c8</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="MYSQL_INFO">
        <baseType>
          <struct>
            <variable name="SERVER_PROTOCOL_VERSION">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="SERVER_CAPABILITIES">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="SERVER_STATUS">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="SERVER_LANGUAGE">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="SQL_CONNECTED">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="SQL_ERROR">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="DATA_INSERT_AKTIV">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="DATA_INSERT_OK_CNT">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="DATA_INSERT_NOK_CNT">
              <type>
                <UDINT />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b5857a58-cd0d-4cc4-b62a-05e9eb480052</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="FILE_PATH_DATA">
        <baseType>
          <struct>
            <variable name="DRIVE">
              <type>
                <string length="3" />
              </type>
            </variable>
            <variable name="DIRECTORY">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="FILENAME">
              <type>
                <string />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d5b4063c-3096-4249-b72c-9448f07dbb18</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="FILE_SERVER_DATA">
        <baseType>
          <struct>
            <variable name="FILE_OPEN">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="FILENAME">
              <type>
                <string />
              </type>
            </variable>
            <variable name="MODE">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="OFFSET">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="FILE_SIZE">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="ERROR">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="RUNTIME">
              <type>
                <derived name="FILE_SERVER_RUNTIME_DATA" />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>c491d149-7a23-49cf-981f-542adf181733</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="FILE_SERVER_RUNTIME_DATA">
        <baseType>
          <struct>
            <variable name="TIME_FILE_OPEN_CUR">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="TIME_FILE_OPEN_MAX">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="TIME_FILE_OPEN_MIN">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="TIME_FILE_CLOSE_CUR">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="TIME_FILE_CLOSE_MAX">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="TIME_FILE_CLOSE_MIN">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="TIME_FILE_READ_CUR">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="TIME_FILE_READ_MAX">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="TIME_FILE_READ_MIN">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="TIME_FILE_WRITE_CUR">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="TIME_FILE_WRITE_MAX">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="TIME_FILE_WRITE_MIN">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="TIME_FILE_SEEK_CUR">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="TIME_FILE_SEEK_MAX">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="TIME_FILE_SEEK_MIN">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="TIME_FILE_TELL_CUR">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="TIME_FILE_TELL_MAX">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="TIME_FILE_TELL_MIN">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="TIME_FILE_DELETE_CUR">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="TIME_FILE_DELETE_MAX">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="TIME_FILE_DELETE_MIN">
              <type>
                <UDINT />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>5956d4b9-8905-4828-8ebb-ca462be3dea2</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="NET_VAR_DATA">
        <baseType>
          <struct>
            <variable name="CYCLE">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="STATE">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="INDEX">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="ID_MAX">
              <type>
                <USINT />
              </type>
            </variable>
            <variable name="ERROR_ID">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="BUF_SIZE">
              <type>
                <UINT />
              </type>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>de01c427-d933-4608-9def-cc441fbad5d7</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="IP_C">
        <baseType>
          <struct>
            <variable name="C_MODE">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">W Mode: TCP/UCP AKTIV/PASSIV                               </xhtml>
              </documentation>
            </variable>
            <variable name="C_PORT">
              <type>
                <WORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">W Portnummer                                               </xhtml>
              </documentation>
            </variable>
            <variable name="C_IP">
              <type>
                <DWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">W IP-Adresse gepackt wwxxyyzz = www.xxx.yyy.zzz            </xhtml>
              </documentation>
            </variable>
            <variable name="C_STATE">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">R Verbindungsstatus ON/OFF + Flanke ON/OFF                 </xhtml>
              </documentation>
            </variable>
            <variable name="C_ENABLE">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">W Freigabe für Connect                                     </xhtml>
              </documentation>
            </variable>
            <variable name="R_OBSERVE">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">W Empfang ueberwachen                                      </xhtml>
              </documentation>
            </variable>
            <variable name="TIME_RESET">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">W Alle Timer ruecksetzen                                   </xhtml>
              </documentation>
            </variable>
            <variable name="ERROR">
              <type>
                <DWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">R vvwwxxyy (vv = CON_ERROR, ww = SEN_ERROR, xx = REC_ERROR </xhtml>
              </documentation>
            </variable>
            <variable name="FIFO">
              <type>
                <derived name="IP_FIFO_DATA" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">I IP FIFO Struktur                                         </xhtml>
              </documentation>
            </variable>
            <variable name="MAILBOX">
              <type>
                <array>
                  <dimension lower="1" upper="16" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">I Mailbox: Datenbereich für Bausteindatenaustausch         </xhtml>
              </documentation>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>3c29754c-d372-46bc-818a-0ecef6a26cbf</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="IP_FIFO_DATA">
        <baseType>
          <struct>
            <variable name="X">
              <type>
                <array>
                  <dimension lower="1" upper="128" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> IP_ID FIFO Speicher          </xhtml>
              </documentation>
            </variable>
            <variable name="Y">
              <type>
                <array>
                  <dimension lower="1" upper="128" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> IP_ID Zähler                 </xhtml>
              </documentation>
            </variable>
            <variable name="ID">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> höchste vergabene id         </xhtml>
              </documentation>
            </variable>
            <variable name="MAX_ID">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> maximal Anmeldungen pro ID   </xhtml>
              </documentation>
            </variable>
            <variable name="INIT">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Initialisierung durchgeführt </xhtml>
              </documentation>
            </variable>
            <variable name="EMPTY">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> FIFO leer                    </xhtml>
              </documentation>
            </variable>
            <variable name="FULL">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> FIFO voll                    </xhtml>
              </documentation>
            </variable>
            <variable name="TOP">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> maximale anzahl in FIFO      </xhtml>
              </documentation>
            </variable>
            <variable name="NW">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Schreibzeiger                </xhtml>
              </documentation>
            </variable>
            <variable name="NR">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Lesezeiger                   </xhtml>
              </documentation>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>3419715a-eb72-4c11-853c-722955f9a94e</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="IP2GEO_DATA">
        <baseType>
          <struct>
            <variable name="STATE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="IP4">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="COUNTRY_CODE">
              <type>
                <string length="2" />
              </type>
            </variable>
            <variable name="COUNTRY_NAME">
              <type>
                <string length="20" />
              </type>
            </variable>
            <variable name="REGION_CODE">
              <type>
                <string length="2" />
              </type>
            </variable>
            <variable name="REGION_NAME">
              <type>
                <string length="20" />
              </type>
            </variable>
            <variable name="CITY">
              <type>
                <string length="20" />
              </type>
            </variable>
            <variable name="GEO_LATITUDE">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="GEO_LONGITUDE">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="TIME_ZONE_NAME">
              <type>
                <string length="20" />
              </type>
            </variable>
            <variable name="GMT_OFFSET">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="IS_DST">
              <type>
                <BOOL />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>1452c294-39a2-43d1-944e-d87d645e8d57</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="NETWORK_BUFFER">
        <baseType>
          <struct>
            <variable name="SIZE">
              <type>
                <UINT />
              </type>
            </variable>
            <variable name="BUFFER">
              <type>
                <derived name="NW_BUF_LONG" />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d7a167a8-4536-4c5f-b89f-08898d7cf356</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="NETWORK_BUFFER_SHORT">
        <baseType>
          <struct>
            <variable name="SIZE">
              <type>
                <UINT />
              </type>
            </variable>
            <variable name="BUFFER">
              <type>
                <derived name="NW_BUF_SHORT" />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b4144797-6313-4601-9c83-9fca7fe0e43d</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="NW_BUF_LONG">
        <baseType>
          <array>
            <dimension lower="0" upper="NETWORK_BUFFER_LONG_SIZE" />
            <baseType>
              <BYTE />
            </baseType>
          </array>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>459cefe9-8500-4656-9890-de4f7160131e</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="NW_BUF_SHORT">
        <baseType>
          <array>
            <dimension lower="0" upper="NETWORK_BUFFER_SHORT_SIZE" />
            <baseType>
              <BYTE />
            </baseType>
          </array>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d677def3-d322-4514-881d-5275c68b8ac4</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="URL">
        <baseType>
          <struct>
            <variable name="PROTOCOL">
              <type>
                <string length="10" />
              </type>
            </variable>
            <variable name="USER">
              <type>
                <string length="32" />
              </type>
            </variable>
            <variable name="PASSWORD">
              <type>
                <string length="32" />
              </type>
            </variable>
            <variable name="DOMAIN">
              <type>
                <string length="80" />
              </type>
            </variable>
            <variable name="PORT">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="PATH">
              <type>
                <string length="80" />
              </type>
            </variable>
            <variable name="QUERY">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="ANCHOR">
              <type>
                <string length="40" />
              </type>
            </variable>
            <variable name="HEADER">
              <type>
                <string length="160" />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>97caed5a-93a6-4dec-b8e8-bcec906b02d3</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="VMAP_DATA">
        <baseType>
          <struct>
            <variable name="FC">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="V_ADR">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="V_SIZE">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="P_ADR">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="TIME_OUT">
              <type>
                <TIME />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>6b21cebf-c48b-493e-bf16-68c7ff2f3379</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="XML_CONTROL">
        <baseType>
          <struct>
            <variable name="COMMAND">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="WATCHDOG">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="START_POS">
              <type>
                <UINT />
              </type>
            </variable>
            <variable name="STOP_POS">
              <type>
                <UINT />
              </type>
            </variable>
            <variable name="COUNT">
              <type>
                <UINT />
              </type>
            </variable>
            <variable name="TYP">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="LEVEL">
              <type>
                <UINT />
              </type>
            </variable>
            <variable name="PATH">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="ELEMENT">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="ATTRIBUTE">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="VALUE">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="BLOCK1_START">
              <type>
                <UINT />
              </type>
            </variable>
            <variable name="BLOCK1_STOP">
              <type>
                <UINT />
              </type>
            </variable>
            <variable name="BLOCK2_START">
              <type>
                <UINT />
              </type>
            </variable>
            <variable name="BLOCK2_STOP">
              <type>
                <UINT />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ba431d50-a0ef-4575-86d7-3f74f43f1f5a</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="us_TN_INPUT_CONTROL">
        <baseType>
          <struct>
            <variable name="bo_Enable">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Bearbeitung freigeben/sperren </xhtml>
              </documentation>
            </variable>
            <variable name="bo_Update_all">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> All Elemente neu zeichnen </xhtml>
              </documentation>
            </variable>
            <variable name="bo_Reset_Fokus">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Fokus auf 1. Element setzen </xhtml>
              </documentation>
            </variable>
            <variable name="in_Focus_at">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Controlelement mit aktivem Fokus </xhtml>
              </documentation>
            </variable>
            <variable name="in_Count">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Anzahl der benutzen Control-Elemente </xhtml>
              </documentation>
            </variable>
            <variable name="in_ToolTip_X">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Tooltip Text X-Offset </xhtml>
              </documentation>
            </variable>
            <variable name="in_ToolTip_Y">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Tooltip Text Y-Offset </xhtml>
              </documentation>
            </variable>
            <variable name="by_ToolTip_Attr">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Tooltip Text Attribute </xhtml>
              </documentation>
            </variable>
            <variable name="in_ToolTip_Size">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Tooltip Text länge </xhtml>
              </documentation>
            </variable>
            <variable name="usa_TN_INPUT_CONTROL_DATA">
              <type>
                <array>
                  <dimension lower="1" upper="20" />
                  <baseType>
                    <derived name="us_TN_INPUT_CONTROL_DATA" />
                  </baseType>
                </array>
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>7fce2af5-de19-4be6-9cb7-d9e1d583e843</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="us_TN_INPUT_CONTROL_DATA">
        <baseType>
          <struct>
            <variable name="by_Input_Exten_Code">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="by_Input_ASCII_Code">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="bo_Input_ASCII_IsNum">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="in_Title_X_Offset">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Title Text X-Offset </xhtml>
              </documentation>
            </variable>
            <variable name="in_Title_Y_Offset">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Title Text Y-Offset </xhtml>
              </documentation>
            </variable>
            <variable name="by_Title_Attr">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Title Text Attribute </xhtml>
              </documentation>
            </variable>
            <variable name="st_Title_String">
              <type>
                <string />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Title Text String </xhtml>
              </documentation>
            </variable>
            <variable name="in_Cursor_X">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> aktuelle Cursor X-Position </xhtml>
              </documentation>
            </variable>
            <variable name="in_Cursor_Y">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> aktuelle Cursor Y-Position </xhtml>
              </documentation>
            </variable>
            <variable name="in_Type">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Type des Elements </xhtml>
              </documentation>
            </variable>
            <variable name="in_X">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Element X-Position </xhtml>
              </documentation>
            </variable>
            <variable name="in_Y">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Element Y-Position </xhtml>
              </documentation>
            </variable>
            <variable name="in_Cursor_Pos">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> aktuelle Cursorposition </xhtml>
              </documentation>
            </variable>
            <variable name="by_Attr_mF">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Text Attribute mit Fokus </xhtml>
              </documentation>
            </variable>
            <variable name="by_Attr_oF">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Text Attribute ohne Fokus </xhtml>
              </documentation>
            </variable>
            <variable name="in_selected">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Text Item wurde ausgewählt </xhtml>
              </documentation>
            </variable>
            <variable name="st_Input_Mask">
              <type>
                <string />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Text Eingabemaske </xhtml>
              </documentation>
            </variable>
            <variable name="st_Input_Data">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Text aktuelle Eingabedaten </xhtml>
              </documentation>
            </variable>
            <variable name="st_Input_String">
              <type>
                <string />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Text Kopie nach Return-Taste </xhtml>
              </documentation>
            </variable>
            <variable name="st_Input_ToolTip">
              <type>
                <string />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Text ToolTip (Eingabeinformation) </xhtml>
              </documentation>
            </variable>
            <variable name="in_Input_Option">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Text Ausgabe-Optionen </xhtml>
              </documentation>
            </variable>
            <variable name="bo_Input_Entered">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> RETURN-Taste wurde betätigt </xhtml>
              </documentation>
            </variable>
            <variable name="bo_Input_Hidden">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Text versteckete Eingabe mit '*' </xhtml>
              </documentation>
            </variable>
            <variable name="bo_Input_Only_Num">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Text nur Nummerneingabe zulassen </xhtml>
              </documentation>
            </variable>
            <variable name="bo_Focus">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Element besitzt den Fokus </xhtml>
              </documentation>
            </variable>
            <variable name="bo_Update_Input">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Element wegen Benutzereingabe neuzeichnen </xhtml>
              </documentation>
            </variable>
            <variable name="bo_Update_All">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Element komplett neuzeichnen </xhtml>
              </documentation>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>676db130-462f-474b-8f3d-e398db6ed5f7</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="us_TN_MENU">
        <baseType>
          <struct>
            <variable name="st_Menu_Text">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> X Menue Texte </xhtml>
              </documentation>
            </variable>
            <variable name="in_Menu_E_Count">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Menue Elemente Anzahl </xhtml>
              </documentation>
            </variable>
            <variable name="in_Y">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Menue Zeilennummer  Y-Position </xhtml>
              </documentation>
            </variable>
            <variable name="in_X">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Menue Spaltennummer X-Position </xhtml>
              </documentation>
            </variable>
            <variable name="by_Attr_mF">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Text Attribute mit Fokus </xhtml>
              </documentation>
            </variable>
            <variable name="by_Attr_oF">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Text Attribute ohne Fokus </xhtml>
              </documentation>
            </variable>
            <variable name="in_X_SM_new">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> neue Sub-Menu X-Position </xhtml>
              </documentation>
            </variable>
            <variable name="in_Y_SM_new">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> neue Sub-Menu Y-Position </xhtml>
              </documentation>
            </variable>
            <variable name="in_X_SM_old">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> alte Sub-Menu X-Position </xhtml>
              </documentation>
            </variable>
            <variable name="in_Y_SM_old">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> alte Sub-Menu Y-Position </xhtml>
              </documentation>
            </variable>
            <variable name="in_Cur_Menu_Item">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> aktuelles Haupt-Menue </xhtml>
              </documentation>
            </variable>
            <variable name="in_Cur_Sub_Item">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> aktuelles Sub-Menue </xhtml>
              </documentation>
            </variable>
            <variable name="in_State">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">   Menu status   </xhtml>
              </documentation>
            </variable>
            <variable name="in_Menu_Selected">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> X Menu-Item mit Enter angewwählt </xhtml>
              </documentation>
            </variable>
            <variable name="bo_Create">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> X Menu erzeugen </xhtml>
              </documentation>
            </variable>
            <variable name="bo_Destroy">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> X Menu entfernen </xhtml>
              </documentation>
            </variable>
            <variable name="bo_Update">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> X Menu updaten </xhtml>
              </documentation>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>a73d2916-fc68-4e11-9430-b5b6928947ee</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="us_TN_MENU_POPUP">
        <baseType>
          <struct>
            <variable name="st_Menu_Text">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> X Menue Texte </xhtml>
              </documentation>
            </variable>
            <variable name="in_Menu_E_Count">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Menue Elemente Anzahl </xhtml>
              </documentation>
            </variable>
            <variable name="in_X">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> X Menue X-Position </xhtml>
              </documentation>
            </variable>
            <variable name="in_Y">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> X Menue Y-Position </xhtml>
              </documentation>
            </variable>
            <variable name="in_Cols">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Menue Spaltenanzahl </xhtml>
              </documentation>
            </variable>
            <variable name="in_Rows">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Menue Zeilenanzahl </xhtml>
              </documentation>
            </variable>
            <variable name="in_Cur_Item">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> X aktuelles Sub-Menue </xhtml>
              </documentation>
            </variable>
            <variable name="by_Attr_mF">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> X Text Attribute mit Fokus	</xhtml>
              </documentation>
            </variable>
            <variable name="by_Attr_oF">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> X Text Attribute ohne Fokus </xhtml>
              </documentation>
            </variable>
            <variable name="by_Input_Exten_Code">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> X Tastencode: Sondertasten </xhtml>
              </documentation>
            </variable>
            <variable name="bo_Create">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> X Popup-Menu erzeugen </xhtml>
              </documentation>
            </variable>
            <variable name="bo_Destroy">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> X Popup-Menu entfernen </xhtml>
              </documentation>
            </variable>
            <variable name="bo_Update">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> X Popup-Menu updaten </xhtml>
              </documentation>
            </variable>
            <variable name="bo_Activ">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">   Popup-Menu ist aktiv </xhtml>
              </documentation>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d65df1de-c2e8-4986-ad53-8ec8a45cd10e</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="us_TN_SCREEN">
        <baseType>
          <struct>
            <variable name="bya_CHAR">
              <type>
                <array>
                  <dimension lower="0" upper="1919" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="bya_COLOR">
              <type>
                <array>
                  <dimension lower="0" upper="1919" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="bya_BACKUP">
              <type>
                <array>
                  <dimension lower="0" upper="1919" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="bya_Line_Update">
              <type>
                <array>
                  <dimension lower="0" upper="23" />
                  <baseType>
                    <BOOL />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="by_Input_Exten_Code">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="by_Input_ASCII_Code">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="bo_Input_ASCII_IsNum">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="in_Page_Number">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> aktive Seiten-Nr. </xhtml>
              </documentation>
            </variable>
            <variable name="in_Cursor_X">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Cursor X-Position </xhtml>
              </documentation>
            </variable>
            <variable name="in_Cursor_Y">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Cursor Y-Position </xhtml>
              </documentation>
            </variable>
            <variable name="in_EOS_Offset">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> End of String Offset </xhtml>
              </documentation>
            </variable>
            <variable name="by_Clear_Screen_Attr">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Clear-Screen Attr </xhtml>
              </documentation>
            </variable>
            <variable name="bo_Clear_Screen">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Clear-Screen auslösen </xhtml>
              </documentation>
            </variable>
            <variable name="bo_Modal_Dialog">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Modaler Dialog ist aktiv </xhtml>
              </documentation>
            </variable>
            <variable name="bo_Menue_Bar_Dialog">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Menue Dialog ist aktiv </xhtml>
              </documentation>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>42f503df-df63-4e27-b486-4b1ccbd2c508</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="WORLD_WEATHER_CUR">
        <baseType>
          <struct>
            <variable name="OBSERVATION_TIME">
              <type>
                <string length="8" />
              </type>
            </variable>
            <variable name="TEMP_C">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="WEATHER_CODE">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="WEATHER_DESC">
              <type>
                <string length="60" />
              </type>
            </variable>
            <variable name="WEATHER_ICON">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="WIND_SPEED_MILES">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="WIND_SPEED_KMPH">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="WIND_DIR_DEGREE">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="WIND_DIR16POINT">
              <type>
                <string length="3" />
              </type>
            </variable>
            <variable name="PRECIPMM">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="HUMIDITY">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="VISIBILITY">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="PRESSURE">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="CLOUDOVER">
              <type>
                <INT />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>72219dd3-24d8-4fe0-a14e-2e460c230760</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="WORLD_WEATHER_DATA">
        <baseType>
          <struct>
            <variable name="CUR">
              <type>
                <derived name="WORLD_WEATHER_CUR" />
              </type>
            </variable>
            <variable name="DAY">
              <type>
                <array>
                  <dimension lower="0" upper="4" />
                  <baseType>
                    <derived name="WORLD_WEATHER_DAY" />
                  </baseType>
                </array>
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>139998c4-22c9-414e-9f3d-b21cb86063b9</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="WORLD_WEATHER_DAY">
        <baseType>
          <struct>
            <variable name="DATE_OF_DAY">
              <type>
                <string length="10" />
              </type>
            </variable>
            <variable name="TEMP_MAX_C">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="TEMP_MAX_F">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="TEMP_MIN_C">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="TEMP_MIN_F">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="WIND_SPEED_MILES">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="WIND_SPEED_KMPH">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="WIND_DIR_DEGREE">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="WIND_DIR16POINT">
              <type>
                <string length="3" />
              </type>
            </variable>
            <variable name="WEATHER_CODE">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="WEATHER_DESC">
              <type>
                <string length="60" />
              </type>
            </variable>
            <variable name="WEATHER_ICON">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="PRECIPMM">
              <type>
                <REAL />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>da87c426-77b2-4aa0-b547-a71d04f4ef09</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="YAHOO_WEATHER_DATA">
        <baseType>
          <struct>
            <variable name="LOCATION_CITY">
              <type>
                <string length="40" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> THE LOCATION OF THIS FORECAST: CITY: CITY NAME  </xhtml>
              </documentation>
            </variable>
            <variable name="LOCATION_REGION">
              <type>
                <string length="20" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> THE LOCATION OF THIS FORECAST: REGION: STATE, TERRITORY, OR REGION, IF GIVEN </xhtml>
              </documentation>
            </variable>
            <variable name="LOCATION_COUNTRY">
              <type>
                <string length="20" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> THE LOCATION OF THIS FORECAST: COUNTRY: TWO-CHARACTER COUNTRY CODE </xhtml>
              </documentation>
            </variable>
            <variable name="UNIT_TEMPERATURE">
              <type>
                <string length="1" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> TEMPERATURE: DEGREE UNITS, F FOR FAHRENHEIT OR C FOR CELSIUS </xhtml>
              </documentation>
            </variable>
            <variable name="UNIT_DISTANCE">
              <type>
                <string length="2" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> DISTANCE: UNITS FOR DISTANCE, MI FOR MILES OR KM FOR KILOMETERS </xhtml>
              </documentation>
            </variable>
            <variable name="UNIT_PRESSURE">
              <type>
                <string length="2" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> PRESSURE: UNITS OF BAROMETRIC PRESSURE, IN FOR POUNDS PER SQUARE INCH OR MB FOR MILLIBARS </xhtml>
              </documentation>
            </variable>
            <variable name="UNIT_SPEED">
              <type>
                <string length="4" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> SPEED: UNITS OF SPEED, MPH FOR MILES PER HOUR OR KPH FOR KILOMETERS PER HOUR </xhtml>
              </documentation>
            </variable>
            <variable name="WIND_CHILL">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> FORECAST INFORMATION ABOUT WIND CHILL IN DEGREES </xhtml>
              </documentation>
            </variable>
            <variable name="WIND_DIRECTION">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> FORECAST INFORMATION ABOUT WIND DIRECTION, IN DEGREES </xhtml>
              </documentation>
            </variable>
            <variable name="WIND_SPEED">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> FORECAST INFORMATION ABOUT WIND SPEED, IN THE UNITS (MPH OR KPH)</xhtml>
              </documentation>
            </variable>
            <variable name="ATMOSPHERE_HUMIDITY">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> FORECAST INFORMATION ABOUT CURRENT ATMOSPHERIC HUMIDITY: HUMIDITY, IN PERCENT  </xhtml>
              </documentation>
            </variable>
            <variable name="ATMOSPHERE_PRESSURE">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> FORECAST INFORMATION ABOUT CURRENT ATMOSPHERIC PRESSURE: BAROMETRIC PRESSURE, IN THE UNITS (IN OR MB) </xhtml>
              </documentation>
            </variable>
            <variable name="ATMOSPHERE_VISIBILITY">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> FORECAST INFORMATION ABOUT CURRENT ATMOSPHERIC VISIBILITY, IN THE UNITS (MI OR KM) </xhtml>
              </documentation>
            </variable>
            <variable name="ATMOSPHERE_RISING">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> FORECAST INFORMATION ABOUT RISING: STATE OF THE BAROMETRIC PRESSURE: STEADY (0), RISING (1), OR FALLING (2). (INTEGER: 0, 1, 2) </xhtml>
              </documentation>
            </variable>
            <variable name="ASTRONOMY_SUNRISE">
              <type>
                <string length="10" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> SUNRISE: TODAY'S SUNRISE TIME. THE TIME IS A STRING IN A LOCAL TIME FORMAT OF "H:MM AM/PM" </xhtml>
              </documentation>
            </variable>
            <variable name="ASTRONOMY_SUNSET">
              <type>
                <string length="10" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> SUNSET: TODAY'S SUNSET TIME. THE TIME IS A STRING IN A LOCAL TIME FORMAT OF "H:MM AM/PM", </xhtml>
              </documentation>
            </variable>
            <variable name="GEO_LATITUDE">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> THE LATITUDE OF THE LOCATION </xhtml>
              </documentation>
            </variable>
            <variable name="GEO_LONGITUDE">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> THE LONGITUDE OF THE LOCATION </xhtml>
              </documentation>
            </variable>
            <variable name="CUR_CONDITIONS_TEMP">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> THE CURRENT WEATHER CONDITIONS: TEMP: THE CURRENT TEMPERATURE, IN THE UNITS (F OR C) </xhtml>
              </documentation>
            </variable>
            <variable name="CUR_CONDITIONS_TEXT">
              <type>
                <string length="40" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> THE CURRENT WEATHER CONDITIONS: TEXT: A TEXTUAL DESCRIPTION OF CONDITIONS </xhtml>
              </documentation>
            </variable>
            <variable name="CUR_CONDITIONS_CODE">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> THE CURRENT WEATHER CONDITIONS: CODE: THE CONDITION CODE FOR THIS FORECAST </xhtml>
              </documentation>
            </variable>
            <variable name="CUR_CONDITIONS_ICON">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> THE CURRENT WEATHER CONDITIONS: ICON: THE CONDITION ICON FOR THIS FORECAST </xhtml>
              </documentation>
            </variable>
            <variable name="FORECAST_TODAY_LOW_TEMP">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> THE FORECAST TODAY WEATHER CONDITIONS: THE FORECASTED LOW TEMPERATURE FOR THIS DAY IN THE UNITS (F OR C) </xhtml>
              </documentation>
            </variable>
            <variable name="FORECAST_TODAY_HIGH_TEMP">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> THE FORECAST TODAY WEATHER CONDITIONS: THE FORECASTED HIGH TEMPERATURE FOR THIS DAY IN THE UNITS (F OR C) </xhtml>
              </documentation>
            </variable>
            <variable name="FORECAST_TODAY_TEXT">
              <type>
                <string length="40" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> THE FORECAST TODAY WEATHER CONDITIONS: TEXT: A TEXTUAL DESCRIPTION OF CONDITIONS </xhtml>
              </documentation>
            </variable>
            <variable name="FORECAST_TODAY_CODE">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> THE CURRENT WEATHER CONDITIONS: CODE: THE CONDITION CODE FOR THIS FORECAST </xhtml>
              </documentation>
            </variable>
            <variable name="FORECAST_TODAY_ICON">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> THE CURRENT WEATHER CONDITIONS: ICON: THE CONDITION ICON FOR THIS FORECAST </xhtml>
              </documentation>
            </variable>
            <variable name="FORECAST_TODAY_DATE_LONG">
              <type>
                <string length="20" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> THE CURRENT WEATHER CONDITIONS: DATE: DATE OF THE DAY </xhtml>
              </documentation>
            </variable>
            <variable name="FORECAST_DAY">
              <type>
                <array>
                  <dimension lower="1" upper="9" />
                  <baseType>
                    <derived name="YAHOO_WEATHER_FORECAST_DAY" />
                  </baseType>
                </array>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> THE CURRENT WEATHER DAYS ARRAY </xhtml>
              </documentation>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ed9b0aa4-3582-42a4-ae51-42dfd2f45081</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="YAHOO_WEATHER_FORECAST_DAY">
        <baseType>
          <struct>
            <variable name="LOW_TEMP">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> THE FORECAST WEATHER CONDITIONS: THE FORECASTED LOW TEMPERATURE FOR THIS DAY IN THE UNITS (F OR C) </xhtml>
              </documentation>
            </variable>
            <variable name="HIGH_TEMP">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> THE FORECAST WEATHER CONDITIONS: THE FORECASTED HIGH TEMPERATURE FOR THIS DAY IN THE UNITS (F OR C) </xhtml>
              </documentation>
            </variable>
            <variable name="TEXT">
              <type>
                <string length="40" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> THE FORECAST WEATHER CONDITIONS: TEXT: A TEXTUAL DESCRIPTION OF CONDITIONS </xhtml>
              </documentation>
            </variable>
            <variable name="DATE_LONG">
              <type>
                <string length="20" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> THE FORECAST WEATHER CONDITIONS: DATE: DATE OF THE DAY </xhtml>
              </documentation>
            </variable>
            <variable name="CODE">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> THE FORECAST WEATHER CONDITIONS: CODE: THE CONDITION CODE FOR THIS FORECAST </xhtml>
              </documentation>
            </variable>
            <variable name="ICON">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> THE FORECAST WEATHER CONDITIONS: ICON: THE CONDITION ICON FOR THIS FORECAST </xhtml>
              </documentation>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>fa54cec4-fc40-4a5f-8d0e-97dc680d7054</ObjectId>
          </data>
        </addData>
      </dataType>
    </dataTypes>
    <pous>
      <pou name="BASE64_DECODE_STR" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="RUN">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="DONE">
              <type>
                <BOOL />
              </type>
            </variable>
          </outputVars>
          <inOutVars>
            <variable name="STR1">
              <type>
                <string length="192" />
              </type>
            </variable>
            <variable name="STR2">
              <type>
                <string length="144" />
              </type>
            </variable>
          </inOutVars>
          <localVars>
            <variable name="BASE64_DECODE_STREAM">
              <type>
                <derived name="BASE64_DECODE_STREAM" />
              </type>
            </variable>
            <variable name="run_last">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="buf1">
              <type>
                <array>
                  <dimension lower="0" upper="63" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="buf2">
              <type>
                <array>
                  <dimension lower="0" upper="47" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="mode">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="size1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="size2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="end">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="pos">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE mode OF
0:	IF RUN AND NOT run_last THEN
		DONE := FALSE;
		mode := 1;
		end := LEN(STR1);
		pos := 0;
		STR2 := '';
	END_IF;
1:
	size1 := MIN(48,end - pos);
	IF size1 &gt; 0 THEN
		OSCAT_BASIC._STRING_TO_BUFFER(STR:=MID(STR1, size1, pos + 1), POS:=0, PT:=ADR(buf1), SIZE:=SIZEOF(buf1));
		BASE64_DECODE_STREAM(BUF1:=buf1 ,BUF2:=buf2 ,SIZE1:=size1 ,SIZE2=&gt;size2);
		STR2 := CONCAT(STR2,OSCAT_BASIC.BUFFER_TO_STRING(PT:=ADR(buf2), SIZE:=SIZEOF(buf2), START:=0, STOP:=size2 - 1));
	ELSE
		mode := 0;
		DONE := TRUE;
	END_IF;
	pos := pos + size1;
END_CASE;

run_last := RUN;

(* revision history

ks	6. dec. 2009 rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>baea567b-2a29-43e1-bfeb-5cdf6418ae1f</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="BASE64_DECODE_STREAM" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="BUF1">
              <type>
                <array>
                  <dimension lower="0" upper="63" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="BUF2">
              <type>
                <array>
                  <dimension lower="0" upper="47" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="SIZE1">
              <type>
                <INT />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="SIZE2">
              <type>
                <INT />
              </type>
            </variable>
          </outputVars>
          <tempVars>
            <variable name="a">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="b">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="o">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="off">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="i1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="i2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="c">
              <type>
                <INT />
              </type>
            </variable>
          </tempVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF SIZE1 &lt;= 0 THEN SIZE2 := 0; RETURN; END_IF;
c := SIZE1 - 1;
i2 := 0;
a := 0;
b := 0;
FOR i1 := 0 TO c DO
	o := BUF1[i1];
	IF o = 61  (* = *) THEN	EXIT;
	ELSIF o &gt; 96 (* a-z *) THEN off := 71;
	ELSIF o &gt; 64 (* A-Z *) THEN off := 65;
	ELSIF o &gt; 47 (* 0-9 *) THEN off := -4;
	ELSIF o = 43 (* + *) THEN off := -19;
	ELSIF o = 47 (* / *) THEN off := -16;
	END_IF;
	b := SHL(b,6) OR INT_TO_BYTE(o - off);
	a := a + 6;
	IF a &gt;= 8 THEN
		a := a - 8;
		BUF2[i2] := WORD_TO_BYTE(SHR(b,a));
		i2 := i2 + 1;
		b := b AND NOT SHL(WORD#16#FFFF,a);
	END_IF;
END_FOR;
SIZE2 := i2;

(* revision history

ks	6. dec. 2009 rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e2d7b89f-c83b-4831-9d0b-e5a40cdddec1</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="BASE64_ENCODE_STR" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="RUN">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="DONE">
              <type>
                <BOOL />
              </type>
            </variable>
          </outputVars>
          <inOutVars>
            <variable name="STR1">
              <type>
                <string length="144" />
              </type>
            </variable>
            <variable name="STR2">
              <type>
                <string length="192" />
              </type>
            </variable>
          </inOutVars>
          <localVars>
            <variable name="BASE64_ENCODE_STREAM">
              <type>
                <derived name="BASE64_ENCODE_STREAM" />
              </type>
            </variable>
            <variable name="run_last">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="buf1">
              <type>
                <array>
                  <dimension lower="0" upper="47" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="buf2">
              <type>
                <array>
                  <dimension lower="0" upper="63" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="mode">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="size1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="size2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="end">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="pos">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE mode OF
0:	IF RUN AND NOT run_last THEN
		DONE := FALSE;
		mode := 1;
		end := LEN(STR1);
		pos := 0;
		STR2 := '';
	END_IF;
1:
	size1 := MIN(48,end - pos);
	IF size1 &gt; 0 THEN
		OSCAT_BASIC._STRING_TO_BUFFER(STR:=MID(STR1, size1, pos + 1), POS:=0, PT:=ADR(buf1), SIZE:=SIZEOF(buf1));
		BASE64_ENCODE_STREAM(BUF1:=buf1 ,BUF2:=buf2 ,SIZE1:=size1 ,SIZE2=&gt;size2);
		STR2 := CONCAT(STR2,OSCAT_BASIC.BUFFER_TO_STRING(PT:=ADR(buf2), SIZE:=SIZEOF(buf2), START:=0, STOP:=size2 - 1));
	ELSE
		mode := 0;
		DONE := TRUE;
	END_IF;
	pos := pos + size1;
END_CASE;

run_last := RUN;

(* revision history

ks	6. dec. 2009 rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>4ff8fd1d-ef9d-41da-b163-90a1b729585b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="BASE64_ENCODE_STREAM" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="BUF1">
              <type>
                <array>
                  <dimension lower="0" upper="47" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="BUF2">
              <type>
                <array>
                  <dimension lower="0" upper="63" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="SIZE1">
              <type>
                <INT />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="SIZE2">
              <type>
                <INT />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="a">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="b">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="i">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="i2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="i3">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="c">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="BASE64">
              <type>
                <string length="64" />
              </type>
              <initialValue>
                <simpleValue value="'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF SIZE1 &lt;= 0 THEN
	SIZE2 := 0;
	RETURN;
END_IF;
c := SIZE1 - 1;
i2 := 0;
a := 0;
b := 0;
FOR i := 0 TO c DO
	b := SHL(b,8) OR BUF1[i];
	a := a + 8;
	WHILE a &gt;= 6 DO
		a := a - 6;
		buf2[i2] := OSCAT_BASIC.CODE(BASE64,WORD_TO_INT(SHR(b,a)) + 1);
		i2 := i2 + 1;
		b := b AND NOT SHL(WORD#16#FFFF,a);
	END_WHILE;
END_FOR;
IF a &gt; 0 THEN
	buf2[i2] := OSCAT_BASIC.CODE(BASE64,WORD_TO_INT(SHL(b,6 - a)) + 1);
	i2 := i2 + 1;
	i3 := i2 + (NOT INT_TO_WORD(i2) AND 2#11);
	FOR i := i2 TO i3 DO
		buf2[i] := 61;
	END_FOR;
	SIZE2 := i3 + 1;
ELSE
	SIZE2 := i2;
END_IF;

(* revision history

ks	6. dec. 2009 rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>001b4688-06b6-4afe-874b-1e8637ab888b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="HTML_DECODE" pouType="function">
        <interface>
          <returnType>
            <string length="OSCAT_BASIC.STRING_LENGTH" />
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="pos">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="end">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="tmp">
              <type>
                <string length="10" />
              </type>
            </variable>
            <variable name="code">
              <type>
                <string length="1" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">HTML_DECODE := IN;

(* docode characters encoded by character position *)
pos := FIND(HTML_DECODE, '&amp;');
WHILE pos &gt; 0 DO
	tmp := MID(HTML_DECODE, 2, pos + 1);
	IF tmp = '#x' OR tmp = '#X' THEN
		(* hexadecimal representation found *)
		tmp := MID(HTML_DECODE, 10, pos + 3);
		end := FIND(tmp, ';');
		CODE := OSCAT_BASIC.CHR_TO_STRING(DWORD_TO_BYTE(OSCAT_BASIC.HEX_TO_DWORD(LEFT(tmp, end - 1))));
		HTML_DECODE := REPLACE(HTML_DECODE, CODE, end + 3, pos);
	ELSIF LEFT(tmp,1) = '#' THEN
		tmp := MID(HTML_DECODE, 10, pos + 2);
		end := FIND(tmp, ';');
		CODE := OSCAT_BASIC.CHR_TO_STRING(INT_TO_BYTE(STRING_TO_INT(LEFT(tmp, end - 1))));
		HTML_DECODE := REPLACE(HTML_DECODE, CODE, end + 2, pos);
	ELSE
		(* replace all named characters *)
		tmp := MID(HTML_DECODE, 10, pos + 1);
		end := FIND(tmp, ';');
		CODE := OSCAT_BASIC.CHR_TO_STRING(OSCAT_BASIC.CHARCODE(LEFT(tmp, end - 1)));
		HTML_DECODE := REPLACE(HTML_DECODE, CODE, end + 1, pos);
	END_IF;
	(* search for next occurence of encoded characters *)
	pos := OSCAT_BASIC.FINDP(HTML_DECODE, '&amp;', pos + 1);
END_WHILE;



(* revision history
hm	3. mai. 2008	rev 1.0
	original version

hm	16. jun. 2008	rev 1.1
	changed nested call of replace for better compatibility

hm	17. dec. 2008	rev 1.2
	changed function CHR to CHR_TO_STRING

hm	10. may. 2010	rev 1.3
	stringlength 250

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>55a6fe2d-3b93-4d14-92c8-8b8fb79e0103</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="HTML_ENCODE" pouType="function">
        <interface>
          <returnType>
            <string length="OSCAT_BASIC.STRING_LENGTH" />
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="M">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="pt_in">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="1" upper="255" />
                      <baseType>
                        <BYTE />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pt_out">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="1" upper="256" />
                      <baseType>
                        <BYTE />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pos_in">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="pos_out">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="stop">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="B">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="tmp">
              <type>
                <string length="10" />
              </type>
            </variable>
            <variable name="i">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">pt_in  := ADR(in);
pt_out := ADR(HTML_ENCODE);

(* scan the input string and convert unallowed characters *)
pos_in := 1;
stop := LEN(in);
FOR pos_out := 1 TO 250 DO
	IF pos_in &gt; stop THEN EXIT; END_IF;
	B := pt_in^[pos_in];
	CASE BYTE_TO_INT(B) OF
		34: (* " detected *)
			IF pos_out &gt; OSCAT_BASIC.STRING_LENGTH - 6 THEN EXIT; END_IF;
			pt_out^[pos_out] := 38;
			pos_out := pos_out + 1;
			pt_out^[pos_out] := 113;
			pos_out := pos_out + 1;
			pt_out^[pos_out] := 117;
			pos_out := pos_out + 1;
			pt_out^[pos_out] := 111;
			pos_out := pos_out + 1;
			pt_out^[pos_out] := 116;
			pos_out := pos_out + 1;
			pt_out^[pos_out] := 59;
		38: (* &amp; detected *)
			IF pos_out &gt; OSCAT_BASIC.STRING_LENGTH - 5 THEN EXIT; END_IF;
			pt_out^[pos_out] := 38;
			pos_out := pos_out + 1;
			pt_out^[pos_out] := 97;
			pos_out := pos_out + 1;
			pt_out^[pos_out] := 109;
			pos_out := pos_out + 1;
			pt_out^[pos_out] := 112;
			pos_out := pos_out + 1;
			pt_out^[pos_out] := 59;
		60: (* &lt; detected *)
			IF pos_out &gt; OSCAT_BASIC.STRING_LENGTH - 4 THEN EXIT; END_IF;
			pt_out^[pos_out] := 38;
			pos_out := pos_out + 1;
			pt_out^[pos_out] := 108;
			pos_out := pos_out + 1;
			pt_out^[pos_out] := 116;
			pos_out := pos_out + 1;
			pt_out^[pos_out] := 59;
		62: (* &gt; detected *)
			IF pos_out &gt; OSCAT_BASIC.STRING_LENGTH - 4 THEN EXIT; END_IF;
			pt_out^[pos_out] := 38;
			pos_out := pos_out + 1;
			pt_out^[pos_out] := 103;
			pos_out := pos_out + 1;
			pt_out^[pos_out] := 116;
			pos_out := pos_out + 1;
			pt_out^[pos_out] := 59;
	ELSE
		IF M AND B &gt; 127 THEN
			tmp := OSCAT_BASIC.CHARNAME(B);
			(* exit if output string has not enough space *)
			IF pos_out + LEN(tmp) + 2 &lt;= 250 THEN
				pt_out^[pos_out] := 38;
				pos_out := pos_out + 1;
				FOR i := 1 TO LEN(tmp) DO
					pt_out^[pos_out] := OSCAT_BASIC.CODE(tmp, i);
					pos_out := pos_out + 1;
				END_FOR;
				pt_out^[pos_out] := 59;
			END_IF;
		ELSE
			pt_out^[pos_out] := B;
		END_IF;
	END_CASE;
	(* increment in by 1 *)
	pos_in := pos_in + 1;
END_FOR;

(* terminate the output string *)
pt_out^[pos_out] := 0;



(* revision history
hm		3. mai. 2008	rev 1.0
	original version

hm		10. mai. 2008	rev 1.1
	stringlength 250
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>c1521833-4d54-46bf-ab00-5a00705a1fd2</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="IP4_CHECK" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="NIP">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="LIP">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="SM">
              <type>
                <DWORD />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IP4_CHECK := (NIP AND sm) = (LIP AND SM);


(* revision history
hm		4. mar 2008	rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>16716fa5-f2db-4f38-a79e-597513d659f8</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="IP4_DECODE" pouType="function">
        <interface>
          <returnType>
            <DWORD />
          </returnType>
          <inputVars>
            <variable name="str">
              <type>
                <string length="15" />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="pos">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">pos := FIND(str, '.');
WHILE pos &gt; 0 DO
	IP4_DECODE := SHL(IP4_DECODE,8) OR STRING_TO_DWORD(LEFT(str,pos - 1));
	str := DELETE(str, pos, 1);
	pos := FIND(str, '.');
END_WHILE;
IP4_DECODE := SHL(IP4_DECODE,8) OR STRING_TO_DWORD(str);


(* revision history
hm		29. feb 2008	rev 1.0
	original version

hm	10. mar. 2009	rev 1.1
	new algorythm
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>f26dd297-94da-49bb-969d-4f4b93d2af75</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="IP4_TO_STRING" pouType="function">
        <interface>
          <returnType>
            <string length="15" />
          </returnType>
          <inputVars>
            <variable name="IP4">
              <type>
                <DWORD />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="tmp">
              <type>
                <string length="3" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* mask bits AND INSERT AT given position *)
tmp := BYTE_TO_STRING(DWORD_TO_BYTE(IP4));
IP4_TO_STRING := CONCAT('...', tmp);
tmp := BYTE_TO_STRING(DWORD_TO_BYTE(SHR(IP4,8)));
IP4_TO_STRING := INSERT(IP4_TO_STRING, tmp, 2);
tmp := BYTE_TO_STRING(DWORD_TO_BYTE(SHR(IP4,16)));
IP4_TO_STRING := INSERT(IP4_TO_STRING, tmp, 1);
tmp := BYTE_TO_STRING(DWORD_TO_BYTE(SHR(IP4,24)));
IP4_TO_STRING := CONCAT(tmp, IP4_TO_STRING);



(* revision history
hm	22. apr 2008	rev 1.0
	original version

hm	10. mar. 2009	rev 1.1
	improved code
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>8c0ac529-584d-41c2-9973-e50e14210080</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="IS_IP4" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="str">
              <type>
                <string />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IS_IP4 := OSCAT_BASIC.COUNT_CHAR(str, 46) = 3;


(* revision history
hm	1. mar. 2008	rev 1.0
	original version

hm	10. mar. 2009	rev 1.1
	new code

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>19c37975-aa9f-45e0-a26e-fe16572ea3a2</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="IS_URLCHR" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <BYTE />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IS_URLCHR := ((IN &gt; 47) AND (IN &lt; 58)) OR ((IN &gt; 64) AND (IN &lt; 91)) OR ((IN &gt; 96) AND (IN &lt; 123)) OR (in = 126) OR (in = 95) OR (in =45) OR (in =46);


(* revision history
hm		27. apr. 2008	rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>843d9cc5-7252-40de-acb7-f277a2ea5aa5</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="MD5_AUX" pouType="function">
        <interface>
          <returnType>
            <DWORD />
          </returnType>
          <inputVars>
            <variable name="N">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="A">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="B">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="C">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="D">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="X">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="U">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="T">
              <type>
                <DWORD />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="w">
              <type>
                <DWORD />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE N OF
	1: w := (B AND C) OR (NOT(B) AND D);
	2: w := (B AND D) OR (C AND NOT D);
	3: w := (B XOR C XOR D);
	4: w := (C XOR (B OR  NOT(D)));
END_CASE

MD5_AUX := B + ROL(A + w + X + T,U);

(* revision history

ks	6. dec. 2009 rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>390cca02-8178-493b-b660-aeb24187c8c0</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="MD5_CRAM_AUTH" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="RUN">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="USERNAME">
              <type>
                <string length="64" />
              </type>
            </variable>
            <variable name="PASSWORD">
              <type>
                <string length="64" />
              </type>
            </variable>
            <variable name="B64_TS">
              <type>
                <string length="64" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Base64 coded ServerTimeStamp </xhtml>
              </documentation>
            </variable>
            <variable name="AUTH_KEY">
              <type>
                <string length="192" />
              </type>
            </variable>
          </inOutVars>
          <localVars>
            <variable name="BASE64_DECODE_STR">
              <type>
                <derived name="BASE64_DECODE_STR" />
              </type>
            </variable>
            <variable name="BASE64_ENCODE_STR">
              <type>
                <derived name="BASE64_ENCODE_STR" />
              </type>
            </variable>
            <variable name="MD5_STREAM">
              <type>
                <derived name="MD5_STREAM" />
              </type>
            </variable>
            <variable name="step">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="md5_mode">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="buf">
              <type>
                <array>
                  <dimension lower="0" upper="63" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="md5">
              <type>
                <array>
                  <dimension lower="0" upper="15" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="md5_first">
              <type>
                <array>
                  <dimension lower="0" upper="15" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="md5_str1">
              <type>
                <string length="64" />
              </type>
            </variable>
            <variable name="md5_str2">
              <type>
                <string length="64" />
              </type>
            </variable>
            <variable name="size">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="n1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="n2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="pos">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="b64d_run">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="b64d_done">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="b64e_run">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="b64e_done">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="str_192">
              <type>
                <string length="192" />
              </type>
            </variable>
            <variable name="str_144">
              <type>
                <string length="144" />
              </type>
            </variable>
            <variable name="xpad">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="pt">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE step OF

0:	IF RUN THEN
		step := 5;
		str_192 := B64_TS;
		b64d_run := TRUE;
	END_IF;

5: IF B64D_DONE THEN (* IPAD Zyklus *)
		b64d_run := FALSE;
		xpad := 16#36;
		md5_str1 := PASSWORD;
		md5_str2 := str_144;
		size := 64 + LEN(md5_str2);
		md5_mode := 1;
		step := 10;
	END_IF;

10: IF md5_mode = 3 THEN (* OPAD Zyklus *)
		md5_first := md5; (* md5 array vom IPAD sichern *)
		xpad := 16#5C;
		size := 64 + 16;
		md5_mode := 1;
		step := 20;
	END_IF;

20: IF md5_mode = 3 THEN
		md5_mode := 0;
		str_144 := CONCAT(USERNAME , ' ');
		str_144 := CONCAT(str_144 , MD5_TO_STRH(md5));
		b64e_run := TRUE;
		step := 30;
	END_IF;

30: IF B64E_DONE THEN
		AUTH_KEY := str_192;
		b64e_run := FALSE;
		RUN := FALSE;
		step := 0; (* alles beendet !! *)
	END_IF;

END_CASE;

(* ----------- md5 -------------- *)
CASE md5_mode OF

1:	n2 := LEN(md5_str1) - 1;
	pt := ADR(md5_str1);
	FOR n1 := 0 TO n2 DO (* string in buf kopieren *)
		buf[n1] := pt^ XOR xpad;
		pt := pt + 1;
	END_FOR;
	FOR n1 := n2 + 1 TO 63 DO (* mit ipad füllen *)
		buf[n1] := xpad;
	END_FOR;

2:	(* Data copy and Calc *)
	IF size &gt; 0 AND pos &gt;= 64 THEN
		IF step = 20 THEN
			FOR n1 := 0 TO 15 DO
				buf[n1] := md5_first[n1];
			END_FOR;
		ELSE
			n2 := LEN(md5_str2) - 1;
			pt := ADR(md5_str2);
			FOR n1 := 0 TO n2 DO (* string in buf kopieren *)
				buf[n1] := pt^;
				pt := pt + 1;
			END_FOR;
		END_IF;
	END_IF;

END_CASE;

IF md5_mode &gt; 0 THEN
	MD5_STREAM(SIZE:=size, MODE:=md5_mode, BUF:=buf, MD5:=md5, POS=&gt;pos);
END_IF;

BASE64_DECODE_STR(RUN:=b64d_run, STR1:=str_192, STR2:=str_144, DONE=&gt;b64d_done);
BASE64_ENCODE_STR(RUN:=b64e_run, STR1:=str_144, STR2:=str_192, DONE=&gt;b64e_done);

(* revision history

hm		10. mai. 2010	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b6ab01aa-c219-4434-88fe-a7bdacbbadb8</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="MD5_STR" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="RUN">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="DONE">
              <type>
                <BOOL />
              </type>
            </variable>
          </outputVars>
          <inOutVars>
            <variable name="STR">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="MD5">
              <type>
                <array>
                  <dimension lower="0" upper="15" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
          </inOutVars>
          <localVars>
            <variable name="run_last">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="MD5_STREAM">
              <type>
                <derived name="MD5_STREAM" />
              </type>
            </variable>
            <variable name="buf">
              <type>
                <array>
                  <dimension lower="0" upper="63" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="mode">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="size">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="pos">
              <type>
                <UDINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE mode OF
0:	(* Wait für Start *)
	IF RUN AND NOT run_last THEN
		DONE := FALSE;
		mode := 1; (* Initialisierung *)
		size := LEN(STR);
	END_IF;

2:	(* Data copy and Calc *)
	IF size &gt; 0 THEN
		OSCAT_BASIC._STRING_TO_BUFFER(STR:=MID(STR, UDINT_TO_INT(SIZE), UDINT_TO_INT(POS) + 1), POS:=0, PT:=ADR(buf), SIZE:=SIZEOF(buf));
	END_IF;

3:	DONE := TRUE;
	mode := 0; (* Stop *)

END_CASE;

IF mode &gt; 0 THEN
	MD5_STREAM(SIZE:=size, MODE:=mode, BUF:=buf, MD5:=MD5, POS=&gt;pos);
END_IF;

run_last := RUN;

(* revision history

ks	6. dec. 2009 rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b20ca3ca-b1a4-44c9-bc38-fa5d68a592f9</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="MD5_STREAM" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="MODE">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="BUF">
              <type>
                <array>
                  <dimension lower="0" upper="63" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="MD5">
              <type>
                <array>
                  <dimension lower="0" upper="15" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="SIZE">
              <type>
                <UDINT />
              </type>
            </variable>
          </inOutVars>
          <outputVars>
            <variable name="POS">
              <type>
                <UDINT />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="hash">
              <type>
                <array>
                  <dimension lower="0" upper="3" />
                  <baseType>
                    <DWORD />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="a">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="b">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="c">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="d">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="end">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="block">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="x">
              <type>
                <array>
                  <dimension lower="0" upper="15" />
                  <baseType>
                    <DWORD />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="n">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="n1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="z">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="pad_1">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE MODE OF

1:	(* Initialisierung der Hash-Werte *)
	hash[0] := DWORD#16#67452301;
	hash[1] := DWORD#16#EFCDAB89;
	hash[2] := DWORD#16#98BADCFE;
	hash[3] := DWORD#16#10325476;

	block := SHR(SIZE,6) + BOOL_TO_UDINT((UDINT_TO_BYTE(SIZE) AND 16#3F) &gt; 55);
	pad_1 := FALSE;
	POS := 0;
	End := SIZE;
	SIZE := MIN(64,End);
	MODE := 2;

2:	(* Fuell-Bytes anhängen *)
	FOR n := UDINT_TO_INT(SIZE) TO 63 DO
		BUF[n] := 0;
	END_FOR;

	IF SIZE &lt; 64 AND NOT pad_1 THEN
		BUF[SIZE] := 2#1000_0000;
		pad_1 := TRUE;
	END_IF;

	POS := POS + SIZE;
	SIZE := MIN(64,End - POS);

	n := 0;	(* Byte-Array in DWORD-Array umkopieren *)
	FOR n1 := 0 TO 15 DO
		x[n1] := OSCAT_BASIC.DWORD_OF_BYTE(BUF[n+3],BUF[n+2],BUF[n+1],BUF[n]); (* Little Endian Format *)
		n := n + 4;
	END_FOR;

	IF block = 0 THEN (* am Ende des letzten Blocks die Datenlänge eintragen *)
		x[14] := SHL(UDINT_TO_DWORD(End),3); (* Anzahl Datenbits im Little-Endian Format eintragen *)
		MODE := 3;
	ELSE
		block := block - 1;
	END_IF;

	a := hash[0];
	b := hash[1];
	c := hash[2];
	d := hash[3];

	a := MD5_AUX(1, a, b, c, d, X[00], 07, 16#D76AA478); (* 01 *)
	d := MD5_AUX(1, d, a, b, c, X[01], 12, 16#E8C7B756); (* 02 *)
	c := MD5_AUX(1, c, d, a, b, X[02], 17, 16#242070DB); (* 03 *)
	b := MD5_AUX(1, b, c, d, a, X[03], 22, 16#C1BDCEEE); (* 04 *)
	a := MD5_AUX(1, a, b, c, d, X[04], 07, 16#F57C0FAF); (* 05 *)
	d := MD5_AUX(1, d, a, b, c, X[05], 12, 16#4787C62A); (* 06 *)
	c := MD5_AUX(1, c, d, a, b, X[06], 17, 16#A8304613); (* 07 *)
	b := MD5_AUX(1, b, c, d, a, X[07], 22, 16#FD469501); (* 08 *)
	a := MD5_AUX(1, a, b, c, d, X[08], 07, 16#698098D8); (* 09 *)
	d := MD5_AUX(1, d, a, b, c, X[09], 12, 16#8B44F7AF); (* 10 *)
	c := MD5_AUX(1, c, d, a, b, X[10], 17, 16#FFFF5BB1); (* 11 *)
	b := MD5_AUX(1, b, c, d, a, X[11], 22, 16#895CD7BE); (* 12 *)
	a := MD5_AUX(1, a, b, c, d, X[12], 07, 16#6B901122); (* 13 *)
	d := MD5_AUX(1, d, a, b, c, X[13], 12, 16#FD987193); (* 14 *)
	c := MD5_AUX(1, c, d, a, b, X[14], 17, 16#A679438E); (* 15 *)
	b := MD5_AUX(1, b, c, d, a, X[15], 22, 16#49B40821); (* 16 *)

	a := MD5_AUX(2, a, b, c, d, X[01], 05, 16#F61E2562); (* 17 *)
	d := MD5_AUX(2, d, a, b, c, X[06], 09, 16#C040B340); (* 18 *)
	c := MD5_AUX(2, c, d, a, b, X[11], 14, 16#265E5A51); (* 19 *)
	b := MD5_AUX(2, b, c, d, a, X[00], 20, 16#E9B6C7AA); (* 20 *)
	a := MD5_AUX(2, a, b, c, d, X[05], 05, 16#D62F105D); (* 21 *)
	d := MD5_AUX(2, d, a, b, c, X[10], 09, 16#02441453); (* 22 *)
	c := MD5_AUX(2, c, d, a, b, X[15], 14, 16#D8A1E681); (* 23 *)
	b := MD5_AUX(2, b, c, d, a, X[04], 20, 16#E7D3FBC8); (* 24 *)
	a := MD5_AUX(2, a, b, c, d, X[09], 05, 16#21E1CDE6); (* 25 *)
	d := MD5_AUX(2, d, a, b, c, X[14], 09, 16#C33707D6); (* 26 *)
	c := MD5_AUX(2, c, d, a, b, X[03], 14, 16#F4D50D87); (* 27 *)
	b := MD5_AUX(2, b, c, d, a, X[08], 20, 16#455A14ED); (* 28 *)
	a := MD5_AUX(2, a, b, c, d, X[13], 05, 16#A9E3E905); (* 29 *)
	d := MD5_AUX(2, d, a, b, c, X[02], 09, 16#FCEFA3F8); (* 30 *)
	c := MD5_AUX(2, c, d, a, b, X[07], 14, 16#676F02D9); (* 31 *)
	b := MD5_AUX(2, b, c, d, a, X[12], 20, 16#8D2A4C8A); (* 32 *)

	a := MD5_AUX(3, a, b, c, d, X[05], 04, 16#FFFA3942); (* 33 *)
	d := MD5_AUX(3, d, a, b, c, X[08], 11, 16#8771F681); (* 34 *)
	c := MD5_AUX(3, c, d, a, b, X[11], 16, 16#6D9D6122); (* 35 *)
	b := MD5_AUX(3, b, c, d, a, X[14], 23, 16#FDE5380C); (* 36 *)
	a := MD5_AUX(3, a, b, c, d, X[01], 04, 16#A4BEEA44); (* 37 *)
	d := MD5_AUX(3, d, a, b, c, X[04], 11, 16#4BDECFA9); (* 38 *)
	c := MD5_AUX(3, c, d, a, b, X[07], 16, 16#F6BB4B60); (* 39 *)
	b := MD5_AUX(3, b, c, d, a, X[10], 23, 16#BEBFBC70); (* 40 *)
	a := MD5_AUX(3, a, b, c, d, X[13], 04, 16#289B7EC6); (* 41 *)
	d := MD5_AUX(3, d, a, b, c, X[00], 11, 16#EAA127FA); (* 42 *)
	c := MD5_AUX(3, c, d, a, b, X[03], 16, 16#D4EF3085); (* 43 *)
	b := MD5_AUX(3, b, c, d, a, X[06], 23, 16#04881D05); (* 44 *)
	a := MD5_AUX(3, a, b, c, d, X[09], 04, 16#D9D4D039); (* 45 *)
	d := MD5_AUX(3, d, a, b, c, X[12], 11, 16#E6DB99E5); (* 46 *)
	c := MD5_AUX(3, c, d, a, b, X[15], 16, 16#1FA27CF8); (* 47 *)
	b := MD5_AUX(3, b, c, d, a, X[02], 23, 16#C4AC5665); (* 48 *)

	a := MD5_AUX(4, a, b, c, d, X[00], 06, 16#F4292244); (* 49 *)
	d := MD5_AUX(4, d, a, b, c, X[07], 10, 16#432AFF97); (* 50 *)
	c := MD5_AUX(4, c, d, a, b, X[14], 15, 16#AB9423A7); (* 51 *)
	b := MD5_AUX(4, b, c, d, a, X[05], 21, 16#FC93A039); (* 52 *)
	a := MD5_AUX(4, a, b, c, d, X[12], 06, 16#655B59C3); (* 53 *)
	d := MD5_AUX(4, d, a, b, c, X[03], 10, 16#8F0CCC92); (* 54 *)
	c := MD5_AUX(4, c, d, a, b, X[10], 15, 16#FFEFF47D); (* 55 *)
	b := MD5_AUX(4, b, c, d, a, X[01], 21, 16#85845DD1); (* 56 *)
	a := MD5_AUX(4, a, b, c, d, X[08], 06, 16#6FA87E4F); (* 57 *)
	d := MD5_AUX(4, d, a, b, c, X[15], 10, 16#FE2CE6E0); (* 58 *)
	c := MD5_AUX(4, c, d, a, b, X[06], 15, 16#A3014314); (* 59 *)
	b := MD5_AUX(4, b, c, d, a, X[13], 21, 16#4E0811A1); (* 60 *)
	a := MD5_AUX(4, a, b, c, d, X[04], 06, 16#F7537E82); (* 61 *)
	d := MD5_AUX(4, d, a, b, c, X[11], 10, 16#BD3AF235); (* 62 *)
	c := MD5_AUX(4, c, d, a, b, X[02], 15, 16#2AD7D2BB); (* 63 *)
	b := MD5_AUX(4, b, c, d, a, X[09], 21, 16#EB86D391); (* 64 *)

	hash[0] := hash[0] + a;
	hash[1] := hash[1] + b;
	hash[2] := hash[2] + c;
	hash[3] := hash[3] + d;

END_CASE;

IF MODE = 3 THEN
	z := 0;
	FOR n := 0 TO 3 DO (* von Little-Endian auf Big-Endian format konvertieren und DWORD auf BYTE-Array *)
		FOR n1 := 0 TO 3 DO
			MD5[z] := DWORD_TO_BYTE(hash[n]);
			hash[n] := ROR(hash[n],8);
			z := z + 1;
		END_FOR;
	END_FOR;
END_IF;

(* revision history

ks	6. dec. 2009 rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e05b1d58-1ea7-4fcd-b739-713aeef3d9b7</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="MD5_TO_STRH" pouType="function">
        <interface>
          <returnType>
            <string length="32" />
          </returnType>
          <inputVars>
            <variable name="MD5">
              <type>
                <array>
                  <dimension lower="0" upper="15" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="i">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="tmp">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="pt">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">pt := ADR(MD5_TO_STRH); (* read output adress to pointer *)

FOR i := 0 TO 15 DO; (* write the 8 hex characters backwards *)
	tmp := SHR(MD5[i],4);
	PT^ := tmp + SEL(tmp &lt;= 9,87,48);
	pt := pt + 1; (* decrement the pointer *)
	tmp := MD5[i] AND 2#1111;
	PT^ := tmp + SEL(tmp &lt;= 9,87,48);
	pt := pt + 1; (* decrement the pointer *)
END_FOR;
pt^:= 0; (* write the closing byte for the string *)

(* revision history

ks	6. dec. 2009 rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>935651ad-c2f2-445f-94c1-3f9d754bbc7d</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="RC4_CRYPT_STREAM" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="MODE">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="KEY">
              <type>
                <string length="40" />
              </type>
            </variable>
            <variable name="BUF">
              <type>
                <array>
                  <dimension lower="0" upper="63" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="SIZE">
              <type>
                <UDINT />
              </type>
            </variable>
          </inOutVars>
          <outputVars>
            <variable name="POS">
              <type>
                <UDINT />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="sbox">
              <type>
                <array>
                  <dimension lower="0" upper="255" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="skey">
              <type>
                <array>
                  <dimension lower="0" upper="255" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="a">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="b">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="c">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="d">
              <type>
                <USINT />
              </type>
            </variable>
            <variable name="e">
              <type>
                <USINT />
              </type>
            </variable>
            <variable name="end">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="v">
              <type>
                <BYTE />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE MODE OF

1:	(* Initialisierung *)
	b := LEN(KEY) - 1;
	IF b &lt; 0 OR SIZE &lt; 1 THEN
		MODE := 3;
		RETURN;
	END_IF;

	FOR a := 0 TO b DO
		skey[a] := OSCAT_BASIC.CODE(KEY, a + 1);
		sbox[a] := INT_TO_BYTE(a);
	END_FOR;

	c := 0;
	FOR a := b + 1 TO 255 DO
		skey[a] := skey[c];
		sbox[a] := INT_TO_BYTE(a);
		c := c + 1;
		IF c &gt; b THEN c := 0; END_IF;
	END_FOR;

	d := 0;
	FOR a := 0 TO 255 DO
		d := d + sbox[a] + skey[a];
		v := sbox[a];
		sbox[a] := sbox[d];
		sbox[d] := v;
	END_FOR;

	POS := 0;
	end := SIZE;
	SIZE := MIN(64,end);
	d := 0;
	e := 0;
	MODE := 2;

2:	(* Daten ver/entschlüsseln *)

	b := UDINT_TO_INT(SIZE) - 1;
	FOR a := 0 TO b DO
		d := d + 1;
		e := e + sbox[d];
		v := sbox[d];
		sbox[d] := sbox[e];
		sbox[e] := v;
		v := sbox[d] + sbox[e];
		BUF[a] :=BUF[a] XOR sbox[v];
	END_FOR;

	POS := POS + SIZE;
	SIZE := MIN(64,end - POS);

	IF SIZE = 0 THEN
		MODE := 3;
	END_IF;
END_CASE;

(* revision history

ks	9. Jan. 2010 rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>24f473d3-a3fe-4280-a8b9-73bd982a4c9a</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="SHA1_STR" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="RUN">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="DONE">
              <type>
                <BOOL />
              </type>
            </variable>
          </outputVars>
          <inOutVars>
            <variable name="STR">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="SHA1">
              <type>
                <array>
                  <dimension lower="0" upper="19" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
          </inOutVars>
          <localVars>
            <variable name="run_last">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="SHA1_STREAM">
              <type>
                <derived name="SHA1_STREAM" />
              </type>
            </variable>
            <variable name="buf">
              <type>
                <array>
                  <dimension lower="0" upper="63" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="mode">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="size">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="pos">
              <type>
                <UDINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE mode OF
0:	(* Wait für Start *)
	IF RUN AND NOT run_last THEN
		DONE := FALSE;
		mode := 1; (* Initialisierung *)
		size := LEN(STR);
	END_IF;

2:	(* Data copy and Calc *)
	IF size &gt; 0 THEN
		OSCAT_BASIC._STRING_TO_BUFFER(STR:=MID(STR, UDINT_TO_INT(SIZE), UDINT_TO_INT(POS) + 1), POS:=0, PT:=ADR(buf), SIZE:=SIZEOF(buf));
	END_IF;

3:	DONE := TRUE;
	mode := 0; (* Stop *)

END_CASE;

IF mode &gt; 0 THEN
	SHA1_STREAM(SIZE:=size, MODE:=mode, BUF:=buf, SHA1:=SHA1, POS=&gt;pos);
END_IF;

run_last := RUN;

(* revision history

ks	6. dec. 2009 rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>977150fe-b62c-4fbe-9c4a-56777485a928</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="SHA1_STREAM" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="MODE">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="BUF">
              <type>
                <array>
                  <dimension lower="0" upper="63" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="SHA1">
              <type>
                <array>
                  <dimension lower="0" upper="19" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="SIZE">
              <type>
                <UDINT />
              </type>
            </variable>
          </inOutVars>
          <outputVars>
            <variable name="POS">
              <type>
                <UDINT />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="hash">
              <type>
                <array>
                  <dimension lower="0" upper="4" />
                  <baseType>
                    <DWORD />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="end">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="block">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="pad_1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="w">
              <type>
                <array>
                  <dimension lower="0" upper="79" />
                  <baseType>
                    <DWORD />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="n">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="n1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="a">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="b">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="c">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="d">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="e">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="f">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="k">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="x">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="z">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE MODE OF

1:	(* Initialisierung der Hash-Werte *)
	hash[0] := DWORD#16#67452301;
	hash[1] := DWORD#16#EFCDAB89;
	hash[2] := DWORD#16#98BADCFE;
	hash[3] := DWORD#16#10325476;
	hash[4] := DWORD#16#C3D2E1F0;

	(* Buffer initialisieren *)
	FOR n := 16 TO 79 DO
   		w[n] := DWORD#0;
	END_FOR;

	block := SHR(SIZE,6) + BOOL_TO_UDINT((UDINT_TO_BYTE(SIZE) AND 16#3F) &gt; 55);	(* benötigte Blocks errechnen *)

	pad_1 := FALSE;
	POS := 0;
	End := SIZE;
	SIZE := MIN(64,End);
	MODE := 2;

2:	FOR n := UDINT_TO_INT(SIZE) TO 63 DO (* Fuell-Bytes anhängen *)
		BUF[n] := 0;
	END_FOR;

	IF SIZE &lt; 64 AND NOT pad_1 THEN
		BUF[SIZE] := 2#1000_0000;
		pad_1 := TRUE;
	END_IF;

	POS := POS + SIZE;
	SIZE := MIN(64,End - POS);

	n := 0;	(* Byte-Array in DWORD-Array umkopieren *)
	FOR n1 := 0 TO 15 DO
		w[n1] := OSCAT_BASIC.DWORD_OF_BYTE(BUF[n],BUF[n+1],BUF[n+2],BUF[n+3]);
		n := n + 4;
	END_FOR;

	IF block = 0 THEN (* am Ende des letzten Blocks die Datenlänge eintragen *)
		w[15] := SHL(UDINT_TO_DWORD(End),3); (* Anzahl Datenbits eintragen *)
		MODE := 3;
	ELSE
		block := block - 1;
	END_IF;

	FOR n := 16 TO 79 DO (* erweitern der 16 32-bit-Worte auf 80 32-bit-Worte *)
		w[n] := ROL(w[n-3] XOR w[n-8] XOR w[n-14] XOR w[n-16],1);
	END_FOR;

	a := hash[0];
	b := hash[1];
	c := hash[2];
	d := hash[3];
	e := hash[4];

	FOR n := 0 TO 79 DO
		IF n &lt;= 19 THEN
			f := (b AND c) OR (NOT(b) AND d);
			k := DWORD#16#5A827999;
		ELSIF n &lt;= 39 THEN
			f := b XOR c XOR d;
			k := DWORD#16#6ED9EBA1;
		ELSIF n &lt;= 59 THEN
			f := (b AND c) OR (b AND d) OR (c AND d);
			k := DWORD#16#8F1BBCDC;
		ELSE
			f := b XOR c XOR d;
			k := DWORD#16#CA62C1D6;
		END_IF;

		x := ROL(a,5) + f + e + k + w[n];
		e := d;
		d := c;
		c := ROL(b,30);
		b := a;
		a := x;
	END_FOR;

	(* aktuelle Hash-Werte zum letzten Wert addieren *)
	hash[0] := hash[0] + a;
	hash[1] := hash[1] + b;
	hash[2] := hash[2] + c;
	hash[3] := hash[3] + d;
	hash[4] := hash[4] + e;

END_CASE;

IF MODE = 3 THEN
	z := 0;
	FOR n := 0 TO 4 DO (* konvertiere DWORD auf BYTE-Array *)
		FOR n1 := 0 TO 3 DO
			hash[n] := ROL(hash[n],8);
			SHA1[z] := DWORD_TO_BYTE(hash[n]);
			z := z + 1;
		END_FOR;
	END_FOR;
END_IF;

(* revision history

ks	6. dec. 2009 rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>25cb92f6-3f49-4cdc-8cff-1720ac8b9194</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="SHA1_TO_STRH" pouType="function">
        <interface>
          <returnType>
            <string length="40" />
          </returnType>
          <inputVars>
            <variable name="SHA1">
              <type>
                <array>
                  <dimension lower="0" upper="19" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="i">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="tmp">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="pt">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">pt := ADR(SHA1_TO_STRH); (* read output adress to pointer *)

FOR i := 0 TO 19 DO; (* write the 10 hex characters backwards *)
	tmp := SHR(SHA1[i],4);
	PT^ := tmp + SEL(tmp &lt;= 9,87,48);
	pt := pt + 1; (* decrement the pointer *)
	tmp := SHA1[i] AND 2#1111;
	PT^ := tmp + SEL(tmp &lt;= 9,87,48);
	pt := pt + 1; (* decrement the pointer *)
END_FOR;
pt^:= 0; (* write the closing byte for the string *)

(* revision history

ks	6. dec. 2009 rev 1.0
	original version

ks	3. dec. 2011 rev 1.1
	incorrect string size
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d47b1b3f-8e60-403f-90c3-d6e89b78fbf4</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="STRING_TO_URL" pouType="function">
        <interface>
          <returnType>
            <derived name="URL" />
          </returnType>
          <inputVars>
            <variable name="STR">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="DEFAULT_PROTOCOL">
              <type>
                <string length="10" />
              </type>
            </variable>
            <variable name="DEFAULT_PATH">
              <type>
                <string length="80" />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="pos">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="pos2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="x">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*

http://hans:geheim@www.example.org:80/demo/example.cgi?land=de&amp;stadt=aa#abschnitt1
|       |      |         |         |   |                   |               |
|       |      |         Host      |   Pfad                Query           Anker
|       |      Passwort            Port
|       Benutzer
Protokoll

*)

(* check if string is empty and return empty url *)
IF STR = '' THEN RETURN; END_IF;

(* extract the protocol *)
(* first we check if the optional protocol is specified ending with a :// *)
pos := FIND(STR, '://');
IF pos &gt; 0 THEN
	(* store protocol and restore the rest of url in temp *)
	STRING_TO_URL.PROTOCOL := LEFT(STR, pos - 1);
	x := RIGHT(STR, LEN(STR) - pos - 2);
ELSE
	x := STR;
	STRING_TO_URL.PROTOCOL := DEFAULT_PROTOCOL;
END_IF;

(* extract user and password if present ending with a @ *)
pos := OSCAT_BASIC.FINDB(STR1:=x,STR2:='@'); (* Find last @ *)

IF pos &gt; 0 THEN
	(* extract user *)
	pos2 := FIND(x,':')+1;
	IF pos2 &gt; 1 AND pos2 &lt;= pos THEN
		STRING_TO_URL.USER := LEFT(x,pos2 - 2);
		STRING_TO_URL.PASSWORD := MID(x, pos - pos2, pos2);
	ELSE
		STRING_TO_URL.USER := LEFT(x, pos - 2);
		STRING_TO_URL.PASSWORD := '';
	END_IF;
	x := RIGHT(x, LEN(x) - pos);
ELSE
	STRING_TO_URL.USER := '';
	STRING_TO_URL.PASSWORD := '';
END_IF;

(* extract anchor *)
pos := FIND(x, '#');
IF pos &gt; 0 THEN
	STRING_TO_URL.ANCHOR := RIGHT(x, LEN(x) - pos);
	x := LEFT(x, pos - 1);
ELSE
	STRING_TO_URL.ANCHOR := '';
END_IF;

(* extract query  *)
pos := FIND(x, '?');
IF pos &gt; 0 THEN
	STRING_TO_URL.QUERY := RIGHT(x, LEN(x) - pos);
	x := LEFT(x, pos - 1);
ELSE
	STRING_TO_URL.QUERY := '';
END_IF;

(* extract path  *)
pos := FIND(x, '/');
IF pos &gt; 0 THEN
	STRING_TO_URL.PATH := RIGHT(x, LEN(x) - pos + 1);
	x := LEFT(x, pos - 1);
ELSE
	STRING_TO_URL.PATH := DEFAULT_PATH;
END_IF;

(* extract port and leave domain *)
pos := FIND(x, ':');
IF pos &gt; 0 THEN
	STRING_TO_URL.PORT := STRING_TO_WORD(RIGHT(x, LEN(x) - pos));
	STRING_TO_URL.DOMAIN := LEFT(x, pos - 1);
ELSE
	STRING_TO_URL.PORT := 0;
	STRING_TO_URL.DOMAIN := x;
END_IF;

(* revision history
hm		18. apr 2008	rev 1.0
	original version

ks		20. dec. 2010	rev 1.1
	stringlength 250 , var x

ks		27. oct. 2012	rev 1.2
	var_temp zu var geändert

ks		04. mar. 2016	rev 1.3
	@ zeichen wird nun von rechts nach links gesucht
	ermöglicht username und password mit @ zeichen
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ae0b844c-8e4e-41fa-b4d2-9d65f06e544b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="URL_DECODE" pouType="function">
        <interface>
          <returnType>
            <string length="OSCAT_BASIC.STRING_LENGTH" />
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="pos">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="seq">
              <type>
                <string length="3" />
              </type>
            </variable>
            <variable name="new">
              <type>
                <string length="1" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">URL_DECODE := IN;
pos := FIND(URL_DECODE,'%');
WHILE pos &gt; 0 DO
	seq := MID(URL_DECODE,2,pos + 1);
	new := OSCAT_BASIC.CHR_TO_STRING(DWORD_TO_BYTE(OSCAT_BASIC.HEX_TO_DWORD(seq)));
	URL_DECODE := REPLACE(URL_DECODE, new, 3, pos);
	pos := FIND(URL_DECODE,'%');
END_WHILE;


(* revision history
hm	27. apr. 2008	rev 1.0
	original version

hm	17. dec. 2008	rev 1.1
	changes name of function chr to chr_to_string

ks	10. mai. 2008	rev 1.2
	stringlength 250
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>3d2ba6e7-a11a-4e23-a8ce-ec176d7bf960</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="URL_ENCODE" pouType="function">
        <interface>
          <returnType>
            <string length="OSCAT_BASIC.STRING_LENGTH" />
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="pt_in">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="1" upper="255" />
                      <baseType>
                        <BYTE />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pt_out">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="1" upper="256" />
                      <baseType>
                        <BYTE />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pos_in">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="pos_out">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="stop">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="tb">
              <type>
                <BYTE />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">pt_in  := ADR(in);
pt_out := ADR(URL_ENCODE);

(* scan the input string and convert unallowed characters *)
pos_in := 1;
stop := LEN(in);
FOR pos_out := 1 TO 250 DO
	IF pos_in &gt; stop THEN
		EXIT;
	ELSIF IS_URLCHR(pt_in^[pos_in]) THEN
		pt_out^[pos_out] := pt_in^[pos_in];
		(* increment in by 1 *)
		pos_in := pos_in + 1;
	ELSE
		(* cannot fit 3 digits, exit *)
		IF pos_out &gt; 248 THEN EXIT; END_IF;
		(* invalid character that needs to be converted *)
		pt_out^[pos_out] := 37;    (* start with % sign *)
		pos_out := pos_out + 1;
		(* need to add the two hex digits *)
		tb := SHR(pt_in^[pos_in],4);
		IF tb &gt; 9 THEN
			pt_out^[pos_out] := tb + 55;
		ELSE
			pt_out^[pos_out] := tb + 48;
		END_IF;
		pos_out := pos_out + 1;
		tb := pt_in^[pos_in] AND 16#0F;
		IF tb &gt; 9 THEN
			pt_out^[pos_out] := tb + 55;
		ELSE
			pt_out^[pos_out] := tb + 48;
		END_IF;
		(* increment in and out because out has to move 3 digits *)
		pos_in := pos_in + 1;
	END_IF;
END_FOR;

(* terminate the output string *)
pt_out^[pos_out] := 0;

(* revision history
hm	27. apr. 2008	rev 1.0
	original version

ks	10. mai. 2008	rev 1.1
	stringlength 250

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>2a9d2295-1d93-42c3-8eb5-3c6f4b98c129</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="URL_TO_STRING" pouType="function">
        <interface>
          <returnType>
            <string length="OSCAT_BASIC.STRING_LENGTH" />
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <derived name="URL" />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*

http://hans:geheim@www.example.org:80/demo/example.cgi?land=de&amp;stadt=aa#abschnitt1
|         |         |                  |                                |   |                                    |                                    |
|         |         |                 Host                         |   Pfad                            Query                           Anker
|         |         Passwort                                  Port
|        Benutzer
Protokoll

*)

(* attach protocol *)
IF IN.PROTOCOL &lt;&gt; '' THEN URL_TO_STRING := CONCAT(IN.PROTOCOL,'://'); END_IF;

(* attach user and password *)
IF IN.USER &lt;&gt; '' THEN
	URL_TO_STRING := CONCAT(URL_TO_STRING, IN.USER);
	IF IN.PASSWORD &lt;&gt; '' THEN
		URL_TO_STRING := CONCAT(URL_TO_STRING, ':');
		URL_TO_STRING := CONCAT(URL_TO_STRING, IN.PASSWORD);
	END_IF;
	URL_TO_STRING := CONCAT(URL_TO_STRING, '@');
END_IF;

(* attach domain *)
URL_TO_STRING := CONCAT(URL_TO_STRING, IN.DOMAIN);

(* attach Port *)
IF IN.PORT &gt; 0 THEN
	URL_TO_STRING := CONCAT(URL_TO_STRING, ':');
	URL_TO_STRING := CONCAT(URL_TO_STRING, WORD_TO_STRING(IN.PORT));
END_IF;

(* attach path *)
URL_TO_STRING := CONCAT(URL_TO_STRING, IN.PATH);

(* attach query *)
IF IN.QUERY &lt;&gt; '' THEN
	URL_TO_STRING := CONCAT(URL_TO_STRING, '?');
	URL_TO_STRING := CONCAT(URL_TO_STRING, IN.QUERY);
END_IF;

(* attach anchor *)
IF IN.ANCHOR &lt;&gt; '' THEN
	URL_TO_STRING := CONCAT(URL_TO_STRING, '#');
	URL_TO_STRING := CONCAT(URL_TO_STRING, IN.ANCHOR);
END_IF;

(* revision history
hm	18. apr 2008	rev 1.0
	original version

ks	10. mai. 2008	rev 1.1
	stringlength 250
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>894b69e7-adcb-4dd0-8283-14958dadf103</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="DLOG_BOOL" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="X">
              <type>
                <derived name="DLOG_DATA" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="STATE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="OFF">
              <type>
                <string />
              </type>
            </variable>
            <variable name="ON">
              <type>
                <string />
              </type>
            </variable>
            <variable name="COLUMN">
              <type>
                <string length="40" />
              </type>
            </variable>
            <variable name="DELTA">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="UCB">
              <type>
                <derived name="UNI_CIRCULAR_BUFFER" />
              </type>
            </variable>
            <variable name="id">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="last_delta">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="state_last">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE x.ADD_COM OF

01:	(* ADD INFO *)
	X.ID_MAX := X.ID_MAX + USINT#1;
	id := WORD#16#0601; (* Quelltype BOOL , Zieltype STRING *)
02:	(* ADD HEADER *)
	X.UCB.D_STRING := COLUMN;
	X.UCB.D_HEAD := id;
	X.UCB.D_MODE := 1;
	UCB(DATA:=X.UCB); (* Daten eintragen *)
03:	(* ADD DATA *)
	IF X.STORE_TYPE = BYTE#05 THEN (* MySQL-Modus *)
		X.UCB.D_STRING := SEL(state_last,'0','1');
	ELSE
		X.UCB.D_STRING := SEL(state_last,OFF,ON);
	END_IF;
	X.UCB.D_HEAD := id;

	X.UCB.D_MODE := 1;
	UCB(DATA:=X.UCB); (* Daten eintragen *)
	last_delta := STATE;
04:	(* ADD DATA REQ *)
	IF DELTA AND (STATE XOR last_delta) THEN
		X.ADD_DATA_REQ := TRUE;
		last_delta := STATE;
	END_IF;
END_CASE;
state_last := STATE;

(* revision history
ks	17. may. 2011	rev 1.0
	original version

ks	25. july.   2011	rev 1.1
	neue head information

ks	19. apr.   2012	rev 1.2
	code neu überarbeitet

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>aad3f50d-db53-4f74-bd8b-aec4aed3f827</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="DLOG_CRON_TAB" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="ACTIVATE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="DTI">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="SECOND">
              <type>
                <string length="20" />
              </type>
            </variable>
            <variable name="MINUTE">
              <type>
                <string length="20" />
              </type>
            </variable>
            <variable name="HOUR">
              <type>
                <string length="20" />
              </type>
            </variable>
            <variable name="DAY_OF_MONTH">
              <type>
                <string length="20" />
              </type>
            </variable>
            <variable name="DAY_OF_WEEK">
              <type>
                <string length="20" />
              </type>
            </variable>
            <variable name="MONTH">
              <type>
                <string length="20" />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q">
              <type>
                <BOOL />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="CD">
              <type>
                <derived name="DLOG_CRON_DATA" />
              </type>
            </variable>
            <variable name="activate_old">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="datei">
              <type>
                <DATE />
              </type>
            </variable>
            <variable name="dti_last">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="cnt1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="cnt2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="idx1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="idx2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="idx3">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="idx4">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="pos1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="pos2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="char_cnt">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="trig_day">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="trig_weekday">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="str1">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="str2">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="str3">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="num_str1">
              <type>
                <string length="10" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF ACTIVATE THEN
	IF NOT activate_old THEN
		CD.CE[0].VALUE_MIN := 0;	(* Sekunden *)
		CD.CE[0].VALUE_MAX := 59;
		CD.CE[1].VALUE_MIN := 0;	(* Minuten *)
		CD.CE[1].VALUE_MAX := 59;
		CD.CE[2].VALUE_MIN := 0;	(* Stunden *)
		CD.CE[2].VALUE_MAX := 59;
		CD.CE[3].VALUE_MIN := 1;	(* Tage *)
		CD.CE[3].VALUE_MAX := 31;
		CD.CE[4].VALUE_MIN := 1;	(* Wochentag *)
		CD.CE[4].VALUE_MAX := 7;
		CD.CE[5].VALUE_MIN := 1;	(* Monat *)
		CD.CE[5].VALUE_MAX := 12;

		FOR idx1 := 0 TO 5 DO
			idx3 := CD.CE[idx1].VALUE_MIN;
			idx4 := CD.CE[idx1].VALUE_MAx;
			FOR idx2 := idx3 TO idx4 DO
				CD.CE[idx1].ELEMENTS[idx2] := FALSE;
			END_FOR;
			CD.CE[idx1].ALL_SELECTED := FALSE;
		END_FOR;

		str1 := CONCAT(SECOND,'#');
		str1 := CONCAT(str1,MINUTE);
		str1 := CONCAT(str1,'#');
		str1 := CONCAT(str1,HOUR);
		str1 := CONCAT(str1,'#');
		str1 := CONCAT(str1,DAY_OF_MONTH);
		str1 := CONCAT(str1,'#');
		str1 := CONCAT(str1,DAY_OF_WEEK);
		str1 := CONCAT(str1,'#');
		str1 := CONCAT(str1,MONTH);

		FOR idx1 := 0 TO 5 DO
			str2 := ELEMENT_GET(BYTE#35, idx1, str1);
			IF LEN(str2) &gt; 0 THEN
				cnt1 := ELEMENT_COUNT(BYTE#44, str2);	(* Trenzeichen ',' *)
			ELSE
				cnt1 := 1;
			END_IF;

			FOR idx2 := 0 TO cnt1 -1 DO
				str3 := ELEMENT_GET(BYTE#44, idx2, str2);
				IF FIND(str3, '*/') &gt; 0 AND LEN(str3) &lt;= 10 THEN
					pos1 := OSCAT_BASIC.DEC_TO_INT(str3);
					IF pos1 &gt; 0 THEN
						idx3 := CD.CE[idx1].VALUE_MIN;
						idx4 := CD.CE[idx1].VALUE_MAX;
						WHILE idx3 &lt;= idx4 DO
							CD.CE[idx1].ELEMENTS[idx3] := TRUE;
							idx3 := idx3 + pos1;
						END_WHILE;
					END_IF;

				ELSE
					IF FIND(str3, '*') &gt; 0 OR LEN(str3) = 0 THEN
						pos1 := CD.CE[idx1].VALUE_MIN;
						pos2 := CD.CE[idx1].VALUE_MAX;
						CD.CE[idx1].ALL_SELECTED := TRUE;
					ELSE
						cnt2 := ELEMENT_COUNT(BYTE#45, str3);	(* Trenzeichen '-' *)
						char_cnt := LEN(str3);
						IF char_cnt &gt;= 1 AND char_cnt &lt;= 10 THEN
							num_str1 := ELEMENT_GET(BYTE#45, 0, str3);
							pos1 := OSCAT_BASIC.DEC_TO_INT(num_str1);
							pos2 := pos1;
							IF cnt2 = 2 THEN
								num_str1 := ELEMENT_GET(BYTE#45, 1, str3);
								pos2 := OSCAT_BASIC.DEC_TO_INT(num_str1);
							END_IF;
						END_IF;
					END_IF;

					IF pos1 &gt;= CD.CE[idx1].VALUE_MIN AND pos2 &lt;= CD.CE[idx1].VALUE_MAX THEN
						FOR idx3 := pos1 TO pos2 DO
							CD.CE[idx1].ELEMENTS[idx3] := TRUE;
						END_FOR;
					END_IF;
				END_IF;
			END_FOR;
		END_FOR;
	ELSIF DTI &lt;&gt; dti_last THEN
		CD.CE[0].VALUE := OSCAT_BASIC.SECOND_OF_DT(DTI); (* Sekunden *)
		CD.CE[1].VALUE := OSCAT_BASIC.MINUTE_OF_DT(DTI); (* Minuten *)
		CD.CE[2].VALUE := OSCAT_BASIC.HOUR_OF_DT(DTI); (* Stunden *)
		datei := DT_TO_DATE(DTI);
		CD.CE[3].VALUE := OSCAT_BASIC.DAY_OF_MONTH(datei); (* Tag *)
		CD.CE[4].VALUE := OSCAT_BASIC.DAY_OF_WEEK(datei); (* Wochentag *)
		CD.CE[5].VALUE := OSCAT_BASIC.MONTH_OF_DATE(datei); (*  Monat *)
		dti_last := DTI;

		idx2 := CD.CE[0].VALUE;	(* sekunden *)
		Q := CD.CE[0].ELEMENTS[idx2] = TRUE;
		idx2 := CD.CE[1].VALUE;	(* minuten *)
		Q := Q AND CD.CE[1].ELEMENTS[idx2] = TRUE;
		idx2 := CD.CE[2].VALUE;	(* stunden *)
		Q := Q AND CD.CE[2].ELEMENTS[idx2] = TRUE;
		idx2 := CD.CE[5].VALUE;	(* monat *)
		Q := Q AND CD.CE[5].ELEMENTS[idx2] = TRUE;

		(* auswertung Tag und Wochentag *)
		idx2 := CD.CE[3].VALUE;	(* Tag *)
		trig_day:= CD.CE[3].ELEMENTS[idx2] = TRUE;
		idx2 := CD.CE[4].VALUE;	(* Wochentag *)
		trig_weekday := CD.CE[4].ELEMENTS[idx2] = TRUE;

		IF CD.CE[3].ALL_SELECTED = FALSE AND CD.CE[4].ALL_SELECTED = TRUE THEN
			Q := Q AND trig_day; (* nur Tag auswerten *)
		ELSIF CD.CE[3].ALL_SELECTED = TRUE AND CD.CE[4].ALL_SELECTED = FALSE THEN
			Q := Q AND trig_weekday; (* nur Wochentag auswerten *)
		ELSIF CD.CE[3].ALL_SELECTED = FALSE AND CD.CE[4].ALL_SELECTED = FALSE THEN
			Q := Q AND (trig_weekday OR trig_day); (* Tag und Wochentag auswerten *)
		END_IF;
	END_IF;

END_IF;
activate_old := ACTIVATE;

(* revision history
ks	27. oct. 2011	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>708c2382-2f7c-4411-929f-3e4e45b9326e</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="DLOG_DINT" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="X">
              <type>
                <derived name="DLOG_DATA" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="VALUE">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="COLUMN">
              <type>
                <string length="40" />
              </type>
            </variable>
            <variable name="DELTA">
              <type>
                <DINT />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="UCB">
              <type>
                <derived name="UNI_CIRCULAR_BUFFER" />
              </type>
            </variable>
            <variable name="id">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="delta_last">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="value_last">
              <type>
                <DINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE x.ADD_COM OF

01:	(* ADD INFO *)
	X.ID_MAX := X.ID_MAX + USINT#1;
	id := WORD#16#0801; (* Quelltype DINT , Zieltype STRING *)
02:	(* ADD HEADER *)
	X.UCB.D_STRING := COLUMN;
	X.UCB.D_HEAD := id;
	X.UCB.D_MODE := 1;
	UCB(DATA:=X.UCB); (* Daten eintragen *)
03:	(* ADD DATA *)
	X.UCB.D_STRING := DINT_TO_STRING(value_last);
	X.UCB.D_HEAD := id;
	X.UCB.D_MODE := 1;
	UCB(DATA:=X.UCB); (* Daten eintragen *)
	delta_last := value_last;
04:	(* ADD DATA REQ *)
	IF DELTA &lt;&gt; DINT#0 THEN
		IF VALUE &lt;= (delta_last - DELTA) OR VALUE &gt;= (delta_last + DELTA) THEN
			X.ADD_DATA_REQ := TRUE;
			delta_last := VALUE;
		END_IF;
	END_IF;
END_CASE;
value_last := VALUE;

(* revision history
ks	01. jan. 2011	rev 1.0
	original version

ks	17. may. 2011	rev 1.1
	DELTA Funktion integriert

ks	25. july.   2011	rev 1.2
	neue head information

ks	19. apr.   2012	rev 1.2
	code neu überarbeitet
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>48c60732-11ff-47e9-bd7b-7037d8819f75</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="DLOG_DT" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="X">
              <type>
                <derived name="DLOG_DATA" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="FMT">
              <type>
                <string />
              </type>
              <initialValue>
                <simpleValue value="'#A-#D-#H #N:#R:#T'" />
              </initialValue>
            </variable>
            <variable name="COLUMN">
              <type>
                <string length="40" />
              </type>
            </variable>
            <variable name="DELTA">
              <type>
                <UDINT />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="UCB">
              <type>
                <derived name="UNI_CIRCULAR_BUFFER" />
              </type>
            </variable>
            <variable name="id">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="delta_last">
              <type>
                <DT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE x.ADD_COM OF

01:	(* ADD INFO *)
	X.ID_MAX := X.ID_MAX + USINT#1;
	id := WORD#16#0D01; (* Quelltype DT , Zieltype STRING *)
02:	(* ADD HEADER *)
	X.UCB.D_STRING := COLUMN;
	X.UCB.D_HEAD := id;
	X.UCB.D_MODE := 1;
	UCB(DATA:=X.UCB); (* Daten eintragen *)
03:	(* ADD DATA *)
	X.UCB.D_STRING := OSCAT_BASIC.DT_TO_STRF(DTI:=X.DTI,MS:=0,FMT:=FMT,LANG:=0);
	X.UCB.D_HEAD := id;
	X.UCB.D_MODE := 1;
	UCB(DATA:=X.UCB); (* Daten eintragen *)
	delta_last := X.DTI;
04:	(* ADD DATA REQ *)
	IF DELTA &lt;&gt; UDINT#0 THEN
		IF DT_TO_UDINT(X.DTI) &gt;= (DT_TO_UDINT(delta_last) + DELTA) THEN
			X.ADD_DATA_REQ := TRUE;
			delta_last := X.DTI;
		END_IF;
	END_IF;
END_CASE;

(* revision history
ks	01. jan. 2011	rev 1.0
	original version

ks	17. may. 2011	rev 1.1
	COLUMN STRING(40), delta

ks	25. july.   2011	rev 1.2
	neue head information

ks	19. apr.   2012	rev 1.3
	code neu überarbeitet
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>2b43c178-b5ba-42eb-8437-624e065ad467</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="DLOG_FILE_TO_FTP" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="X">
              <type>
                <derived name="DLOG_DATA" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="FTP_URL">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="FTP_ACTIV">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="FILE_DELETE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="TIMEOUT">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#30s0ms" />
              </initialValue>
            </variable>
            <variable name="RETRY">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="RETRY_TIME">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#30s0ms" />
              </initialValue>
            </variable>
            <variable name="DNS_IP4">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="PLC_IP4">
              <type>
                <DWORD />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="DONE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="BUSY">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ERROR_C">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="ERROR_T">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="UCBD">
              <type>
                <derived name="UNI_CIRCULAR_BUFFER_DATA" />
              </type>
            </variable>
            <variable name="UCB">
              <type>
                <derived name="UNI_CIRCULAR_BUFFER" />
              </type>
            </variable>
            <variable name="FTP_CLIENT">
              <type>
                <derived name="FTP_CLIENT" />
              </type>
            </variable>
            <variable name="WT_1">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="ftrig_old">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="filename">
              <type>
                <string />
              </type>
            </variable>
            <variable name="step">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="ftp_busy">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ftp_done">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="cnt">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* neue Filenamen speichern *)
IF X.NEW_FILE_RTRIG AND ftrig_old = FALSE THEN
	UCBD.D_HEAD := 1;
	UCBD.D_MODE := 1;
	UCBD.D_STRING := X.NEW_FILE;
	UCB(DATA:=UCBD); (* Daten eintragen *)
END_IF;
ftrig_old := X.NEW_FILE_RTRIG;

CASE step OF

00:	IF UCBD.BUF_COUNT &gt; 0 AND ftp_busy = FALSE THEN
		UCBD.D_MODE := 12; (* Daten lesen und löschen *)
		UCB(DATA:=UCBD);
		filename := UCBD.D_STRING;
		cnt := RETRY;
		step := 10;

		(*####################  DEBUG-MESSAGE  ###################################*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'F_T_FTP: Auftrag aktiv /file: ~2';
			LOG_CL.PRINTF[2] := files;
			LOG_MSG();
		END_IF;*)
		(*########################################################################*)

	END_IF;

10:	IF ftp_busy = FALSE THEN
		IF ftp_done THEN
			(*####################  DEBUG-MESSAGE  ###################################*)
			(*IF _debug_enable THEN
				LOG_CL.NEW_MSG := 'F_T_FTP: Auftrag OK /file: ~2';
				LOG_CL.PRINTF[2] := filename;
				LOG_MSG();
			END_IF;*)
			(*########################################################################*)
			step := 0;
		ELSE
			step := 20; (* pause nach error *)
		END_IF;
	END_IF;

20:	IF WT_1.Q THEN (* Wartezeit *)
		cnt := cnt - 1;
		IF RETRY = 0 THEN (* FTP Transfer unbegrenzt wiederholen *)
			(*####################  DEBUG-MESSAGE  ###################################*)
			(*IF _debug_enable THEN
				LOG_CL.NEW_MSG := 'F_T_FTP: Auftrag unbegrenzt wiederholen /file: ~2';
				LOG_CL.PRINTF[2] := filename;
				LOG_MSG();
			END_IF;*)
			(*########################################################################*)
			step := 10; (* FTP Transfer wiederholen *)
		ELSIF cnt &gt;= 0 THEN
			(*####################  DEBUG-MESSAGE  ###################################*)
			(*IF _debug_enable THEN
				LOG_CL.NEW_MSG := 'F_T_FTP: Auftrag wiederholen /cnt: ~1 /file: ~2';
				LOG_CL.PRINTF[1] := INT_TO_STRING(cnt);
				LOG_CL.PRINTF[2] := filename;
				LOG_MSG();
			END_IF;*)
			(*########################################################################*)
			step := 10; (* FTP Transfer wiederholen *)
		ELSE
			(*####################  DEBUG-MESSAGE  ###################################*)
			(*IF _debug_enable THEN
				LOG_CL.NEW_MSG := 'F_T_FTP: Auftrag verworfen /file: ~2';
				LOG_CL.PRINTF[2] := filename;
				LOG_MSG();
			END_IF;*)
			(*########################################################################*)
			step := 0; (* FTP Auftrag verwerfen *)
		END_IF;
	END_IF;

END_CASE;

BUSY := step = 10;
DONE := step = 0;
WT_1(IN:= step = 20, PT:= RETRY_TIME);

FTP_CLIENT(
	ACTIVATE:= BUSY,
	FILENAME:= filename,
	FTP_URL:= FTP_URL,
	FTP_DOWNLOAD:= FALSE,
	FTP_ACTIV:= FTP_ACTIV,
	FILE_DELETE:= FILE_DELETE,
	TIMEOUT:= TIMEOUT,
	DNS_IP4:= DNS_IP4,
	PLC_IP4:= PLC_IP4,
	DONE=&gt; ftp_done,
	BUSY=&gt; ftp_busy
	);

(* Fehlerauswertung *)
IF FTP_CLIENT.ERROR_T &lt;&gt; BYTE#0 THEN
	ERROR_C := FTP_CLIENT.ERROR_C;
	ERROR_T := FTP_CLIENT.ERROR_T;
ELSIF UCBD.BUF_DATA_LOST &gt; UDINT#0 THEN
	ERROR_C := DWORD#2; (* Fehler: Bufferüberlauf - Datenmenge reduzieren *)
	ERROR_T := BYTE#6; 	(* Type: Buffer *)
ELSIF UCBD.BUF_USED_MAX &gt; USINT#90 THEN
	ERROR_C := DWORD#1; (* Warnung: Buffer auslastung &gt; 90% *)
	ERROR_T := BYTE#6;	(* Type: Buffer *)
ELSE
	ERROR_C := DWORD#0;
	ERROR_T := BYTE#0;
END_IF;

(* revision history
ks	01. jan. 2011	rev 1.0
	original version

ks	26. jul. 2011	rev 1.1
    codeoptimierung D_MODE 12

ks	21. mar. 2016	rev 1.2
	fehlermeldungen hinzugefügt
	fehler in RETRY korrigiert
	
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e5c0c421-e122-4f07-8284-7444bde1437c</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="DLOG_FILE_TO_SMTP" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="SERVER">
              <type>
                <string />
              </type>
            </variable>
            <variable name="MAILFROM">
              <type>
                <string />
              </type>
            </variable>
            <variable name="MAILTO">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="SUBJECT">
              <type>
                <string />
              </type>
            </variable>
            <variable name="BODY">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="X">
              <type>
                <derived name="DLOG_DATA" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="FILE_DELETE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="TIMEOUT">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#30s0ms" />
              </initialValue>
            </variable>
            <variable name="DTI">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="DTI_OFFSET">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="RETRY">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="RETRY_TIME">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#30s0ms" />
              </initialValue>
            </variable>
            <variable name="DNS_IP4">
              <type>
                <DWORD />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="DONE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="BUSY">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ERROR_C">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="ERROR_T">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="UCBD">
              <type>
                <derived name="UNI_CIRCULAR_BUFFER_DATA" />
              </type>
            </variable>
            <variable name="UCB">
              <type>
                <derived name="UNI_CIRCULAR_BUFFER" />
              </type>
            </variable>
            <variable name="SMTP_CLIENT">
              <type>
                <derived name="SMTP_CLIENT" />
              </type>
            </variable>
            <variable name="WT_1">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="ftrig_old">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="files">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="step">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="smtp_busy">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="smtp_done">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="cnt">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* neue Filenamen speichern *)
IF X.NEW_FILE_RTRIG AND ftrig_old = FALSE THEN
	UCBD.D_HEAD := 1;
	UCBD.D_MODE := 1;
	UCBD.D_STRING := X.NEW_FILE;
	UCB(DATA:=UCBD); (* Daten eintragen *)
END_IF;
ftrig_old := X.NEW_FILE_RTRIG;

CASE step OF

00:	IF UCBD.BUF_COUNT &gt; 0 AND smtp_busy = FALSE THEN
		UCBD.D_MODE := 12; (* Daten lesen und löschen *)
		UCB(DATA:=UCBD);
		files := UCBD.D_STRING;
		IF FILE_DELETE THEN
			files := CONCAT(files,';#DEL#');
		END_IF;
		cnt := RETRY;
		step := 10;

		(*####################  DEBUG-MESSAGE  ###################################*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'F_T_SMTP: Auftrag aktiv /file: ~2';
			LOG_CL.PRINTF[2] := files;
			LOG_MSG();
		END_IF;*)
		(*########################################################################*)

	END_IF;

10:	IF smtp_busy = FALSE THEN
		IF smtp_done THEN
			(*####################  DEBUG-MESSAGE  ###################################*)
			(*IF _debug_enable THEN
				LOG_CL.NEW_MSG := 'F_T_SMTP: Auftrag OK /file: ~2';
				LOG_CL.PRINTF[2] := files;
				LOG_MSG();
			END_IF;*)
			(*########################################################################*)
			step := 0;
		ELSE
			step := 20; (* pause nach error *)
		END_IF;
	END_IF;

20:	IF WT_1.Q THEN (* Wartezeit *)
		cnt := cnt - 1;
		IF RETRY = 0 THEN (* Transfer unbegrenzt wiederholen *)
			(*####################  DEBUG-MESSAGE  ###################################*)
			(*IF _debug_enable THEN
				LOG_CL.NEW_MSG := 'F_T_SMTP: Auftrag unbegrenzt wiederholen /file: ~2';
				LOG_CL.PRINTF[2] := files;
				LOG_MSG();
			END_IF;*)
			(*########################################################################*)
			step := 10; (* Transfer wiederholen *)
		ELSIF cnt &gt;= 0 THEN
			(*####################  DEBUG-MESSAGE  ###################################*)
			(*IF _debug_enable THEN
				LOG_CL.NEW_MSG := 'F_T_SMTP: Auftrag wiederholen /cnt: ~1 /file: ~2';
				LOG_CL.PRINTF[1] := INT_TO_STRING(cnt);
				LOG_CL.PRINTF[2] := files;
				LOG_MSG();
			END_IF;*)
			(*########################################################################*)
			step := 10; (* Transfer wiederholen *)
		ELSE
			(*####################  DEBUG-MESSAGE  ###################################*)
			(*IF _debug_enable THEN
				LOG_CL.NEW_MSG := 'F_T_SMTP: Auftrag verworfen /file: ~2';
				LOG_CL.PRINTF[2] := files;
				LOG_MSG();
			END_IF;*)
			(*########################################################################*)
			step := 0; (* Auftrag verwerfen *)
		END_IF;
	END_IF;

END_CASE;

BUSY := step = 10;
DONE := step = 0;
WT_1(IN:= step = 20, PT:= RETRY_TIME);

SMTP_CLIENT(
	ACTIVATE:= BUSY,
	TIMEOUT:= TIMEOUT,
	DTI:= DTI,
	DTI_OFFSET:= DTI_OFFSET,
	DNS_IP4:= DNS_IP4,
	SERVER:= SERVER,
	MAILFROM:= MAILFROM,
	MAILTO:= MAILTO,
	SUBJECT:= SUBJECT,
	BODY:= BODY,
	FILES:= FILES,
	DONE=&gt; smtp_done,
	BUSY=&gt; smtp_busy
	);

(* Fehlerauswertung *)
IF SMTP_CLIENT.ERROR_T &lt;&gt; BYTE#0 THEN
	ERROR_C := SMTP_CLIENT.ERROR_C;
	ERROR_T := SMTP_CLIENT.ERROR_T;
ELSIF UCBD.BUF_DATA_LOST &gt; UDINT#0 THEN
	ERROR_C := DWORD#2; (* Fehler: Bufferüberlauf - Datenmenge reduzieren *)
	ERROR_T := BYTE#6; 	(* Type: Buffer *)
ELSIF UCBD.BUF_USED_MAX &gt; USINT#90 THEN
	ERROR_C := DWORD#1; (* Warnung: Buffer auslastung &gt; 90% *)
	ERROR_T := BYTE#6;	(* Type: Buffer *)
ELSE
	ERROR_C := DWORD#0;
	ERROR_T := BYTE#0;
END_IF;

(* revision history

ks	01. jan. 2011	rev 1.0
	original version

ks	28. apr. 2011	rev 1.1
	stringfehler bei option 'file_delete'

ks	26. jul. 2011	rev 1.2
    codeoptimierung D_MODE 12

ks	21. mar. 2016	rev 1.3
	fehlermeldungen hinzugefügt
	fehler in RETRY korrigiert

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e62ecf04-e75d-4f59-9174-c61008eaf398</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="DLOG_REAL" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="X">
              <type>
                <derived name="DLOG_DATA" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="VALUE">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="N">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="D">
              <type>
                <string length="1" />
              </type>
              <initialValue>
                <simpleValue value="','" />
              </initialValue>
            </variable>
            <variable name="COLUMN">
              <type>
                <string length="40" />
              </type>
            </variable>
            <variable name="DELTA">
              <type>
                <REAL />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="UCB">
              <type>
                <derived name="UNI_CIRCULAR_BUFFER" />
              </type>
            </variable>
            <variable name="id">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="delta_last">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="value_last">
              <type>
                <REAL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE x.ADD_COM OF

01:	(* ADD INFO *)
	X.ID_MAX := X.ID_MAX + USINT#1;
	id := WORD#16#0201; (* Quelltype REAL , Zieltype STRING *)
02:	(* ADD HEADER *)
	X.UCB.D_STRING := COLUMN;
	X.UCB.D_HEAD := id;
	X.UCB.D_MODE := 1;
	UCB(DATA:=X.UCB); (* Daten eintragen *)
03:	(* ADD DATA *)
	X.UCB.D_STRING := OSCAT_BASIC.REAL_TO_STRF(IN:=value_last,N:=N,D:=D);
	X.UCB.D_HEAD := id;
	X.UCB.D_MODE := 1;
	UCB(DATA:=X.UCB); (* Daten eintragen *)
	delta_last := value_last;
04:	(* ADD DATA REQ *)
	IF DELTA &lt;&gt; 0.0 THEN
		IF VALUE &lt;= (delta_last - DELTA) OR VALUE &gt;= (delta_last + DELTA) THEN
			X.ADD_DATA_REQ := TRUE;
			delta_last := VALUE;
		END_IF;
	END_IF;
END_CASE;
value_last := VALUE;

(* revision history
ks	01. jan. 2011	rev 1.0
	original version

ks	17. may. 2011	rev 1.1
	DELTA Funktion integriert

ks	25. july.   2011	rev 1.2
	neue head information

ks	19. apr.   2012	rev 1.3
	code neu überarbeitet
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ca6f888b-aa4a-4427-8983-c34dcb87ccb0</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="DLOG_REAL_ARRAY" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="R_ARRAY">
              <type>
                <derived name="DLOG_REAL_ARRAY_DATA" />
              </type>
            </variable>
            <variable name="X">
              <type>
                <derived name="DLOG_DATA" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="N">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="D">
              <type>
                <string length="1" />
              </type>
            </variable>
            <variable name="R_COUNT">
              <type>
                <INT />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="UCB">
              <type>
                <derived name="UNI_CIRCULAR_BUFFER" />
              </type>
            </variable>
            <variable name="id">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="idx">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">FOR idx := 1 TO R_COUNT DO

	CASE x.ADD_COM OF

	01:	(* ADD INFO *)
		X.ID_MAX := X.ID_MAX + USINT#1;
		id := WORD#16#0201; (* Quelltype REAL , Zieltype STRING *)
		(* automatisch Namen vergeben *)
		IF LEN(R_ARRAY[idx].COLUMN) = 0 THEN
			R_ARRAY[idx].COLUMN := CONCAT('Spalte_',USINT_TO_STRING(X.ID_MAX));
		END_IF;
	02:	(* ADD HEADER *)
		X.UCB.D_STRING := R_ARRAY[idx].COLUMN;
		X.UCB.D_HEAD := id;
		X.UCB.D_MODE := 1;
		UCB(DATA:=X.UCB); (* Daten eintragen *)
	03:	(* ADD DATA *)
		X.UCB.D_STRING := OSCAT_BASIC.REAL_TO_STRF(IN:=R_ARRAY[idx]._value_last,N:=N,D:=D);
		X.UCB.D_HEAD := id;
		X.UCB.D_MODE := 1;
		UCB(DATA:=X.UCB); (* Daten eintragen *)
		R_ARRAY[idx]._delta_last := R_ARRAY[idx]._value_last;
	04:	(* ADD DATA REQ *)
		IF R_ARRAY[idx].DELTA &lt;&gt; 0.0 THEN
			IF R_ARRAY[idx].VALUE &lt;= (R_ARRAY[idx]._delta_last - R_ARRAY[idx].DELTA) OR R_ARRAY[idx].VALUE &gt;= (R_ARRAY[idx]._delta_last + R_ARRAY[idx].DELTA) THEN
				X.ADD_DATA_REQ := TRUE;
				R_ARRAY[idx]._delta_last := R_ARRAY[idx].VALUE;
			END_IF;
		END_IF;
	END_CASE;
	R_ARRAY[idx]._value_last := R_ARRAY[idx].VALUE;

END_FOR;

(* revision history
ks	03. mar. 2016	rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>396b1f8e-a2bb-4168-b92c-0585dfd22bda</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="DLOG_STORE_FILE_CSV" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="X">
              <type>
                <derived name="DLOG_DATA" />
              </type>
            </variable>
            <variable name="SAVE_DATA">
              <type>
                <derived name="DLOG_SAVE" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="ENABLE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="TRIG_M">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="TRIG_T">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="FILENAME">
              <type>
                <string />
              </type>
            </variable>
            <variable name="DTI">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="SEP">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="AUTO_CLOSE">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#15s0ms" />
              </initialValue>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="ERROR_C">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="ERROR_T">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="FS">
              <type>
                <derived name="FILE_SERVER" />
              </type>
            </variable>
            <variable name="FSD">
              <type>
                <derived name="FILE_SERVER_DATA" />
              </type>
            </variable>
            <variable name="PT">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="UCB">
              <type>
                <derived name="UNI_CIRCULAR_BUFFER" />
              </type>
            </variable>
            <variable name="trig_auto">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="trig_stored">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="trig_tmp">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="trig_m_last">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="dti_last">
              <type>
                <DT />
              </type>
              <initialValue>
                <simpleValue value="DATE_AND_TIME#2070-2-6-6:28:15" />
              </initialValue>
            </variable>
            <variable name="fn_last">
              <type>
                <string />
              </type>
            </variable>
            <variable name="fn">
              <type>
                <string />
              </type>
            </variable>
            <variable name="step_1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="step_2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="idx">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="log_stop">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="n">
              <type>
                <USINT />
              </type>
            </variable>
            <variable name="wd_ton">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="wd_time">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="aw_ton">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="aw_enable">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="aw_aktiv">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="total_bytes">
              <type>
                <UDINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">X.DTI := DTI; (* Datum / Zeit eintragen *)
X.CLOCK_TRIG := DTI &lt;&gt; dti_last;
dti_last := DTI;
trig_auto := FALSE;
IF X.CLOCK_TRIG THEN (* Impuls in jeder Sekunde *)
	fn := OSCAT_BASIC.DT_TO_STRF(DTI, 0, FILENAME, 0); (* automatische Dateinamen generierung *)
	IF TRIG_T &gt;= T#1000ms THEN (* automatischer Trigger *)
		trig_auto := DT_TO_UDINT(DTI) MOD (TIME_TO_UDINT(TRIG_T) / UDINT#1000) = UDINT#0;
	END_IF;
END_IF;

CASE step_1 OF

00:	IF ENABLE THEN
		aw_enable := AUTO_CLOSE &gt;= T#5s;
		wd_time := SEL(X.LOAD_TIME_MAX &gt; T#0s, T#5ms,X.LOAD_TIME_MAX);
		fn_last := fn; (* aktuellen Dateinnamen speichern *)
		IF X.ID_MAX = USINT#0 THEN (* nur einmal nach Satellitenbausteinen scannen *)
			X.ADD_COM := 01; (* ADD INFO *)
			X.STORE_TYPE := BYTE#2; (* CSV-Modus *)
		END_IF;
		step_1 := 10;

		(* ---------------- Debug-Message -----------------------*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'FILE_CSV1 - Start: File [~1], [~2]';
			LOG_CL.PRINTF[1] := fn_last;
			LOG_CL.PRINTF[2] := DT_TO_STRING(DTI);
			LOG_MSG();
		END_IF;*)
		(* -----------------------------------------------------------------*)

	END_IF;

10:	X.UCB.D_STRING := fn_last;
	IF fn_last = SAVE_DATA.FN_REM THEN
		X.UCB.D_HEAD := WORD#16#F201; (* Filemode open + write *)
		X.ADD_COM := 00;
	ELSE
		X.UCB.D_HEAD := WORD#16#F301; (* Filemode create + write *)
		X.ADD_COM := 02; (* ADD HEADER *)
	END_IF;

	X.UCB.D_MODE := 1; (* Dateinamen als String ablegen *)
	UCB(DATA:=X.UCB); (* Daten eintragen *)
	step_1 := 30;

30:	(* LOG-Trigger verarbeiten *)
	trig_tmp := (TRIG_M AND NOT trig_m_last) OR trig_auto OR X.ADD_DATA_REQ;

	IF ENABLE = FALSE OR fn &lt;&gt; fn_last THEN (* ENABLE = 0 oder neuen Dateinamen -&gt; Log Stop *)
		trig_stored := trig_tmp; (* aktuellen Triggerpuls speichern *)
		X.UCB.D_HEAD := WORD#16#EE00;
		X.UCB.D_MODE := 1;
		UCB(DATA:=X.UCB); (* Element schreiben *)
		X.ADD_COM := 00;
		step_1 := 00;

		(* ---------------- Debug-Message -----------------------*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'FILE_CSV1 - Stop: [~2]';
			LOG_CL.PRINTF[2] := DT_TO_STRING(DTI);
			LOG_MSG();
		END_IF;*)
		(* -----------------------------------------------------------------*)

	ELSIF ENABLE THEN
		IF trig_tmp OR trig_stored THEN (* manueller, automatischer oder externer Trigger *)
			trig_stored := FALSE;
			X.ADD_COM := 03; (* ADD DATA *)
			SAVE_DATA.TRIG_CNT := SAVE_DATA.TRIG_CNT + UDINT#1;
			SAVE_DATA.TRIG_CNT_TOTAL  := SAVE_DATA.TRIG_CNT_TOTAL + UDINT#1;
			(* ---------------- Debug-Message -----------------------*)
			(*IF _debug_enable THEN
				LOG_CL.NEW_MSG := 'FILE_CSV1 - Trig: [~2]';
				LOG_CL.PRINTF[2] := DT_TO_STRING(DTI);
				LOG_MSG();
			END_IF;*)
			(* -----------------------------------------------------------------*)
		ELSE
			X.ADD_COM := 04;	(* ADD DATA REQ *)
		END_IF;
	END_IF;

END_CASE;
X.ADD_DATA_REQ := FALSE; (* externe Anforderung rücksetzen *)

(* ##################################### *)

CASE step_2 OF

00:	aw_ton(IN:= idx &gt; 0 AND aw_enable, PT:= AUTO_CLOSE); (* AutoWrite Timer *)
	IF aw_ton.Q THEN (* Zeitgesteuertes Datenschreiben *)
		aw_aktiv := TRUE;
		step_2 := 10; (* Daten schreiben *)
		(* ---------------- Debug-Message -----------------------*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'FILE_CSV2 - AutoWrite: [~2]';
			LOG_CL.PRINTF[2] := DT_TO_STRING(DTI);
			LOG_MSG();
		END_IF;*)
		(* -----------------------------------------------------------------*)

	ELSE
		wd_ton(IN:= FALSE, PT:= wd_time);
		wd_ton(IN:= TRUE);
		WHILE X.UCB.BUF_COUNT &gt; 0 AND step_2 = 0 AND wd_ton.Q = FALSE DO

			X.UCB.D_MODE := 10;
			UCB(DATA:=X.UCB); (* Element lesen , aber noch nicht entfernen *)
			IF X.UCB.D_HEAD &gt; WORD#16#F000 THEN (* F301 oder F201 *)
				X.UCB.D_MODE := 11;
				UCB(DATA:=X.UCB); (* Element entfernen *)
	
				FSD.MODE := WORD_TO_BYTE(SHR(SHL(X.UCB.D_HEAD,4),12)); (* 0X00 -&gt; 000X = 3 create + write / 2 open + write *)
				FSD.OFFSET := UDINT#0; (* Start bei Dateianfang *)
				FSD.FILENAME := X.UCB.D_STRING; (* Dateiname *)
				PT.SIZE := UINT#0;
				SAVE_DATA.FN_REM := FSD.FILENAME; (* aktuellen Dateinamen remanent sichern *)
	
				IF FSD.MODE = BYTE#3 THEN	(* Datei neu anlegen -&gt; dann zähler reset *)
					SAVE_DATA.TRIG_CNT := UDINT#0;
				END_IF;
	
				X.NEW_FILE := FSD.FILENAME;
				X.NEW_FILE_SIZE := UDINT#0;
				X.NEW_FILE_RTRIG := FALSE;
				step_2 := 20;
				(* ---------------- Debug-Message -----------------------*)
				(*IF _debug_enable THEN
					LOG_CL.NEW_MSG := 'FILE_CSV2 - Create: Mode [~1] , [~2]';
					LOG_CL.PRINTF[2] := DT_TO_STRING(DTI);
					LOG_CL.PRINTF[1] := BYTE_TO_STRING(FSD.MODE);
					LOG_MSG();
				END_IF;*)
				(* -----------------------------------------------------------------*)

			ELSIF X.UCB.D_HEAD = WORD#16#EE00 THEN (* LOG_STOP Command *)
				X.UCB.D_MODE := 11;
				UCB(DATA:=X.UCB); (* Element entfernen *)
				log_stop := TRUE;
				step_2 := 10; (* Daten schreiben *)

			ELSIF idx + X.UCB.D_SIZE + 2 &lt; SIZEOF(PT.BUFFER) THEN (* bufferplatz vorhanden *)
				X.UCB.D_MODE := 11;
				UCB(DATA:=X.UCB); (* Element entfernen *)
				(* ---------------- Debug-Message -----------------------*)
				(*IF _debug_enable THEN
					LOG_CL.NEW_MSG := 'FILE_CSV2 - BUF: TXT [~1],Pos [~2], [~3]';
					LOG_CL.PRINTF[1] := X.UCB.D_STRING;
					LOG_CL.PRINTF[2] := INT_TO_STRING(idx);
					LOG_CL.PRINTF[3] := DT_TO_STRING(DTI);
					LOG_MSG();
				END_IF;*)
				(* -----------------------------------------------------------------*)
				OSCAT_BASIC._STRING_TO_BUFFER(STR:=X.UCB.D_STRING, POS:=idx, PT:=ADR(PT.BUFFER), SIZE:=SIZEOF(PT.BUFFER));
				idx := idx + LEN(X.UCB.D_STRING);
				n := n + USINT#1;
				IF n = X.ID_MAX THEN (* letztes Element einer Zeile *)
					n := USINT#0;
					PT.BUFFER[idx] := BYTE#16#0D;
					idx := idx + 1;
					PT.BUFFER[idx] := BYTE#16#0A;
				ELSE
					PT.BUFFER[idx] := SEP;
				END_IF;
				idx := idx + 1;
				X.NEW_FILE_SIZE := total_bytes + INT_TO_UDINT(idx);
			ELSE (* kein Platz vorhanden *)
				step_2 := 10; (* Daten schreiben *)
			END_IF;
			wd_ton();
		END_WHILE;
	END_IF;

10:	IF idx &gt; 0 THEN (* Daten schreiben *)
		FSD.MODE := BYTE#2; (* File_Open_Exist + File_Write *)
		FSD.OFFSET := UDINT#4294967294; (* 16#FFFF_FFFE -&gt;Spezialcode: Daten automatisch an Dateiende anhängen *)
		PT.SIZE := INT_TO_UINT(idx); (* Datenlänge eintragen *)
		idx := 0;
		(* ---------------- Debug-Message -----------------------*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'FILE_CSV2 - WriteData: Mode [~3] Size [~1] , [~2]';
			LOG_CL.PRINTF[1] := UINT_TO_STRING(PT.SIZE);
			LOG_CL.PRINTF[2] := DT_TO_STRING(DTI);
			LOG_CL.PRINTF[3] := BYTE_TO_STRING(FSD.MODE);
			LOG_MSG();
		END_IF;*)
		(* -----------------------------------------------------------------*)
	END_IF;
	step_2 := 20;

20:	IF FSD.MODE = BYTE#0 THEN
		total_bytes := FSD.FILE_SIZE;
		X.NEW_FILE_SIZE := total_bytes + INT_TO_UDINT(idx);
		IF log_stop OR aw_aktiv THEN
			aw_aktiv := FALSE;
			FSD.MODE := BYTE#5; (* Datei schliessen *)
			(* ---------------- Debug-Message -----------------------*)
			(*IF _debug_enable THEN
				LOG_CL.NEW_MSG := 'FILE_CSV2 - Close: [~2]';
				LOG_CL.PRINTF[2] := DT_TO_STRING(DTI);
				LOG_MSG();
			END_IF;*)
			(* -----------------------------------------------------------------*)
		END_IF;
		step_2 := 30;
	END_IF;

30:	IF FSD.MODE = BYTE#0 THEN (* Befehl beendet ? *)
		IF log_stop THEN
			X.NEW_FILE_RTRIG := TRUE;
			log_stop := FALSE;
			SAVE_DATA.FN_REM := ''; (* remanenten Dateinamen löschen *)
		END_IF;
		step_2 := 00;
	END_IF;

END_CASE;

FS(FSD:=FSD,PT:=PT); (* FILE_SERVER *)
(* Fehlerauswertung *)
IF FSD.ERROR &lt;&gt; BYTE#0 THEN
	ERROR_C := BYTE_TO_DWORD(FSD.ERROR);
	ERROR_T := BYTE#1;
ELSIF X.UCB.BUF_DATA_LOST &gt; UDINT#0 THEN
	ERROR_C := DWORD#2; (* Fehler: Bufferüberlauf - Datenmenge reduzieren *)
	ERROR_T := BYTE#6; 	(* Type: Buffer *)
ELSIF X.UCB.BUF_USED_MAX &gt; USINT#90 THEN
	ERROR_C := DWORD#1; (* Warnung: Buffer auslastung &gt; 90% *)
	ERROR_T := BYTE#6;	(* Type: Buffer *)
ELSE
	ERROR_C := DWORD#0;
	ERROR_T := BYTE#0;
END_IF;

trig_m_last := TRIG_M;

(* revision history
ks	01. jan. 2011	rev 1.0
	original version

ks	13. may. 2011	rev 1.1
	ADD_DATA_REQ, ERROR_T, ERROR_C hinzugefügt

ks	25. july. 2011	rev 1.2
	HEAD Informationen geändert, neuer Spaltenzähler

ks	16. apr. 2012	rev 1.3
	neuer überarbeiteter Code für automatisches File-open/close

ks	8. mar. 2016	rev 1.4
	nur einmal nach satellitenbausteinen scannen

ks	21. mar. 2016	rev 1.5
	prüfung auf freien bufferplatz hinzugefügt
	fehlermeldungen hinzugefügt
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>2d6f97da-1189-4697-a7d9-e2baddf4b39c</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="DLOG_STORE_FILE_HTML" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="X">
              <type>
                <derived name="DLOG_DATA" />
              </type>
            </variable>
            <variable name="SAVE_DATA">
              <type>
                <derived name="DLOG_SAVE" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="ENABLE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="TRIG_M">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="TRIG_T">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="FILENAME">
              <type>
                <string />
              </type>
            </variable>
            <variable name="DTI">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="AUTO_CLOSE">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#15s0ms" />
              </initialValue>
            </variable>
            <variable name="HTML_CAPTION">
              <type>
                <string />
              </type>
            </variable>
            <variable name="HTML_TABLE">
              <type>
                <string />
              </type>
            </variable>
            <variable name="HTML_TR_HEAD">
              <type>
                <string />
              </type>
            </variable>
            <variable name="HTML_TR_EVEN">
              <type>
                <string />
              </type>
            </variable>
            <variable name="HTML_TR_ODD">
              <type>
                <string />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="ERROR_C">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="ERROR_T">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="FS">
              <type>
                <derived name="FILE_SERVER" />
              </type>
            </variable>
            <variable name="FSD">
              <type>
                <derived name="FILE_SERVER_DATA" />
              </type>
            </variable>
            <variable name="PT">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="UCB">
              <type>
                <derived name="UNI_CIRCULAR_BUFFER" />
              </type>
            </variable>
            <variable name="trig_auto">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="trig_stored">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="trig_tmp">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="trig_m_last">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="dti_last">
              <type>
                <DT />
              </type>
              <initialValue>
                <simpleValue value="DATE_AND_TIME#2070-2-6-6:28:15" />
              </initialValue>
            </variable>
            <variable name="fn_last">
              <type>
                <string />
              </type>
            </variable>
            <variable name="str">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="fn">
              <type>
                <string />
              </type>
            </variable>
            <variable name="step_1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="step_2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="idx">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="log_state">
              <type>
                <USINT />
              </type>
            </variable>
            <variable name="log_stop">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="n">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="wd_ton">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="wd_time">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="aw_ton">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="aw_enable">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="aw_aktiv">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="total_bytes">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="cur_ode">
              <type>
                <BYTE />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">X.DTI := DTI; (* Datum / Zeit eintragen *)
X.CLOCK_TRIG := DTI &lt;&gt; dti_last;
dti_last := DTI;
trig_auto := FALSE;
IF X.CLOCK_TRIG THEN (* Impuls in jeder Sekunde *)
	fn := OSCAT_BASIC.DT_TO_STRF(DTI, 0, FILENAME, 0); (* automatische Dateinamen generierung *)
	IF TRIG_T &gt;= T#1000ms THEN (* automatischer Trigger *)
		trig_auto := DT_TO_UDINT(DTI) MOD (TIME_TO_UDINT(TRIG_T) / UDINT#1000) = UDINT#0;
	END_IF;
END_IF;

CASE step_1 OF

00:	IF ENABLE THEN
		aw_enable := AUTO_CLOSE &gt;= T#5s;
		wd_time := SEL(X.LOAD_TIME_MAX &gt; T#0s, T#5ms,X.LOAD_TIME_MAX);
		fn_last := fn; (* aktuellen Dateinnamen speichern *)
		IF X.ID_MAX = USINT#0 THEN (* nur einmal nach Satellitenbausteinen scannen *)
			X.ADD_COM := 01; (* ADD INFO *)
			X.STORE_TYPE := BYTE#4; (* HTML-Modus *)
		END_IF;
		step_1 := 10;

		(* ---------------- Debug-Message -----------------------*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'FILE_HTML1 - Start: File [~1], [~2]';
			LOG_CL.PRINTF[1] := fn_last;
			LOG_CL.PRINTF[2] := DT_TO_STRING(DTI);
			LOG_MSG();
		END_IF;*)
		(* -----------------------------------------------------------------*)

	END_IF;

10:	X.UCB.D_STRING := fn_last;
	IF fn_last = SAVE_DATA.FN_REM THEN
		X.UCB.D_HEAD := WORD#16#F201; (* Filemode open + write *)
		X.ADD_COM := 00;
	ELSE
		X.UCB.D_HEAD := WORD#16#F301; (* Filemode create + write *)
		X.ADD_COM := 02; (* ADD HEADER *)
	END_IF;

	X.UCB.D_MODE := 1; (* Dateinamen als String ablegen *)
	UCB(DATA:=X.UCB); (* Daten eintragen *)
	step_1 := 30;

30:	(* LOG-Trigger verarbeiten *)
	trig_tmp := (TRIG_M AND NOT trig_m_last) OR trig_auto OR X.ADD_DATA_REQ;

	IF ENABLE = FALSE OR fn &lt;&gt; fn_last THEN (* ENABLE = 0 oder neuen Dateinamen -&gt; Log Stop *)
		trig_stored := trig_tmp; (* aktuellen Triggerpuls speichern *)
		X.UCB.D_HEAD := WORD#16#EE00;
		X.UCB.D_MODE := 1;
		UCB(DATA:=X.UCB); (* Element schreiben *)
		X.ADD_COM := 00;
		step_1 := 00;

		(* ---------------- Debug-Message -----------------------*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'FILE_HTML1 - Stop: [~2]';
			LOG_CL.PRINTF[2] := DT_TO_STRING(DTI);
			LOG_MSG();
		END_IF;*)
		(* -----------------------------------------------------------------*)

	ELSIF ENABLE THEN
		IF trig_tmp OR trig_stored THEN (* manueller, automatischer oder externer Trigger *)
			trig_stored := FALSE;
			X.ADD_COM := 03; (* ADD DATA *)
			SAVE_DATA.TRIG_CNT := SAVE_DATA.TRIG_CNT + UDINT#1;
			SAVE_DATA.TRIG_CNT_TOTAL  := SAVE_DATA.TRIG_CNT_TOTAL + UDINT#1;
			(* ---------------- Debug-Message -----------------------*)
			(*IF _debug_enable THEN
				LOG_CL.NEW_MSG := 'FILE_HTML1 - Trig: [~2]';
				LOG_CL.PRINTF[2] := DT_TO_STRING(DTI);
				LOG_MSG();
			END_IF;*)
			(* -----------------------------------------------------------------*)
		ELSE
			X.ADD_COM := 04;	(* ADD DATA REQ *)
		END_IF;
	END_IF;

END_CASE;
X.ADD_DATA_REQ := FALSE; (* externe Anforderung rücksetzen *)

(* ##################################### *)

CASE step_2 OF

00:	aw_ton(IN:= idx &gt; 0 AND aw_enable , PT:= AUTO_CLOSE); (* AutoWrite Timer *)
	IF aw_ton.Q THEN (* Zeitgesteuertes Datenschreiben *)
		aw_aktiv := TRUE;
		step_2 := 10; (* Daten schreiben *)
		(* ---------------- Debug-Message -----------------------*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'FILE_HTML2 - AutoWrite: [~2]';
			LOG_CL.PRINTF[2] := DT_TO_STRING(DTI);
			LOG_MSG();
		END_IF;*)
		(* -----------------------------------------------------------------*)

	ELSE
		wd_ton(IN:= FALSE, PT:= wd_time);
		wd_ton(IN:= TRUE);
		WHILE X.UCB.BUF_COUNT &gt; 0 AND step_2 = 0 AND wd_ton.Q = FALSE DO

			X.UCB.D_MODE := 10;
			UCB(DATA:=X.UCB); (* Element lesen , aber noch nicht entfernen *)

			IF X.UCB.D_HEAD &gt; WORD#16#F000 THEN (* F301 oder F201 *)

				str := CONCAT('&lt;html&gt;&lt;body&gt;&lt;table ',HTML_TABLE);
		        		str := CONCAT(str,'&gt;&lt;caption&gt;');
		        		str := CONCAT(str,HTML_CAPTION);
		        		str := CONCAT(str,'&lt;/caption&gt;');

				IF idx + LEN(str) &lt; SIZEOF(PT.BUFFER) THEN (* Platz für Element vorhanden ? *)

					FSD.MODE := WORD_TO_BYTE(SHR(SHL(X.UCB.D_HEAD,4),12)); (* 0X00 -&gt; 000X = 3 create + write / 2 open + write *)
					FSD.OFFSET := UDINT#0; (* Start bei Dateianfang *)
					FSD.FILENAME := X.UCB.D_STRING; (* Dateiname *)
					PT.SIZE := UINT#0;
					SAVE_DATA.FN_REM := FSD.FILENAME; (* aktuellen Dateinamen remanent sichern *)

					X.NEW_FILE := FSD.FILENAME;
					X.NEW_FILE_SIZE := UDINT#0;
					X.NEW_FILE_RTRIG := FALSE;
					step_2 := 20;
	
					(* Headerdaten schreiben *)
					IF FSD.MODE = BYTE#3 THEN
						SAVE_DATA.TRIG_CNT := UDINT#0; (* Datei neu anlegen -&gt; dann zähler reset *)
						SAVE_DATA.COLOR := FALSE;
						SAVE_DATA.HEAD := FALSE;

						OSCAT_BASIC._STRING_TO_BUFFER(STR:=str, POS:=idx, PT:=ADR(PT.BUFFER), SIZE:=SIZEOF(PT.BUFFER));
						idx := idx + LEN(str);
						X.NEW_FILE_SIZE := total_bytes + INT_TO_UDINT(idx);
					END_IF;

					X.UCB.D_MODE := 11;
					UCB(DATA:=X.UCB); (* Element entfernen *)

					(* ---------------- Debug-Message -----------------------*)
					(*IF _debug_enable THEN
						LOG_CL.NEW_MSG := 'FILE_HTML2 - Create: Mode [~1] , [~2]';
						LOG_CL.PRINTF[2] := DT_TO_STRING(DTI);
						LOG_CL.PRINTF[1] := BYTE_TO_STRING(FSD.MODE);
						LOG_MSG();
					END_IF;*)
					(* -----------------------------------------------------------------*)
				END_IF;

			ELSIF X.UCB.D_HEAD = WORD#16#EE00 THEN (* LOG_STOP Command *)

				str := '&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;';

				IF idx + LEN(str) &lt; SIZEOF(PT.BUFFER) THEN (* Platz für Element vorhanden ? *)

					OSCAT_BASIC._STRING_TO_BUFFER(STR:=str, POS:=idx, PT:=ADR(PT.BUFFER), SIZE:=SIZEOF(PT.BUFFER));
					idx := idx + LEN(str);
					log_stop := TRUE;
					step_2 := 10; (* Daten schreiben *)

					X.UCB.D_MODE := 11;
					UCB(DATA:=X.UCB); (* Element entfernen *)
				END_IF;

			ELSIF idx + LEN(X.UCB.D_STRING) + 120 &lt; SIZEOF(PT.BUFFER) THEN (* Platz für Element vorhanden ? *)

				(* ---------------- Debug-Message -----------------------*)
				(*IF _debug_enable THEN
					LOG_CL.NEW_MSG := 'FILE_CSV2 - BUF: TXT [~1],Pos [~2], [~3]';
					LOG_CL.PRINTF[1] := X.UCB.D_STRING;
					LOG_CL.PRINTF[2] := INT_TO_STRING(idx);
					LOG_CL.PRINTF[3] := DT_TO_STRING(DTI);
					LOG_MSG();
				END_IF;*)
				(* -----------------------------------------------------------------*)

				IF log_state = USINT#0 THEN
					str := '&lt;TR ';
					IF NOT SAVE_DATA.HEAD THEN
						str := CONCAT(str,HTML_TR_HEAD);
						SAVE_DATA.HEAD := TRUE;
					ELSIF SAVE_DATA.COLOR THEN
						str := CONCAT(str,HTML_TR_EVEN);
					ELSE
						str := CONCAT(str,HTML_TR_ODD);
					END_IF;
					str := CONCAT(str,'&gt;&lt;TD&gt;');
				ELSE
					str := '&lt;TD&gt;';
				END_IF;

				OSCAT_BASIC._STRING_TO_BUFFER(STR:=str, POS:=idx, PT:=ADR(PT.BUFFER), SIZE:=SIZEOF(PT.BUFFER));
				idx := idx + LEN(str);
				log_state := log_state + USINT#1;

				OSCAT_BASIC._STRING_TO_BUFFER(STR:=X.UCB.D_STRING, POS:=idx, PT:=ADR(PT.BUFFER), SIZE:=SIZEOF(PT.BUFFER));
				idx := idx + LEN(X.UCB.D_STRING);
				n := n + USINT#1;
				IF n &gt;= X.ID_MAX THEN
					n := USINT#0;
					str := '&lt;/TD&gt;&lt;/TR&gt;';
					SAVE_DATA.COLOR := NOT SAVE_DATA.COLOR;
					log_state := USINT#0;
				ELSE
					str := '&lt;/TD&gt;';
				END_IF;
				OSCAT_BASIC._STRING_TO_BUFFER(STR:=str, POS:=idx, PT:=ADR(PT.BUFFER), SIZE:=SIZEOF(PT.BUFFER));
				idx := idx + LEN(str);
				X.NEW_FILE_SIZE := total_bytes + INT_TO_UDINT(idx);

				X.UCB.D_MODE := 11;
				UCB(DATA:=X.UCB); (* Element entfernen *)

			ELSE (* kein Platz vorhanden *)
				step_2 := 10; (* Daten schreiben *)

			END_IF;
			wd_ton();
		END_WHILE;
	END_IF;

10:	IF idx &gt; 0 THEN (* Daten schreiben *)
		FSD.MODE := BYTE#2; (* File_Open_Exist + File_Write *)
		FSD.OFFSET := UDINT#4294967294; (* 16#FFFF_FFFE -&gt;Spezialcode: Daten automatisch an Dateiende anhängen *)
		PT.SIZE := INT_TO_UINT(idx); (* Datenlänge eintragen *)
		idx := 0;
		(* ---------------- Debug-Message -----------------------*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'FILE_HTML2 - WriteData: Mode [~3] Size [~1] , [~2]';
			LOG_CL.PRINTF[1] := UINT_TO_STRING(PT.SIZE);
			LOG_CL.PRINTF[2] := DT_TO_STRING(DTI);
			LOG_CL.PRINTF[3] := BYTE_TO_STRING(FSD.MODE);
			LOG_MSG();
		END_IF;*)
		(* -----------------------------------------------------------------*)
	END_IF;
	step_2 := 20;

20:	IF FSD.MODE = BYTE#0 THEN
		total_bytes := FSD.FILE_SIZE;
		X.NEW_FILE_SIZE := total_bytes + INT_TO_UDINT(idx);
		IF log_stop OR aw_aktiv THEN
			aw_aktiv := FALSE;
			FSD.MODE := BYTE#5; (* Datei schliessen *)
			(* ---------------- Debug-Message -----------------------*)
			(*IF _debug_enable THEN
				LOG_CL.NEW_MSG := 'FILE_HTML2 - Close: [~2]';
				LOG_CL.PRINTF[2] := DT_TO_STRING(DTI);
				LOG_MSG();
			END_IF;*)
			(* -----------------------------------------------------------------*)
		END_IF;
		step_2 := 30;
	END_IF;

30:	IF FSD.MODE = BYTE#0 THEN (* Datei schliessen beendet *)
		IF log_stop THEN
			X.NEW_FILE_RTRIG := TRUE;
			log_stop := FALSE;
			SAVE_DATA.FN_REM := ''; (* remanenten Dateinamen löschen *)
		END_IF;
		step_2 := 00;
	END_IF;

END_CASE;

FS(FSD:=FSD,PT:=PT); (* FILE_SERVER *)

(* Fehlerauswertung *)
IF FSD.ERROR &lt;&gt; BYTE#0 THEN
	ERROR_C := BYTE_TO_DWORD(FSD.ERROR);
	ERROR_T := BYTE#1;
ELSIF X.UCB.BUF_DATA_LOST &gt; UDINT#0 THEN
	ERROR_C := DWORD#2; (* Fehler: Bufferüberlauf - Datenmenge reduzieren *)
	ERROR_T := BYTE#6; 	(* Type: Buffer *)
ELSIF X.UCB.BUF_USED_MAX &gt; USINT#90 THEN
	ERROR_C := DWORD#1; (* Warnung: Buffer auslastung &gt; 90% *)
	ERROR_T := BYTE#6;	(* Type: Buffer *)
ELSE
	ERROR_C := DWORD#0;
	ERROR_T := BYTE#0;
END_IF;

trig_m_last := TRIG_M;

(* revision history
ks	25. july. 2011	rev 1.0
	original version

ks	16. apr. 2012	rev 1.1
	neuer überarbeiteter Code für automatisches File-open/close

ks	8. mar. 2016	rev 1.2
	nur einmal nach satellitenbausteinen scannen

ks	21. mar. 2016	rev 1.3
	prüfung auf freien bufferplatz hinzugefügt
	fehlermeldungen hinzugefügt

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>8f4f199d-bbc0-43a4-b165-707529806e63</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="DLOG_STORE_FILE_XML" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="X">
              <type>
                <derived name="DLOG_DATA" />
              </type>
            </variable>
            <variable name="SAVE_DATA">
              <type>
                <derived name="DLOG_SAVE" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="ENABLE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="TRIG_M">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="TRIG_T">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="FILENAME">
              <type>
                <string />
              </type>
            </variable>
            <variable name="DTI">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="AUTO_CLOSE">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#15s0ms" />
              </initialValue>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="ERROR_C">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="ERROR_T">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="FS">
              <type>
                <derived name="FILE_SERVER" />
              </type>
            </variable>
            <variable name="FSD">
              <type>
                <derived name="FILE_SERVER_DATA" />
              </type>
            </variable>
            <variable name="PT">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="UCB">
              <type>
                <derived name="UNI_CIRCULAR_BUFFER" />
              </type>
            </variable>
            <variable name="trig_auto">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="trig_stored">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="trig_tmp">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="trig_m_last">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="dti_last">
              <type>
                <DT />
              </type>
              <initialValue>
                <simpleValue value="DATE_AND_TIME#2070-2-6-6:28:15" />
              </initialValue>
            </variable>
            <variable name="fn_last">
              <type>
                <string />
              </type>
            </variable>
            <variable name="fn">
              <type>
                <string />
              </type>
            </variable>
            <variable name="str">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="step_1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="step_2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="idx">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="log_state">
              <type>
                <USINT />
              </type>
            </variable>
            <variable name="log_stop">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="n">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="wd_ton">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="wd_time">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="aw_ton">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="aw_enable">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="aw_aktiv">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="total_bytes">
              <type>
                <UDINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">X.DTI := DTI; (* Datum / Zeit eintragen *)
X.CLOCK_TRIG := DTI &lt;&gt; dti_last;
dti_last := DTI;
trig_auto := FALSE;
IF X.CLOCK_TRIG THEN (* Impuls in jeder Sekunde *)
	fn := OSCAT_BASIC.DT_TO_STRF(DTI, 0, FILENAME, 0); (* automatische Dateinamen generierung *)
	IF TRIG_T &gt;= T#1000ms THEN (* automatischer Trigger *)
		trig_auto := DT_TO_UDINT(DTI) MOD (TIME_TO_UDINT(TRIG_T) / UDINT#1000) = UDINT#0;
	END_IF;
END_IF;

CASE step_1 OF

00:	IF ENABLE THEN
		aw_enable := AUTO_CLOSE &gt;= T#5s;
		wd_time := SEL(X.LOAD_TIME_MAX &gt; T#0s, T#5ms,X.LOAD_TIME_MAX);
		fn_last := fn; (* aktuellen Dateinnamen speichern *)
		IF X.ID_MAX = USINT#0 THEN (* nur einmal nach Satellitenbausteinen scannen *)
			X.ADD_COM := 01; (* ADD INFO *)
			X.STORE_TYPE := BYTE#3; (* XML-Modus *)
		END_IF;
		step_1 := 10;

		(* ---------------- Debug-Message -----------------------*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'FILE_XML1 - Start: File [~1], [~2]';
			LOG_CL.PRINTF[1] := fn_last;
			LOG_CL.PRINTF[2] := DT_TO_STRING(DTI);
			LOG_MSG();
		END_IF;*)
		(* -----------------------------------------------------------------*)

	END_IF;

10:	X.UCB.D_STRING := fn_last;
	IF fn_last = SAVE_DATA.FN_REM THEN
		X.UCB.D_HEAD := WORD#16#F201; (* Filemode open + write *)
		X.ADD_COM := 00;
	ELSE
		X.UCB.D_HEAD := WORD#16#F301; (* Filemode create + write *)
		X.ADD_COM := 02; (* ADD HEADER *)
	END_IF;

	X.UCB.D_MODE := 1; (* Dateinamen als String ablegen *)
	UCB(DATA:=X.UCB); (* Daten eintragen *)
	step_1 := 30;

30:	(* LOG-Trigger verarbeiten *)
	trig_tmp := (TRIG_M AND NOT trig_m_last) OR trig_auto OR X.ADD_DATA_REQ;

	IF ENABLE = FALSE OR fn &lt;&gt; fn_last THEN (* ENABLE = 0 oder neuen Dateinamen -&gt; Log Stop *)
		trig_stored := trig_tmp; (* aktuellen Triggerpuls speichern *)
		X.UCB.D_HEAD := WORD#16#EE00;
		X.UCB.D_MODE := 1;
		UCB(DATA:=X.UCB); (* Element schreiben *)
		X.ADD_COM := 00;
		step_1 := 00;

		(* ---------------- Debug-Message -----------------------*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'FILE_XML1 - Stop: [~2]';
			LOG_CL.PRINTF[2] := DT_TO_STRING(DTI);
			LOG_MSG();
		END_IF;*)
		(* -----------------------------------------------------------------*)

	ELSIF ENABLE THEN
		IF trig_tmp OR trig_stored THEN (* manueller, automatischer oder externer Trigger *)
			trig_stored := FALSE;
			X.ADD_COM := 03; (* ADD DATA *)
			SAVE_DATA.TRIG_CNT := SAVE_DATA.TRIG_CNT + UDINT#1;
			SAVE_DATA.TRIG_CNT_TOTAL  := SAVE_DATA.TRIG_CNT_TOTAL + UDINT#1;
			(* ---------------- Debug-Message -----------------------*)
			(*IF _debug_enable THEN
				LOG_CL.NEW_MSG := 'FILE_XML1 - Trig: [~2]';
				LOG_CL.PRINTF[2] := DT_TO_STRING(DTI);
				LOG_MSG();
			END_IF;*)
			(* -----------------------------------------------------------------*)
		ELSE
			X.ADD_COM := 04;	(* ADD DATA REQ *)
		END_IF;
	END_IF;

END_CASE;
X.ADD_DATA_REQ := FALSE; (* externe Anforderung rücksetzen *)

(* ##################################### *)

CASE step_2 OF

00:	aw_ton(IN:= idx &gt; 0 AND aw_enable , PT:= AUTO_CLOSE); (* AutoWrite Timer *)
	IF aw_ton.Q THEN (* Zeitgesteuertes Datenschreiben *)
		aw_aktiv := TRUE;
		step_2 := 10; (* Daten schreiben *)
		(* ---------------- Debug-Message -----------------------*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'FILE_XML2 - AutoWrite: [~2]';
			LOG_CL.PRINTF[2] := DT_TO_STRING(DTI);
			LOG_MSG();
		END_IF;*)
		(* -----------------------------------------------------------------*)

	ELSE
		wd_ton(IN:= FALSE, PT:= wd_time);
		wd_ton(IN:= TRUE);
		WHILE X.UCB.BUF_COUNT &gt; 0 AND step_2 = 0 AND wd_ton.Q = FALSE DO

			X.UCB.D_MODE := 10;
			UCB(DATA:=X.UCB); (* Element lesen , aber noch nicht entfernen *)

			IF X.UCB.D_HEAD &gt; WORD#16#F000 THEN (* F301 oder F201 *)

				str := '&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;table&gt;';

				IF idx + LEN(str) &lt; SIZEOF(PT.BUFFER) THEN (* Platz für Element vorhanden ? *)

					FSD.MODE := WORD_TO_BYTE(SHR(SHL(X.UCB.D_HEAD,4),12)); (* 0X00 -&gt; 000X = 3 create + write / 2 open + write *)
					FSD.OFFSET := UDINT#0; (* Start bei Dateianfang *)
					FSD.FILENAME := X.UCB.D_STRING; (* Dateiname *)
					PT.SIZE := UINT#0;
					SAVE_DATA.FN_REM := FSD.FILENAME; (* aktuellen Dateinamen remanent sichern *)

					X.NEW_FILE := FSD.FILENAME;
					X.NEW_FILE_SIZE := UDINT#0;
					X.NEW_FILE_RTRIG := FALSE;
					step_2 := 20;
	
					(* Headerdaten schreiben *)
					IF FSD.MODE = BYTE#3 THEN
						SAVE_DATA.TRIG_CNT := UDINT#0; (* Datei neu anlegen -&gt; dann zähler reset *)

						OSCAT_BASIC._STRING_TO_BUFFER(STR:=str, POS:=idx, PT:=ADR(PT.BUFFER), SIZE:=SIZEOF(PT.BUFFER));
						idx := idx + LEN(str);
						X.NEW_FILE_SIZE := total_bytes + INT_TO_UDINT(idx);
					END_IF;

					X.UCB.D_MODE := 11;
					UCB(DATA:=X.UCB); (* Element entfernen *)

					(* ---------------- Debug-Message -----------------------*)
					(*IF _debug_enable THEN
						LOG_CL.NEW_MSG := 'FILE_XML2 - Create: Mode [~1] , [~2]';
						LOG_CL.PRINTF[2] := DT_TO_STRING(DTI);
						LOG_CL.PRINTF[1] := BYTE_TO_STRING(FSD.MODE);
						LOG_MSG();
					END_IF;*)
					(* -----------------------------------------------------------------*)
				END_IF;

			ELSIF X.UCB.D_HEAD = WORD#16#EE00 THEN (* LOG_STOP Command *)

				str := '&lt;/table&gt;';

				IF idx + LEN(str) &lt; SIZEOF(PT.BUFFER) THEN (* Platz für Element vorhanden ? *)

					OSCAT_BASIC._STRING_TO_BUFFER(STR:=str, POS:=idx, PT:=ADR(PT.BUFFER), SIZE:=SIZEOF(PT.BUFFER));
					idx := idx + LEN(str);
					log_stop := TRUE;
					step_2 := 10; (* Daten schreiben *)

					X.UCB.D_MODE := 11;
					UCB(DATA:=X.UCB); (* Element entfernen *)

				END_IF;

			ELSIF idx + LEN(X.UCB.D_STRING) + 120 &lt; SIZEOF(PT.BUFFER) THEN (* Platz für Element vorhanden ? *)

				(* ---------------- Debug-Message -----------------------*)
				(*IF _debug_enable THEN
					LOG_CL.NEW_MSG := 'FILE_XML2 - BUF: TXT [~1],Pos [~2], [~3]';
					LOG_CL.PRINTF[1] := X.UCB.D_STRING;
					LOG_CL.PRINTF[2] := INT_TO_STRING(idx);
					LOG_CL.PRINTF[3] := DT_TO_STRING(DTI);
					LOG_MSG();
				END_IF;*)
				(* -----------------------------------------------------------------*)

				IF log_state = USINT#0 THEN
					str := '&lt;row&gt;&lt;entry&gt;';
				ELSE
					str := '&lt;entry&gt;';
				END_IF;

				OSCAT_BASIC._STRING_TO_BUFFER(STR:=str, POS:=idx, PT:=ADR(PT.BUFFER), SIZE:=SIZEOF(PT.BUFFER));
				idx := idx + LEN(str);
				log_state := log_state + USINT#1;

				OSCAT_BASIC._STRING_TO_BUFFER(STR:=X.UCB.D_STRING, POS:=idx, PT:=ADR(PT.BUFFER), SIZE:=SIZEOF(PT.BUFFER));
				idx := idx + LEN(X.UCB.D_STRING);

				n := n + USINT#1;
				IF n &gt;= X.ID_MAX THEN
					n := USINT#0;
					str := '&lt;/entry&gt;&lt;/row&gt;';
					log_state := USINT#0;
				ELSE
					str := '&lt;/entry&gt;';
				END_IF;
				OSCAT_BASIC._STRING_TO_BUFFER(STR:=str, POS:=idx, PT:=ADR(PT.BUFFER), SIZE:=SIZEOF(PT.BUFFER));
				idx := idx + LEN(str);
				X.NEW_FILE_SIZE := total_bytes + INT_TO_UDINT(idx);

				X.UCB.D_MODE := 11;
				UCB(DATA:=X.UCB); (* Element entfernen *)

			ELSE (* kein Platz vorhanden *)
				step_2 := 10; (* Daten schreiben *)
			END_IF;
			wd_ton();
		END_WHILE;
	END_IF;

10:	IF idx &gt; 0 THEN (* Daten schreiben *)
		FSD.MODE := BYTE#2; (* File_Open_Exist + File_Write *)
		FSD.OFFSET := UDINT#4294967294; (* 16#FFFF_FFFE -&gt;Spezialcode: Daten automatisch an Dateiende anhängen *)
		PT.SIZE := INT_TO_UINT(idx); (* Datenlänge eintragen *)
		idx := 0;
		(* ---------------- Debug-Message -----------------------*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'FILE_XML2 - WriteData: Mode [~3] Size [~1] , [~2]';
			LOG_CL.PRINTF[1] := UINT_TO_STRING(PT.SIZE);
			LOG_CL.PRINTF[2] := DT_TO_STRING(DTI);
			LOG_CL.PRINTF[3] := BYTE_TO_STRING(FSD.MODE);
			LOG_MSG();
		END_IF;*)
		(* -----------------------------------------------------------------*)
	END_IF;
	step_2 := 20;

20:	IF FSD.MODE = BYTE#0 THEN
		total_bytes := FSD.FILE_SIZE;
		X.NEW_FILE_SIZE := total_bytes + INT_TO_UDINT(idx);
		IF log_stop OR aw_aktiv THEN
			aw_aktiv := FALSE;
			FSD.MODE := BYTE#5; (* Datei schliessen *)
			(* ---------------- Debug-Message -----------------------*)
			(*IF _debug_enable THEN
				LOG_CL.NEW_MSG := 'FILE_XML2 - Close: [~2]';
				LOG_CL.PRINTF[2] := DT_TO_STRING(DTI);
				LOG_MSG();
			END_IF;*)
			(* -----------------------------------------------------------------*)
		END_IF;
		step_2 := 30;
	END_IF;

30:	IF FSD.MODE = BYTE#0 THEN (* Datei schliessen beendet *)
		IF log_stop THEN
			X.NEW_FILE_RTRIG := TRUE;
			log_stop := FALSE;
			SAVE_DATA.FN_REM := ''; (* remanenten Dateinamen löschen *)
		END_IF;
		step_2 := 00;
	END_IF;

END_CASE;

FS(FSD:=FSD,PT:=PT); (* FILE_SERVER *)

(* Fehlerauswertung *)
IF FSD.ERROR &lt;&gt; BYTE#0 THEN
	ERROR_C := BYTE_TO_DWORD(FSD.ERROR);
	ERROR_T := BYTE#1;
ELSIF X.UCB.BUF_DATA_LOST &gt; UDINT#0 THEN
	ERROR_C := DWORD#2; (* Fehler: Bufferüberlauf - Datenmenge reduzieren *)
	ERROR_T := BYTE#6; 	(* Type: Buffer *)
ELSIF X.UCB.BUF_USED_MAX &gt; USINT#90 THEN
	ERROR_C := DWORD#1; (* Warnung: Buffer auslastung &gt; 90% *)
	ERROR_T := BYTE#6;	(* Type: Buffer *)
ELSE
	ERROR_C := DWORD#0;
	ERROR_T := BYTE#0;
END_IF;

trig_m_last := TRIG_M;

(* revision history
ks	25. july. 2011	rev 1.0
	original version

ks	16. apr. 2012	rev 1.1
	neuer überarbeiteter Code für automatisches File-open/close

ks	8. mar. 2016	rev 1.2
	nur einmal nach satellitenbausteinen scannen

ks	21. mar. 2016	rev 1.3
	prüfung auf freien bufferplatz hinzugefügt
	fehlermeldungen hinzugefügt

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>79e44d99-6eb9-4610-b6e0-0055a8d482fd</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="DLOG_STORE_MYSQL" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="SQL_INFO">
              <type>
                <derived name="MYSQL_INFO" />
              </type>
            </variable>
            <variable name="X">
              <type>
                <derived name="DLOG_DATA" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="ENABLE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="TRIG_M">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="TRIG_T">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="DTI">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="URL">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="DB_NAME">
              <type>
                <string length="64" />
              </type>
            </variable>
            <variable name="TB_NAME">
              <type>
                <string length="64" />
              </type>
            </variable>
            <variable name="AUTO_DELETE">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="TIMEOUT">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="DNS_IP4">
              <type>
                <DWORD />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="ERROR_C">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="ERROR_T">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="UCB">
              <type>
                <derived name="UNI_CIRCULAR_BUFFER" />
              </type>
            </variable>
            <variable name="MYSQL_CONTROL">
              <type>
                <derived name="MYSQL_CONTROL" />
              </type>
            </variable>
            <variable name="trig_auto">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="trig_tmp">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="trig_m_last">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="dti_last">
              <type>
                <DT />
              </type>
              <initialValue>
                <simpleValue value="DATE_AND_TIME#2070-2-6-6:28:15" />
              </initialValue>
            </variable>
            <variable name="enable_last">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="step">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="idx">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="n">
              <type>
                <USINT />
              </type>
            </variable>
            <variable name="snd_text">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="snd_size">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="sql_command">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="next_step">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="i1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="i2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="y">
              <type>
                <derived name="MYSQL_COM" />
              </type>
            </variable>
            <variable name="del_dt">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="del_start">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="run">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">X.DTI := DTI; (* Datum / Zeit eintragen *)
X.CLOCK_TRIG := DTI &lt;&gt; dti_last;
dti_last := DTI;
trig_auto := FALSE;
IF X.CLOCK_TRIG THEN (* Impuls in jeder Sekunde *)
	del_start := DT_TO_UDINT(DTI) - del_dt &gt; AUTO_DELETE AND AUTO_DELETE &gt; UDINT#0;
	IF TRIG_T &gt;= T#1000ms THEN (* automatischer Trigger *)
		trig_auto := DT_TO_UDINT(DTI) MOD (TIME_TO_UDINT(TRIG_T) / UDINT#1000) = UDINT#0;
	END_IF;
END_IF;
X.ADD_COM := 00;

CASE step OF

00:	IF ENABLE AND enable_last = FALSE THEN
		y.SQL_URL := URL;
		y.TIMEOUT := TIMEOUT;
		y.DNS_IP4 := DNS_IP4;
		y.SQL_CON := TRUE;

		X.UCB.D_MODE := 99; (* Buffer reset - Alles löschen *)
		UCB(DATA:=X.UCB);

		IF X.ID_MAX = USINT#0 THEN (* nur einmal nach Satellitenbausteinen scannen *)
			X.ADD_COM := 01; (* ADD INFO *)
			X.STORE_TYPE := BYTE#5; (* MySQL-Modus *)
		END_IF;

		step := 05;
	END_IF;

05:	X.ADD_COM := 02; (* ADD HEADER *)
	step := 10;

10:	IF SQL_INFO.SQL_CONNECTED THEN
		sql_command := BYTE#3; (* CREATE DATABASE IF NOT EXISTS `db_name` *)
		snd_text :=  CONCAT('CREATE DATABASE IF NOT EXISTS `' ,DB_NAME);
		snd_text :=  CONCAT(snd_text, '`');
		next_step := 20;
	END_IF;

20:	sql_command := BYTE#2; (* 0x02 COM_INIT_DB mysql_select_db *)
	snd_text := DB_NAME;
	next_step := 30;

30:	(* CREATE TABLE IF NOT EXISTS tb_name (Timestamp TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP, n1,n2) *)
	sql_command := BYTE#0;
	idx := 5;
	n := USINT#0;
	WHILE sql_command = BYTE#0 DO
		IF n = USINT#0 THEN
			snd_text := CONCAT('CREATE TABLE IF NOT EXISTS `', TB_NAME);
			snd_text := CONCAT(snd_text,'` (`ID` BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY ,');
			snd_text := CONCAT(snd_text,' store_timestamp TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP');
		ELSIF n &lt;= X.ID_MAX THEN
			X.UCB.D_MODE := 12; (* Element lesen und löschen *)
			UCB(DATA:=X.UCB);
			snd_text := CONCAT(', `',X.UCB.D_STRING);
			CASE WORD_TO_INT(SHR(X.UCB.D_HEAD,8)) OF
			02:	snd_text := CONCAT(snd_text, '` FLOAT'); (* REAL *)
			06:	snd_text := CONCAT(snd_text, '` BOOL'); (* BOOL *)
			08:	snd_text := CONCAT(snd_text, '` INT'); (* DINT *)
			13:	snd_text := CONCAT(snd_text, '` DATETIME'); (* DT *)
			ELSE
				snd_text := CONCAT(snd_text, '` VARCHAR(80)'); (* STRING(80) *)
			END_CASE;
		ELSE
			snd_text := ')';
			sql_command := BYTE#3;
			snd_size := idx + LEN(snd_text);
			next_step := 40;
		END_IF;
		OSCAT_BASIC._STRING_TO_BUFFER(str:=snd_text,pos:=idx,pt:=ADR(y.S_BUF.BUFFER),size:=SIZEOF(y.S_BUF.BUFFER)); (* String in puffer kopieren *)
		idx := idx + LEN(snd_text);
		n := n + USINT#1;

		(*####################  DEBUG-MESSAGE  ###################################*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'dlog_mysql: create &gt;~1&lt;';
			LOG_CL.PRINTF[1] := snd_text;
			LOG_MSG();
		END_IF;*)
		(*########################################################################*)
	END_WHILE;

40:	IF del_start THEN
		del_start := FALSE;
		sql_command := BYTE#3; (* DELETE FROM `tb_name` WHERE TIMESTAMPDIFF(SECOND, Timestamp, NOW()) &gt; xxx *)
		snd_text := CONCAT('DELETE FROM `', TB_NAME);
		snd_text := CONCAT(snd_text, '` WHERE TIMESTAMPDIFF(SECOND, store_timestamp, NOW()) &gt; ');
		snd_text := CONCAT(snd_text, UDINT_TO_STRING(AUTO_DELETE));
		next_step := 40;
		del_dt := DT_TO_UDINT(DTI);
		(*####################  DEBUG-MESSAGE  ###################################*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'dlog_mysql: # delete time:~1 &gt;~2&lt;';
			LOG_CL.PRINTF[1] := UDINT_TO_STRING(AUTO_DELETE);
			LOG_CL.PRINTF[2] := snd_text;
			LOG_MSG();
		END_IF;*)
		(*########################################################################*)

         (* INSERT INTO `tb_name` VALUES (CURRENT_TIMESTAMP,  "n1","n2") *)
	ELSIF X.UCB.BUF_COUNT &gt;= USINT_TO_INT(X.ID_MAX) AND step &gt; 0 THEN (* Neue Datenreihe(n) vorhanden *)
		idx := 5;
		n := USINT#0;
		sql_command := BYTE#0;
		WHILE sql_command = BYTE#0 DO
			IF n = USINT#0 THEN
				snd_text := CONCAT('INSERT INTO `', TB_NAME);
				snd_text := CONCAT(snd_text,'` VALUES (NULL, CURRENT_TIMESTAMP');
			ELSIF n &lt;= X.ID_MAX THEN
				X.UCB.D_MODE := 12; (* Element lesen und löschen *)
				UCB(DATA:=X.UCB);
				snd_text := CONCAT(', "',X.UCB.D_STRING);
				snd_text := CONCAT(snd_text, '"');
			ELSE
				snd_text := ')';
				sql_command := BYTE#3;
				snd_size := idx + LEN(snd_text);
				next_step := 40;
			END_IF;
			OSCAT_BASIC._STRING_TO_BUFFER(str:=snd_text,pos:=idx,pt:=ADR(y.S_BUF.BUFFER),size:=SIZEOF(y.S_BUF.BUFFER)); (* String in puffer kopieren *)
			idx := idx + LEN(snd_text);
			n := n + USINT#1;

			(*####################  DEBUG-MESSAGE  ###################################*)
			(*IF _debug_enable THEN
				LOG_CL.NEW_MSG := 'dlog_mysql: insert &gt;~1&lt;';
				LOG_CL.PRINTF[1] := snd_text;
				LOG_MSG();
			END_IF;*)
			(*########################################################################*)
		END_WHILE;
	END_IF;

	IF ENABLE THEN 	(* LOG-Trigger verarbeiten *)
		trig_tmp := (TRIG_M AND NOT trig_m_last) OR trig_auto OR X.ADD_DATA_REQ;

		IF trig_tmp THEN (* manueller, automatischer oder externer Trigger *)
			X.ADD_COM := 03; (* ADD DATA *)
			(* ---------------- Debug-Message -----------------------*)
			(*IF _debug_enable THEN
				LOG_CL.NEW_MSG := 'dlog_mysql: Trigger: DATE [~2]';
				LOG_CL.PRINTF[2] := DT_TO_STRING(DTI);
				LOG_MSG();
			END_IF;*)
			(* -----------------------------------------------------------------*)
		ELSE
			X.ADD_COM := 04;	(* ADD DATA REQ *)
		END_IF;
	ELSE
		y.SQL_CON := FALSE; (* MySQL Verbindung beenden *)
		step := 0;
	END_IF;
	X.ADD_DATA_REQ := FALSE;

(* ~~~~~~~~~~~~~~~~~~~~~~ *)

199:IF y.SQL_RCV_STATE = BYTE#1 THEN (* OK *)
		step := next_step;
	ELSIF y.SQL_RCV_STATE = BYTE#2 THEN  (* FEHLER *)
		step := 0;
	END_IF;

END_CASE;

(* ########################## *)
(* SQL-Kommando ausführen *)
IF sql_command &gt; BYTE#0 THEN

	IF snd_size &gt; 0 THEN
		y.S_BUF.SIZE := INT_TO_UINT(snd_size);
		snd_size := 0;
	ELSE
		OSCAT_BASIC._STRING_TO_BUFFER(str:=snd_text,pos:=5,pt:=ADR(y.S_BUF.BUFFER),size:=SIZEOF(y.S_BUF.BUFFER)); (* String in puffer kopieren *)
		y.S_BUF.SIZE := INT_TO_UINT(5 + LEN(snd_text));
		snd_text := '';
	END_IF;

	IF y.S_BUF.SIZE &gt; SIZEOF(y.S_BUF.BUFFER) THEN (* buffer überlauf erkannt -&gt; Abbruch *)
		y.S_BUF.SIZE := 0;
		sql_command := BYTE#0;
		y.SQL_CON := FALSE; (* MySQL Verbindung beenden *)
		step := 999; (* Dummy-Schritt *)
	ELSE

		i2 := UINT_TO_INT(y.S_BUF.SIZE) - 1; (* alle " zeichen mit ' ersetzen *)
		FOR i1 := 5 TO i2 DO
			IF y.S_BUF.BUFFER[i1] = BYTE#34 THEN
				y.S_BUF.BUFFER[i1] := BYTE#39;
			END_IF;
		END_FOR;
	
		y.S_BUF.BUFFER[4] := sql_command;
		y.SQL_PACKET_NO := BYTE#255;
		sql_command := BYTE#0;
		step := 199;
	END_IF;
END_IF;

(* ########################## *)

MYSQL_CONTROL(COM:= y, INFO:=SQL_INFO);

(* Fehlerauswertung *)
IF step = 999 THEN	(* Buffer überlauf *)
	ERROR_C := DWORD#3; (* Netzwerkbuffer überlauf *)
	ERROR_T := BYTE#6; 	(* Type: Buffer *)
ELSIF y.ERROR_T &gt; BYTE#0 THEN	(* SQL Error *)
	ERROR_C := y.ERROR_C;
	ERROR_T := y.ERROR_T;
	step := 0;
ELSIF X.UCB.BUF_DATA_LOST &gt; UDINT#0 THEN
	ERROR_C := DWORD#2; (* Fehler: Bufferüberlauf - Datenmenge reduzieren *)
	ERROR_T := BYTE#6; 	(* Type: Buffer *)
ELSIF X.UCB.BUF_USED_MAX &gt; USINT#90 THEN
	ERROR_C := DWORD#1; (* Warnung: Buffer auslastung &gt; 90% *)
	ERROR_T := BYTE#6;	(* Type: Buffer *)
ELSE
	ERROR_C := DWORD#0;
	ERROR_T := BYTE#0;
END_IF;



(* ########################## *)

trig_m_last := TRIG_M;
enable_last := ENABLE;
run := step &gt; 0;

(* revision history
ks	20. apr. 2012	rev 1.0
	original version

ks	17. jan. 2014	rev 1.1
	DELTA Error 

ks	8. mar. 2016	rev 1.2
	nur einmal nach satellitenbausteinen scannen

ks	21. mar. 2016	rev 1.3
	prüfung auf bufferüberlauf und fehlermeldungen hinzugefügt

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>62bb84a7-6db1-4ac6-b31c-69e7ac34aceb</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="DLOG_STORE_RRD" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="X">
              <type>
                <derived name="DLOG_DATA" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="ENABLE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="TRIG_M">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="TRIG_T">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="URL">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="DTI">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="SEP">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="DNS_IP4">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="TIMEOUT">
              <type>
                <TIME />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="ERROR_C">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="ERROR_T">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="UCB">
              <type>
                <derived name="UNI_CIRCULAR_BUFFER" />
              </type>
            </variable>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> IP_Control Verwaltungsstruktur </xhtml>
              </documentation>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="URL_DATA">
              <type>
                <derived name="url" />
              </type>
            </variable>
            <variable name="DNS_CLIENT">
              <type>
                <derived name="DNS_CLIENT" />
              </type>
            </variable>
            <variable name="HTTP_GET">
              <type>
                <derived name="HTTP_GET" />
              </type>
            </variable>
            <variable name="IPC">
              <type>
                <derived name="IP_CONTROL" />
              </type>
            </variable>
            <variable name="trig_auto">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="trig_stored">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="trig_tmp">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="trig_m_last">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="dti_last">
              <type>
                <DT />
              </type>
              <initialValue>
                <simpleValue value="DATE_AND_TIME#2070-2-6-6:28:15" />
              </initialValue>
            </variable>
            <variable name="step_1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="step_2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="sep_char">
              <type>
                <string length="1" />
              </type>
            </variable>
            <variable name="url_query">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="n">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">X.DTI := DTI; (* Datum / Zeit eintragen *)
X.CLOCK_TRIG := DTI &lt;&gt; dti_last;
dti_last := DTI;
trig_auto := FALSE;
IF X.CLOCK_TRIG THEN (* Impuls in jeder Sekunde *)
	IF TRIG_T &gt;= T#1000ms THEN (* automatischer Trigger *)
		trig_auto := DT_TO_UDINT(DTI) MOD (TIME_TO_UDINT(TRIG_T) / UDINT#1000) = UDINT#0;
	END_IF;
END_IF;

CASE step_1 OF

00:	IF ENABLE THEN
		IF X.ID_MAX = USINT#0 THEN (* nur einmal nach Satellitenbausteinen scannen *)
			X.ADD_COM := 01; (* ADD INFO *)
			X.STORE_TYPE := BYTE#1; (* RRD-Modus *)
		END_IF;

		ERROR_T := BYTE#0;
		ERROR_C := DWORD#0;

		X.UCB.D_MODE := 99;
		UCB(DATA:=X.UCB); (* Buffer löschen *)

		URL_DATA:=STRING_TO_URL(STR:=URL,DEFAULT_PROTOCOL:='',DEFAULT_PATH:=''); (* URL zerlegen *)
		sep_char := OSCAT_BASIC.CHR_TO_STRING(SEP);
		url_query := URL_DATA.QUERY;
		step_1 := 30;

		(* ---------------- Debug-Message -----------------------*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'FILE_RRD1 - Start: DATE [~2]';
			LOG_CL.PRINTF[2] := DT_TO_STRING(DTI);
			LOG_MSG();
		END_IF;*)
		(* -----------------------------------------------------------------*)

	END_IF;

30:	(* LOG-Trigger verarbeiten *)
	trig_tmp := (TRIG_M AND NOT trig_m_last) OR trig_auto OR X.ADD_DATA_REQ;

	IF ENABLE = FALSE THEN (* ENABLE = 0 -&gt; Log Stop *)
		X.ADD_COM := 00;
		step_1 := 00;

		(* ---------------- Debug-Message -----------------------*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'FILE_RRD1 - Stop: DATE [~2]';
			LOG_CL.PRINTF[2] := DT_TO_STRING(DTI);
			LOG_MSG();
		END_IF;*)
		(* -----------------------------------------------------------------*)

	ELSIF ENABLE THEN
		IF trig_tmp OR trig_stored THEN (* manueller, automatischer oder externer Trigger *)
			trig_stored := FALSE;
			X.ADD_COM := 03; (* ADD DATA *)
			(* ---------------- Debug-Message -----------------------*)
			(*IF _debug_enable THEN
				LOG_CL.NEW_MSG := 'FILE_RRD1 - Trig: DATE [~2]';
				LOG_CL.PRINTF[2] := DT_TO_STRING(DTI);
				LOG_MSG();
			END_IF;*)
			(* -----------------------------------------------------------------*)
		ELSE
			X.ADD_COM := 04;	(* ADD DATA REQ *)
		END_IF;
	END_IF;

END_CASE;
X.ADD_DATA_REQ := FALSE; (* externe Anforderung rücksetzen *)

(* ##################################### *)

CASE step_2 OF

00:	IF X.UCB.BUF_DATA_LOST &gt; UDINT#0 THEN
		ERROR_C := DWORD#2; (* Fehler: Bufferüberlauf - Datenmenge reduzieren *)
		ERROR_T := BYTE#6; 	(* Type: Buffer *)
		step_2 := 100;
	ELSIF X.UCB.BUF_USED_MAX &gt; USINT#90 THEN
		ERROR_C := DWORD#1; (* Warnung: Buffer auslastung &gt; 90% *)
		ERROR_T := BYTE#6;	(* Type: Buffer *)
	END_IF;

	IF X.UCB.BUF_COUNT &gt;= USINT_TO_INT(X.ID_MAX) THEN (* genug Einträge vorhanden *)
		URL_DATA.QUERY := url_query; (* original Query wiederherstellen *)
		n := 1;
		WHILE n &lt;= USINT_TO_INT(X.ID_MAX) DO
			X.UCB.D_MODE := 12; (* Element lesen und löschen *)
			UCB(DATA:=X.UCB);
			IF n &lt; USINT_TO_INT(X.ID_MAX) THEN (* Trennzeichen hinzufügen *)
				X.UCB.D_STRING := CONCAT(X.UCB.D_STRING,sep_char);
			END_IF;
			IF LEN(X.UCB.D_STRING) + LEN(URL_DATA.QUERY) &lt;= OSCAT_BASIC.STRING_LENGTH THEN
				URL_DATA.QUERY := CONCAT(URL_DATA.QUERY,X.UCB.D_STRING); (* Query mit LOG-Daten ergänzen *)
				step_2 := 40;
			ELSE
				ERROR_T := BYTE#4; (* LOG-Daten können nicht in URL gepackt werden *)
				ERROR_C := DWORD#1;
				step_2 := 100;
			END_IF;
			n := n + 1;
		END_WHILE;;
	END_IF;

40:	IF DNS_CLIENT.DONE THEN
		step_2 := 60;
	ELSIF (DNS_CLIENT.ERROR &gt; DWORD#0) THEN
		ERROR_C := DNS_CLIENT.ERROR; (* Fehlerbehandlung *)
		ERROR_T := BYTE#1;
		step_2 := 100;
	END_IF;

60:	IF HTTP_GET.DONE THEN
		n := UINT_TO_INT(HTTP_GET.BODY_START);
		IF R_BUF.BUFFER[n] &lt;&gt; BYTE#48 THEN (* ASCII '0' *)
			ERROR_C := DWORD#1;
			ERROR_T := BYTE#3;
		END_IF;
		step_2 := 100;

	ELSIF HTTP_GET.ERROR &gt; DWORD#0 THEN (* Fehlerbehandlung *)
		ERROR_C := HTTP_GET.ERROR;
		ERROR_T := BYTE#2;
		step_2 := 100;
	END_IF;

100:	IF (NOT HTTP_GET.DONE) THEN (* UNLOCK HTTP DATA *)
		step_2 := SEL(ERROR_T = BYTE#0, 120,0);
	END_IF;

120:	IF NOT ENABLE THEN
		step_2 := 0;
	END_IF;

END_CASE;

HTTP_GET(IP_C:=IP_C,S_BUF:=S_BUF,R_BUF:=R_BUF,IP4:=DNS_CLIENT.IP4,GET:=step_2=60,MODE:=2,UNLOCK_BUF:=step_2=100,URL_DATA:=URL_DATA); (* HTTP_GET *)
DNS_CLIENT(IP_C:=IP_C, S_BUF:=S_BUF, R_BUF:=R_BUF, DOMAIN:=URL_DATA.DOMAIN, IP4_DNS:= DNS_IP4, ACTIVATE:=step_2=40); (* DNS-Client *)
IPC(IP:= 0, PORT:= 0 , TIME_OUT:= TIMEOUT, IP_C:= IP_C, S_BUF:= S_BUF, R_BUF:= R_BUF); (* IP_CONTROL *)

trig_m_last := TRIG_M;

(* revision history
ks	01. jan. 2011	rev 1.0
	original version

ks	13. may. 2011	rev 1.1
	ADD_DATA_REQ hinzugefügt

ks	26. july. 2011	rev 1.2
	code optimierung D_MODE 12 und bessere fehlerauswertung

ks	16. apr. 2012	rev 1.3
	neuer überarbeiteter Code

ks	21. mar. 2016	rev 1.4
	nur einmal nach satellitenbausteinen scannen und fehlermeldungen hinzugefügt

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d500df65-ee19-4094-be0d-a258bd46ac5c</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="DLOG_STRING" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="X">
              <type>
                <derived name="DLOG_DATA" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="STR">
              <type>
                <string />
              </type>
            </variable>
            <variable name="COLUMN">
              <type>
                <string length="40" />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="UCB">
              <type>
                <derived name="UNI_CIRCULAR_BUFFER" />
              </type>
            </variable>
            <variable name="id">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="str_last">
              <type>
                <string />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE x.ADD_COM OF

01:	(* ADD INFO *)
	X.ID_MAX := X.ID_MAX + USINT#1;
	id := WORD#16#0101; (* Quelltype STRING , Zieltype STRING *)
02:	(* ADD HEADER *)
	X.UCB.D_STRING := COLUMN;
	X.UCB.D_HEAD := id;
	X.UCB.D_MODE := 1;
	UCB(DATA:=X.UCB); (* Daten eintragen *)
03:	(* ADD DATA *)
	X.UCB.D_STRING := str_last;
	X.UCB.D_HEAD := id;
	X.UCB.D_MODE := 1;
	UCB(DATA:=X.UCB); (* Daten eintragen *)
END_CASE;
str_last := STR;

(* revision history
ks	01. jan. 2011	rev 1.0
	original version

ks	17. may. 2011	rev 1.1
	COLUMN STRING(40)

ks	25. july.   2011	rev 1.2
	neue head information

ks	19. apr.   2012	rev 1.3
	code neu überarbeitet
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e63c25c3-9c0d-4121-a6d5-835c60dc0224</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="MYSQL_AUTH" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="RUN">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="PASSWORD">
              <type>
                <string length="64" />
              </type>
            </variable>
            <variable name="MESSAGE">
              <type>
                <array>
                  <dimension lower="0" upper="19" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="SCRAMBLE">
              <type>
                <array>
                  <dimension lower="0" upper="19" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
          </inOutVars>
          <localVars>
            <variable name="SHA1_STREAM">
              <type>
                <derived name="SHA1_STREAM" />
              </type>
            </variable>
            <variable name="buf">
              <type>
                <array>
                  <dimension lower="0" upper="63" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="sha_mode">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="step">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="size">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="pos">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="i">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="i2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="scramble1">
              <type>
                <array>
                  <dimension lower="0" upper="19" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="scramble2">
              <type>
                <array>
                  <dimension lower="0" upper="19" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF NOT RUN THEN RETURN; END_IF;
CASE step OF

0:	CASE sha_mode OF
	0:	sha_mode := 1; (* Initialisierung *)
		size := INT_TO_UDINT(LEN(PASSWORD));
		i2 := UDINT_TO_INT(size) - 1;
		FOR i := 0 TO 63 DO
			IF i &lt;= i2 THEN
				buf[i] := OSCAT_BASIC.CODE(STR:=PASSWORD,POS:=i+1);
			ELSE
				buf[i] := BYTE#0;
			END_IF;
		END_FOR;

	3:	scramble1 := SCRAMBLE;
		sha_mode := 1; (* Initialisierung *)
		size := UDINT#20;
		FOR i := 0 TO 19 DO
			buf[i] := scramble1[i];
		END_FOR;
		step := 10;
	END_CASE;

10:	IF sha_mode = 3 THEN
		sha_mode := 1; (* Initialisierung *)
		scramble2 := SCRAMBLE;
		size := UDINT#40;
		FOR i := 0 TO 19 DO
			buf[i] := message[i];
			buf[i+20] := scramble2[i];
		END_FOR;
		step :=20;
	END_IF;

20:	IF sha_mode = 3 THEN
		sha_mode := 0; (* Stop *)
		FOR i:= 0 TO 19 DO
			SCRAMBLE[i] := SCRAMBLE[i] XOR scramble1[i];
		END_FOR;
		step :=0;
		RUN := FALSE;
	END_IF;
END_CASE;

SHA1_STREAM(SIZE:=size, MODE:=sha_mode, BUF:=buf, SHA1:=SCRAMBLE, POS=&gt;pos);

(* revision history
ks	20. apr. 2012	rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>18f73d76-a700-4df5-9c7f-3d9d607213a0</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="MYSQL_CONTROL" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="COM">
              <type>
                <derived name="MYSQL_COM" />
              </type>
            </variable>
            <variable name="INFO">
              <type>
                <derived name="MYSQL_INFO" />
              </type>
            </variable>
          </inOutVars>
          <localVars>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
            </variable>
            <variable name="URL_DATA">
              <type>
                <derived name="url" />
              </type>
            </variable>
            <variable name="DNS_CLIENT">
              <type>
                <derived name="DNS_CLIENT" />
              </type>
            </variable>
            <variable name="IPC">
              <type>
                <derived name="IP_CONTROL" />
              </type>
            </variable>
            <variable name="step">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="snd_step">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="TON_WAIT">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="last_step">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="idx1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="idx2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="idx3">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="dw_tmp">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="timeout1">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="timeout2">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="ip_c_red_disable">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="auth_password">
              <type>
                <string length="64" />
              </type>
            </variable>
            <variable name="auth_run">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="MYSQL_AUTH">
              <type>
                <derived name="MYSQL_AUTH" />
              </type>
            </variable>
            <variable name="scramble1_buffer">
              <type>
                <array>
                  <dimension lower="0" upper="19" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="scramble2_buffer">
              <type>
                <array>
                  <dimension lower="0" upper="19" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="charset_number">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="16#8" />
              </initialValue>
            </variable>
            <variable name="max_packet_size">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="1024" />
              </initialValue>
            </variable>
            <variable name="client_flags">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="16#38601" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE step OF

00:	IF COM.SQL_CON THEN
		timeout1 := MAX(T#10s,COM.TIMEOUT);
		timeout2 := timeout1 + T#1s;
		INFO.SQL_ERROR := '';
		COM.ERROR_C := DWORD#0;
		COM.ERROR_T := BYTE#0;
		URL_DATA := STRING_TO_URL(STR:=COM.SQL_URL,DEFAULT_PROTOCOL:='',DEFAULT_PATH:='/');
		step := 10;
	END_IF;

10:	IF DNS_CLIENT.DONE THEN
		step := 20;
	ELSIF DNS_CLIENT.ERROR &lt;&gt; DWORD#0 THEN
		COM.ERROR_C := DNS_CLIENT.ERROR;
		COM.ERROR_T := BYTE#1;
		step := 980;
	END_IF;

20:	(* MySQL Steuerkanal einrichten *)
	IF URL_DATA.PORT = WORD#0 THEN
		URL_DATA.PORT := WORD#3306; (* Standard Port *)
	END_IF;
	IP_C.C_PORT := URL_DATA.PORT; (* Portnummer eintragen *)
  	IP_C.C_IP := DNS_CLIENT.IP4; (* IP eintragen *)
  	IP_C.C_MODE := BYTE#0; (* Mode: TCP+ACTIV+PORT *)
  	IP_C.TIME_RESET := TRUE; (* Zeitueberwachung rücksetzen *)
  	IP_C.C_ENABLE := TRUE; (* Verbindungsaufbau freigeben *)
  	IP_C.R_OBSERVE := TRUE; (* Empfangsueberwachung *)
	COM.R_BUF.SIZE := UINT#0;
	COM.SQL_RCV_STATE := BYTE#0;
	step := 30;

30:	IF COM.SQL_RCV_STATE = BYTE#1 THEN
		INFO.SERVER_PROTOCOL_VERSION := COM.R_BUF.BUFFER[4];

		(* ende markierung von string server_version suchen *)
		idx2 := UINT_TO_INT(COM.R_BUF.SIZE) - 1;
		FOR idx1 := 5 TO idx2 DO
			IF COM.R_BUF.BUFFER[idx1] = BYTE#0 THEN EXIT; END_IF;
		END_FOR;
		idx1 := idx1 + 5; (* terminierung und thread-id überspringen *)

		FOR idx2:=0 TO 7 DO	(* Byte 0-7 *)
			scramble1_buffer[idx2] := COM.R_BUF.BUFFER[idx1];
			idx1 := idx1 + 1;
		END_FOR;
		idx1 := idx1 + 1;
		idx2 := idx1 + 1;
		INFO.SERVER_CAPABILITIES := OSCAT_BASIC.WORD_OF_BYTE(COM.R_BUF.BUFFER[idx2], COM.R_BUF.BUFFER[idx1]);
		idx1 := idx1 + 2;
		INFO.SERVER_LANGUAGE := COM.R_BUF.BUFFER[idx1];
		idx1 := idx1 + 1;
		idx2 := idx1 + 1;
		INFO.SERVER_STATUS := OSCAT_BASIC.WORD_OF_BYTE(COM.R_BUF.BUFFER[idx2], COM.R_BUF.BUFFER[idx1]);
		idx1 := idx1 + 15;

		FOR idx2:=8 TO 19 DO	(* Byte 8-19 *)
			scramble1_buffer[idx2] := COM.R_BUF.BUFFER[idx1];
			idx1 := idx1 + 1;
		END_FOR;

		IF INFO.SERVER_PROTOCOL_VERSION &lt; BYTE#10 THEN  (* Error: protocol version zu niedrig *)
			COM.ERROR_T := BYTE#2;
			COM.ERROR_C := DWORD#1;
			step := 980;
		ELSIF URL_DATA.PASSWORD = '' THEN
			step := 50;
		ELSE
			auth_password := URL_DATA.PASSWORD;
			auth_run := TRUE;
			step := 40;
		END_IF;
	END_IF;

40:	MYSQL_AUTH(RUN:= auth_run,PASSWORD:= auth_password ,MESSAGE:= scramble1_buffer,SCRAMBLE:= scramble2_buffer);
	IF NOT auth_run THEN
		step := 50;
	END_IF;

50: (* Client Authentication Packet *)
	(* Byte 0-3 werden später eingetragen *)
	COM.S_BUF.BUFFER[04] := OSCAT_BASIC.BYTE_OF_DWORD(client_flags, BYTE#0); (* client_flags *)
	COM.S_BUF.BUFFER[05] := OSCAT_BASIC.BYTE_OF_DWORD(client_flags, BYTE#1);
	COM.S_BUF.BUFFER[06] := OSCAT_BASIC.BYTE_OF_DWORD(client_flags, BYTE#2);
	COM.S_BUF.BUFFER[07] := OSCAT_BASIC.BYTE_OF_DWORD(client_flags, BYTE#3);
	COM.S_BUF.BUFFER[08] := OSCAT_BASIC.BYTE_OF_DWORD(max_packet_size, BYTE#0); (* max_packet_size *)
	COM.S_BUF.BUFFER[09] := OSCAT_BASIC.BYTE_OF_DWORD(max_packet_size, BYTE#1);
	COM.S_BUF.BUFFER[10] := OSCAT_BASIC.BYTE_OF_DWORD(max_packet_size, BYTE#2);
	COM.S_BUF.BUFFER[11] := OSCAT_BASIC.BYTE_OF_DWORD(max_packet_size, BYTE#3);
	COM.S_BUF.BUFFER[12] := charset_number; (* charset_number *)
	FOR idx1 := 13 TO 35 DO (* 23 bytes filler always 0x00.. *)
		COM.S_BUF.BUFFER[idx1] := BYTE#0;
	END_FOR;
	idx3 := LEN(URL_DATA.USER);
	FOR idx2 :=1 TO idx3 DO
		COM.S_BUF.BUFFER[idx1] := OSCAT_BASIC.CODE(URL_DATA.USER, idx2);
		idx1 := idx1 + 1;
	END_FOR;
	COM.S_BUF.BUFFER[idx1] := BYTE#0; (* String terminierung eintragen *)
	idx1 := idx1 + 1;
	IF LEN(URL_DATA.PASSWORD) = 0 THEN
		COM.S_BUF.BUFFER[idx1] := BYTE#0; (* scramble_buff length *)
	ELSE
		COM.S_BUF.BUFFER[idx1] := BYTE#20; (* scramble_buff length *)
		FOR idx2 :=0 TO 19 DO
			idx1 := idx1 + 1;
			COM.S_BUF.BUFFER[idx1] := scramble2_buffer[idx2];
		END_FOR;
	END_IF;
	COM.S_BUF.SIZE  := INT_TO_UINT(idx1 + 1); (* Sendelänge eintragen *)

	step := 60;

60:	IF COM.SQL_RCV_STATE = BYTE#1 THEN
		INFO.SQL_CONNECTED := TRUE;
		step := 300;
	END_IF;

(* ================================================== *)

300:	step := SEL(COM.SQL_CON,700,310); (* Schritt-Selektion *)

310:	step := 300; (* dummy step *)

(* ================================================== *)

700: (* COM_QUIT *)
	COM.S_BUF.BUFFER[04] := BYTE#1; (* 0x01 COM_QUIT mysql_close *)
	COM.S_BUF.SIZE := UINT#5; (* Sendelänge eintragen *)
	COM.SQL_PACKET_NO := BYTE#255;
	ip_c_red_disable := TRUE;
	step := 710;

710:	IF IP_C.C_STATE = BYTE#0 THEN (* Verbindung durch SQL-Server beendet ? *)
		step := 980;
	END_IF;

(* ================================================== *)

980:IP_C.C_ENABLE := FALSE; (* MYSQL Steuerkanal schliessen *)
	ip_c_red_disable := FALSE;
	INFO.SQL_CONNECTED := FALSE;
	COM.SQL_CON := FALSE;
	COM.S_BUF.SIZE := UINT#0;
	COM.R_BUF.SIZE := UINT#0;
	snd_step := 0;
	step := 990;
	(*####################  DEBUG-MESSAGE  ###################################*)
	(*IF _debug_enable THEN
		LOG_CL.NEW_MSG := 'QUIT: ERROR CODE &gt;~1&lt; TYPE &gt;~2&lt;';
		LOG_CL.PRINTF[1] := DWORD_TO_STRH(COM.ERROR_C);
		LOG_CL.PRINTF[2] := BYTE_TO_STRING(COM.ERROR_T);
		LOG_MSG();
	END_IF;*)
	(*########################################################################*)

990:IF IP_C.C_STATE = BYTE#0 THEN
		step := 0;
	END_IF;

END_CASE;

(* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *)

IF step &gt;= 30 THEN
	IF COM.R_BUF.SIZE &gt;= UINT#3 AND COM.SQL_RCV_STATE = BYTE#0 THEN (* Daten wurden empfangen ? *)
		IF DWORD_TO_UINT(OSCAT_BASIC.DWORD_OF_BYTE(BYTE#0, COM.R_BUF.BUFFER[2], COM.R_BUF.BUFFER[1], COM.R_BUF.BUFFER[0])) + UINT#4 = COM.R_BUF.SIZE THEN
			COM.SQL_PACKET_NO := COM.R_BUF.BUFFER[3];
			IF COM.R_BUF.BUFFER[4] = BYTE#16#FF THEN
				idx2 := 13; (* Error String - Erstes Zeichen *)
				idx3 := UINT_TO_INT(COM.R_BUF.SIZE) - 1; (* Error String - Letztes Zeichen *)
				FOR idx1 := idx2 TO idx3 DO (* alle ' durch ´ ersetzen *)
					IF COM.R_BUF.BUFFER[idx1] = BYTE#39 THEN
						COM.R_BUF.BUFFER[idx1] := BYTE#96;
					END_IF;
				END_FOR;
				INFO.SQL_ERROR := OSCAT_BASIC.BUFFER_TO_STRING(PT:=ADR(COM.R_BUF.BUFFER),SIZE:=COM.R_BUF.SIZE,START:=INT_TO_UINT(idx2),STOP:=INT_TO_UINT(idx3));
				COM.ERROR_T := BYTE#3;
				COM.ERROR_C := OSCAT_BASIC.DWORD_OF_BYTE(BYTE#0,BYTE#0,COM.R_BUF.BUFFER[6], COM.R_BUF.BUFFER[5]);
				COM.SQL_RCV_STATE := BYTE#2;
				COM.R_BUF.SIZE := UINT#0; (* Empfangsbuffer nach Fehler rücksetzen *)
				step := 980;
			ELSE
				COM.SQL_RCV_STATE := BYTE#1;
				IP_C.R_OBSERVE := FALSE;

				(*####################  DEBUG-MESSAGE  ###################################*)
				(*IF _debug_enable THEN
					LOG_CL.NEW_MSG := 'RCV: size &gt;~1&lt;';
					LOG_CL.PRINTF[1] := UINT_TO_STRING(COM.R_BUF.SIZE);
					LOG_MSG();
				END_IF;*)
				(*########################################################################*)
			END_IF;
		END_IF;
	END_IF;
END_IF;

(* automatisches Datensenden *)

CASE snd_step OF

00:	IF step &gt;= 20 AND COM.S_BUF.SIZE &gt; UINT#0 THEN
		dw_tmp := UINT_TO_DWORD(COM.S_BUF.SIZE - UINT#4); (* packet_length *)
		COM.S_BUF.BUFFER[0] := OSCAT_BASIC.BYTE_OF_DWORD(dw_tmp, BYTE#0);
		COM.S_BUF.BUFFER[1] := OSCAT_BASIC.BYTE_OF_DWORD(dw_tmp, BYTE#1);
		COM.S_BUF.BUFFER[2] := 0;
		COM.SQL_PACKET_NO := COM.SQL_PACKET_NO + 1;
		COM.S_BUF.BUFFER[3] := COM.SQL_PACKET_NO;

		IP_C.R_OBSERVE := TRUE;
		COM.R_BUF.SIZE := UINT#0; (* Empfangsbuffer rücksetzen *)
		COM.SQL_RCV_STATE := BYTE#0;

	        (*####################  DEBUG-MESSAGE  ###################################*)
	        (*IF _debug_enable THEN
	          LOG_CL.NEW_MSG := 'SND: size &gt;~1&lt;';
	          LOG_CL.PRINTF[1] := UINT_TO_STRING(COM.S_BUF.SIZE);
	          LOG_MSG();
	        END_IF;*)
	        (*########################################################################*)

		snd_step := 10;
	END_IF;

10:	IF COM.S_BUF.SIZE = UINT#0 THEN (* warten bis alle daten gesendet sind *)
		snd_step := 0;
	END_IF;

END_CASE;

(* Globale Fehlerbehandlung für Haupt-Routine *)
IF COM.ERROR_T = BYTE#0 AND step &gt; 20 THEN (* noch kein Fehler gespeichert und Hauptroutine aktiv *)
	IF IP_C.ERROR &gt; DWORD#0 AND IP_C.C_ENABLE AND NOT IP_C.TIME_RESET THEN  (* IP Control *)
		IF ip_c_red_disable = FALSE OR IP_C.ERROR &lt;&gt; DWORD#16#FD000000 THEN
			COM.ERROR_C := IP_C.ERROR;
			COM.ERROR_T := BYTE#2;
			step := 980;
		END_IF;
	END_IF;
END_IF;

IF TON_WAIT.Q THEN (* Ablaufstörung - Schrittkette *)
	COM.ERROR_C := INT_TO_DWORD(step); (* aktuellen Schritt eintragen *)
	COM.ERROR_T := BYTE#5;
	step := 980;
END_IF;

(* ######################################################## *)

DNS_CLIENT(IP_C:=IP_C, S_BUF:=COM.S_BUF, R_BUF:=COM.R_BUF, DOMAIN:=URL_DATA.DOMAIN, IP4_DNS:= COM.DNS_IP4, ACTIVATE:=step=10); (* DNS-Client *)
IPC(IP:= DWORD#0, PORT:= WORD#0 , TIME_OUT:= timeout1, IP_C:= IP_C, S_BUF:= COM.S_BUF, R_BUF:= COM.R_BUF); (* MYSQL Steuerkanal *)

TON_WAIT(IN:=step = last_step AND step &gt; 0,PT:=timeout2);
last_step := step;

(* revision history
ks	20. apr. 2012	rev 1.0
	original version
ks	14. oct. 2013	rev 1.1
	DNS_CLIENT Fehler durch zugriffskonflikt zwischen dns_client und mySQL auf S_BUF

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d9bb0003-1ad1-48c8-a531-f1b1169effa1</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="BASE64_DEMO" pouType="program">
        <interface>
          <localVars>
            <variable name="text1">
              <type>
                <string length="144" />
              </type>
              <initialValue>
                <simpleValue value="'&lt;4036.1076324381@guildenstern.zeitform.de&gt;'" />
              </initialValue>
            </variable>
            <variable name="text2">
              <type>
                <string length="192" />
              </type>
            </variable>
            <variable name="text3">
              <type>
                <string length="144" />
              </type>
            </variable>
            <variable name="BASE64_DECODE_STR">
              <type>
                <derived name="BASE64_DECODE_STR" />
              </type>
            </variable>
            <variable name="BASE64_ENCODE_STR">
              <type>
                <derived name="BASE64_ENCODE_STR" />
              </type>
            </variable>
            <variable name="start">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="done1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="done2">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/cfc" handleUnknown="implementation">
              <CFC>
                <inVariable localId="2">
                  <position x="58" y="6" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>start</expression>
                </inVariable>
                <connector localId="1" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="2" formalParameter="start" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="4">
                  <position x="58" y="7" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>text1</expression>
                </inVariable>
                <connector localId="3" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="4" formalParameter="text1" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="6">
                  <position x="58" y="8" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>text2</expression>
                </inVariable>
                <connector localId="5" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="6" formalParameter="text2" />
                  </connectionPointIn>
                </connector>
                <block localId="0" executionOrderId="1" typeName="BASE64_ENCODE_STR" instanceName="BASE64_ENCODE_STR">
                  <position x="58" y="4" />
                  <inputVariables>
                    <variable formalParameter="RUN">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="STR1">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="STR2">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="5" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DONE">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="8" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="DONE" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="7" executionOrderId="2">
                  <position x="80" y="6" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="8" />
                  </connectionPointIn>
                  <expression>done1</expression>
                </outVariable>
                <inVariable localId="11">
                  <position x="58" y="12" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>done1</expression>
                </inVariable>
                <connector localId="10" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="11" formalParameter="done1" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="13">
                  <position x="58" y="13" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>text2</expression>
                </inVariable>
                <connector localId="12" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="13" formalParameter="text2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="15">
                  <position x="58" y="14" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>text3</expression>
                </inVariable>
                <connector localId="14" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="15" formalParameter="text3" />
                  </connectionPointIn>
                </connector>
                <block localId="9" executionOrderId="3" typeName="BASE64_DECODE_STR" instanceName="BASE64_DECODE_STR">
                  <position x="58" y="10" />
                  <inputVariables>
                    <variable formalParameter="RUN">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="10" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="STR1">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="12" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="STR2">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="14" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DONE">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="17" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="9" formalParameter="DONE" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="16" executionOrderId="4">
                  <position x="80" y="12" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="17" />
                  </connectionPointIn>
                  <expression>done2</expression>
                </outVariable>
              </CFC>
            </data>
          </addData>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>84c37864-d86d-4272-aaca-d132f8e085b3</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CSV_PARSER_BUF_DEMO" pouType="program">
        <interface>
          <localVars constant="true">
            <variable name="line_cnt">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="2" />
              </initialValue>
            </variable>
            <variable name="col_cnt">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="4" />
              </initialValue>
            </variable>
          </localVars>
          <localVars>
            <variable name="CPB">
              <type>
                <derived name="CSV_PARSER_BUF" />
              </type>
            </variable>
            <variable name="FS">
              <type>
                <derived name="FILE_SERVER" />
              </type>
            </variable>
            <variable name="FSD">
              <type>
                <derived name="FILE_SERVER_DATA" />
              </type>
            </variable>
            <variable name="PT">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="sep">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="value">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="step">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="result">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="offset">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="run">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="done">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="value_real">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="cnt">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="line">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="idx">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="data">
              <type>
                <array>
                  <dimension lower="1" upper="line_cnt" />
                  <dimension lower="1" upper="col_cnt" />
                  <baseType>
                    <REAL />
                  </baseType>
                </array>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Demo-Programm: CSV-Datei mittels Enumeration auswerten
die groesse des arrays kann mittels konstanten line_cnt und col_cnt angepasst werden

 ----- den nachfolgenden Textblock als datei "csv.txt" auf der sps ablegen ---
10.45,20,30,40.8
115,3450.2123,456,123.1
---------------------------------------------------------------------------------*)

CASE step OF

00:	IF NOT done THEN
	 	(* File_Daten einrichten  *)
		FSD.FILENAME := 'csv.txt'; (* Dateiname *)
		FSD.MODE := 1; (* vorhandene Datei zum lesen öffnen *)
		FSD.OFFSET := 0; (* Start bei Dateianfang *)
		PT.SIZE := 65535; (* maximale länge einlesen *)
		step := 10;
	END_IF;

10:	IF FSD.MODE = 0 THEN (* Datei geöffnet ? *)
		OFFSET := 0; (* Start Offset vorgeben *)
		sep :=44; (* Trennzeichen , *)
		run := 1; (* Element suchen *)
		cnt := 0;
		step := 20;
	END_IF;

20:	IF run = 0 THEN
		(* ---------------------- Debug-Message ----------------------------*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'CPFD: /value &gt;~2&lt; /offset ~3 /Run ~4 /Result ~5';
			LOG_CL.PRINTF[2] := value;
			LOG_CL.PRINTF[3] := UDINT_TO_STRING(OFFSET);
			LOG_CL.PRINTF[4] := BYTE_TO_STRING(run);
			LOG_CL.PRINTF[5] := BYTE_TO_STRING(result);
			LOG_MSG();
		END_IF;*)
		(* -----------------------------------------------------------------*)

		run := 1; (*  nächstes Element suchen  *)

		IF result = 1 OR result = 2 THEN
			(* automatische konvertierung in real ausführen *)
			IF LEN(value) &lt;= 20 THEN
				value_real := OSCAT_BASIC.FLOAT_TO_REAL(FLT:=value);
			ELSE
				value_real := 0.0;
			END_IF;

			cnt := cnt + 1;
			IF cnt &lt;= line_cnt * col_cnt THEN
				line := (cnt / col_cnt) + 1;
				idx := (cnt MOD col_cnt);
				data[line,idx] := value_real; (* Daten in Array eintragen *)
			END_IF;

		ELSIF result = 10 THEN (* nichts mehr gefunden *)
			run := 0; (* keine weitere INI Auswertung erwünscht *)
			FSD.MODE := 5; (* Datei schliessen *)
			step := 30;
		END_IF;
	END_IF;

30:	IF FSD.MODE = 0 THEN (* Datei geschlossen ? *)
		step := 0;
		done := TRUE;
	END_IF;

END_CASE;

CPB(SEP:=sep,RUN:=run,OFFSET:=OFFSET,VALUE:=value,PT:=PT,RESULT=&gt;result); (* CSV PARAMETER BUF *)
FS(FSD:=FSD,PT:=PT); (* FILE_SERVER *)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>f75356d4-ba6e-4993-8d26-51c72f1a892d</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CSV_PARSER_FILE_DEMO" pouType="program">
        <interface>
          <localVars constant="true">
            <variable name="line_cnt">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="2" />
              </initialValue>
            </variable>
            <variable name="col_cnt">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="4" />
              </initialValue>
            </variable>
          </localVars>
          <localVars>
            <variable name="CPF">
              <type>
                <derived name="CSV_PARSER_FILE" />
              </type>
            </variable>
            <variable name="FS">
              <type>
                <derived name="FILE_SERVER" />
              </type>
            </variable>
            <variable name="FSD">
              <type>
                <derived name="FILE_SERVER_DATA" />
              </type>
            </variable>
            <variable name="PT">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="filename">
              <type>
                <string />
              </type>
            </variable>
            <variable name="value">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="sep">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="step">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="result">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="offset">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="run">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="done">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="value_real">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="cnt">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="line">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="idx">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="data">
              <type>
                <array>
                  <dimension lower="1" upper="line_cnt" />
                  <dimension lower="1" upper="col_cnt" />
                  <baseType>
                    <REAL />
                  </baseType>
                </array>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Demo-Programm: CSV-Datei mittels Enumeration auswerten

die groesse des arrays kann mittels konstanten line_cnt und col_cnt angepasst werden

 ----- den nachfolgenden Textblock als datei "csv.txt" auf der sps ablegen ---
10.45,20,30,40.8
115,3450.2123,456,123.1
---------------------------------------------------------------------------------*)

CASE step OF

00:	IF NOT done THEN
		filename := 'csv.txt'; (* File_Daten einrichten *)
		OFFSET := 0; (* Start Offset vorgeben *)
		sep :=44; (* Trennzeichen , *)
		run := 1; (* Element suchen *)
		cnt := 0;
		step := 20;
	END_IF;

20:	IF run = 0 THEN (* kein Befehl mehr aktiv ? *)
		(* ---------------------- Debug-Message ----------------------------*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'CPFD: /value &gt;~2&lt; /offset ~3 /Run ~4 /Result ~5';
			LOG_CL.PRINTF[2] := value;
			LOG_CL.PRINTF[3] := UDINT_TO_STRING(OFFSET);
			LOG_CL.PRINTF[4] := BYTE_TO_STRING(run);
			LOG_CL.PRINTF[5] := BYTE_TO_STRING(result);
			LOG_MSG();
		END_IF;*)
		(* -----------------------------------------------------------------*)

		run := 1; (*  nächstes Element suchen  *)

		IF result = 1 OR result = 2 THEN
			(* automatische konvertierung in real ausführen *)
			IF LEN(value) &lt;= 20 THEN
				value_real := OSCAT_BASIC.FLOAT_TO_REAL(FLT:=value);
			ELSE
				value_real := 0.0;
			END_IF;

			cnt := cnt + 1;
			IF cnt &lt;= line_cnt * col_cnt THEN
				line := (cnt / col_cnt) + 1;
				idx := (cnt MOD col_cnt);
				data[line,idx] := value_real; (* Daten in Array eintragen *)
			END_IF;

		ELSIF result = 10 THEN (* nichts mehr gefunden *)
			run := 0; (* keine weitere INI Auswertung erwünscht *)
			FSD.MODE := 5; (* Datei schliessen *)
			step := 30;
		END_IF;
	END_IF;

30:	IF FSD.MODE = 0 THEN (* Befehl Datei schliessen beendet *)
		step := 0;
		done := TRUE;
	END_IF;

END_CASE;

CPF(SEP:=sep,FILENAME:=FILENAME,FSD:=FSD,RUN:=run,OFFSET:=OFFSET,VALUE:=value,PT:=PT,RESULT=&gt;result); (* CSV PARAMETER FILE *)
FS(FSD:=FSD,PT:=PT); (* FILE_SERVER *)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>aaa85380-71cf-4463-80e1-8791d472d07e</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="DLOG_FILE_CSV_DEMO" pouType="program">
        <interface>
          <localVars>
            <variable name="cur_dt">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="enable">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="trig_t">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#5s0ms" />
              </initialValue>
            </variable>
            <variable name="trig_m">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="error_c">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="error_t">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="auto_close">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#10s0ms" />
              </initialValue>
            </variable>
            <variable name="x1">
              <type>
                <derived name="DLOG_DT" />
              </type>
            </variable>
            <variable name="x2">
              <type>
                <derived name="DLOG_REAL" />
              </type>
            </variable>
            <variable name="x3">
              <type>
                <derived name="DLOG_DINT" />
              </type>
            </variable>
            <variable name="x4">
              <type>
                <derived name="DLOG_BOOL" />
              </type>
            </variable>
            <variable name="x5">
              <type>
                <derived name="DLOG_STRING" />
              </type>
            </variable>
            <variable name="x">
              <type>
                <derived name="DLOG_DATA" />
              </type>
            </variable>
            <variable name="RTC_2">
              <type>
                <derived name="oscat_basic.RTC_2" />
              </type>
            </variable>
            <variable name="DLOG_STORE_FILE_CSV">
              <type>
                <derived name="DLOG_STORE_FILE_CSV" />
              </type>
            </variable>
            <variable name="GEN_SIN_1">
              <type>
                <derived name="oscat_basic.GEN_SIN" />
              </type>
            </variable>
            <variable name="COUNT_DR">
              <type>
                <derived name="oscat_basic.COUNT_DR" />
              </type>
            </variable>
          </localVars>
          <localVars retain="true">
            <variable name="save_data">
              <type>
                <derived name="DLOG_SAVE" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/cfc" handleUnknown="implementation">
              <CFC>
                <inVariable localId="2">
                  <position x="13" y="4" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>DT#2010-10-22-06:00:00</expression>
                </inVariable>
                <connector localId="1" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="2" formalParameter="DT#2010-10-22-06:00:00" />
                  </connectionPointIn>
                </connector>
                <block localId="0" executionOrderId="1" typeName="oscat_basic.RTC_2" instanceName="rtc_2">
                  <position x="26" y="1" />
                  <inputVariables>
                    <variable formalParameter="SET">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SDT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SMS">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DEN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="OFS">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="UDT">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="LDT">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="DSO">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="XMS">
                      <connectionPointOut>
                        <relPosition x="0" y="3" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="4" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="UDT" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="3" executionOrderId="2">
                  <position x="38" y="3" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="4" />
                  </connectionPointIn>
                  <expression>cur_dt</expression>
                </outVariable>
                <inVariable localId="7">
                  <position x="66" y="13" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'Timestamp'</expression>
                </inVariable>
                <connector localId="6" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="7" formalParameter="'Timestamp'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="9">
                  <position x="66" y="15" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="8" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="9" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="5" executionOrderId="3" typeName="DLOG_DT" instanceName="x1">
                  <position x="75" y="10" />
                  <inputVariables>
                    <variable formalParameter="FMT">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="6" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DELTA">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="8" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="12">
                  <position x="40" y="18" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>T#10m</expression>
                </inVariable>
                <connector localId="11" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="12" formalParameter="T#10m" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="14">
                  <position x="40" y="19" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>100.0</expression>
                </inVariable>
                <connector localId="13" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="14" formalParameter="100.0" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="16">
                  <position x="40" y="20" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>50.0</expression>
                </inVariable>
                <connector localId="15" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="16" formalParameter="50.0" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="18">
                  <position x="40" y="21" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>0.0</expression>
                </inVariable>
                <connector localId="17" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="18" formalParameter="0.0" />
                  </connectionPointIn>
                </connector>
                <block localId="10" executionOrderId="4" typeName="oscat_basic.GEN_SIN" instanceName="GEN_SIN_1">
                  <position x="47" y="16" />
                  <inputVariables>
                    <variable formalParameter="PT">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="11" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="AM">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="13" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="OS">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="15" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DL">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="17" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="Q">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="Out">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="20" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="10" formalParameter="Out" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="22">
                  <position x="66" y="20" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>2</expression>
                </inVariable>
                <connector localId="21" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="22" formalParameter="2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="24">
                  <position x="66" y="22" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'Sinus'</expression>
                </inVariable>
                <connector localId="23" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="24" formalParameter="'Sinus'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="26">
                  <position x="66" y="24" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="25" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="26" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="19" executionOrderId="5" typeName="DLOG_REAL" instanceName="x2">
                  <position x="75" y="17" />
                  <inputVariables>
                    <variable formalParameter="VALUE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="20" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="N">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="21" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="D">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="23" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DELTA">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="25" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="29">
                  <position x="37" y="30" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x.CLOCK_TRIG</expression>
                </inVariable>
                <connector localId="28" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="29" formalParameter="x.CLOCK_TRIG" />
                  </connectionPointIn>
                </connector>
                <block localId="27" executionOrderId="6" typeName="oscat_basic.COUNT_DR" instanceName="COUNT_DR">
                  <position x="47" y="26" />
                  <inputVariables>
                    <variable formalParameter="SET">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="UP">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="28" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="STEP">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="MX">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="RST">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="CNT">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="31" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="27" formalParameter="CNT" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="33">
                  <position x="66" y="29" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'Count'</expression>
                </inVariable>
                <connector localId="32" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="33" formalParameter="'Count'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="35">
                  <position x="66" y="31" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="34" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="35" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="30" executionOrderId="7" typeName="DLOG_DINT" instanceName="x3">
                  <position x="75" y="26" />
                  <inputVariables>
                    <variable formalParameter="VALUE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="31" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="32" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DELTA">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="34" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="38">
                  <position x="64" y="36" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>COUNT_DR.CNT.2</expression>
                </inVariable>
                <connector localId="37" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="38" formalParameter="COUNT_DR.CNT.2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="40">
                  <position x="66" y="37" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'OFF'</expression>
                </inVariable>
                <connector localId="39" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="40" formalParameter="'OFF'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="42">
                  <position x="66" y="38" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'ON'</expression>
                </inVariable>
                <connector localId="41" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="42" formalParameter="'ON'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="44">
                  <position x="66" y="39" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'Count_Bit_2'</expression>
                </inVariable>
                <connector localId="43" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="44" formalParameter="'Count_Bit_2'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="46">
                  <position x="66" y="41" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="45" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="46" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="36" executionOrderId="8" typeName="DLOG_BOOL" instanceName="x4">
                  <position x="75" y="34" />
                  <inputVariables>
                    <variable formalParameter="STATE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="37" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="OFF">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="39" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="ON">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="41" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="43" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DELTA">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="45" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="49">
                  <position x="18" y="44" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>COUNT_DR.CNT</expression>
                </inVariable>
                <connector localId="48" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="49" formalParameter="COUNT_DR.CNT" />
                  </connectionPointIn>
                </connector>
                <block localId="47" executionOrderId="9" typeName="OSCAT_BASIC.DWORD_TO_STRB">
                  <position x="29" y="42" />
                  <inputVariables>
                    <variable formalParameter="IN">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="48" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DWORD_TO_STRB">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="51" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="47" formalParameter="DWORD_TO_STRB" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="53">
                  <position x="66" y="48" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'Count_Hex'</expression>
                </inVariable>
                <connector localId="52" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="53" formalParameter="'Count_Hex'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="55">
                  <position x="66" y="49" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="54" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="55" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="50" executionOrderId="10" typeName="DLOG_STRING" instanceName="x5">
                  <position x="75" y="45" />
                  <inputVariables>
                    <variable formalParameter="STR">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="51" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="52" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="54" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="58">
                  <position x="66" y="55" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>enable</expression>
                </inVariable>
                <connector localId="57" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="58" formalParameter="enable" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="60">
                  <position x="66" y="56" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>trig_m</expression>
                </inVariable>
                <connector localId="59" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="60" formalParameter="trig_m" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="62">
                  <position x="66" y="57" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>trig_t</expression>
                </inVariable>
                <connector localId="61" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="62" formalParameter="trig_t" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="64">
                  <position x="66" y="58" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'test_#R.csv'</expression>
                </inVariable>
                <connector localId="63" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="64" formalParameter="'test_#R.csv'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="66">
                  <position x="66" y="59" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>cur_dt</expression>
                </inVariable>
                <connector localId="65" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="66" formalParameter="cur_dt" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="68">
                  <position x="66" y="60" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>59</expression>
                </inVariable>
                <connector localId="67" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="68" formalParameter="59" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="70">
                  <position x="66" y="61" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>auto_close</expression>
                </inVariable>
                <connector localId="69" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="70" formalParameter="auto_close" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="72">
                  <position x="66" y="62" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="71" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="72" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="74">
                  <position x="66" y="63" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>save_data</expression>
                </inVariable>
                <connector localId="73" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="74" formalParameter="save_data" />
                  </connectionPointIn>
                </connector>
                <block localId="56" executionOrderId="11" typeName="DLOG_STORE_FILE_CSV" instanceName="DLOG_STORE_FILE_CSV">
                  <position x="75" y="53" />
                  <inputVariables>
                    <variable formalParameter="ENABLE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="57" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TRIG_M">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="59" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TRIG_T">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="61" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="FILENAME">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="63" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DTI">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="65" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SEP">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="67" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="AUTO_CLOSE">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                        <connection refLocalId="69" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="7" />
                        <connection refLocalId="71" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SAVE_DATA">
                      <connectionPointIn>
                        <relPosition x="0" y="8" />
                        <connection refLocalId="73" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="ERROR_C">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR_T">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="76" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="56" formalParameter="ERROR_C" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="75" executionOrderId="12">
                  <position x="96" y="55" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="76" />
                  </connectionPointIn>
                  <expression>error_c</expression>
                </outVariable>
                <connector localId="78" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="56" formalParameter="ERROR_T" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="77" executionOrderId="13">
                  <position x="96" y="56" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="78" />
                  </connectionPointIn>
                  <expression>error_t</expression>
                </outVariable>
                <comment localId="79" height="0" width="0">
                  <position x="12" y="1" />
                  <content>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">dummy-Clock</xhtml>
                  </content>
                </comment>
              </CFC>
            </data>
          </addData>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d036d709-8a67-4f28-b263-9d631fe638e6</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="DLOG_FILE_CSV_FTP_DEMO" pouType="program">
        <interface>
          <localVars>
            <variable name="cur_dt">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="enable">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="trig_t">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#5s0ms" />
              </initialValue>
            </variable>
            <variable name="trig_m">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="error_c">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="error_t">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="auto_close">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#10s0ms" />
              </initialValue>
            </variable>
            <variable name="x1">
              <type>
                <derived name="DLOG_DT" />
              </type>
            </variable>
            <variable name="x2">
              <type>
                <derived name="DLOG_REAL" />
              </type>
            </variable>
            <variable name="x3">
              <type>
                <derived name="DLOG_DINT" />
              </type>
            </variable>
            <variable name="x4">
              <type>
                <derived name="DLOG_BOOL" />
              </type>
            </variable>
            <variable name="x5">
              <type>
                <derived name="DLOG_STRING" />
              </type>
            </variable>
            <variable name="x">
              <type>
                <derived name="DLOG_DATA" />
              </type>
            </variable>
            <variable name="RTC_2">
              <type>
                <derived name="oscat_basic.RTC_2" />
              </type>
            </variable>
            <variable name="DLOG_STORE_FILE_CSV">
              <type>
                <derived name="DLOG_STORE_FILE_CSV" />
              </type>
            </variable>
            <variable name="GEN_SIN_1">
              <type>
                <derived name="oscat_basic.GEN_SIN" />
              </type>
            </variable>
            <variable name="COUNT_DR">
              <type>
                <derived name="oscat_basic.COUNT_DR" />
              </type>
            </variable>
            <variable name="DLOG_FILE_TO_FTP">
              <type>
                <derived name="DLOG_FILE_TO_FTP" />
              </type>
            </variable>
            <variable name="ftp_done">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ftp_busy">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ftp_error_c">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="ftp_error_t">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="ftp_url">
              <type>
                <string />
              </type>
              <initialValue>
                <simpleValue value="'ftp://581920:123456@oscat.atwebpages.com:2000/subordner/'" />
              </initialValue>
            </variable>
            <variable name="ftp_activ">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="ftp_delete">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="ftp_retry">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="ftp_retry_time">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#1m0s0ms" />
              </initialValue>
            </variable>
            <variable name="ftp_timeout">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#30s0ms" />
              </initialValue>
            </variable>
          </localVars>
          <localVars retain="true">
            <variable name="save_data">
              <type>
                <derived name="DLOG_SAVE" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/cfc" handleUnknown="implementation">
              <CFC>
                <inVariable localId="2">
                  <position x="12" y="5" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>DT#2010-10-22-06:00:00</expression>
                </inVariable>
                <connector localId="1" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="2" formalParameter="DT#2010-10-22-06:00:00" />
                  </connectionPointIn>
                </connector>
                <block localId="0" executionOrderId="1" typeName="oscat_basic.RTC_2" instanceName="rtc_2">
                  <position x="26" y="2" />
                  <inputVariables>
                    <variable formalParameter="SET">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SDT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SMS">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DEN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="OFS">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="UDT">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="LDT">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="DSO">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="XMS">
                      <connectionPointOut>
                        <relPosition x="0" y="3" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="4" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="UDT" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="3" executionOrderId="2">
                  <position x="38" y="4" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="4" />
                  </connectionPointIn>
                  <expression>cur_dt</expression>
                </outVariable>
                <inVariable localId="7">
                  <position x="70" y="14" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'Timestamp'</expression>
                </inVariable>
                <connector localId="6" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="7" formalParameter="'Timestamp'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="9">
                  <position x="70" y="16" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="8" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="9" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="5" executionOrderId="3" typeName="DLOG_DT" instanceName="x1">
                  <position x="79" y="11" />
                  <inputVariables>
                    <variable formalParameter="FMT">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="6" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DELTA">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="8" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="12">
                  <position x="44" y="19" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>T#10m</expression>
                </inVariable>
                <connector localId="11" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="12" formalParameter="T#10m" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="14">
                  <position x="44" y="20" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>100.0</expression>
                </inVariable>
                <connector localId="13" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="14" formalParameter="100.0" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="16">
                  <position x="44" y="21" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>50.0</expression>
                </inVariable>
                <connector localId="15" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="16" formalParameter="50.0" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="18">
                  <position x="44" y="22" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>0.0</expression>
                </inVariable>
                <connector localId="17" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="18" formalParameter="0.0" />
                  </connectionPointIn>
                </connector>
                <block localId="10" executionOrderId="4" typeName="oscat_basic.GEN_SIN" instanceName="GEN_SIN_1">
                  <position x="51" y="17" />
                  <inputVariables>
                    <variable formalParameter="PT">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="11" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="AM">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="13" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="OS">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="15" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DL">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="17" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="Q">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="Out">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="20" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="10" formalParameter="Out" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="22">
                  <position x="70" y="21" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>2</expression>
                </inVariable>
                <connector localId="21" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="22" formalParameter="2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="24">
                  <position x="70" y="23" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'Sinus'</expression>
                </inVariable>
                <connector localId="23" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="24" formalParameter="'Sinus'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="26">
                  <position x="70" y="25" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="25" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="26" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="19" executionOrderId="5" typeName="DLOG_REAL" instanceName="x2">
                  <position x="79" y="18" />
                  <inputVariables>
                    <variable formalParameter="VALUE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="20" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="N">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="21" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="D">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="23" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DELTA">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="25" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="29">
                  <position x="41" y="31" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x.CLOCK_TRIG</expression>
                </inVariable>
                <connector localId="28" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="29" formalParameter="x.CLOCK_TRIG" />
                  </connectionPointIn>
                </connector>
                <block localId="27" executionOrderId="6" typeName="oscat_basic.COUNT_DR" instanceName="COUNT_DR">
                  <position x="51" y="27" />
                  <inputVariables>
                    <variable formalParameter="SET">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="UP">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="28" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="STEP">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="MX">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="RST">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="CNT">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="31" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="27" formalParameter="CNT" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="33">
                  <position x="70" y="30" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'Count'</expression>
                </inVariable>
                <connector localId="32" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="33" formalParameter="'Count'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="35">
                  <position x="70" y="32" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="34" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="35" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="30" executionOrderId="7" typeName="DLOG_DINT" instanceName="x3">
                  <position x="79" y="27" />
                  <inputVariables>
                    <variable formalParameter="VALUE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="31" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="32" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DELTA">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="34" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="38">
                  <position x="68" y="37" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>COUNT_DR.CNT.2</expression>
                </inVariable>
                <connector localId="37" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="38" formalParameter="COUNT_DR.CNT.2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="40">
                  <position x="70" y="38" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'OFF'</expression>
                </inVariable>
                <connector localId="39" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="40" formalParameter="'OFF'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="42">
                  <position x="70" y="39" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'ON'</expression>
                </inVariable>
                <connector localId="41" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="42" formalParameter="'ON'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="44">
                  <position x="70" y="40" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'Count_Bit_2'</expression>
                </inVariable>
                <connector localId="43" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="44" formalParameter="'Count_Bit_2'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="46">
                  <position x="70" y="42" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="45" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="46" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="36" executionOrderId="8" typeName="DLOG_BOOL" instanceName="x4">
                  <position x="79" y="35" />
                  <inputVariables>
                    <variable formalParameter="STATE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="37" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="OFF">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="39" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="ON">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="41" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="43" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DELTA">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="45" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="49">
                  <position x="22" y="45" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>COUNT_DR.CNT</expression>
                </inVariable>
                <connector localId="48" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="49" formalParameter="COUNT_DR.CNT" />
                  </connectionPointIn>
                </connector>
                <block localId="47" executionOrderId="9" typeName="OSCAT_BASIC.DWORD_TO_STRB">
                  <position x="32" y="43" />
                  <inputVariables>
                    <variable formalParameter="IN">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="48" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DWORD_TO_STRB">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="51" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="47" formalParameter="DWORD_TO_STRB" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="53">
                  <position x="70" y="49" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'Count_Hex'</expression>
                </inVariable>
                <connector localId="52" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="53" formalParameter="'Count_Hex'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="55">
                  <position x="70" y="50" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="54" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="55" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="50" executionOrderId="10" typeName="DLOG_STRING" instanceName="x5">
                  <position x="79" y="46" />
                  <inputVariables>
                    <variable formalParameter="STR">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="51" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="52" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="54" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="58">
                  <position x="70" y="55" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>enable</expression>
                </inVariable>
                <connector localId="57" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="58" formalParameter="enable" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="60">
                  <position x="70" y="56" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>trig_m</expression>
                </inVariable>
                <connector localId="59" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="60" formalParameter="trig_m" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="62">
                  <position x="70" y="57" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>trig_t</expression>
                </inVariable>
                <connector localId="61" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="62" formalParameter="trig_t" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="64">
                  <position x="70" y="58" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'test_#R.csv'</expression>
                </inVariable>
                <connector localId="63" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="64" formalParameter="'test_#R.csv'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="66">
                  <position x="70" y="59" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>cur_dt</expression>
                </inVariable>
                <connector localId="65" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="66" formalParameter="cur_dt" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="68">
                  <position x="70" y="60" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>59</expression>
                </inVariable>
                <connector localId="67" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="68" formalParameter="59" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="70">
                  <position x="70" y="61" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>auto_close</expression>
                </inVariable>
                <connector localId="69" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="70" formalParameter="auto_close" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="72">
                  <position x="70" y="62" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="71" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="72" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="74">
                  <position x="70" y="63" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>save_data</expression>
                </inVariable>
                <connector localId="73" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="74" formalParameter="save_data" />
                  </connectionPointIn>
                </connector>
                <block localId="56" executionOrderId="11" typeName="DLOG_STORE_FILE_CSV" instanceName="DLOG_STORE_FILE_CSV">
                  <position x="79" y="53" />
                  <inputVariables>
                    <variable formalParameter="ENABLE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="57" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TRIG_M">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="59" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TRIG_T">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="61" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="FILENAME">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="63" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DTI">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="65" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SEP">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="67" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="AUTO_CLOSE">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                        <connection refLocalId="69" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="7" />
                        <connection refLocalId="71" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SAVE_DATA">
                      <connectionPointIn>
                        <relPosition x="0" y="8" />
                        <connection refLocalId="73" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="ERROR_C">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR_T">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="76" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="56" formalParameter="ERROR_C" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="75" executionOrderId="12">
                  <position x="100" y="55" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="76" />
                  </connectionPointIn>
                  <expression>error_c</expression>
                </outVariable>
                <connector localId="78" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="56" formalParameter="ERROR_T" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="77" executionOrderId="13">
                  <position x="100" y="56" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="78" />
                  </connectionPointIn>
                  <expression>error_t</expression>
                </outVariable>
                <inVariable localId="81">
                  <position x="12" y="68" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="80" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="81" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="83">
                  <position x="12" y="69" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="82" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="83" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="85">
                  <position x="12" y="70" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="84" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="85" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="87">
                  <position x="12" y="71" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="86" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="87" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <block localId="79" executionOrderId="14" typeName="oscat_basic.DWORD_OF_BYTE">
                  <position x="17" y="66" />
                  <inputVariables>
                    <variable formalParameter="B3">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="80" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="82" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B1">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="84" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B0">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="86" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DWORD_OF_BYTE">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="90">
                  <position x="11" y="74" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>192</expression>
                </inVariable>
                <connector localId="89" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="90" formalParameter="192" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="92">
                  <position x="11" y="75" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>168</expression>
                </inVariable>
                <connector localId="91" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="92" formalParameter="168" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="94">
                  <position x="11" y="76" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>178</expression>
                </inVariable>
                <connector localId="93" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="94" formalParameter="178" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="96">
                  <position x="11" y="77" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>025</expression>
                </inVariable>
                <connector localId="95" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="96" formalParameter="025" />
                  </connectionPointIn>
                </connector>
                <block localId="88" executionOrderId="15" typeName="oscat_basic.DWORD_OF_BYTE">
                  <position x="17" y="72" />
                  <inputVariables>
                    <variable formalParameter="B3">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="89" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="91" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B1">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="93" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B0">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="95" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DWORD_OF_BYTE">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="99">
                  <position x="70" y="67" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>ftp_url</expression>
                </inVariable>
                <connector localId="98" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="99" formalParameter="ftp_url" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="101">
                  <position x="70" y="68" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>ftp_activ</expression>
                </inVariable>
                <connector localId="100" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="101" formalParameter="ftp_activ" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="103">
                  <position x="70" y="69" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>ftp_delete</expression>
                </inVariable>
                <connector localId="102" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="103" formalParameter="ftp_delete" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="105">
                  <position x="70" y="70" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>ftp_timeout</expression>
                </inVariable>
                <connector localId="104" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="105" formalParameter="ftp_timeout" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="107">
                  <position x="70" y="71" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>ftp_retry</expression>
                </inVariable>
                <connector localId="106" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="107" formalParameter="ftp_retry" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="109">
                  <position x="70" y="72" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>ftp_retry_time</expression>
                </inVariable>
                <connector localId="108" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="109" formalParameter="ftp_retry_time" />
                  </connectionPointIn>
                </connector>
                <connector localId="110" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="79" formalParameter="DWORD_OF_BYTE" />
                  </connectionPointIn>
                </connector>
                <connector localId="111" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="88" formalParameter="DWORD_OF_BYTE" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="113">
                  <position x="70" y="75" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="112" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="113" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="97" executionOrderId="16" typeName="DLOG_FILE_TO_FTP" instanceName="DLOG_FILE_TO_FTP">
                  <position x="79" y="65" />
                  <inputVariables>
                    <variable formalParameter="FTP_URL">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="98" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="FTP_ACTIV">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="100" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="FILE_DELETE">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="102" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TIMEOUT">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="104" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="RETRY">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="106" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="RETRY_TIME">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="108" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DNS_IP4">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                        <connection refLocalId="110" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="PLC_IP4">
                      <connectionPointIn>
                        <relPosition x="0" y="7" />
                        <connection refLocalId="111" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="8" />
                        <connection refLocalId="112" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DONE">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="BUSY">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR_C">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR_T">
                      <connectionPointOut>
                        <relPosition x="0" y="3" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="115" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="97" formalParameter="DONE" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="114" executionOrderId="17">
                  <position x="96" y="67" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="115" />
                  </connectionPointIn>
                  <expression>ftp_done</expression>
                </outVariable>
                <connector localId="117" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="97" formalParameter="BUSY" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="116" executionOrderId="18">
                  <position x="96" y="68" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="117" />
                  </connectionPointIn>
                  <expression>ftp_busy</expression>
                </outVariable>
                <connector localId="119" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="97" formalParameter="ERROR_C" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="118" executionOrderId="19">
                  <position x="96" y="69" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="119" />
                  </connectionPointIn>
                  <expression>ftp_error_c</expression>
                </outVariable>
                <connector localId="121" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="97" formalParameter="ERROR_T" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="120" executionOrderId="20">
                  <position x="96" y="70" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="121" />
                  </connectionPointIn>
                  <expression>ftp_error_t</expression>
                </outVariable>
                <comment localId="122" height="0" width="0">
                  <position x="14" y="2" />
                  <content>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">dummy-Clock</xhtml>
                  </content>
                </comment>
              </CFC>
            </data>
          </addData>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>bd82d061-22d0-4ede-a9a7-fe91eb1be415</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="DLOG_FILE_CSV_SMTP_DEMO" pouType="program">
        <interface>
          <localVars>
            <variable name="cur_dt">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="enable">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="trig_t">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#5s0ms" />
              </initialValue>
            </variable>
            <variable name="trig_m">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="error_c">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="error_t">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="auto_close">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#10s0ms" />
              </initialValue>
            </variable>
            <variable name="x1">
              <type>
                <derived name="DLOG_DT" />
              </type>
            </variable>
            <variable name="x2">
              <type>
                <derived name="DLOG_REAL" />
              </type>
            </variable>
            <variable name="x3">
              <type>
                <derived name="DLOG_DINT" />
              </type>
            </variable>
            <variable name="x4">
              <type>
                <derived name="DLOG_BOOL" />
              </type>
            </variable>
            <variable name="x5">
              <type>
                <derived name="DLOG_STRING" />
              </type>
            </variable>
            <variable name="x">
              <type>
                <derived name="DLOG_DATA" />
              </type>
            </variable>
            <variable name="RTC_2">
              <type>
                <derived name="oscat_basic.RTC_2" />
              </type>
            </variable>
            <variable name="DLOG_STORE_FILE_CSV">
              <type>
                <derived name="DLOG_STORE_FILE_CSV" />
              </type>
            </variable>
            <variable name="GEN_SIN_1">
              <type>
                <derived name="oscat_basic.GEN_SIN" />
              </type>
            </variable>
            <variable name="COUNT_DR">
              <type>
                <derived name="oscat_basic.COUNT_DR" />
              </type>
            </variable>
            <variable name="DLOG_FILE_TO_SMTP">
              <type>
                <derived name="DLOG_FILE_TO_SMTP" />
              </type>
            </variable>
            <variable name="smtp_timeout">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#30s0ms" />
              </initialValue>
            </variable>
            <variable name="smtp_error_t">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="smtp_error_c">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="smtp_busy">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="smtp_done">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="smtp_dti">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="smtp_dti_offset">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="60" />
              </initialValue>
            </variable>
            <variable name="smtp_server">
              <type>
                <string />
              </type>
              <initialValue>
                <simpleValue value="'110876022:oscat123456@mail.gmx.net'" />
              </initialValue>
            </variable>
            <variable name="smtp_mailfrom">
              <type>
                <string />
              </type>
              <initialValue>
                <simpleValue value="'oscat@gmx.net;Station_01'" />
              </initialValue>
            </variable>
            <variable name="smtp_mailto">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
              <initialValue>
                <simpleValue value="'oscat@gmx.net'" />
              </initialValue>
            </variable>
            <variable name="smtp_subject">
              <type>
                <string />
              </type>
              <initialValue>
                <simpleValue value="'Das ist der Betreff'" />
              </initialValue>
            </variable>
            <variable name="smtp_body">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
              <initialValue>
                <simpleValue value="'Das ist der Email-Text'" />
              </initialValue>
            </variable>
            <variable name="smtp_delete">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="smtp_retry">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="smtp_retry_time">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#1m0s0ms" />
              </initialValue>
            </variable>
          </localVars>
          <localVars retain="true">
            <variable name="save_data">
              <type>
                <derived name="DLOG_SAVE" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/cfc" handleUnknown="implementation">
              <CFC>
                <inVariable localId="2">
                  <position x="15" y="6" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>DT#2010-10-22-06:00:00</expression>
                </inVariable>
                <connector localId="1" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="2" formalParameter="DT#2010-10-22-06:00:00" />
                  </connectionPointIn>
                </connector>
                <block localId="0" executionOrderId="1" typeName="oscat_basic.RTC_2" instanceName="rtc_2">
                  <position x="28" y="3" />
                  <inputVariables>
                    <variable formalParameter="SET">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SDT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SMS">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DEN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="OFS">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="UDT">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="LDT">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="DSO">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="XMS">
                      <connectionPointOut>
                        <relPosition x="0" y="3" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="4" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="UDT" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="3" executionOrderId="2">
                  <position x="40" y="5" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="4" />
                  </connectionPointIn>
                  <expression>cur_dt</expression>
                </outVariable>
                <inVariable localId="7">
                  <position x="72" y="14" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'Timestamp'</expression>
                </inVariable>
                <connector localId="6" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="7" formalParameter="'Timestamp'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="9">
                  <position x="72" y="16" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="8" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="9" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="5" executionOrderId="3" typeName="DLOG_DT" instanceName="x1">
                  <position x="81" y="11" />
                  <inputVariables>
                    <variable formalParameter="FMT">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="6" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DELTA">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="8" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="12">
                  <position x="46" y="19" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>T#10m</expression>
                </inVariable>
                <connector localId="11" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="12" formalParameter="T#10m" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="14">
                  <position x="46" y="20" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>100.0</expression>
                </inVariable>
                <connector localId="13" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="14" formalParameter="100.0" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="16">
                  <position x="46" y="21" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>50.0</expression>
                </inVariable>
                <connector localId="15" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="16" formalParameter="50.0" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="18">
                  <position x="46" y="22" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>0.0</expression>
                </inVariable>
                <connector localId="17" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="18" formalParameter="0.0" />
                  </connectionPointIn>
                </connector>
                <block localId="10" executionOrderId="4" typeName="oscat_basic.GEN_SIN" instanceName="GEN_SIN_1">
                  <position x="53" y="17" />
                  <inputVariables>
                    <variable formalParameter="PT">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="11" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="AM">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="13" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="OS">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="15" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DL">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="17" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="Q">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="Out">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="20" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="10" formalParameter="Out" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="22">
                  <position x="72" y="21" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>2</expression>
                </inVariable>
                <connector localId="21" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="22" formalParameter="2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="24">
                  <position x="72" y="23" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'Sinus'</expression>
                </inVariable>
                <connector localId="23" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="24" formalParameter="'Sinus'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="26">
                  <position x="72" y="25" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="25" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="26" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="19" executionOrderId="5" typeName="DLOG_REAL" instanceName="x2">
                  <position x="81" y="18" />
                  <inputVariables>
                    <variable formalParameter="VALUE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="20" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="N">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="21" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="D">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="23" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DELTA">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="25" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="29">
                  <position x="44" y="31" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x.CLOCK_TRIG</expression>
                </inVariable>
                <connector localId="28" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="29" formalParameter="x.CLOCK_TRIG" />
                  </connectionPointIn>
                </connector>
                <block localId="27" executionOrderId="6" typeName="oscat_basic.COUNT_DR" instanceName="COUNT_DR">
                  <position x="54" y="27" />
                  <inputVariables>
                    <variable formalParameter="SET">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="UP">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="28" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="STEP">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="MX">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="RST">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="CNT">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="31" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="27" formalParameter="CNT" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="33">
                  <position x="72" y="30" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'Count'</expression>
                </inVariable>
                <connector localId="32" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="33" formalParameter="'Count'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="35">
                  <position x="72" y="32" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="34" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="35" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="30" executionOrderId="7" typeName="DLOG_DINT" instanceName="x3">
                  <position x="81" y="27" />
                  <inputVariables>
                    <variable formalParameter="VALUE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="31" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="32" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DELTA">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="34" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="38">
                  <position x="70" y="37" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>COUNT_DR.CNT.2</expression>
                </inVariable>
                <connector localId="37" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="38" formalParameter="COUNT_DR.CNT.2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="40">
                  <position x="72" y="38" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'OFF'</expression>
                </inVariable>
                <connector localId="39" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="40" formalParameter="'OFF'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="42">
                  <position x="72" y="39" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'ON'</expression>
                </inVariable>
                <connector localId="41" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="42" formalParameter="'ON'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="44">
                  <position x="72" y="40" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'Count_Bit_2'</expression>
                </inVariable>
                <connector localId="43" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="44" formalParameter="'Count_Bit_2'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="46">
                  <position x="72" y="42" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="45" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="46" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="36" executionOrderId="8" typeName="DLOG_BOOL" instanceName="x4">
                  <position x="81" y="35" />
                  <inputVariables>
                    <variable formalParameter="STATE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="37" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="OFF">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="39" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="ON">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="41" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="43" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DELTA">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="45" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="49">
                  <position x="24" y="45" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>COUNT_DR.CNT</expression>
                </inVariable>
                <connector localId="48" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="49" formalParameter="COUNT_DR.CNT" />
                  </connectionPointIn>
                </connector>
                <block localId="47" executionOrderId="9" typeName="OSCAT_BASIC.DWORD_TO_STRB">
                  <position x="34" y="43" />
                  <inputVariables>
                    <variable formalParameter="IN">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="48" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DWORD_TO_STRB">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="51" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="47" formalParameter="DWORD_TO_STRB" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="53">
                  <position x="72" y="49" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'Count_Hex'</expression>
                </inVariable>
                <connector localId="52" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="53" formalParameter="'Count_Hex'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="55">
                  <position x="72" y="50" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="54" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="55" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="50" executionOrderId="10" typeName="DLOG_STRING" instanceName="x5">
                  <position x="81" y="46" />
                  <inputVariables>
                    <variable formalParameter="STR">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="51" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="52" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="54" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="58">
                  <position x="72" y="55" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>enable</expression>
                </inVariable>
                <connector localId="57" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="58" formalParameter="enable" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="60">
                  <position x="72" y="56" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>trig_m</expression>
                </inVariable>
                <connector localId="59" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="60" formalParameter="trig_m" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="62">
                  <position x="72" y="57" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>trig_t</expression>
                </inVariable>
                <connector localId="61" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="62" formalParameter="trig_t" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="64">
                  <position x="72" y="58" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'test_#R.csv'</expression>
                </inVariable>
                <connector localId="63" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="64" formalParameter="'test_#R.csv'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="66">
                  <position x="72" y="59" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>cur_dt</expression>
                </inVariable>
                <connector localId="65" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="66" formalParameter="cur_dt" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="68">
                  <position x="72" y="60" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>59</expression>
                </inVariable>
                <connector localId="67" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="68" formalParameter="59" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="70">
                  <position x="72" y="61" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>auto_close</expression>
                </inVariable>
                <connector localId="69" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="70" formalParameter="auto_close" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="72">
                  <position x="72" y="62" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="71" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="72" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="74">
                  <position x="72" y="63" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>save_data</expression>
                </inVariable>
                <connector localId="73" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="74" formalParameter="save_data" />
                  </connectionPointIn>
                </connector>
                <block localId="56" executionOrderId="11" typeName="DLOG_STORE_FILE_CSV" instanceName="DLOG_STORE_FILE_CSV">
                  <position x="81" y="53" />
                  <inputVariables>
                    <variable formalParameter="ENABLE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="57" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TRIG_M">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="59" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TRIG_T">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="61" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="FILENAME">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="63" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DTI">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="65" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SEP">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="67" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="AUTO_CLOSE">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                        <connection refLocalId="69" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="7" />
                        <connection refLocalId="71" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SAVE_DATA">
                      <connectionPointIn>
                        <relPosition x="0" y="8" />
                        <connection refLocalId="73" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="ERROR_C">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR_T">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="76" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="56" formalParameter="ERROR_C" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="75" executionOrderId="12">
                  <position x="102" y="55" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="76" />
                  </connectionPointIn>
                  <expression>error_c</expression>
                </outVariable>
                <connector localId="78" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="56" formalParameter="ERROR_T" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="77" executionOrderId="13">
                  <position x="102" y="56" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="78" />
                  </connectionPointIn>
                  <expression>error_t</expression>
                </outVariable>
                <inVariable localId="81">
                  <position x="8" y="73" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="80" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="81" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="83">
                  <position x="8" y="74" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="82" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="83" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="85">
                  <position x="8" y="75" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="84" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="85" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="87">
                  <position x="8" y="76" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="86" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="87" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <block localId="79" executionOrderId="14" typeName="oscat_basic.DWORD_OF_BYTE">
                  <position x="13" y="71" />
                  <inputVariables>
                    <variable formalParameter="B3">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="80" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="82" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B1">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="84" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B0">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="86" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DWORD_OF_BYTE">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="90">
                  <position x="88" y="67" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>smtp_delete</expression>
                </inVariable>
                <connector localId="89" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="90" formalParameter="smtp_delete" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="92">
                  <position x="88" y="68" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>smtp_timeout</expression>
                </inVariable>
                <connector localId="91" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="92" formalParameter="smtp_timeout" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="94">
                  <position x="88" y="69" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>smtp_dti</expression>
                </inVariable>
                <connector localId="93" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="94" formalParameter="smtp_dti" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="96">
                  <position x="88" y="70" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>smtp_dti_offset</expression>
                </inVariable>
                <connector localId="95" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="96" formalParameter="smtp_dti_offset" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="98">
                  <position x="88" y="71" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>smtp_retry</expression>
                </inVariable>
                <connector localId="97" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="98" formalParameter="smtp_retry" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="100">
                  <position x="88" y="72" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>smtp_retry_time</expression>
                </inVariable>
                <connector localId="99" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="100" formalParameter="smtp_retry_time" />
                  </connectionPointIn>
                </connector>
                <connector localId="101" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="79" formalParameter="DWORD_OF_BYTE" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="103">
                  <position x="88" y="74" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>smtp_server</expression>
                </inVariable>
                <connector localId="102" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="103" formalParameter="smtp_server" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="105">
                  <position x="88" y="75" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>smtp_mailfrom</expression>
                </inVariable>
                <connector localId="104" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="105" formalParameter="smtp_mailfrom" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="107">
                  <position x="88" y="76" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>smtp_mailto</expression>
                </inVariable>
                <connector localId="106" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="107" formalParameter="smtp_mailto" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="109">
                  <position x="88" y="77" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>smtp_subject</expression>
                </inVariable>
                <connector localId="108" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="109" formalParameter="smtp_subject" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="111">
                  <position x="88" y="78" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>smtp_body</expression>
                </inVariable>
                <connector localId="110" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="111" formalParameter="smtp_body" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="113">
                  <position x="88" y="79" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="112" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="113" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="88" executionOrderId="15" typeName="DLOG_FILE_TO_SMTP" instanceName="DLOG_FILE_TO_SMTP">
                  <position x="98" y="65" />
                  <inputVariables>
                    <variable formalParameter="FILE_DELETE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="89" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TIMEOUT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="91" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DTI">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="93" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DTI_OFFSET">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="95" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="RETRY">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="97" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="RETRY_TIME">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="99" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DNS_IP4">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                        <connection refLocalId="101" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SERVER">
                      <connectionPointIn>
                        <relPosition x="0" y="7" />
                        <connection refLocalId="102" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="MAILFROM">
                      <connectionPointIn>
                        <relPosition x="0" y="8" />
                        <connection refLocalId="104" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="MAILTO">
                      <connectionPointIn>
                        <relPosition x="0" y="9" />
                        <connection refLocalId="106" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SUBJECT">
                      <connectionPointIn>
                        <relPosition x="0" y="10" />
                        <connection refLocalId="108" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="BODY">
                      <connectionPointIn>
                        <relPosition x="0" y="11" />
                        <connection refLocalId="110" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="12" />
                        <connection refLocalId="112" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DONE">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="BUSY">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR_C">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR_T">
                      <connectionPointOut>
                        <relPosition x="0" y="3" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="115" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="88" formalParameter="DONE" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="114" executionOrderId="16">
                  <position x="114" y="67" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="115" />
                  </connectionPointIn>
                  <expression>smtp_done</expression>
                </outVariable>
                <connector localId="117" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="88" formalParameter="BUSY" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="116" executionOrderId="17">
                  <position x="114" y="68" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="117" />
                  </connectionPointIn>
                  <expression>smtp_busy</expression>
                </outVariable>
                <connector localId="119" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="88" formalParameter="ERROR_C" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="118" executionOrderId="18">
                  <position x="114" y="69" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="119" />
                  </connectionPointIn>
                  <expression>smtp_error_c</expression>
                </outVariable>
                <connector localId="121" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="88" formalParameter="ERROR_T" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="120" executionOrderId="19">
                  <position x="114" y="70" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="121" />
                  </connectionPointIn>
                  <expression>smtp_error_t</expression>
                </outVariable>
                <inVariable localId="124">
                  <position x="27" y="11" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>cur_dt</expression>
                </inVariable>
                <connector localId="123" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="124" formalParameter="cur_dt" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="122" executionOrderId="20">
                  <position x="34" y="11" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="123" />
                  </connectionPointIn>
                  <expression>smtp_dti</expression>
                </outVariable>
                <comment localId="125" height="0" width="0">
                  <position x="16" y="3" />
                  <content>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">dummy-Clock</xhtml>
                  </content>
                </comment>
              </CFC>
            </data>
          </addData>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d89a6a9f-535e-4fdc-8a52-ea4649d866cf</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="DLOG_FILE_HTML_DEMO" pouType="program">
        <interface>
          <localVars>
            <variable name="cur_dt">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="enable">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="trig_t">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#5s0ms" />
              </initialValue>
            </variable>
            <variable name="trig_m">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="error_c">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="error_t">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="auto_close">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#10s0ms" />
              </initialValue>
            </variable>
            <variable name="x1">
              <type>
                <derived name="DLOG_DT" />
              </type>
            </variable>
            <variable name="x2">
              <type>
                <derived name="DLOG_REAL" />
              </type>
            </variable>
            <variable name="x3">
              <type>
                <derived name="DLOG_DINT" />
              </type>
            </variable>
            <variable name="x4">
              <type>
                <derived name="DLOG_BOOL" />
              </type>
            </variable>
            <variable name="x5">
              <type>
                <derived name="DLOG_STRING" />
              </type>
            </variable>
            <variable name="x">
              <type>
                <derived name="DLOG_DATA" />
              </type>
            </variable>
            <variable name="RTC_2">
              <type>
                <derived name="oscat_basic.RTC_2" />
              </type>
            </variable>
            <variable name="DLOG_STORE_FILE_HTML">
              <type>
                <derived name="DLOG_STORE_FILE_HTML" />
              </type>
            </variable>
            <variable name="GEN_SIN_1">
              <type>
                <derived name="oscat_basic.GEN_SIN" />
              </type>
            </variable>
            <variable name="COUNT_DR">
              <type>
                <derived name="oscat_basic.COUNT_DR" />
              </type>
            </variable>
            <variable name="html_caption">
              <type>
                <string />
              </type>
              <initialValue>
                <simpleValue value="'Das ist der Titel'" />
              </initialValue>
            </variable>
            <variable name="html_tr_even">
              <type>
                <string />
              </type>
              <initialValue>
                <simpleValue value="'BGCOLOR=#B3B7FF'" />
              </initialValue>
            </variable>
            <variable name="html_tr_odd">
              <type>
                <string />
              </type>
              <initialValue>
                <simpleValue value="'BGCOLOR=#E0E0E0'" />
              </initialValue>
            </variable>
            <variable name="html_tr_head">
              <type>
                <string />
              </type>
              <initialValue>
                <simpleValue value="'BGCOLOR=#FFFF40'" />
              </initialValue>
            </variable>
            <variable name="html_table">
              <type>
                <string />
              </type>
              <initialValue>
                <simpleValue value="'BORDER=&quot;1&quot;'" />
              </initialValue>
            </variable>
          </localVars>
          <localVars retain="true">
            <variable name="save_data">
              <type>
                <derived name="DLOG_SAVE" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/cfc" handleUnknown="implementation">
              <CFC>
                <inVariable localId="2">
                  <position x="11" y="4" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>DT#2010-10-22-06:00:00</expression>
                </inVariable>
                <connector localId="1" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="2" formalParameter="DT#2010-10-22-06:00:00" />
                  </connectionPointIn>
                </connector>
                <block localId="0" executionOrderId="1" typeName="oscat_basic.RTC_2" instanceName="rtc_2">
                  <position x="24" y="1" />
                  <inputVariables>
                    <variable formalParameter="SET">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SDT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SMS">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DEN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="OFS">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="UDT">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="LDT">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="DSO">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="XMS">
                      <connectionPointOut>
                        <relPosition x="0" y="3" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="4" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="UDT" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="3" executionOrderId="2">
                  <position x="36" y="3" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="4" />
                  </connectionPointIn>
                  <expression>cur_dt</expression>
                </outVariable>
                <inVariable localId="7">
                  <position x="68" y="13" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'Timestamp'</expression>
                </inVariable>
                <connector localId="6" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="7" formalParameter="'Timestamp'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="9">
                  <position x="68" y="15" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="8" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="9" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="5" executionOrderId="3" typeName="DLOG_DT" instanceName="x1">
                  <position x="78" y="10" />
                  <inputVariables>
                    <variable formalParameter="FMT">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="6" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DELTA">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="8" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="12">
                  <position x="42" y="18" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>T#10m</expression>
                </inVariable>
                <connector localId="11" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="12" formalParameter="T#10m" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="14">
                  <position x="42" y="19" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>100.0</expression>
                </inVariable>
                <connector localId="13" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="14" formalParameter="100.0" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="16">
                  <position x="42" y="20" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>50.0</expression>
                </inVariable>
                <connector localId="15" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="16" formalParameter="50.0" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="18">
                  <position x="42" y="21" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>0.0</expression>
                </inVariable>
                <connector localId="17" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="18" formalParameter="0.0" />
                  </connectionPointIn>
                </connector>
                <block localId="10" executionOrderId="4" typeName="oscat_basic.GEN_SIN" instanceName="GEN_SIN_1">
                  <position x="49" y="16" />
                  <inputVariables>
                    <variable formalParameter="PT">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="11" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="AM">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="13" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="OS">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="15" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DL">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="17" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="Q">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="Out">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="20" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="10" formalParameter="Out" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="22">
                  <position x="68" y="20" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>2</expression>
                </inVariable>
                <connector localId="21" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="22" formalParameter="2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="24">
                  <position x="68" y="22" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'Sinus'</expression>
                </inVariable>
                <connector localId="23" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="24" formalParameter="'Sinus'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="26">
                  <position x="68" y="24" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="25" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="26" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="19" executionOrderId="5" typeName="DLOG_REAL" instanceName="x2">
                  <position x="78" y="17" />
                  <inputVariables>
                    <variable formalParameter="VALUE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="20" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="N">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="21" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="D">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="23" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DELTA">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="25" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="29">
                  <position x="39" y="30" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x.CLOCK_TRIG</expression>
                </inVariable>
                <connector localId="28" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="29" formalParameter="x.CLOCK_TRIG" />
                  </connectionPointIn>
                </connector>
                <block localId="27" executionOrderId="6" typeName="oscat_basic.COUNT_DR" instanceName="COUNT_DR">
                  <position x="49" y="26" />
                  <inputVariables>
                    <variable formalParameter="SET">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="UP">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="28" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="STEP">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="MX">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="RST">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="CNT">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="31" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="27" formalParameter="CNT" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="33">
                  <position x="68" y="29" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'Count'</expression>
                </inVariable>
                <connector localId="32" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="33" formalParameter="'Count'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="35">
                  <position x="68" y="31" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="34" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="35" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="30" executionOrderId="7" typeName="DLOG_DINT" instanceName="x3">
                  <position x="78" y="26" />
                  <inputVariables>
                    <variable formalParameter="VALUE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="31" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="32" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DELTA">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="34" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="38">
                  <position x="68" y="36" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>COUNT_DR.CNT.2</expression>
                </inVariable>
                <connector localId="37" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="38" formalParameter="COUNT_DR.CNT.2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="40">
                  <position x="68" y="37" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'OFF'</expression>
                </inVariable>
                <connector localId="39" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="40" formalParameter="'OFF'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="42">
                  <position x="68" y="38" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'ON'</expression>
                </inVariable>
                <connector localId="41" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="42" formalParameter="'ON'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="44">
                  <position x="68" y="39" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'Count_Bit_2'</expression>
                </inVariable>
                <connector localId="43" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="44" formalParameter="'Count_Bit_2'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="46">
                  <position x="68" y="41" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="45" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="46" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="36" executionOrderId="8" typeName="DLOG_BOOL" instanceName="x4">
                  <position x="78" y="34" />
                  <inputVariables>
                    <variable formalParameter="STATE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="37" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="OFF">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="39" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="ON">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="41" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="43" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DELTA">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="45" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="49">
                  <position x="20" y="44" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>COUNT_DR.CNT</expression>
                </inVariable>
                <connector localId="48" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="49" formalParameter="COUNT_DR.CNT" />
                  </connectionPointIn>
                </connector>
                <block localId="47" executionOrderId="9" typeName="OSCAT_BASIC.DWORD_TO_STRB">
                  <position x="30" y="42" />
                  <inputVariables>
                    <variable formalParameter="IN">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="48" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DWORD_TO_STRB">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="51" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="47" formalParameter="DWORD_TO_STRB" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="53">
                  <position x="68" y="48" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'Count_Hex'</expression>
                </inVariable>
                <connector localId="52" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="53" formalParameter="'Count_Hex'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="55">
                  <position x="68" y="49" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="54" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="55" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="50" executionOrderId="10" typeName="DLOG_STRING" instanceName="x5">
                  <position x="78" y="45" />
                  <inputVariables>
                    <variable formalParameter="STR">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="51" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="52" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="54" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="58">
                  <position x="68" y="53" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>enable</expression>
                </inVariable>
                <connector localId="57" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="58" formalParameter="enable" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="60">
                  <position x="68" y="54" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>trig_m</expression>
                </inVariable>
                <connector localId="59" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="60" formalParameter="trig_m" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="62">
                  <position x="68" y="55" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>trig_t</expression>
                </inVariable>
                <connector localId="61" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="62" formalParameter="trig_t" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="64">
                  <position x="68" y="56" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'test_#R.html'</expression>
                </inVariable>
                <connector localId="63" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="64" formalParameter="'test_#R.html'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="66">
                  <position x="68" y="57" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>cur_dt</expression>
                </inVariable>
                <connector localId="65" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="66" formalParameter="cur_dt" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="68">
                  <position x="68" y="58" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>auto_close</expression>
                </inVariable>
                <connector localId="67" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="68" formalParameter="auto_close" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="70">
                  <position x="68" y="59" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>html_caption</expression>
                </inVariable>
                <connector localId="69" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="70" formalParameter="html_caption" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="72">
                  <position x="68" y="60" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>html_table</expression>
                </inVariable>
                <connector localId="71" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="72" formalParameter="html_table" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="74">
                  <position x="68" y="61" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>html_tr_head</expression>
                </inVariable>
                <connector localId="73" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="74" formalParameter="html_tr_head" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="76">
                  <position x="68" y="62" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>html_tr_even</expression>
                </inVariable>
                <connector localId="75" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="76" formalParameter="html_tr_even" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="78">
                  <position x="68" y="63" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>html_tr_odd</expression>
                </inVariable>
                <connector localId="77" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="78" formalParameter="html_tr_odd" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="80">
                  <position x="68" y="64" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="79" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="80" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="82">
                  <position x="68" y="65" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>save_data</expression>
                </inVariable>
                <connector localId="81" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="82" formalParameter="save_data" />
                  </connectionPointIn>
                </connector>
                <block localId="56" executionOrderId="11" typeName="DLOG_STORE_FILE_HTML" instanceName="DLOG_STORE_FILE_HTML">
                  <position x="77" y="51" />
                  <inputVariables>
                    <variable formalParameter="ENABLE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="57" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TRIG_M">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="59" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TRIG_T">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="61" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="FILENAME">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="63" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DTI">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="65" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="AUTO_CLOSE">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="67" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="HTML_CAPTION">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                        <connection refLocalId="69" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="HTML_TABLE">
                      <connectionPointIn>
                        <relPosition x="0" y="7" />
                        <connection refLocalId="71" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="HTML_TR_HEAD">
                      <connectionPointIn>
                        <relPosition x="0" y="8" />
                        <connection refLocalId="73" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="HTML_TR_EVEN">
                      <connectionPointIn>
                        <relPosition x="0" y="9" />
                        <connection refLocalId="75" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="HTML_TR_ODD">
                      <connectionPointIn>
                        <relPosition x="0" y="10" />
                        <connection refLocalId="77" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="11" />
                        <connection refLocalId="79" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SAVE_DATA">
                      <connectionPointIn>
                        <relPosition x="0" y="12" />
                        <connection refLocalId="81" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="ERROR_C">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR_T">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="84" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="56" formalParameter="ERROR_C" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="83" executionOrderId="12">
                  <position x="98" y="53" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="84" />
                  </connectionPointIn>
                  <expression>error_c</expression>
                </outVariable>
                <connector localId="86" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="56" formalParameter="ERROR_T" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="85" executionOrderId="13">
                  <position x="98" y="54" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="86" />
                  </connectionPointIn>
                  <expression>error_t</expression>
                </outVariable>
              </CFC>
            </data>
          </addData>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>5893f866-82e9-453f-9712-2d36faa00afe</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="DLOG_FILE_XML_DEMO" pouType="program">
        <interface>
          <localVars>
            <variable name="cur_dt">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="enable">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="trig_t">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#5s0ms" />
              </initialValue>
            </variable>
            <variable name="trig_m">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="error_c">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="error_t">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="auto_close">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#10s0ms" />
              </initialValue>
            </variable>
            <variable name="x1">
              <type>
                <derived name="DLOG_DT" />
              </type>
            </variable>
            <variable name="x2">
              <type>
                <derived name="DLOG_REAL" />
              </type>
            </variable>
            <variable name="x3">
              <type>
                <derived name="DLOG_DINT" />
              </type>
            </variable>
            <variable name="x4">
              <type>
                <derived name="DLOG_BOOL" />
              </type>
            </variable>
            <variable name="x5">
              <type>
                <derived name="DLOG_STRING" />
              </type>
            </variable>
            <variable name="x">
              <type>
                <derived name="DLOG_DATA" />
              </type>
            </variable>
            <variable name="RTC_2">
              <type>
                <derived name="oscat_basic.RTC_2" />
              </type>
            </variable>
            <variable name="DLOG_STORE_FILE_XML">
              <type>
                <derived name="DLOG_STORE_FILE_XML" />
              </type>
            </variable>
            <variable name="GEN_SIN_1">
              <type>
                <derived name="oscat_basic.GEN_SIN" />
              </type>
            </variable>
            <variable name="COUNT_DR">
              <type>
                <derived name="oscat_basic.COUNT_DR" />
              </type>
            </variable>
          </localVars>
          <localVars retain="true">
            <variable name="save_data">
              <type>
                <derived name="DLOG_SAVE" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/cfc" handleUnknown="implementation">
              <CFC>
                <inVariable localId="2">
                  <position x="10" y="4" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>DT#2010-10-22-06:00:00</expression>
                </inVariable>
                <connector localId="1" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="2" formalParameter="DT#2010-10-22-06:00:00" />
                  </connectionPointIn>
                </connector>
                <block localId="0" executionOrderId="1" typeName="oscat_basic.RTC_2" instanceName="rtc_2">
                  <position x="24" y="1" />
                  <inputVariables>
                    <variable formalParameter="SET">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SDT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SMS">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DEN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="OFS">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="UDT">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="LDT">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="DSO">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="XMS">
                      <connectionPointOut>
                        <relPosition x="0" y="3" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="4" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="UDT" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="3" executionOrderId="2">
                  <position x="36" y="3" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="4" />
                  </connectionPointIn>
                  <expression>cur_dt</expression>
                </outVariable>
                <inVariable localId="7">
                  <position x="66" y="11" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'Timestamp'</expression>
                </inVariable>
                <connector localId="6" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="7" formalParameter="'Timestamp'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="9">
                  <position x="66" y="13" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="8" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="9" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="5" executionOrderId="3" typeName="DLOG_DT" instanceName="x1">
                  <position x="76" y="8" />
                  <inputVariables>
                    <variable formalParameter="FMT">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="6" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DELTA">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="8" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="12">
                  <position x="40" y="16" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>T#10m</expression>
                </inVariable>
                <connector localId="11" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="12" formalParameter="T#10m" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="14">
                  <position x="40" y="17" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>100.0</expression>
                </inVariable>
                <connector localId="13" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="14" formalParameter="100.0" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="16">
                  <position x="40" y="18" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>50.0</expression>
                </inVariable>
                <connector localId="15" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="16" formalParameter="50.0" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="18">
                  <position x="40" y="19" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>0.0</expression>
                </inVariable>
                <connector localId="17" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="18" formalParameter="0.0" />
                  </connectionPointIn>
                </connector>
                <block localId="10" executionOrderId="4" typeName="oscat_basic.GEN_SIN" instanceName="GEN_SIN_1">
                  <position x="47" y="14" />
                  <inputVariables>
                    <variable formalParameter="PT">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="11" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="AM">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="13" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="OS">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="15" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DL">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="17" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="Q">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="Out">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="20" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="10" formalParameter="Out" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="22">
                  <position x="66" y="18" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>2</expression>
                </inVariable>
                <connector localId="21" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="22" formalParameter="2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="24">
                  <position x="66" y="20" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'Sinus'</expression>
                </inVariable>
                <connector localId="23" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="24" formalParameter="'Sinus'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="26">
                  <position x="66" y="22" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="25" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="26" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="19" executionOrderId="5" typeName="DLOG_REAL" instanceName="x2">
                  <position x="76" y="15" />
                  <inputVariables>
                    <variable formalParameter="VALUE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="20" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="N">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="21" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="D">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="23" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DELTA">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="25" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="29">
                  <position x="14" y="28" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x.CLOCK_TRIG</expression>
                </inVariable>
                <connector localId="28" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="29" formalParameter="x.CLOCK_TRIG" />
                  </connectionPointIn>
                </connector>
                <block localId="27" executionOrderId="6" typeName="oscat_basic.COUNT_DR" instanceName="COUNT_DR">
                  <position x="24" y="24" />
                  <inputVariables>
                    <variable formalParameter="SET">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="UP">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="28" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="STEP">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="MX">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="RST">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="CNT">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="31" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="27" formalParameter="CNT" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="33">
                  <position x="66" y="27" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'Count'</expression>
                </inVariable>
                <connector localId="32" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="33" formalParameter="'Count'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="35">
                  <position x="66" y="29" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="34" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="35" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="30" executionOrderId="7" typeName="DLOG_DINT" instanceName="x3">
                  <position x="76" y="24" />
                  <inputVariables>
                    <variable formalParameter="VALUE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="31" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="32" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DELTA">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="34" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="38">
                  <position x="65" y="33" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>COUNT_DR.CNT.2</expression>
                </inVariable>
                <connector localId="37" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="38" formalParameter="COUNT_DR.CNT.2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="40">
                  <position x="66" y="34" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'OFF'</expression>
                </inVariable>
                <connector localId="39" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="40" formalParameter="'OFF'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="42">
                  <position x="66" y="35" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'ON'</expression>
                </inVariable>
                <connector localId="41" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="42" formalParameter="'ON'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="44">
                  <position x="66" y="36" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'Count_Bit_2'</expression>
                </inVariable>
                <connector localId="43" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="44" formalParameter="'Count_Bit_2'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="46">
                  <position x="66" y="38" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="45" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="46" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="36" executionOrderId="8" typeName="DLOG_BOOL" instanceName="x4">
                  <position x="76" y="31" />
                  <inputVariables>
                    <variable formalParameter="STATE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="37" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="OFF">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="39" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="ON">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="41" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="43" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DELTA">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="45" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="49">
                  <position x="8" y="41" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>COUNT_DR.CNT</expression>
                </inVariable>
                <connector localId="48" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="49" formalParameter="COUNT_DR.CNT" />
                  </connectionPointIn>
                </connector>
                <block localId="47" executionOrderId="9" typeName="OSCAT_BASIC.DWORD_TO_STRB">
                  <position x="18" y="39" />
                  <inputVariables>
                    <variable formalParameter="IN">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="48" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DWORD_TO_STRB">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="51" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="47" formalParameter="DWORD_TO_STRB" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="53">
                  <position x="66" y="45" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'Count_Hex'</expression>
                </inVariable>
                <connector localId="52" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="53" formalParameter="'Count_Hex'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="55">
                  <position x="66" y="46" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="54" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="55" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="50" executionOrderId="10" typeName="DLOG_STRING" instanceName="x5">
                  <position x="76" y="42" />
                  <inputVariables>
                    <variable formalParameter="STR">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="51" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="52" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="54" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="58">
                  <position x="57" y="51" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>enable</expression>
                </inVariable>
                <connector localId="57" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="58" formalParameter="enable" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="60">
                  <position x="57" y="52" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>trig_m</expression>
                </inVariable>
                <connector localId="59" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="60" formalParameter="trig_m" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="62">
                  <position x="57" y="53" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>trig_t</expression>
                </inVariable>
                <connector localId="61" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="62" formalParameter="trig_t" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="64">
                  <position x="57" y="54" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'test_#R.xml'</expression>
                </inVariable>
                <connector localId="63" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="64" formalParameter="'test_#R.xml'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="66">
                  <position x="57" y="55" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>cur_dt</expression>
                </inVariable>
                <connector localId="65" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="66" formalParameter="cur_dt" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="68">
                  <position x="57" y="56" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>auto_close</expression>
                </inVariable>
                <connector localId="67" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="68" formalParameter="auto_close" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="70">
                  <position x="57" y="57" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="69" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="70" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="72">
                  <position x="57" y="58" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>save_data</expression>
                </inVariable>
                <connector localId="71" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="72" formalParameter="save_data" />
                  </connectionPointIn>
                </connector>
                <block localId="56" executionOrderId="11" typeName="DLOG_STORE_FILE_XML" instanceName="DLOG_STORE_FILE_XML">
                  <position x="66" y="49" />
                  <inputVariables>
                    <variable formalParameter="ENABLE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="57" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TRIG_M">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="59" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TRIG_T">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="61" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="FILENAME">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="63" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DTI">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="65" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="AUTO_CLOSE">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="67" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                        <connection refLocalId="69" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SAVE_DATA">
                      <connectionPointIn>
                        <relPosition x="0" y="7" />
                        <connection refLocalId="71" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="ERROR_C">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR_T">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="74" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="56" formalParameter="ERROR_C" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="73" executionOrderId="12">
                  <position x="96" y="51" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="74" />
                  </connectionPointIn>
                  <expression>error_c</expression>
                </outVariable>
                <connector localId="76" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="56" formalParameter="ERROR_T" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="75" executionOrderId="13">
                  <position x="96" y="52" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="76" />
                  </connectionPointIn>
                  <expression>error_t</expression>
                </outVariable>
                <comment localId="77" height="0" width="0">
                  <position x="12" y="2" />
                  <content>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">dummy-Clock</xhtml>
                  </content>
                </comment>
              </CFC>
            </data>
          </addData>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>34116581-cf88-4740-9d35-4cd5838c21e3</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="DLOG_MYSQL_DEMO" pouType="program">
        <interface>
          <localVars>
            <variable name="cur_dt">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="enable">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="trig_t">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#5s0ms" />
              </initialValue>
            </variable>
            <variable name="trig_m">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="error_c">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="error_t">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="x1">
              <type>
                <derived name="DLOG_DT" />
              </type>
            </variable>
            <variable name="x2">
              <type>
                <derived name="DLOG_REAL" />
              </type>
            </variable>
            <variable name="x3">
              <type>
                <derived name="DLOG_DINT" />
              </type>
            </variable>
            <variable name="x4">
              <type>
                <derived name="DLOG_BOOL" />
              </type>
            </variable>
            <variable name="x5">
              <type>
                <derived name="DLOG_STRING" />
              </type>
            </variable>
            <variable name="x">
              <type>
                <derived name="DLOG_DATA" />
              </type>
            </variable>
            <variable name="mysql_info">
              <type>
                <derived name="MYSQL_INFO" />
              </type>
            </variable>
            <variable name="RTC_2">
              <type>
                <derived name="oscat_basic.RTC_2" />
              </type>
            </variable>
            <variable name="GEN_SIN_1">
              <type>
                <derived name="oscat_basic.GEN_SIN" />
              </type>
            </variable>
            <variable name="COUNT_DR">
              <type>
                <derived name="oscat_basic.COUNT_DR" />
              </type>
            </variable>
            <variable name="DLOG_STORE_MYSQL">
              <type>
                <derived name="DLOG_STORE_MYSQL" />
              </type>
            </variable>
            <variable name="url">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
              <initialValue>
                <simpleValue value="'myuser:mypassword@192.168.178.21'" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">url : STRING := 'myuser:mypassword@127.0.0.1';</xhtml>
              </documentation>
            </variable>
            <variable name="db_name">
              <type>
                <string length="64" />
              </type>
              <initialValue>
                <simpleValue value="'oscat_db'" />
              </initialValue>
            </variable>
            <variable name="tb_name">
              <type>
                <string length="64" />
              </type>
              <initialValue>
                <simpleValue value="'oscat_tb'" />
              </initialValue>
            </variable>
            <variable name="auto_delete">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="timeout">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#10s0ms" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/cfc" handleUnknown="implementation">
              <CFC>
                <inVariable localId="2">
                  <position x="11" y="4" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>DT#2010-10-22-06:00:00</expression>
                </inVariable>
                <connector localId="1" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="2" formalParameter="DT#2010-10-22-06:00:00" />
                  </connectionPointIn>
                </connector>
                <block localId="0" executionOrderId="1" typeName="oscat_basic.RTC_2" instanceName="rtc_2">
                  <position x="24" y="1" />
                  <inputVariables>
                    <variable formalParameter="SET">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SDT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SMS">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DEN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="OFS">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="UDT">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="LDT">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="DSO">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="XMS">
                      <connectionPointOut>
                        <relPosition x="0" y="3" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="4" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="UDT" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="3" executionOrderId="2">
                  <position x="36" y="3" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="4" />
                  </connectionPointIn>
                  <expression>cur_dt</expression>
                </outVariable>
                <inVariable localId="7">
                  <position x="66" y="12" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'Timestamp'</expression>
                </inVariable>
                <connector localId="6" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="7" formalParameter="'Timestamp'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="9">
                  <position x="68" y="14" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="8" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="9" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="5" executionOrderId="3" typeName="DLOG_DT" instanceName="x1">
                  <position x="75" y="9" />
                  <inputVariables>
                    <variable formalParameter="FMT">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="6" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DELTA">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="8" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="12">
                  <position x="42" y="17" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>T#10m</expression>
                </inVariable>
                <connector localId="11" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="12" formalParameter="T#10m" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="14">
                  <position x="42" y="18" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>100.0</expression>
                </inVariable>
                <connector localId="13" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="14" formalParameter="100.0" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="16">
                  <position x="42" y="19" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>50.0</expression>
                </inVariable>
                <connector localId="15" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="16" formalParameter="50.0" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="18">
                  <position x="42" y="20" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>0.0</expression>
                </inVariable>
                <connector localId="17" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="18" formalParameter="0.0" />
                  </connectionPointIn>
                </connector>
                <block localId="10" executionOrderId="4" typeName="oscat_basic.GEN_SIN" instanceName="GEN_SIN_1">
                  <position x="49" y="15" />
                  <inputVariables>
                    <variable formalParameter="PT">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="11" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="AM">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="13" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="OS">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="15" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DL">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="17" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="Q">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="Out">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="20" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="10" formalParameter="Out" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="22">
                  <position x="68" y="19" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>2</expression>
                </inVariable>
                <connector localId="21" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="22" formalParameter="2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="24">
                  <position x="68" y="21" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'Sinus'</expression>
                </inVariable>
                <connector localId="23" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="24" formalParameter="'Sinus'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="26">
                  <position x="68" y="23" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="25" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="26" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="19" executionOrderId="5" typeName="DLOG_REAL" instanceName="x2">
                  <position x="75" y="16" />
                  <inputVariables>
                    <variable formalParameter="VALUE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="20" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="N">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="21" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="D">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="23" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DELTA">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="25" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="29">
                  <position x="40" y="29" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x.CLOCK_TRIG</expression>
                </inVariable>
                <connector localId="28" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="29" formalParameter="x.CLOCK_TRIG" />
                  </connectionPointIn>
                </connector>
                <block localId="27" executionOrderId="6" typeName="oscat_basic.COUNT_DR" instanceName="COUNT_DR">
                  <position x="50" y="25" />
                  <inputVariables>
                    <variable formalParameter="SET">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="UP">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="28" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="STEP">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="MX">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="RST">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="CNT">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="31" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="27" formalParameter="CNT" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="33">
                  <position x="68" y="28" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'Count'</expression>
                </inVariable>
                <connector localId="32" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="33" formalParameter="'Count'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="35">
                  <position x="68" y="30" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="34" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="35" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="30" executionOrderId="7" typeName="DLOG_DINT" instanceName="x3">
                  <position x="75" y="25" />
                  <inputVariables>
                    <variable formalParameter="VALUE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="31" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="32" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DELTA">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="34" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="38">
                  <position x="64" y="35" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>COUNT_DR.CNT.2</expression>
                </inVariable>
                <connector localId="37" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="38" formalParameter="COUNT_DR.CNT.2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="40">
                  <position x="68" y="36" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'OFF'</expression>
                </inVariable>
                <connector localId="39" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="40" formalParameter="'OFF'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="42">
                  <position x="68" y="37" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'ON'</expression>
                </inVariable>
                <connector localId="41" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="42" formalParameter="'ON'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="44">
                  <position x="66" y="38" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'Count_Bit_2'</expression>
                </inVariable>
                <connector localId="43" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="44" formalParameter="'Count_Bit_2'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="46">
                  <position x="68" y="40" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="45" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="46" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="36" executionOrderId="8" typeName="DLOG_BOOL" instanceName="x4">
                  <position x="75" y="33" />
                  <inputVariables>
                    <variable formalParameter="STATE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="37" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="OFF">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="39" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="ON">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="41" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="43" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DELTA">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="45" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="49">
                  <position x="20" y="45" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>COUNT_DR.CNT</expression>
                </inVariable>
                <connector localId="48" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="49" formalParameter="COUNT_DR.CNT" />
                  </connectionPointIn>
                </connector>
                <block localId="47" executionOrderId="9" typeName="OSCAT_BASIC.DWORD_TO_STRB">
                  <position x="31" y="43" />
                  <inputVariables>
                    <variable formalParameter="IN">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="48" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DWORD_TO_STRB">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="51" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="47" formalParameter="DWORD_TO_STRB" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="53">
                  <position x="66" y="46" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'Count_Hex'</expression>
                </inVariable>
                <connector localId="52" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="53" formalParameter="'Count_Hex'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="55">
                  <position x="68" y="47" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="54" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="55" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="50" executionOrderId="10" typeName="DLOG_STRING" instanceName="x5">
                  <position x="75" y="43" />
                  <inputVariables>
                    <variable formalParameter="STR">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="51" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="52" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="54" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="58">
                  <position x="12" y="63" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="57" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="58" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="60">
                  <position x="12" y="64" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="59" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="60" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="62">
                  <position x="12" y="65" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="61" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="62" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="64">
                  <position x="12" y="66" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="63" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="64" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <block localId="56" executionOrderId="11" typeName="oscat_basic.DWORD_OF_BYTE">
                  <position x="17" y="61" />
                  <inputVariables>
                    <variable formalParameter="B3">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="57" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="59" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B1">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="61" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B0">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="63" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DWORD_OF_BYTE">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="67">
                  <position x="68" y="54" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>enable</expression>
                </inVariable>
                <connector localId="66" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="67" formalParameter="enable" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="69">
                  <position x="68" y="55" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>trig_m</expression>
                </inVariable>
                <connector localId="68" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="69" formalParameter="trig_m" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="71">
                  <position x="68" y="56" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>trig_t</expression>
                </inVariable>
                <connector localId="70" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="71" formalParameter="trig_t" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="73">
                  <position x="68" y="57" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>cur_dt</expression>
                </inVariable>
                <connector localId="72" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="73" formalParameter="cur_dt" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="75">
                  <position x="68" y="58" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>url</expression>
                </inVariable>
                <connector localId="74" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="75" formalParameter="url" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="77">
                  <position x="68" y="59" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>db_name</expression>
                </inVariable>
                <connector localId="76" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="77" formalParameter="db_name" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="79">
                  <position x="68" y="60" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>tb_name</expression>
                </inVariable>
                <connector localId="78" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="79" formalParameter="tb_name" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="81">
                  <position x="68" y="61" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>auto_delete</expression>
                </inVariable>
                <connector localId="80" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="81" formalParameter="auto_delete" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="83">
                  <position x="68" y="62" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>timeout</expression>
                </inVariable>
                <connector localId="82" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="83" formalParameter="timeout" />
                  </connectionPointIn>
                </connector>
                <connector localId="84" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="56" formalParameter="DWORD_OF_BYTE" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="86">
                  <position x="68" y="64" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>mysql_info</expression>
                </inVariable>
                <connector localId="85" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="86" formalParameter="mysql_info" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="88">
                  <position x="68" y="65" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="87" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="88" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="65" executionOrderId="12" typeName="DLOG_STORE_MYSQL" instanceName="DLOG_STORE_MYSQL">
                  <position x="77" y="52" />
                  <inputVariables>
                    <variable formalParameter="ENABLE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="66" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TRIG_M">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="68" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TRIG_T">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="70" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DTI">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="72" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="URL">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="74" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DB_NAME">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="76" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TB_NAME">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                        <connection refLocalId="78" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="AUTO_DELETE">
                      <connectionPointIn>
                        <relPosition x="0" y="7" />
                        <connection refLocalId="80" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TIMEOUT">
                      <connectionPointIn>
                        <relPosition x="0" y="8" />
                        <connection refLocalId="82" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DNS_IP4">
                      <connectionPointIn>
                        <relPosition x="0" y="9" />
                        <connection refLocalId="84" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SQL_INFO">
                      <connectionPointIn>
                        <relPosition x="0" y="10" />
                        <connection refLocalId="85" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="11" />
                        <connection refLocalId="87" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="ERROR_C">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR_T">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="90" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="65" formalParameter="ERROR_T" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="89" executionOrderId="13">
                  <position x="94" y="55" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="90" />
                  </connectionPointIn>
                  <expression>error_t</expression>
                </outVariable>
                <connector localId="92" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="65" formalParameter="ERROR_C" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="91" executionOrderId="14">
                  <position x="94" y="54" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="92" />
                  </connectionPointIn>
                  <expression>error_c</expression>
                </outVariable>
              </CFC>
            </data>
          </addData>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d21d9f4e-9c81-4c3e-b580-84444b9c39b0</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="DLOG_RRD_DEMO" pouType="program">
        <interface>
          <localVars>
            <variable name="cur_dt">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="trig_t">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#50s0ms" />
              </initialValue>
            </variable>
            <variable name="trig_m">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="rrd_error_c">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="rrd_error_t">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="rrd_enable">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="rrd_url">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
              <initialValue>
                <simpleValue value="'192.168.178.21/rrd/test_rrd2.php?rrd_db=test.rrd&amp;value='" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">rrd_url : STRING(OSCAT_BASIC.STRING_LENGTH) := 'http://xxx.com/myhouse/rrd/test_rrd.php?rrd_db=test.rrd&amp;value=';</xhtml>
              </documentation>
            </variable>
            <variable name="rrd_timeout">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#5s0ms" />
              </initialValue>
            </variable>
            <variable name="RTC_2">
              <type>
                <derived name="oscat_basic.RTC_2" />
              </type>
            </variable>
            <variable name="DLOG_STORE_RRD">
              <type>
                <derived name="DLOG_STORE_RRD" />
              </type>
            </variable>
            <variable name="x">
              <type>
                <derived name="DLOG_DATA" />
              </type>
            </variable>
            <variable name="x1">
              <type>
                <derived name="DLOG_DINT" />
              </type>
            </variable>
            <variable name="x2">
              <type>
                <derived name="DLOG_DINT" />
              </type>
            </variable>
            <variable name="x3">
              <type>
                <derived name="DLOG_REAL" />
              </type>
            </variable>
            <variable name="x4">
              <type>
                <derived name="DLOG_REAL" />
              </type>
            </variable>
            <variable name="x5">
              <type>
                <derived name="DLOG_REAL" />
              </type>
            </variable>
            <variable name="x6">
              <type>
                <derived name="DLOG_REAL" />
              </type>
            </variable>
            <variable name="x7">
              <type>
                <derived name="DLOG_REAL" />
              </type>
            </variable>
            <variable name="GEN_SIN_1">
              <type>
                <derived name="oscat_basic.GEN_SIN" />
              </type>
            </variable>
            <variable name="GEN_SIN_2">
              <type>
                <derived name="oscat_basic.GEN_SIN" />
              </type>
            </variable>
            <variable name="GEN_SIN_3">
              <type>
                <derived name="oscat_basic.GEN_SIN" />
              </type>
            </variable>
            <variable name="GEN_RMP_1">
              <type>
                <derived name="oscat_basic.GEN_RMP" />
              </type>
            </variable>
            <variable name="GEN_RMP_2">
              <type>
                <derived name="oscat_basic.GEN_RMP" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/cfc" handleUnknown="implementation">
              <CFC>
                <inVariable localId="2">
                  <position x="10" y="4" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>DT#2010-10-22-06:00:00</expression>
                </inVariable>
                <connector localId="1" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="2" formalParameter="DT#2010-10-22-06:00:00" />
                  </connectionPointIn>
                </connector>
                <block localId="0" executionOrderId="1" typeName="oscat_basic.RTC_2" instanceName="rtc_2">
                  <position x="24" y="1" />
                  <inputVariables>
                    <variable formalParameter="SET">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SDT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SMS">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DEN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="OFS">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="UDT">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="LDT">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="DSO">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="XMS">
                      <connectionPointOut>
                        <relPosition x="0" y="3" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="4" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="UDT" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="3" executionOrderId="2">
                  <position x="36" y="3" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="4" />
                  </connectionPointIn>
                  <expression>cur_dt</expression>
                </outVariable>
                <inVariable localId="7">
                  <position x="52" y="12" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>cur_dt</expression>
                </inVariable>
                <connector localId="6" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="7" formalParameter="cur_dt" />
                  </connectionPointIn>
                </connector>
                <block localId="5" executionOrderId="3" typeName="oscat_basic.MINUTE_OF_DT">
                  <position x="59" y="10" />
                  <inputVariables>
                    <variable formalParameter="XDT">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="6" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="MINUTE_OF_DT">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="9" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="5" formalParameter="MINUTE_OF_DT" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="11">
                  <position x="82" y="15" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="10" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="11" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="8" executionOrderId="4" typeName="DLOG_DINT" instanceName="x1">
                  <position x="87" y="10" />
                  <inputVariables>
                    <variable formalParameter="VALUE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="9" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DELTA">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="10" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="14">
                  <position x="52" y="18" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>cur_dt</expression>
                </inVariable>
                <connector localId="13" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="14" formalParameter="cur_dt" />
                  </connectionPointIn>
                </connector>
                <block localId="12" executionOrderId="5" typeName="oscat_basic.HOUR_OF_DT">
                  <position x="59" y="16" />
                  <inputVariables>
                    <variable formalParameter="XDT">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="13" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="HOUR_OF_DT">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="16" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="12" formalParameter="HOUR_OF_DT" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="18">
                  <position x="82" y="21" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="17" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="18" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="15" executionOrderId="6" typeName="DLOG_DINT" instanceName="x2">
                  <position x="87" y="16" />
                  <inputVariables>
                    <variable formalParameter="VALUE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="16" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DELTA">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="17" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="21">
                  <position x="54" y="23" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>t#2h</expression>
                </inVariable>
                <connector localId="20" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="21" formalParameter="t#2h" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="23">
                  <position x="54" y="24" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>100.0</expression>
                </inVariable>
                <connector localId="22" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="23" formalParameter="100.0" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="25">
                  <position x="54" y="25" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>50.0</expression>
                </inVariable>
                <connector localId="24" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="25" formalParameter="50.0" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="27">
                  <position x="54" y="26" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>0.0</expression>
                </inVariable>
                <connector localId="26" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="27" formalParameter="0.0" />
                  </connectionPointIn>
                </connector>
                <block localId="19" executionOrderId="7" typeName="oscat_basic.GEN_SIN" instanceName="GEN_SIN_1">
                  <position x="61" y="21" />
                  <inputVariables>
                    <variable formalParameter="PT">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="20" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="AM">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="22" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="OS">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="24" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DL">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="26" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="Q">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="Out">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="29" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="19" formalParameter="Out" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="31">
                  <position x="82" y="25" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>2</expression>
                </inVariable>
                <connector localId="30" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="31" formalParameter="2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="33">
                  <position x="82" y="29" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="32" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="33" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="28" executionOrderId="8" typeName="DLOG_REAL" instanceName="x3">
                  <position x="87" y="22" />
                  <inputVariables>
                    <variable formalParameter="VALUE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="29" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="N">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="30" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="D">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DELTA">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="32" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="36">
                  <position x="54" y="31" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>t#2h</expression>
                </inVariable>
                <connector localId="35" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="36" formalParameter="t#2h" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="38">
                  <position x="54" y="32" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>100.0</expression>
                </inVariable>
                <connector localId="37" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="38" formalParameter="100.0" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="40">
                  <position x="54" y="33" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>50.0</expression>
                </inVariable>
                <connector localId="39" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="40" formalParameter="50.0" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="42">
                  <position x="54" y="34" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>0.1</expression>
                </inVariable>
                <connector localId="41" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="42" formalParameter="0.1" />
                  </connectionPointIn>
                </connector>
                <block localId="34" executionOrderId="9" typeName="oscat_basic.GEN_SIN" instanceName="GEN_SIN_2">
                  <position x="61" y="29" />
                  <inputVariables>
                    <variable formalParameter="PT">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="35" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="AM">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="37" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="OS">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="39" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DL">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="41" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="Q">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="Out">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="44" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="34" formalParameter="Out" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="46">
                  <position x="82" y="33" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>2</expression>
                </inVariable>
                <connector localId="45" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="46" formalParameter="2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="48">
                  <position x="82" y="37" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="47" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="48" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="43" executionOrderId="10" typeName="DLOG_REAL" instanceName="x4">
                  <position x="87" y="30" />
                  <inputVariables>
                    <variable formalParameter="VALUE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="44" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="N">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="45" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="D">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DELTA">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="47" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="51">
                  <position x="54" y="39" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>t#2h</expression>
                </inVariable>
                <connector localId="50" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="51" formalParameter="t#2h" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="53">
                  <position x="54" y="40" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>100.0</expression>
                </inVariable>
                <connector localId="52" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="53" formalParameter="100.0" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="55">
                  <position x="54" y="41" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>50.0</expression>
                </inVariable>
                <connector localId="54" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="55" formalParameter="50.0" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="57">
                  <position x="54" y="42" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>0.2</expression>
                </inVariable>
                <connector localId="56" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="57" formalParameter="0.2" />
                  </connectionPointIn>
                </connector>
                <block localId="49" executionOrderId="11" typeName="oscat_basic.GEN_SIN" instanceName="GEN_SIN_3">
                  <position x="61" y="37" />
                  <inputVariables>
                    <variable formalParameter="PT">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="50" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="AM">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="52" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="OS">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="54" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DL">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="56" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="Q">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="Out">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="59" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="49" formalParameter="Out" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="61">
                  <position x="82" y="41" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>2</expression>
                </inVariable>
                <connector localId="60" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="61" formalParameter="2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="63">
                  <position x="82" y="45" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="62" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="63" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="58" executionOrderId="12" typeName="DLOG_REAL" instanceName="x5">
                  <position x="87" y="38" />
                  <inputVariables>
                    <variable formalParameter="VALUE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="59" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="N">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="60" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="D">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DELTA">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="62" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="66">
                  <position x="54" y="47" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>t#30m</expression>
                </inVariable>
                <connector localId="65" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="66" formalParameter="t#30m" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="68">
                  <position x="54" y="48" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>30</expression>
                </inVariable>
                <connector localId="67" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="68" formalParameter="30" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="70">
                  <position x="54" y="49" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>60</expression>
                </inVariable>
                <connector localId="69" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="70" formalParameter="60" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="72">
                  <position x="54" y="50" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>0.0</expression>
                </inVariable>
                <connector localId="71" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="72" formalParameter="0.0" />
                  </connectionPointIn>
                </connector>
                <block localId="64" executionOrderId="13" typeName="oscat_basic.GEN_RMP" instanceName="GEN_RMP_1">
                  <position x="61" y="45" />
                  <inputVariables>
                    <variable formalParameter="PT">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="65" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="AM">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="67" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="OS">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="69" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DL">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="71" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="Q">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="74" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="64" formalParameter="OUT" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="76">
                  <position x="82" y="49" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>2</expression>
                </inVariable>
                <connector localId="75" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="76" formalParameter="2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="78">
                  <position x="82" y="53" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="77" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="78" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="73" executionOrderId="14" typeName="DLOG_REAL" instanceName="x6">
                  <position x="87" y="46" />
                  <inputVariables>
                    <variable formalParameter="VALUE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="74" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="N">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="75" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="D">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DELTA">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="77" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="81">
                  <position x="54" y="55" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>t#30m</expression>
                </inVariable>
                <connector localId="80" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="81" formalParameter="t#30m" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="83">
                  <position x="54" y="56" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>30</expression>
                </inVariable>
                <connector localId="82" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="83" formalParameter="30" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="85">
                  <position x="54" y="57" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>10</expression>
                </inVariable>
                <connector localId="84" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="85" formalParameter="10" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="87">
                  <position x="54" y="58" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>0.2</expression>
                </inVariable>
                <connector localId="86" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="87" formalParameter="0.2" />
                  </connectionPointIn>
                </connector>
                <block localId="79" executionOrderId="15" typeName="oscat_basic.GEN_RMP" instanceName="GEN_RMP_2">
                  <position x="61" y="53" />
                  <inputVariables>
                    <variable formalParameter="PT">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="80" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="AM">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="82" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="OS">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="84" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DL">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="86" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="Q">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="89" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="79" formalParameter="OUT" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="91">
                  <position x="82" y="57" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>2</expression>
                </inVariable>
                <connector localId="90" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="91" formalParameter="2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="93">
                  <position x="82" y="61" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="92" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="93" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="88" executionOrderId="16" typeName="DLOG_REAL" instanceName="x7">
                  <position x="87" y="54" />
                  <inputVariables>
                    <variable formalParameter="VALUE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="89" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="N">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="90" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="D">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="COLUMN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DELTA">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="92" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="96">
                  <position x="26" y="73" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="95" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="96" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="98">
                  <position x="26" y="74" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="97" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="98" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="100">
                  <position x="26" y="75" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="99" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="100" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="102">
                  <position x="26" y="76" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="101" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="102" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <block localId="94" executionOrderId="17" typeName="oscat_basic.DWORD_OF_BYTE">
                  <position x="31" y="71" />
                  <inputVariables>
                    <variable formalParameter="B3">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="95" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="97" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B1">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="99" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B0">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="101" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DWORD_OF_BYTE">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="105">
                  <position x="79" y="67" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>rrd_enable</expression>
                </inVariable>
                <connector localId="104" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="105" formalParameter="rrd_enable" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="107">
                  <position x="79" y="68" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>trig_m</expression>
                </inVariable>
                <connector localId="106" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="107" formalParameter="trig_m" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="109">
                  <position x="79" y="69" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>trig_t</expression>
                </inVariable>
                <connector localId="108" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="109" formalParameter="trig_t" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="111">
                  <position x="79" y="70" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>rrd_url</expression>
                </inVariable>
                <connector localId="110" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="111" formalParameter="rrd_url" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="113">
                  <position x="79" y="71" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>cur_dt</expression>
                </inVariable>
                <connector localId="112" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="113" formalParameter="cur_dt" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="115">
                  <position x="79" y="72" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>58</expression>
                </inVariable>
                <connector localId="114" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="115" formalParameter="58" />
                  </connectionPointIn>
                </connector>
                <connector localId="116" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="94" formalParameter="DWORD_OF_BYTE" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="118">
                  <position x="79" y="74" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>rrd_timeout</expression>
                </inVariable>
                <connector localId="117" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="118" formalParameter="rrd_timeout" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="120">
                  <position x="79" y="75" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="119" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="120" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="103" executionOrderId="18" typeName="DLOG_STORE_RRD" instanceName="dlog_store_rrd">
                  <position x="87" y="65" />
                  <inputVariables>
                    <variable formalParameter="ENABLE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="104" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TRIG_M">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="106" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TRIG_T">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="108" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="URL">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="110" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DTI">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="112" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SEP">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="114" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DNS_IP4">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                        <connection refLocalId="116" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TIMEOUT">
                      <connectionPointIn>
                        <relPosition x="0" y="7" />
                        <connection refLocalId="117" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="8" />
                        <connection refLocalId="119" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="ERROR_C">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR_T">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="122" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="103" formalParameter="ERROR_C" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="121" executionOrderId="19">
                  <position x="102" y="67" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="122" />
                  </connectionPointIn>
                  <expression>rrd_error_c</expression>
                </outVariable>
                <connector localId="124" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="103" formalParameter="ERROR_T" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="123" executionOrderId="20">
                  <position x="102" y="68" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="124" />
                  </connectionPointIn>
                  <expression>rrd_error_t</expression>
                </outVariable>
                <comment localId="125" height="0" width="0">
                  <position x="12" y="2" />
                  <content>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">dummy-Clock</xhtml>
                  </content>
                </comment>
              </CFC>
            </data>
          </addData>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>da280a4d-03de-4342-9de8-2b953509b4a1</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="DNS_DYN_DEMO" pouType="program">
        <interface>
          <localVars>
            <variable name="DNS_DYN">
              <type>
                <derived name="DNS_DYN" />
              </type>
            </variable>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="IP_CONTROL">
              <type>
                <derived name="IP_CONTROL" />
              </type>
            </variable>
            <variable name="enable">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="done">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="error_c">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="error_t">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="busy">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="COUNT_DR">
              <type>
                <derived name="oscat_basic.COUNT_DR" />
              </type>
            </variable>
            <variable name="z">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="GET_WAN_IP">
              <type>
                <derived name="GET_WAN_IP" />
              </type>
            </variable>
            <variable name="t1">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="done2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="error_c2">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="error_t2">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="update">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="new_ip">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="wan_ip4">
              <type>
                <DWORD />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/cfc" handleUnknown="implementation">
              <CFC>
                <inVariable localId="2">
                  <position x="40" y="17" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>enable</expression>
                </inVariable>
                <connector localId="1" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="2" formalParameter="enable" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="4">
                  <position x="40" y="18" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>update</expression>
                </inVariable>
                <connector localId="3" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="4" formalParameter="update" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="6">
                  <position x="40" y="19" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>t#0ms</expression>
                </inVariable>
                <connector localId="5" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="6" formalParameter="t#0ms" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="8">
                  <position x="40" y="20" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>2</expression>
                </inVariable>
                <connector localId="7" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="8" formalParameter="2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="10">
                  <position x="40" y="21" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'test.dyndns.org'</expression>
                </inVariable>
                <connector localId="9" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="10" formalParameter="'test.dyndns.org'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="12">
                  <position x="40" y="22" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'test'</expression>
                </inVariable>
                <connector localId="11" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="12" formalParameter="'test'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="14">
                  <position x="40" y="23" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'test'</expression>
                </inVariable>
                <connector localId="13" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="14" formalParameter="'test'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="16">
                  <position x="40" y="24" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>wan_ip4</expression>
                </inVariable>
                <connector localId="15" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="16" formalParameter="wan_ip4" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="18">
                  <position x="40" y="25" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IP_C</expression>
                </inVariable>
                <connector localId="17" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="18" formalParameter="IP_C" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="20">
                  <position x="40" y="26" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="19" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="20" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="22">
                  <position x="40" y="27" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_BUF</expression>
                </inVariable>
                <connector localId="21" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="22" formalParameter="R_BUF" />
                  </connectionPointIn>
                </connector>
                <block localId="0" executionOrderId="1" typeName="DNS_DYN" instanceName="DNS_DYN">
                  <position x="50" y="15" />
                  <inputVariables>
                    <variable formalParameter="ENABLE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="UPDATE">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="T_UPDATE">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="5" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="MODE">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="7" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="HOSTNAME">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="9" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="USERNAME">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="11" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="PASSWORD">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                        <connection refLocalId="13" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP4">
                      <connectionPointIn>
                        <relPosition x="0" y="7" />
                        <connection refLocalId="15" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="8" />
                        <connection refLocalId="17" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="9" />
                        <connection refLocalId="19" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="10" />
                        <connection refLocalId="21" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="BUSY">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="DONE">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR_C">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR_T">
                      <connectionPointOut>
                        <relPosition x="0" y="3" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="24" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="BUSY" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="23" executionOrderId="2">
                  <position x="64" y="17" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="24" />
                  </connectionPointIn>
                  <expression>busy</expression>
                </outVariable>
                <connector localId="26" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="DONE" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="25" executionOrderId="3">
                  <position x="64" y="18" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="26" />
                  </connectionPointIn>
                  <expression>done</expression>
                </outVariable>
                <connector localId="28" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="ERROR_C" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="27" executionOrderId="4">
                  <position x="64" y="19" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="28" />
                  </connectionPointIn>
                  <expression>error_c</expression>
                </outVariable>
                <connector localId="30" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="ERROR_T" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="29" executionOrderId="5">
                  <position x="64" y="20" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="30" />
                  </connectionPointIn>
                  <expression>error_t</expression>
                </outVariable>
                <inVariable localId="33">
                  <position x="18" y="34" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="32" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="33" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="35">
                  <position x="18" y="35" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="34" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="35" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="37">
                  <position x="18" y="36" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="36" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="37" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="39">
                  <position x="18" y="37" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="38" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="39" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <block localId="31" executionOrderId="6" typeName="oscat_basic.DWORD_OF_BYTE">
                  <position x="23" y="32" />
                  <inputVariables>
                    <variable formalParameter="B3">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="32" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="34" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B1">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="36" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B0">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="38" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DWORD_OF_BYTE">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="41" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="31" formalParameter="DWORD_OF_BYTE" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="43">
                  <position x="64" y="36" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>T#1s</expression>
                </inVariable>
                <connector localId="42" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="43" formalParameter="T#1s" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="45">
                  <position x="64" y="37" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IP_C</expression>
                </inVariable>
                <connector localId="44" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="45" formalParameter="IP_C" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="47">
                  <position x="64" y="38" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="46" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="47" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="49">
                  <position x="64" y="39" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_BUF</expression>
                </inVariable>
                <connector localId="48" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="49" formalParameter="R_BUF" />
                  </connectionPointIn>
                </connector>
                <block localId="40" executionOrderId="7" typeName="IP_CONTROL" instanceName="IP_CONTROL">
                  <position x="71" y="32" />
                  <inputVariables>
                    <variable formalParameter="IP">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="41" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="PORT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TIME_OUT">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="42" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="44" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="46" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="48" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="52">
                  <position x="22" y="45" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>done</expression>
                </inVariable>
                <connector localId="51" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="52" formalParameter="done" />
                  </connectionPointIn>
                </connector>
                <block localId="50" executionOrderId="8" typeName="oscat_basic.COUNT_DR" instanceName="COUNT_DR">
                  <position x="28" y="41" />
                  <inputVariables>
                    <variable formalParameter="SET">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="UP">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="51" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="STEP">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="MX">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="RST">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="CNT">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="54" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="50" formalParameter="CNT" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="53" executionOrderId="9">
                  <position x="42" y="43" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="54" />
                  </connectionPointIn>
                  <expression>z</expression>
                </outVariable>
                <inVariable localId="61">
                  <position x="12" y="5" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>t1.Q</expression>
                </inVariable>
                <connector localId="60" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="61" formalParameter="t1.Q" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="63">
                  <position x="12" y="6" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>t#30s</expression>
                </inVariable>
                <connector localId="62" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="63" formalParameter="t#30s" />
                  </connectionPointIn>
                </connector>
                <block localId="59" executionOrderId="11" typeName="TON" instanceName="t1">
                  <position x="18" y="3" />
                  <inputVariables>
                    <variable formalParameter="IN" negated="true">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="60" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="PT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="62" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="Q">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ET">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="58" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="59" formalParameter="Q" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="65">
                  <position x="40" y="6" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IP_C</expression>
                </inVariable>
                <connector localId="64" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="65" formalParameter="IP_C" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="67">
                  <position x="40" y="7" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="66" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="67" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="69">
                  <position x="40" y="8" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_BUF</expression>
                </inVariable>
                <connector localId="68" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="69" formalParameter="R_BUF" />
                  </connectionPointIn>
                </connector>
                <block localId="57" executionOrderId="12" typeName="GET_WAN_IP" instanceName="GET_WAN_IP">
                  <position x="47" y="3" />
                  <inputVariables>
                    <variable formalParameter="ACTIVATE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="58" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="64" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="66" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="68" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="WAN_IP4">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="DONE">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="NEW_IP4">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR_C">
                      <connectionPointOut>
                        <relPosition x="0" y="3" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR_T">
                      <connectionPointOut>
                        <relPosition x="0" y="4" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="56" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="57" formalParameter="WAN_IP4" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="55" executionOrderId="10">
                  <position x="60" y="5" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="56" />
                  </connectionPointIn>
                  <expression>wan_ip4</expression>
                </outVariable>
                <connector localId="71" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="57" formalParameter="DONE" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="70" executionOrderId="13">
                  <position x="60" y="6" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="71" />
                  </connectionPointIn>
                  <expression>done2</expression>
                </outVariable>
                <connector localId="73" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="57" formalParameter="NEW_IP4" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="72" executionOrderId="14">
                  <position x="60" y="7" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="73" />
                  </connectionPointIn>
                  <expression>new_ip</expression>
                </outVariable>
                <connector localId="75" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="57" formalParameter="ERROR_C" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="74" executionOrderId="15">
                  <position x="60" y="8" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="75" />
                  </connectionPointIn>
                  <expression>error_c2</expression>
                </outVariable>
                <connector localId="77" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="57" formalParameter="ERROR_T" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="76" executionOrderId="16">
                  <position x="60" y="9" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="77" />
                  </connectionPointIn>
                  <expression>error_t2</expression>
                </outVariable>
                <comment localId="78" height="0" width="0">
                  <position x="12" y="31" />
                  <content>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">IP-Adresse des DNS-Server oder des DSL-Router</xhtml>
                  </content>
                </comment>
              </CFC>
            </data>
          </addData>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>86732270-188b-4094-bd7f-983939ab5751</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="DNS_REV_DEMO" pouType="program">
        <interface>
          <localVars>
            <variable name="DNS_REV_CLIENT">
              <type>
                <derived name="DNS_REV_CLIENT" />
              </type>
            </variable>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="IP_CONTROL">
              <type>
                <derived name="IP_CONTROL" />
              </type>
            </variable>
            <variable name="activate">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="done">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="error">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="domain">
              <type>
                <string />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/cfc" handleUnknown="implementation">
              <CFC>
                <inVariable localId="2">
                  <position x="12" y="5" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>192</expression>
                </inVariable>
                <connector localId="1" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="2" formalParameter="192" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="4">
                  <position x="12" y="6" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>168</expression>
                </inVariable>
                <connector localId="3" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="4" formalParameter="168" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="6">
                  <position x="12" y="7" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>178</expression>
                </inVariable>
                <connector localId="5" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="6" formalParameter="178" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="8">
                  <position x="12" y="8" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>26</expression>
                </inVariable>
                <connector localId="7" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="8" formalParameter="26" />
                  </connectionPointIn>
                </connector>
                <block localId="0" executionOrderId="1" typeName="oscat_basic.DWORD_OF_BYTE">
                  <position x="18" y="3" />
                  <inputVariables>
                    <variable formalParameter="B3">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B1">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="5" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B0">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="7" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DWORD_OF_BYTE">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="11">
                  <position x="56" y="4" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>activate</expression>
                </inVariable>
                <connector localId="10" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="11" formalParameter="activate" />
                  </connectionPointIn>
                </connector>
                <connector localId="12" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="DWORD_OF_BYTE" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="14">
                  <position x="56" y="7" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IP_C</expression>
                </inVariable>
                <connector localId="13" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="14" formalParameter="IP_C" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="16">
                  <position x="56" y="8" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="15" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="16" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="18">
                  <position x="56" y="9" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_BUF</expression>
                </inVariable>
                <connector localId="17" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="18" formalParameter="R_BUF" />
                  </connectionPointIn>
                </connector>
                <block localId="9" executionOrderId="2" typeName="DNS_REV_CLIENT" instanceName="DNS_REV_CLIENT">
                  <position x="63" y="2" />
                  <inputVariables>
                    <variable formalParameter="ACTIVATE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="10" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP4">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="12" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP4_DNS">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="13" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="15" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="17" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DOMAIN">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="DONE">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="20" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="9" formalParameter="DOMAIN" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="19" executionOrderId="3">
                  <position x="76" y="4" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="20" />
                  </connectionPointIn>
                  <expression>domain</expression>
                </outVariable>
                <connector localId="22" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="9" formalParameter="DONE" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="21" executionOrderId="4">
                  <position x="76" y="5" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="22" />
                  </connectionPointIn>
                  <expression>done</expression>
                </outVariable>
                <connector localId="24" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="9" formalParameter="ERROR" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="23" executionOrderId="5">
                  <position x="76" y="6" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="24" />
                  </connectionPointIn>
                  <expression>error</expression>
                </outVariable>
                <inVariable localId="27">
                  <position x="12" y="15" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="26" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="27" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="29">
                  <position x="12" y="16" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="28" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="29" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="31">
                  <position x="12" y="17" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="30" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="31" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="33">
                  <position x="12" y="18" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="32" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="33" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <block localId="25" executionOrderId="6" typeName="oscat_basic.DWORD_OF_BYTE">
                  <position x="17" y="13" />
                  <inputVariables>
                    <variable formalParameter="B3">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="26" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="28" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B1">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="30" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B0">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="32" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DWORD_OF_BYTE">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="35" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="25" formalParameter="DWORD_OF_BYTE" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="37">
                  <position x="58" y="17" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>T#1s</expression>
                </inVariable>
                <connector localId="36" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="37" formalParameter="T#1s" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="39">
                  <position x="58" y="18" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IP_C</expression>
                </inVariable>
                <connector localId="38" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="39" formalParameter="IP_C" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="41">
                  <position x="58" y="19" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="40" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="41" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="43">
                  <position x="58" y="20" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_BUF</expression>
                </inVariable>
                <connector localId="42" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="43" formalParameter="R_BUF" />
                  </connectionPointIn>
                </connector>
                <block localId="34" executionOrderId="7" typeName="IP_CONTROL" instanceName="IP_CONTROL">
                  <position x="65" y="13" />
                  <inputVariables>
                    <variable formalParameter="IP">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="35" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="PORT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TIME_OUT">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="36" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="38" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="40" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="42" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <comment localId="44" height="0" width="0">
                  <position x="6" y="12" />
                  <content>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">IP-Adresse des DNS-Server oder des DSL-Router</xhtml>
                  </content>
                </comment>
              </CFC>
            </data>
          </addData>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d21febaf-7229-4336-b3e0-4448e3e515f3</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="DNS_SNTP_SYSLOG_DEMO" pouType="program">
        <interface>
          <localVars>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="IP_CONTROL_1">
              <type>
                <derived name="IP_CONTROL" />
              </type>
            </variable>
            <variable name="DNS_CLIENT">
              <type>
                <derived name="DNS_CLIENT" />
              </type>
            </variable>
            <variable name="SNTP_CLIENT">
              <type>
                <derived name="SNTP_CLIENT" />
              </type>
            </variable>
            <variable name="SNTP_SERVER">
              <type>
                <derived name="SNTP_SERVER" />
              </type>
            </variable>
            <variable name="COUNT_DR">
              <type>
                <derived name="oscat_basic.COUNT_DR" />
              </type>
            </variable>
            <variable name="RTC_2">
              <type>
                <derived name="oscat_basic.RTC_2" />
              </type>
            </variable>
            <variable name="count_cycles">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="dns_error">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="sntp_error">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="freigabe">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="dso">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="xms">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="sntp_srv_enable">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="cur_UDT">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="SYS_LOG">
              <type>
                <derived name="SYS_LOG" />
              </type>
            </variable>
            <variable name="sys_log_option">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="2#100" />
              </initialValue>
            </variable>
            <variable name="TON_1">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="tp_sys_log">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="error_sys_log">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="sys_time">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="cur_LOCAL_DT">
              <type>
                <DT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/cfc" handleUnknown="implementation">
              <CFC>
                <inVariable localId="2">
                  <position x="14" y="3" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>TON_1.Q</expression>
                </inVariable>
                <connector localId="1" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="2" formalParameter="TON_1.Q" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="4">
                  <position x="14" y="4" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>T#10s</expression>
                </inVariable>
                <connector localId="3" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="4" formalParameter="T#10s" />
                  </connectionPointIn>
                </connector>
                <block localId="0" executionOrderId="1" typeName="TON" instanceName="TON_1">
                  <position x="22" y="1" />
                  <inputVariables>
                    <variable formalParameter="IN" negated="true">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="PT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="3" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="Q">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ET">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="6" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="Q" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="5" executionOrderId="2">
                  <position x="34" y="3" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="6" />
                  </connectionPointIn>
                  <expression>freigabe</expression>
                </outVariable>
                <connector localId="8" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="ET" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="7" executionOrderId="3">
                  <position x="34" y="4" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="8" />
                  </connectionPointIn>
                  <expression>sys_time</expression>
                </outVariable>
                <inVariable localId="11">
                  <position x="20" y="9" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>freigabe</expression>
                </inVariable>
                <connector localId="10" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="11" formalParameter="freigabe" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="13">
                  <position x="20" y="10" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'time.windows.com'</expression>
                </inVariable>
                <connector localId="12" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="13" formalParameter="'time.windows.com'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="15">
                  <position x="20" y="12" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IP_C</expression>
                </inVariable>
                <connector localId="14" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="15" formalParameter="IP_C" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="17">
                  <position x="20" y="13" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="16" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="17" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="19">
                  <position x="20" y="14" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_BUF</expression>
                </inVariable>
                <connector localId="18" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="19" formalParameter="R_BUF" />
                  </connectionPointIn>
                </connector>
                <block localId="9" executionOrderId="4" typeName="DNS_CLIENT" instanceName="DNS_CLIENT">
                  <position x="31" y="7" />
                  <inputVariables>
                    <variable formalParameter="ACTIVATE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="10" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DOMAIN">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="12" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP4_DNS">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="14" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="16" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="18" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="IP4">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="DONE">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="21" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="9" formalParameter="ERROR" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="20" executionOrderId="5">
                  <position x="43" y="11" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="21" />
                  </connectionPointIn>
                  <expression>dns_error</expression>
                </outVariable>
                <connector localId="23" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="9" formalParameter="IP4" />
                  </connectionPointIn>
                </connector>
                <connector localId="24" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="9" formalParameter="DONE" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="26">
                  <position x="66" y="11" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IP_C</expression>
                </inVariable>
                <connector localId="25" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="26" formalParameter="IP_C" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="28">
                  <position x="66" y="12" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="27" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="28" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="30">
                  <position x="66" y="13" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_BUF</expression>
                </inVariable>
                <connector localId="29" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="30" formalParameter="R_BUF" />
                  </connectionPointIn>
                </connector>
                <block localId="22" executionOrderId="6" typeName="SNTP_CLIENT" instanceName="SNTP_CLIENT">
                  <position x="73" y="7" />
                  <inputVariables>
                    <variable formalParameter="IP4">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="23" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="ACTIVATE">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="24" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="25" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="27" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="29" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="ERROR">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="DONE_P">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="UDT">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="XMS">
                      <connectionPointOut>
                        <relPosition x="0" y="3" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="32" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="22" formalParameter="ERROR" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="31" executionOrderId="7">
                  <position x="86" y="9" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="32" />
                  </connectionPointIn>
                  <expression>sntp_error</expression>
                </outVariable>
                <connector localId="34" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="22" formalParameter="DONE_P" />
                  </connectionPointIn>
                </connector>
                <connector localId="35" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="22" formalParameter="UDT" />
                  </connectionPointIn>
                </connector>
                <connector localId="36" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="22" formalParameter="XMS" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="38">
                  <position x="111" y="13" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>TRUE</expression>
                </inVariable>
                <connector localId="37" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="38" formalParameter="TRUE" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="40">
                  <position x="111" y="14" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>1</expression>
                </inVariable>
                <connector localId="39" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="40" formalParameter="1" />
                  </connectionPointIn>
                </connector>
                <block localId="33" executionOrderId="8" typeName="oscat_basic.RTC_2" instanceName="RTC_2">
                  <position x="118" y="8" />
                  <inputVariables>
                    <variable formalParameter="SET">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="34" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SDT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="35" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SMS">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="36" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DEN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="37" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="OFS">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="39" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="UDT">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="LOCAL_DT">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="DSO">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="XMS">
                      <connectionPointOut>
                        <relPosition x="0" y="3" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="42" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="33" formalParameter="UDT" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="41" executionOrderId="9">
                  <position x="128" y="10" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="42" />
                  </connectionPointIn>
                  <expression>cur_UDT</expression>
                </outVariable>
                <connector localId="44" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="33" formalParameter="LOCAL_DT" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="43" executionOrderId="10">
                  <position x="128" y="11" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="44" />
                  </connectionPointIn>
                  <expression>cur_LOCAL_DT</expression>
                </outVariable>
                <connector localId="46" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="33" formalParameter="DSO" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="45" executionOrderId="11">
                  <position x="128" y="12" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="46" />
                  </connectionPointIn>
                  <expression>dso</expression>
                </outVariable>
                <connector localId="48" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="33" formalParameter="XMS" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="47" executionOrderId="12">
                  <position x="128" y="13" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="48" />
                  </connectionPointIn>
                  <expression>xms</expression>
                </outVariable>
                <inVariable localId="51">
                  <position x="22" y="20" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>sntp_srv_enable</expression>
                </inVariable>
                <connector localId="50" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="51" formalParameter="sntp_srv_enable" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="53">
                  <position x="22" y="22" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>cur_UDT</expression>
                </inVariable>
                <connector localId="52" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="53" formalParameter="cur_UDT" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="55">
                  <position x="22" y="23" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>xms</expression>
                </inVariable>
                <connector localId="54" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="55" formalParameter="xms" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="57">
                  <position x="22" y="24" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IP_C</expression>
                </inVariable>
                <connector localId="56" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="57" formalParameter="IP_C" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="59">
                  <position x="22" y="25" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="58" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="59" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="61">
                  <position x="22" y="26" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_BUF</expression>
                </inVariable>
                <connector localId="60" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="61" formalParameter="R_BUF" />
                  </connectionPointIn>
                </connector>
                <block localId="49" executionOrderId="13" typeName="SNTP_SERVER" instanceName="SNTP_SERVER">
                  <position x="32" y="18" />
                  <inputVariables>
                    <variable formalParameter="ENABLE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="50" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="STRATUM">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="UDT">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="52" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="XMS">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="54" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="56" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="58" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                        <connection refLocalId="60" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="64">
                  <position x="74" y="22" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>freigabe</expression>
                </inVariable>
                <connector localId="63" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="64" formalParameter="freigabe" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="66">
                  <position x="69" y="25" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>DWORD#16#FFFFFFFF</expression>
                </inVariable>
                <connector localId="65" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="66" formalParameter="DWORD#16#FFFFFFFF" />
                  </connectionPointIn>
                </connector>
                <block localId="62" executionOrderId="14" typeName="oscat_basic.COUNT_DR" instanceName="COUNT_DR">
                  <position x="82" y="18" />
                  <inputVariables>
                    <variable formalParameter="SET">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="UP">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="63" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="STEP">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="MX">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="65" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="RST">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="CNT">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="68" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="62" formalParameter="CNT" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="67" executionOrderId="15">
                  <position x="95" y="20" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="68" />
                  </connectionPointIn>
                  <expression>count_cycles</expression>
                </outVariable>
                <inVariable localId="71">
                  <position x="18" y="32" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="70" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="71" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="73">
                  <position x="18" y="33" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="72" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="73" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="75">
                  <position x="18" y="34" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="74" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="75" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="77">
                  <position x="18" y="35" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="76" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="77" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <block localId="69" executionOrderId="16" typeName="oscat_basic.DWORD_OF_BYTE">
                  <position x="23" y="30" />
                  <inputVariables>
                    <variable formalParameter="B3">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="70" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="72" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B1">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="74" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B0">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="76" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DWORD_OF_BYTE">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="79" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="69" formalParameter="DWORD_OF_BYTE" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="81">
                  <position x="62" y="34" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>T#4s</expression>
                </inVariable>
                <connector localId="80" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="81" formalParameter="T#4s" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="83">
                  <position x="62" y="35" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IP_C</expression>
                </inVariable>
                <connector localId="82" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="83" formalParameter="IP_C" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="85">
                  <position x="62" y="36" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="84" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="85" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="87">
                  <position x="62" y="37" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_BUF</expression>
                </inVariable>
                <connector localId="86" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="87" formalParameter="R_BUF" />
                  </connectionPointIn>
                </connector>
                <block localId="78" executionOrderId="17" typeName="IP_CONTROL" instanceName="IP_CONTROL_1">
                  <position x="69" y="30" />
                  <inputVariables>
                    <variable formalParameter="IP">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="79" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="PORT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TIME_OUT">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="80" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="82" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="84" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="86" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="90">
                  <position x="16" y="49" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>192</expression>
                </inVariable>
                <connector localId="89" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="90" formalParameter="192" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="92">
                  <position x="16" y="50" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>168</expression>
                </inVariable>
                <connector localId="91" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="92" formalParameter="168" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="94">
                  <position x="16" y="51" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>178</expression>
                </inVariable>
                <connector localId="93" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="94" formalParameter="178" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="96">
                  <position x="16" y="52" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>26</expression>
                </inVariable>
                <connector localId="95" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="96" formalParameter="26" />
                  </connectionPointIn>
                </connector>
                <block localId="88" executionOrderId="18" typeName="oscat_basic.DWORD_OF_BYTE">
                  <position x="22" y="47" />
                  <inputVariables>
                    <variable formalParameter="B3">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="89" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="91" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B1">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="93" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B0">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="95" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DWORD_OF_BYTE">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="99">
                  <position x="76" y="47" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>freigabe</expression>
                </inVariable>
                <connector localId="98" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="99" formalParameter="freigabe" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="101">
                  <position x="76" y="48" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>cur_LOCAL_DT</expression>
                </inVariable>
                <connector localId="100" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="101" formalParameter="cur_LOCAL_DT" />
                  </connectionPointIn>
                </connector>
                <connector localId="102" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="88" formalParameter="DWORD_OF_BYTE" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="104">
                  <position x="76" y="51" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>2</expression>
                </inVariable>
                <connector localId="103" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="104" formalParameter="2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="106">
                  <position x="76" y="52" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>3</expression>
                </inVariable>
                <connector localId="105" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="106" formalParameter="3" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="108">
                  <position x="76" y="53" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'SyslogGEN'</expression>
                </inVariable>
                <connector localId="107" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="108" formalParameter="'SyslogGEN'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="110">
                  <position x="76" y="54" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'privat-str'</expression>
                </inVariable>
                <connector localId="109" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="110" formalParameter="'privat-str'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="112">
                  <position x="63" y="55" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'This is a test message generated by OSCAT SYSLOG'</expression>
                </inVariable>
                <connector localId="111" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="112" formalParameter="'This is a test message generated by OSCAT SYSLOG'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="114">
                  <position x="76" y="56" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>sys_log_option</expression>
                </inVariable>
                <connector localId="113" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="114" formalParameter="sys_log_option" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="116">
                  <position x="76" y="57" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IP_C</expression>
                </inVariable>
                <connector localId="115" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="116" formalParameter="IP_C" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="118">
                  <position x="76" y="58" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="117" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="118" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="120">
                  <position x="76" y="59" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_BUF</expression>
                </inVariable>
                <connector localId="119" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="120" formalParameter="R_BUF" />
                  </connectionPointIn>
                </connector>
                <block localId="97" executionOrderId="19" typeName="SYS_LOG" instanceName="SYS_LOG">
                  <position x="85" y="45" />
                  <inputVariables>
                    <variable formalParameter="ACTIVATE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="98" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="LOC_DT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="100" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SERVER_IP4">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="102" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="PORT">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="FACILITY">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="103" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SEVERITY">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="105" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TAG">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                        <connection refLocalId="107" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="HOSTNAME">
                      <connectionPointIn>
                        <relPosition x="0" y="7" />
                        <connection refLocalId="109" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="MESSAGE">
                      <connectionPointIn>
                        <relPosition x="0" y="8" />
                        <connection refLocalId="111" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="OPTION">
                      <connectionPointIn>
                        <relPosition x="0" y="9" />
                        <connection refLocalId="113" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="10" />
                        <connection refLocalId="115" />
                      </connectionPointIn>
                      <connectionPointOut>
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="11" />
                        <connection refLocalId="117" />
                      </connectionPointIn>
                      <connectionPointOut>
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="R_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="12" />
                        <connection refLocalId="119" />
                      </connectionPointIn>
                      <connectionPointOut>
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </inOutVariables>
                  <outputVariables>
                    <variable formalParameter="DONE_P">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="122" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="97" formalParameter="DONE_P" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="121" executionOrderId="20">
                  <position x="100" y="47" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="122" />
                  </connectionPointIn>
                  <expression>tp_sys_log</expression>
                </outVariable>
                <connector localId="124" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="97" formalParameter="ERROR" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="123" executionOrderId="21">
                  <position x="100" y="48" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="124" />
                  </connectionPointIn>
                  <expression>error_sys_log</expression>
                </outVariable>
                <comment localId="125" height="0" width="0">
                  <position x="14" y="29" />
                  <content>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">IP-Adresse des DNS-Server oder des DSL-Router</xhtml>
                  </content>
                </comment>
              </CFC>
            </data>
          </addData>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>beb3eb65-2e5e-4041-87c5-616adf4b4995</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FILE_BLOCK_DEMO" pouType="program">
        <interface>
          <localVars>
            <variable name="PT">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="fsd">
              <type>
                <derived name="FILE_SERVER_DATA" />
              </type>
            </variable>
            <variable name="FILE_SERVER">
              <type>
                <derived name="FILE_SERVER" />
              </type>
            </variable>
            <variable name="FILE_BLOCK">
              <type>
                <derived name="FILE_BLOCK" />
              </type>
            </variable>
            <variable name="filename">
              <type>
                <string />
              </type>
              <initialValue>
                <simpleValue value="'config.ini'" />
              </initialValue>
            </variable>
            <variable name="data">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="error">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="mode">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="pos">
              <type>
                <UDINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/cfc" handleUnknown="implementation">
              <CFC>
                <inVariable localId="2">
                  <position x="20" y="5" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>pos</expression>
                </inVariable>
                <connector localId="1" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="2" formalParameter="pos" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="4">
                  <position x="20" y="6" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>mode</expression>
                </inVariable>
                <connector localId="3" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="4" formalParameter="mode" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="6">
                  <position x="20" y="7" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>filename</expression>
                </inVariable>
                <connector localId="5" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="6" formalParameter="filename" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="8">
                  <position x="20" y="8" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>fsd</expression>
                </inVariable>
                <connector localId="7" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="8" formalParameter="fsd" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="10">
                  <position x="20" y="9" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>pt</expression>
                </inVariable>
                <connector localId="9" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="10" formalParameter="pt" />
                  </connectionPointIn>
                </connector>
                <block localId="0" executionOrderId="1" typeName="FILE_BLOCK" instanceName="FILE_BLOCK">
                  <position x="20" y="3" />
                  <inputVariables>
                    <variable formalParameter="POS">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="MODE">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="FILENAME">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="5" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="FSD">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="7" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="PT">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="9" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="ERROR">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="DATA">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="12" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="ERROR" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="11" executionOrderId="2">
                  <position x="44" y="5" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="12" />
                  </connectionPointIn>
                  <expression>error</expression>
                </outVariable>
                <connector localId="14" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="DATA" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="13" executionOrderId="3">
                  <position x="44" y="6" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="14" />
                  </connectionPointIn>
                  <expression>data</expression>
                </outVariable>
                <inVariable localId="17">
                  <position x="20" y="15" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>fsd</expression>
                </inVariable>
                <connector localId="16" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="17" formalParameter="fsd" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="19">
                  <position x="20" y="16" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>pt</expression>
                </inVariable>
                <connector localId="18" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="19" formalParameter="pt" />
                  </connectionPointIn>
                </connector>
                <block localId="15" executionOrderId="4" typeName="FILE_SERVER" instanceName="FILE_SERVER">
                  <position x="20" y="13" />
                  <inputVariables>
                    <variable formalParameter="FSD">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="16" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="PT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="18" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
              </CFC>
            </data>
          </addData>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>03282160-61d0-4579-b8a0-24c205dce373</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FTP_CLIENT_DEMO" pouType="program">
        <interface>
          <localVars>
            <variable name="FTP_CLIENT">
              <type>
                <derived name="FTP_CLIENT" />
              </type>
            </variable>
            <variable name="ftp_activate">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ftp_done">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ftp_busy">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ftp_error_c">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="ftp_error_t">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="ftp_url">
              <type>
                <string />
              </type>
              <initialValue>
                <simpleValue value="'ftp://581920:123456@oscat.atwebpages.com:2000/subordner/'" />
              </initialValue>
            </variable>
            <variable name="ftp_filename">
              <type>
                <string />
              </type>
              <initialValue>
                <simpleValue value="'0100kb.bin'" />
              </initialValue>
            </variable>
            <variable name="ftp_download">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="ftp_activ">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="file_delete">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="ftp_timeout">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#30s0ms" />
              </initialValue>
            </variable>
            <variable name="zeit">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#30s0ms" />
              </initialValue>
            </variable>
            <variable name="stop">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="start">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="reset">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="error">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="ok">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="CLK_PRG_1">
              <type>
                <derived name="oscat_basic.CLK_PRG" />
              </type>
            </variable>
            <variable name="COUNT_DR_1">
              <type>
                <derived name="oscat_basic.COUNT_DR" />
              </type>
            </variable>
            <variable name="COUNT_DR_2">
              <type>
                <derived name="oscat_basic.COUNT_DR" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/cfc" handleUnknown="implementation">
              <CFC>
                <inVariable localId="2">
                  <position x="68" y="4" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>ftp_activate</expression>
                </inVariable>
                <connector localId="1" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="2" formalParameter="ftp_activate" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="4">
                  <position x="68" y="5" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>ftp_filename</expression>
                </inVariable>
                <connector localId="3" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="4" formalParameter="ftp_filename" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="6">
                  <position x="68" y="6" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>ftp_url</expression>
                </inVariable>
                <connector localId="5" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="6" formalParameter="ftp_url" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="8">
                  <position x="68" y="7" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>ftp_download</expression>
                </inVariable>
                <connector localId="7" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="8" formalParameter="ftp_download" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="10">
                  <position x="68" y="8" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>ftp_activ</expression>
                </inVariable>
                <connector localId="9" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="10" formalParameter="ftp_activ" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="12">
                  <position x="68" y="9" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>file_delete</expression>
                </inVariable>
                <connector localId="11" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="12" formalParameter="file_delete" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="14">
                  <position x="68" y="10" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>ftp_timeout</expression>
                </inVariable>
                <connector localId="13" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="14" formalParameter="ftp_timeout" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="18">
                  <position x="14" y="11" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="17" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="18" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="20">
                  <position x="14" y="12" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="19" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="20" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="22">
                  <position x="14" y="13" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="21" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="22" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="24">
                  <position x="14" y="14" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="23" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="24" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <block localId="16" executionOrderId="16" typeName="oscat_basic.DWORD_OF_BYTE">
                  <position x="20" y="9" />
                  <inputVariables>
                    <variable formalParameter="B3">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="17" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="19" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B1">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="21" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B0">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="23" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DWORD_OF_BYTE">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="15" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="16" formalParameter="DWORD_OF_BYTE" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="28">
                  <position x="14" y="17" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>192</expression>
                </inVariable>
                <connector localId="27" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="28" formalParameter="192" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="30">
                  <position x="14" y="18" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>168</expression>
                </inVariable>
                <connector localId="29" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="30" formalParameter="168" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="32">
                  <position x="14" y="19" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>178</expression>
                </inVariable>
                <connector localId="31" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="32" formalParameter="178" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="34">
                  <position x="14" y="20" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>25</expression>
                </inVariable>
                <connector localId="33" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="34" formalParameter="25" />
                  </connectionPointIn>
                </connector>
                <block localId="26" executionOrderId="17" typeName="oscat_basic.DWORD_OF_BYTE">
                  <position x="20" y="15" />
                  <inputVariables>
                    <variable formalParameter="B3">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="27" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="29" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B1">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="31" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B0">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="33" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DWORD_OF_BYTE">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="25" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="26" formalParameter="DWORD_OF_BYTE" />
                  </connectionPointIn>
                </connector>
                <block localId="0" executionOrderId="1" typeName="FTP_CLIENT" instanceName="ftp_client">
                  <position x="78" y="2" />
                  <inputVariables>
                    <variable formalParameter="ACTIVATE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="FILENAME">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="FTP_URL">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="5" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="FTP_DOWNLOAD">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="7" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="FTP_ACTIV">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="9" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="FILE_DELETE">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="11" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TIMEOUT">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                        <connection refLocalId="13" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DNS_IP4">
                      <connectionPointIn>
                        <relPosition x="0" y="7" />
                        <connection refLocalId="15" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="PLC_IP4">
                      <connectionPointIn>
                        <relPosition x="0" y="8" />
                        <connection refLocalId="25" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DONE">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="BUSY">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR_C">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR_T">
                      <connectionPointOut>
                        <relPosition x="0" y="3" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="36" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="DONE" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="35" executionOrderId="2">
                  <position x="100" y="4" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="36" />
                  </connectionPointIn>
                  <expression>ftp_done</expression>
                </outVariable>
                <connector localId="38" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="BUSY" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="37" executionOrderId="3">
                  <position x="100" y="5" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="38" />
                  </connectionPointIn>
                  <expression>ftp_busy</expression>
                </outVariable>
                <connector localId="40" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="ERROR_C" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="39" executionOrderId="4">
                  <position x="100" y="6" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="40" />
                  </connectionPointIn>
                  <expression>ftp_error_c</expression>
                </outVariable>
                <connector localId="42" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="ERROR_T" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="41" executionOrderId="5">
                  <position x="100" y="7" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="42" />
                  </connectionPointIn>
                  <expression>ftp_error_t</expression>
                </outVariable>
                <inVariable localId="45">
                  <position x="10" y="26" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>zeit</expression>
                </inVariable>
                <connector localId="44" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="45" formalParameter="zeit" />
                  </connectionPointIn>
                </connector>
                <block localId="43" executionOrderId="6" typeName="oscat_basic.CLK_PRG" instanceName="CLK_PRG_1">
                  <position x="16" y="24" />
                  <inputVariables>
                    <variable formalParameter="PT">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="44" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="Q">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="47" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="43" formalParameter="Q" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="49">
                  <position x="30" y="27" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>stop</expression>
                </inVariable>
                <connector localId="48" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="49" formalParameter="stop" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="51">
                  <position x="30" y="28" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>start</expression>
                </inVariable>
                <connector localId="50" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="51" formalParameter="start" />
                  </connectionPointIn>
                </connector>
                <block localId="46" executionOrderId="7" typeName="AND">
                  <position x="36" y="24" />
                  <inputVariables>
                    <variable formalParameter="In1">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="47" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="In2" negated="true">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="48" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="In3">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="50" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="Out1">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">operator</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="53" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="46" formalParameter="" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="55">
                  <position x="46" y="27" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>reset</expression>
                </inVariable>
                <connector localId="54" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="55" formalParameter="reset" />
                  </connectionPointIn>
                </connector>
                <block localId="52" executionOrderId="8" typeName="OR">
                  <position x="52" y="24" />
                  <inputVariables>
                    <variable formalParameter="In1">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="53" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="In2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="54" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="Out1">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">operator</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="57" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="52" formalParameter="" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="56" executionOrderId="9">
                  <position x="60" y="26" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="57" />
                  </connectionPointIn>
                  <expression>ftp_activate</expression>
                </outVariable>
                <inVariable localId="60">
                  <position x="14" y="31" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>ftp_error_t</expression>
                </inVariable>
                <connector localId="59" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="60" formalParameter="ftp_error_t" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="62">
                  <position x="14" y="32" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>0</expression>
                </inVariable>
                <connector localId="61" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="62" formalParameter="0" />
                  </connectionPointIn>
                </connector>
                <block localId="58" executionOrderId="10" typeName="NE">
                  <position x="22" y="29" />
                  <inputVariables>
                    <variable formalParameter="In1">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="59" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="In2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="61" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="Out1">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">operator</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="64" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="58" formalParameter="" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="63" executionOrderId="11">
                  <position x="30" y="31" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="64" />
                  </connectionPointIn>
                  <expression>stop</expression>
                </outVariable>
                <inVariable localId="67">
                  <position x="48" y="33" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>stop</expression>
                </inVariable>
                <connector localId="66" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="67" formalParameter="stop" />
                  </connectionPointIn>
                </connector>
                <block localId="65" executionOrderId="12" typeName="oscat_basic.COUNT_DR" instanceName="COUNT_DR_1">
                  <position x="56" y="29" />
                  <inputVariables>
                    <variable formalParameter="SET">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="UP">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="66" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="STEP">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="MX">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="RST">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="CNT">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="69" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="65" formalParameter="CNT" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="68" executionOrderId="13">
                  <position x="70" y="31" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="69" />
                  </connectionPointIn>
                  <expression>error</expression>
                </outVariable>
                <inVariable localId="72">
                  <position x="81" y="33" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>ftp_done</expression>
                </inVariable>
                <connector localId="71" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="72" formalParameter="ftp_done" />
                  </connectionPointIn>
                </connector>
                <block localId="70" executionOrderId="14" typeName="oscat_basic.COUNT_DR" instanceName="COUNT_DR_2">
                  <position x="88" y="29" />
                  <inputVariables>
                    <variable formalParameter="SET">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="UP">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="71" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="STEP">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="MX">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="RST">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="CNT">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="74" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="70" formalParameter="CNT" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="73" executionOrderId="15">
                  <position x="102" y="31" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="74" />
                  </connectionPointIn>
                  <expression>ok</expression>
                </outVariable>
              </CFC>
            </data>
          </addData>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d340c8b4-46d6-421c-9f45-989596d5a15d</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="GET_WAN_IP_DEMO" pouType="program">
        <interface>
          <localVars>
            <variable name="GET_WAN_IP">
              <type>
                <derived name="GET_WAN_IP" />
              </type>
            </variable>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="IP_CONTROL_1">
              <type>
                <derived name="IP_CONTROL" />
              </type>
            </variable>
            <variable name="activate">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="done">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="error_c">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="error_t">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="wan_ip">
              <type>
                <string />
              </type>
            </variable>
            <variable name="new_ip">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/cfc" handleUnknown="implementation">
              <CFC>
                <inVariable localId="2">
                  <position x="6" y="5" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>activate</expression>
                </inVariable>
                <connector localId="1" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="2" formalParameter="activate" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="4">
                  <position x="6" y="6" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IP_C</expression>
                </inVariable>
                <connector localId="3" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="4" formalParameter="IP_C" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="6">
                  <position x="6" y="7" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="5" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="6" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="8">
                  <position x="6" y="8" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_BUF</expression>
                </inVariable>
                <connector localId="7" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="8" formalParameter="R_BUF" />
                  </connectionPointIn>
                </connector>
                <block localId="0" executionOrderId="1" typeName="GET_WAN_IP" instanceName="GET_WAN_IP">
                  <position x="14" y="3" />
                  <inputVariables>
                    <variable formalParameter="ACTIVATE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="5" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="7" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="WAN_IP4">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="DONE">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="NEW_IP4">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR_C">
                      <connectionPointOut>
                        <relPosition x="0" y="3" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR_T">
                      <connectionPointOut>
                        <relPosition x="0" y="4" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="10" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="DONE" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="9" executionOrderId="2">
                  <position x="34" y="6" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="10" />
                  </connectionPointIn>
                  <expression>done</expression>
                </outVariable>
                <connector localId="12" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="NEW_IP4" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="11" executionOrderId="3">
                  <position x="34" y="7" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="12" />
                  </connectionPointIn>
                  <expression>new_ip</expression>
                </outVariable>
                <connector localId="14" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="ERROR_C" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="13" executionOrderId="4">
                  <position x="34" y="8" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="14" />
                  </connectionPointIn>
                  <expression>error_c</expression>
                </outVariable>
                <connector localId="16" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="ERROR_T" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="15" executionOrderId="5">
                  <position x="34" y="9" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="16" />
                  </connectionPointIn>
                  <expression>error_t</expression>
                </outVariable>
                <connector localId="18" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="WAN_IP4" />
                  </connectionPointIn>
                </connector>
                <block localId="17" executionOrderId="6" typeName="IP4_TO_STRING">
                  <position x="46" y="3" />
                  <inputVariables>
                    <variable formalParameter="IP4">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="18" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="IP4_TO_STRING">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="20" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="17" formalParameter="IP4_TO_STRING" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="19" executionOrderId="7">
                  <position x="76" y="5" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="20" />
                  </connectionPointIn>
                  <expression>wan_IP</expression>
                </outVariable>
                <inVariable localId="23">
                  <position x="8" y="17" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="22" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="23" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="25">
                  <position x="8" y="18" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="24" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="25" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="27">
                  <position x="8" y="19" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="26" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="27" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="29">
                  <position x="8" y="20" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="28" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="29" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <block localId="21" executionOrderId="8" typeName="oscat_basic.DWORD_OF_BYTE">
                  <position x="14" y="15" />
                  <inputVariables>
                    <variable formalParameter="B3">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="22" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="24" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B1">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="26" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B0">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="28" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DWORD_OF_BYTE">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="31" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="21" formalParameter="DWORD_OF_BYTE" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="33">
                  <position x="58" y="19" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>T#1s</expression>
                </inVariable>
                <connector localId="32" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="33" formalParameter="T#1s" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="35">
                  <position x="58" y="20" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IP_C</expression>
                </inVariable>
                <connector localId="34" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="35" formalParameter="IP_C" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="37">
                  <position x="58" y="21" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="36" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="37" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="39">
                  <position x="58" y="22" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_BUF</expression>
                </inVariable>
                <connector localId="38" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="39" formalParameter="R_BUF" />
                  </connectionPointIn>
                </connector>
                <block localId="30" executionOrderId="9" typeName="IP_CONTROL" instanceName="IP_CONTROL_1">
                  <position x="65" y="15" />
                  <inputVariables>
                    <variable formalParameter="IP">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="31" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="PORT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TIME_OUT">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="32" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="34" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="36" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="38" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <comment localId="40" height="0" width="0">
                  <position x="10" y="14" />
                  <content>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">IP-Adresse des DNS-Server oder des DSL-Router</xhtml>
                  </content>
                </comment>
              </CFC>
            </data>
          </addData>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>1199ab3e-7af4-4937-be73-438975ee7b58</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="HTTP_DEMO" pouType="program">
        <interface>
          <localVars>
            <variable name="url_text">
              <type>
                <string />
              </type>
              <initialValue>
                <simpleValue value="'http://weather.yahooapis.com/forecastrss?p=94089&amp;u=c'" />
              </initialValue>
            </variable>
            <variable name="URL_DATA">
              <type>
                <derived name="URL" />
              </type>
            </variable>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="IP_CONTROL_1">
              <type>
                <derived name="IP_CONTROL" />
              </type>
            </variable>
            <variable name="DNS_CLIENT">
              <type>
                <derived name="DNS_CLIENT" />
              </type>
            </variable>
            <variable name="HTTP_GET">
              <type>
                <derived name="HTTP_GET" />
              </type>
            </variable>
            <variable name="http_release">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="enable">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="http_status">
              <type>
                <string />
              </type>
            </variable>
            <variable name="header_start">
              <type>
                <UINT />
              </type>
            </variable>
            <variable name="header_stop">
              <type>
                <UINT />
              </type>
            </variable>
            <variable name="body_start">
              <type>
                <UINT />
              </type>
            </variable>
            <variable name="body_stop">
              <type>
                <UINT />
              </type>
            </variable>
            <variable name="http_get_done">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="http_get_error">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="COUNT_DR">
              <type>
                <derived name="OSCAT_BASIC.COUNT_DR" />
              </type>
            </variable>
            <variable name="cycles">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="TON_1">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="F_TRIG">
              <type>
                <derived name="F_TRIG" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/cfc" handleUnknown="implementation">
              <CFC>
                <inVariable localId="2">
                  <position x="22" y="3" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>url_text</expression>
                </inVariable>
                <connector localId="1" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="2" formalParameter="url_text" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="4">
                  <position x="22" y="4" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>''</expression>
                </inVariable>
                <connector localId="3" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="4" formalParameter="''" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="6">
                  <position x="22" y="5" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>''</expression>
                </inVariable>
                <connector localId="5" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="6" formalParameter="''" />
                  </connectionPointIn>
                </connector>
                <block localId="0" executionOrderId="1" typeName="STRING_TO_URL">
                  <position x="30" y="1" />
                  <inputVariables>
                    <variable formalParameter="STR">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DEFAULT_PROTOCOL">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DEFAULT_PATH">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="5" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="STRING_TO_URL">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="8" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="STRING_TO_URL" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="7" executionOrderId="2">
                  <position x="68" y="3" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="8" />
                  </connectionPointIn>
                  <expression>URL_DATA</expression>
                </outVariable>
                <inVariable localId="11">
                  <position x="21" y="10" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>enable</expression>
                </inVariable>
                <connector localId="10" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="11" formalParameter="enable" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="13">
                  <position x="21" y="11" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>URL_DATA.DOMAIN</expression>
                </inVariable>
                <connector localId="12" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="13" formalParameter="URL_DATA.DOMAIN" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="15">
                  <position x="21" y="13" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IP_C</expression>
                </inVariable>
                <connector localId="14" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="15" formalParameter="IP_C" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="17">
                  <position x="21" y="14" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="16" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="17" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="19">
                  <position x="21" y="15" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_BUF</expression>
                </inVariable>
                <connector localId="18" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="19" formalParameter="R_BUF" />
                  </connectionPointIn>
                </connector>
                <block localId="9" executionOrderId="3" typeName="DNS_CLIENT" instanceName="DNS_CLIENT">
                  <position x="32" y="8" />
                  <inputVariables>
                    <variable formalParameter="ACTIVATE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="10" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DOMAIN">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="12" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP4_DNS">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="14" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="16" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="18" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="IP4">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="DONE">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="21" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="9" formalParameter="IP4" />
                  </connectionPointIn>
                </connector>
                <connector localId="22" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="9" formalParameter="DONE" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="24">
                  <position x="57" y="12" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>0</expression>
                </inVariable>
                <connector localId="23" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="24" formalParameter="0" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="26">
                  <position x="57" y="13" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>http_release</expression>
                </inVariable>
                <connector localId="25" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="26" formalParameter="http_release" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="28">
                  <position x="57" y="14" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>URL_DATA</expression>
                </inVariable>
                <connector localId="27" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="28" formalParameter="URL_DATA" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="30">
                  <position x="57" y="15" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IP_C</expression>
                </inVariable>
                <connector localId="29" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="30" formalParameter="IP_C" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="32">
                  <position x="57" y="16" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="31" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="32" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="34">
                  <position x="57" y="17" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_BUF</expression>
                </inVariable>
                <connector localId="33" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="34" formalParameter="R_BUF" />
                  </connectionPointIn>
                </connector>
                <block localId="20" executionOrderId="4" typeName="HTTP_GET" instanceName="HTTP_GET">
                  <position x="66" y="8" />
                  <inputVariables>
                    <variable formalParameter="IP4">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="21" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="GET">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="22" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="MODE">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="23" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="UNLOCK_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="25" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="URL_DATA">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="27" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="29" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                        <connection refLocalId="31" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="7" />
                        <connection refLocalId="33" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="HTTP_STATUS">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="HEADER_START">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="HEADER_STOP">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="BODY_START">
                      <connectionPointOut>
                        <relPosition x="0" y="3" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="BODY_STOP">
                      <connectionPointOut>
                        <relPosition x="0" y="4" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="DONE">
                      <connectionPointOut>
                        <relPosition x="0" y="5" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR">
                      <connectionPointOut>
                        <relPosition x="0" y="6" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="36" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="20" formalParameter="HTTP_STATUS" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="35" executionOrderId="5">
                  <position x="96" y="10" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="36" />
                  </connectionPointIn>
                  <expression>http_status</expression>
                </outVariable>
                <connector localId="38" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="20" formalParameter="HEADER_START" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="37" executionOrderId="6">
                  <position x="96" y="11" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="38" />
                  </connectionPointIn>
                  <expression>header_start</expression>
                </outVariable>
                <connector localId="40" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="20" formalParameter="HEADER_STOP" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="39" executionOrderId="7">
                  <position x="96" y="12" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="40" />
                  </connectionPointIn>
                  <expression>header_stop</expression>
                </outVariable>
                <connector localId="42" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="20" formalParameter="BODY_START" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="41" executionOrderId="8">
                  <position x="96" y="13" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="42" />
                  </connectionPointIn>
                  <expression>body_start</expression>
                </outVariable>
                <connector localId="44" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="20" formalParameter="BODY_STOP" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="43" executionOrderId="9">
                  <position x="96" y="14" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="44" />
                  </connectionPointIn>
                  <expression>body_stop</expression>
                </outVariable>
                <connector localId="46" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="20" formalParameter="DONE" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="45" executionOrderId="10">
                  <position x="96" y="15" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="46" />
                  </connectionPointIn>
                  <expression>http_get_done</expression>
                </outVariable>
                <connector localId="48" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="20" formalParameter="ERROR" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="47" executionOrderId="11">
                  <position x="96" y="16" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="48" />
                  </connectionPointIn>
                  <expression>http_get_error</expression>
                </outVariable>
                <inVariable localId="51">
                  <position x="12" y="25" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="50" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="51" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="53">
                  <position x="12" y="26" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="52" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="53" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="55">
                  <position x="12" y="27" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="54" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="55" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="57">
                  <position x="12" y="28" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="56" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="57" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <block localId="49" executionOrderId="12" typeName="oscat_basic.DWORD_OF_BYTE">
                  <position x="18" y="23" />
                  <inputVariables>
                    <variable formalParameter="B3">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="50" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="52" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B1">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="54" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B0">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="56" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DWORD_OF_BYTE">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="59" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="49" formalParameter="DWORD_OF_BYTE" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="61">
                  <position x="62" y="27" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>T#4s</expression>
                </inVariable>
                <connector localId="60" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="61" formalParameter="T#4s" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="63">
                  <position x="62" y="28" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IP_C</expression>
                </inVariable>
                <connector localId="62" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="63" formalParameter="IP_C" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="65">
                  <position x="62" y="29" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="64" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="65" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="67">
                  <position x="62" y="30" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_BUF</expression>
                </inVariable>
                <connector localId="66" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="67" formalParameter="R_BUF" />
                  </connectionPointIn>
                </connector>
                <block localId="58" executionOrderId="13" typeName="IP_CONTROL" instanceName="IP_CONTROL_1">
                  <position x="69" y="23" />
                  <inputVariables>
                    <variable formalParameter="IP">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="59" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="PORT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TIME_OUT">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="60" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="62" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="64" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="66" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="70">
                  <position x="10" y="37" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>http_get_done</expression>
                </inVariable>
                <connector localId="69" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="70" formalParameter="http_get_done" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="72">
                  <position x="13" y="38" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>T#1s</expression>
                </inVariable>
                <connector localId="71" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="72" formalParameter="T#1s" />
                  </connectionPointIn>
                </connector>
                <block localId="68" executionOrderId="14" typeName="TON" instanceName="TON_1">
                  <position x="20" y="35" />
                  <inputVariables>
                    <variable formalParameter="IN">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="69" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="PT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="71" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="Q">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ET">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="74" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="68" formalParameter="Q" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="73" executionOrderId="15">
                  <position x="30" y="37" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="74" />
                  </connectionPointIn>
                  <expression>http_release</expression>
                </outVariable>
                <inVariable localId="77">
                  <position x="55" y="39" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>http_get_done</expression>
                </inVariable>
                <connector localId="76" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="77" formalParameter="http_get_done" />
                  </connectionPointIn>
                </connector>
                <block localId="75" executionOrderId="16" typeName="oscat_basic.COUNT_DR" instanceName="COUNT_DR">
                  <position x="66" y="35" />
                  <inputVariables>
                    <variable formalParameter="SET">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="UP">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="76" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="STEP">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="MX">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="RST">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="CNT">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="79" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="75" formalParameter="CNT" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="78" executionOrderId="17">
                  <position x="80" y="37" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="79" />
                  </connectionPointIn>
                  <expression>cycles</expression>
                </outVariable>
                <inVariable localId="82">
                  <position x="10" y="42" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>http_get_done</expression>
                </inVariable>
                <connector localId="81" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="82" formalParameter="http_get_done" />
                  </connectionPointIn>
                </connector>
                <block localId="80" executionOrderId="18" typeName="F_TRIG" instanceName="F_TRIG">
                  <position x="20" y="40" />
                  <inputVariables>
                    <variable formalParameter="CLK">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="81" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="Q">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="84" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="80" formalParameter="Q" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="83" executionOrderId="19">
                  <position x="32" y="42" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="84" />
                  </connectionPointIn>
                  <expression>enable</expression>
                </outVariable>
                <comment localId="85" height="0" width="0">
                  <position x="14" y="22" />
                  <content>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">IP-Adresse des DNS-Server oder des DSL-Router</xhtml>
                  </content>
                </comment>
              </CFC>
            </data>
          </addData>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>6d7b5fab-be94-4bab-9ab2-8960ad5a8f80</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="INI_PARSER_BUF_DEMO" pouType="program">
        <interface>
          <localVars>
            <variable name="STATION_NAME">
              <type>
                <string />
              </type>
            </variable>
            <variable name="STATION_IP">
              <type>
                <string />
              </type>
            </variable>
            <variable name="SMTP_SERVER">
              <type>
                <string />
              </type>
            </variable>
            <variable name="SMTP_FROM">
              <type>
                <string />
              </type>
            </variable>
            <variable name="IPB">
              <type>
                <derived name="INI_PARSER_BUF" />
              </type>
            </variable>
            <variable name="FS">
              <type>
                <derived name="FILE_SERVER" />
              </type>
            </variable>
            <variable name="FSD">
              <type>
                <derived name="FILE_SERVER_DATA" />
              </type>
            </variable>
            <variable name="PT">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="section">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="key">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="value">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="str">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="step">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="result">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="offset">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="run">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="done">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Demo-Programm: INI-Datei mittels Enumeration auswerten *)

(* ----- den nachfolgenden Textblock als datei "config.ini" auf der sps ablegen ---
# Demo - Initialisierungsdatei

[Station]
NAME=Test_Station_1
IP=192.168.178.1

[SMTP]
SERVER=test.server.de
FROM=test1@gmx.net
---------------------------------------------------------------------------------*)

CASE step OF

00:	IF NOT done THEN
	 	(* File_Daten einrichten  *)
		FSD.FILENAME := 'config.ini'; (* Dateiname *)
		FSD.MODE := 1; (* vorhandene Datei zum lesen öffnen *)
		FSD.OFFSET := 0; (* Start bei Dateianfang *)
		PT.SIZE := 65535; (* maximale länge einlesen *)
		step := 10;
	END_IF;

10:	IF FSD.MODE = 0 THEN (* Datei geöffnet ? *)
		OFFSET := 0; (* Start Offset vorgeben *)
		str := '';
		run := 3; (* key suchen *)
		step := 20;
	END_IF;

20:	IF run = 0 THEN
		(* ---------------------- Debug-Message ----------------------------*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'IPBD: /key &gt;~1&lt; /value &gt;~2&lt; /offset ~3 /Run ~4 /Result ~5';
			LOG_CL.PRINTF[1] := key;
			LOG_CL.PRINTF[2] := value;
			LOG_CL.PRINTF[3] := UDINT_TO_STRING(OFFSET);
			LOG_CL.PRINTF[4] := BYTE_TO_STRING(run);
			LOG_CL.PRINTF[5] := BYTE_TO_STRING(result);
			LOG_MSG();
		END_IF;*)
		(* -----------------------------------------------------------------*)

		run := 3; (* vorbelegung -&gt; naechsten key suchen *)

		IF result = 1 THEN (* neue Sektion gefunden *)
			IF key = 'Station' THEN
				section := 1;
			ELSIF key = 'SMTP' THEN
				section := 2;

			(* hier können weitere Section hinzugefügt werden *)

			ELSE
				section := 0; (* unbekannte sektion gefunden -&gt; ignorieren *)
			END_IF;

		ELSIF result = 2 AND section &gt; 0 THEN (* Key in einer bekannten sektion gefunden *)

			CASE section OF

			1:  (* Section: Station *)
				IF key = 'NAME' THEN
					STATION_NAME := value; (* Name *)
				ELSIF key = 'IP' THEN
					STATION_IP := value; (* IP-Adresse *)
				END_IF;

				(* hier können weitere Schlüsselsauswertungen hinzugefügt werden *)

			2:  (* Section: SMTP *)
				IF key = 'SERVER' THEN
					SMTP_SERVER := value; (* SMTP Server *)
				ELSIF key = 'FROM' THEN
					SMTP_FROM := value; (* SMTP Absender *)
				END_IF;

				(* hier können weitere Schlüsselsauswertungen hinzugefügt werden *)

			END_CASE;

		ELSIF result = 10 THEN (* nichts mehr gefunden *)
			run := 0; (* keine weitere INI Auswertung erwünscht *)
			FSD.MODE := 5; (* Datei schliessen *)
			step := 30;
		END_IF;
	END_IF;

30:	IF FSD.MODE = 0 THEN (* Datei geschlossen ? *)
		step := 0;
		done := TRUE;
	END_IF;

END_CASE;

IPB(STR:=str,RUN:=run,OFFSET:=OFFSET,KEY:=key,VALUE:=value,PT:=PT); (* INI PARAMETER BUF *)
result:=IPB.RESULT;

FS(FSD:=FSD,PT:=PT); (* FILE_SERVER *)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d9362e1a-c868-43c4-906d-39c34748d8c3</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="INI_PARSER_FILE_DEMO" pouType="program">
        <interface>
          <localVars>
            <variable name="STATION_NAME">
              <type>
                <string />
              </type>
            </variable>
            <variable name="STATION_IP">
              <type>
                <string />
              </type>
            </variable>
            <variable name="SMTP_SERVER">
              <type>
                <string />
              </type>
            </variable>
            <variable name="SMTP_FROM">
              <type>
                <string />
              </type>
            </variable>
            <variable name="IPF">
              <type>
                <derived name="INI_PARSER_FILE" />
              </type>
            </variable>
            <variable name="FS">
              <type>
                <derived name="FILE_SERVER" />
              </type>
            </variable>
            <variable name="FSD">
              <type>
                <derived name="FILE_SERVER_DATA" />
              </type>
            </variable>
            <variable name="PT">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="section">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="filename">
              <type>
                <string />
              </type>
            </variable>
            <variable name="key">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="value">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="str">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="step">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="result">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="offset">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="run">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="done">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Demo-Programm: INI-Datei mittels Enumeration auswerten *)

(* ----- den nachfolgenden Textblock als datei "config.ini" auf der sps ablegen ---
# Demo - Initialisierungsdatei

[Station]
NAME=Test_Station_1
IP=192.168.178.1

[SMTP]
SERVER=test.server.de
FROM=test1@gmx.net
---------------------------------------------------------------------------------*)

CASE step OF

00:	IF NOT done THEN
		filename := 'config.ini'; (* File_Daten einrichten *)
		OFFSET := 0; (* Start Offset vorgeben *)
		str := '';
		run := 3; (* key suchen *)
		step := 20;
	END_IF;

20:	IF run = 0 THEN (* kein Befehl mehr aktiv ? *)
		(* ---------------------- Debug-Message ----------------------------*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'IPFD: /key &gt;~1&lt; /value &gt;~2&lt; /offset ~3 /Run ~4 /Result ~5';
			LOG_CL.PRINTF[1] := key;
			LOG_CL.PRINTF[2] := value;
			LOG_CL.PRINTF[3] := UDINT_TO_STRING(OFFSET);
			LOG_CL.PRINTF[4] := BYTE_TO_STRING(run);
			LOG_CL.PRINTF[5] := BYTE_TO_STRING(result);
			LOG_MSG();
		END_IF;*)
		(* -----------------------------------------------------------------*)

		run := 3; (* vorbelegung -&gt; naechsten key suchen *)

		IF result = 1 THEN (* neue Sektion gefunden *)
			IF key = 'Station' THEN
				section := 1;
			ELSIF key = 'SMTP' THEN
				section := 2;

			(* hier können weitere Section hinzugefügt werden *)

			ELSE
				section := 0; (* unbekannte sektion gefunden -&gt; ignorieren *)
			END_IF;

		ELSIF result = 2 AND section &gt; 0 THEN (* Key in einer bekannten sektion gefunden *)

			CASE section OF

			1:  (* Section: Station *)
				IF key = 'NAME' THEN
					STATION_NAME := value; (* Name *)
				ELSIF key = 'IP' THEN
					STATION_IP := value; (* IP-Adresse *)
				END_IF;

				(* hier können weitere Schlüsselsauswertungen hinzugefügt werden *)

			2:  (* Section: SMTP *)
				IF key = 'SERVER' THEN
					SMTP_SERVER := value; (* SMTP Server *)
				ELSIF key = 'FROM' THEN
					SMTP_FROM := value; (* SMTP Absender *)
				END_IF;

				(* hier können weitere Schlüsselsauswertungen hinzugefügt werden *)

			END_CASE;

		ELSIF result = 10 THEN (* nichts mehr gefunden *)
			run := 0; (* keine weitere INI Auswertung erwünscht *)
			FSD.MODE := 5; (* Datei schliessen *)
			step := 30;
		END_IF;
	END_IF;

30:	IF FSD.MODE = 0 THEN (* Befehl Datei schliessen beendet *)
		step := 0;
		done := TRUE;
	END_IF;

END_CASE;

IPF(FILENAME:=FILENAME,FSD:=FSD,STR:=str,RUN:=run,OFFSET:=OFFSET,KEY:=key,VALUE:=value,PT:=PT); (* INI PARAMETER FILE *)
result:=IPF.RESULT;

FS(FSD:=FSD,PT:=PT); (* FILE_SERVER *)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>49f54a62-d4fa-4429-9465-838b3fb601cf</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="IP2GEO_DEMO" pouType="program">
        <interface>
          <localVars>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="IP_CONTROL_1">
              <type>
                <derived name="IP_CONTROL" />
              </type>
            </variable>
            <variable name="CLK_PRG">
              <type>
                <derived name="oscat_basic.CLK_PRG" />
              </type>
            </variable>
            <variable name="IP2GEO_1">
              <type>
                <derived name="IP2GEO" />
              </type>
            </variable>
            <variable name="GEO">
              <type>
                <derived name="IP2GEO_DATA" />
              </type>
            </variable>
            <variable name="activate">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="done">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="busy">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="error_c">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="error_t">
              <type>
                <BYTE />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/cfc" handleUnknown="implementation">
              <CFC>
                <inVariable localId="2">
                  <position x="10" y="4" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>t#3h</expression>
                </inVariable>
                <connector localId="1" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="2" formalParameter="t#3h" />
                  </connectionPointIn>
                </connector>
                <block localId="0" executionOrderId="1" typeName="oscat_basic.CLK_PRG" instanceName="CLK_PRG">
                  <position x="18" y="2" />
                  <inputVariables>
                    <variable formalParameter="PT">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="1" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="Q">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="4" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="Q" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="3" executionOrderId="2">
                  <position x="30" y="4" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="4" />
                  </connectionPointIn>
                  <expression>activate</expression>
                </outVariable>
                <inVariable localId="7">
                  <position x="11" y="10" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>activate</expression>
                </inVariable>
                <connector localId="6" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="7" formalParameter="activate" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="9">
                  <position x="11" y="11" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IP_C</expression>
                </inVariable>
                <connector localId="8" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="9" formalParameter="IP_C" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="11">
                  <position x="11" y="12" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="10" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="11" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="13">
                  <position x="11" y="13" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_BUF</expression>
                </inVariable>
                <connector localId="12" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="13" formalParameter="R_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="15">
                  <position x="11" y="14" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>GEO</expression>
                </inVariable>
                <connector localId="14" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="15" formalParameter="GEO" />
                  </connectionPointIn>
                </connector>
                <block localId="5" executionOrderId="3" typeName="IP2GEO" instanceName="IP2GEO_1">
                  <position x="18" y="7" />
                  <inputVariables>
                    <variable formalParameter="IP">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="ACTIVATE">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="6" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="8" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="10" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="12" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="GEO">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="14" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="BUSY">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="DONE">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR_C">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR_T">
                      <connectionPointOut>
                        <relPosition x="0" y="3" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="17" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="5" formalParameter="BUSY" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="16" executionOrderId="4">
                  <position x="38" y="9" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="17" />
                  </connectionPointIn>
                  <expression>busy</expression>
                </outVariable>
                <connector localId="19" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="5" formalParameter="DONE" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="18" executionOrderId="5">
                  <position x="38" y="10" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="19" />
                  </connectionPointIn>
                  <expression>done</expression>
                </outVariable>
                <connector localId="21" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="5" formalParameter="ERROR_C" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="20" executionOrderId="6">
                  <position x="38" y="11" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="21" />
                  </connectionPointIn>
                  <expression>error_c</expression>
                </outVariable>
                <connector localId="23" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="5" formalParameter="ERROR_T" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="22" executionOrderId="7">
                  <position x="38" y="12" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="23" />
                  </connectionPointIn>
                  <expression>error_t</expression>
                </outVariable>
                <inVariable localId="26">
                  <position x="13" y="21" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="25" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="26" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="28">
                  <position x="13" y="22" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="27" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="28" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="30">
                  <position x="13" y="23" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="29" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="30" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="32">
                  <position x="13" y="24" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="31" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="32" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <block localId="24" executionOrderId="8" typeName="oscat_basic.DWORD_OF_BYTE">
                  <position x="18" y="19" />
                  <inputVariables>
                    <variable formalParameter="B3">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="25" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="27" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B1">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="29" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B0">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="31" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DWORD_OF_BYTE">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="34" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="24" formalParameter="DWORD_OF_BYTE" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="36">
                  <position x="60" y="23" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>T#5s</expression>
                </inVariable>
                <connector localId="35" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="36" formalParameter="T#5s" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="38">
                  <position x="60" y="24" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IP_C</expression>
                </inVariable>
                <connector localId="37" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="38" formalParameter="IP_C" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="40">
                  <position x="60" y="25" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="39" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="40" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="42">
                  <position x="60" y="26" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_BUF</expression>
                </inVariable>
                <connector localId="41" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="42" formalParameter="R_BUF" />
                  </connectionPointIn>
                </connector>
                <block localId="33" executionOrderId="9" typeName="IP_CONTROL" instanceName="IP_CONTROL_1">
                  <position x="67" y="19" />
                  <inputVariables>
                    <variable formalParameter="IP">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="34" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="PORT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TIME_OUT">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="35" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="37" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="39" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="41" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <comment localId="43" height="0" width="0">
                  <position x="12" y="18" />
                  <content>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">IP-Adresse des DNS-Server oder des DSL-Router</xhtml>
                  </content>
                </comment>
              </CFC>
            </data>
          </addData>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>f9abf66d-752d-4dff-846b-6423b16c9aaa</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="IRTRANS_DEMO" pouType="program">
        <interface>
          <localVars>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER_SHORT" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER_SHORT" />
              </type>
            </variable>
            <variable name="IP_CONTROL2">
              <type>
                <derived name="IP_CONTROL2" />
              </type>
            </variable>
            <variable name="IRTRANS_DECODE">
              <type>
                <derived name="IRTRANS_DECODE" />
              </type>
            </variable>
            <variable name="IRTRANS_RCV_4">
              <type>
                <derived name="IRTRANS_RCV_4" />
              </type>
            </variable>
            <variable name="DRIVER_4">
              <type>
                <derived name="oscat_basic.DRIVER_4" />
              </type>
            </variable>
            <variable name="IRTRANS_SERVER">
              <type>
                <derived name="IRTRANS_SERVER" />
              </type>
            </variable>
            <variable name="IRTRANS_SND_8_1">
              <type>
                <derived name="IRTRANS_SND_8" />
              </type>
            </variable>
            <variable name="IRTRANS_SND_8_2">
              <type>
                <derived name="IRTRANS_SND_8" />
              </type>
            </variable>
            <variable name="Q0">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Q1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Q2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Q3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="error">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="error_server">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="Send_1_0">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="Send_1_1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Send_1_2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Send_1_3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Send_1_4">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Send_1_5">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Send_1_6">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Send_1_7">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Send_2_0">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="Send_2_1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Send_2_2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Send_2_3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Send_2_4">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Send_2_5">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Send_2_6">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Send_2_7">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="R_ENABLE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="S_ENABLE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="MODE">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="KEY_1">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="KEY_2">
              <type>
                <BYTE />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/cfc" handleUnknown="implementation">
              <CFC>
                <inVariable localId="2">
                  <position x="12" y="5" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IP_C</expression>
                </inVariable>
                <connector localId="1" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="2" formalParameter="IP_C" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="4">
                  <position x="12" y="6" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_BUF</expression>
                </inVariable>
                <connector localId="3" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="4" formalParameter="R_BUF" />
                  </connectionPointIn>
                </connector>
                <block localId="0" executionOrderId="1" typeName="IRTRANS_DECODE" instanceName="IRTRANS_DECODE">
                  <position x="20" y="3" />
                  <inputVariables>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="3" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="CMD">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="DEV">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="KEY">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR">
                      <connectionPointOut>
                        <relPosition x="0" y="3" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="6" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="ERROR" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="5" executionOrderId="2">
                  <position x="40" y="8" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="6" />
                  </connectionPointIn>
                  <expression>error</expression>
                </outVariable>
                <connector localId="7" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="CMD" />
                  </connectionPointIn>
                </connector>
                <connector localId="8" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="DEV" />
                  </connectionPointIn>
                </connector>
                <connector localId="9" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="KEY" />
                  </connectionPointIn>
                </connector>
                <connector localId="11" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="CMD" />
                  </connectionPointIn>
                </connector>
                <connector localId="12" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="DEV" />
                  </connectionPointIn>
                </connector>
                <connector localId="13" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="KEY" />
                  </connectionPointIn>
                </connector>
                <block localId="10" executionOrderId="3" typeName="IRTRANS_RCV_4" instanceName="IRTRANS_RCV_4">
                  <position x="51" y="3" />
                  <inputVariables>
                    <variable formalParameter="CMD">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="11" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables>
                    <variable formalParameter="DEV">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="12" />
                      </connectionPointIn>
                      <connectionPointOut>
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="KEY">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="13" />
                      </connectionPointIn>
                      <connectionPointOut>
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </inOutVariables>
                  <outputVariables>
                    <variable formalParameter="Q0">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="Q1">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="Q2">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="Q3">
                      <connectionPointOut>
                        <relPosition x="0" y="3" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="15" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="10" formalParameter="Q0" />
                  </connectionPointIn>
                </connector>
                <connector localId="16" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="10" formalParameter="Q1" />
                  </connectionPointIn>
                </connector>
                <connector localId="17" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="10" formalParameter="Q2" />
                  </connectionPointIn>
                </connector>
                <connector localId="18" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="10" formalParameter="Q3" />
                  </connectionPointIn>
                </connector>
                <block localId="14" executionOrderId="4" typeName="oscat_basic.DRIVER_4" instanceName="DRIVER_4">
                  <position x="65" y="2" />
                  <inputVariables>
                    <variable formalParameter="SET">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN0">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="15" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN1">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="16" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN2">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="17" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN3">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="18" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="RST">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="Q0">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="Q1">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="Q2">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="Q3">
                      <connectionPointOut>
                        <relPosition x="0" y="3" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="20" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="14" formalParameter="Q0" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="19" executionOrderId="5">
                  <position x="82" y="4" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="20" />
                  </connectionPointIn>
                  <expression>Q0</expression>
                </outVariable>
                <connector localId="22" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="14" formalParameter="Q1" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="21" executionOrderId="6">
                  <position x="82" y="5" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="22" />
                  </connectionPointIn>
                  <expression>Q1</expression>
                </outVariable>
                <connector localId="24" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="14" formalParameter="Q2" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="23" executionOrderId="7">
                  <position x="82" y="6" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="24" />
                  </connectionPointIn>
                  <expression>Q2</expression>
                </outVariable>
                <connector localId="26" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="14" formalParameter="Q3" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="25" executionOrderId="8">
                  <position x="82" y="7" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="26" />
                  </connectionPointIn>
                  <expression>Q3</expression>
                </outVariable>
                <inVariable localId="28">
                  <position x="11" y="16" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>Send_1_0</expression>
                </inVariable>
                <connector localId="27" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="28" formalParameter="Send_1_0" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="30">
                  <position x="11" y="17" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>Send_1_1</expression>
                </inVariable>
                <connector localId="29" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="30" formalParameter="Send_1_1" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="32">
                  <position x="11" y="18" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>Send_1_2</expression>
                </inVariable>
                <connector localId="31" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="32" formalParameter="Send_1_2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="34">
                  <position x="11" y="19" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>Send_1_3</expression>
                </inVariable>
                <connector localId="33" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="34" formalParameter="Send_1_3" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="36">
                  <position x="11" y="20" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>Send_1_4</expression>
                </inVariable>
                <connector localId="35" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="36" formalParameter="Send_1_4" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="38">
                  <position x="11" y="21" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>Send_1_5</expression>
                </inVariable>
                <connector localId="37" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="38" formalParameter="Send_1_5" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="40">
                  <position x="11" y="22" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>Send_1_6</expression>
                </inVariable>
                <connector localId="39" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="40" formalParameter="Send_1_6" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="42">
                  <position x="11" y="23" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>Send_1_7</expression>
                </inVariable>
                <connector localId="41" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="42" formalParameter="Send_1_7" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="44">
                  <position x="11" y="24" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>T#500ms</expression>
                </inVariable>
                <connector localId="43" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="44" formalParameter="T#500ms" />
                  </connectionPointIn>
                </connector>
                <connector localId="48" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="28" formalParameter="Send_1_0" />
                  </connectionPointIn>
                </connector>
                <connector localId="49" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="30" formalParameter="Send_1_1" />
                  </connectionPointIn>
                </connector>
                <connector localId="50" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="32" formalParameter="Send_1_2" />
                  </connectionPointIn>
                </connector>
                <connector localId="51" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="34" formalParameter="Send_1_3" />
                  </connectionPointIn>
                </connector>
                <connector localId="52" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="36" formalParameter="Send_1_4" />
                  </connectionPointIn>
                </connector>
                <connector localId="53" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="38" formalParameter="Send_1_5" />
                  </connectionPointIn>
                </connector>
                <connector localId="54" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="40" formalParameter="Send_1_6" />
                  </connectionPointIn>
                </connector>
                <connector localId="55" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="42" formalParameter="Send_1_7" />
                  </connectionPointIn>
                </connector>
                <connector localId="56" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="44" formalParameter="T#500ms" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="58">
                  <position x="11" y="25" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IP_C</expression>
                </inVariable>
                <connector localId="57" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="58" formalParameter="IP_C" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="60">
                  <position x="11" y="26" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="59" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="60" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <block localId="47" executionOrderId="17" typeName="IRTRANS_SND_8" instanceName="IRTRANS_SND_8_1">
                  <position x="20" y="14" />
                  <inputVariables>
                    <variable formalParameter="IN_0">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="48" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN_1">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="49" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN_2">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="50" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN_3">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="51" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN_4">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="52" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN_5">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="53" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN_6">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                        <connection refLocalId="54" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN_7">
                      <connectionPointIn>
                        <relPosition x="0" y="7" />
                        <connection refLocalId="55" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="T_REPEAT">
                      <connectionPointIn>
                        <relPosition x="0" y="8" />
                        <connection refLocalId="56" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="9" />
                        <connection refLocalId="57" />
                      </connectionPointIn>
                      <connectionPointOut>
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="10" />
                        <connection refLocalId="59" />
                      </connectionPointIn>
                      <connectionPointOut>
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </inOutVariables>
                  <outputVariables>
                    <variable formalParameter="KEY">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="46" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="47" formalParameter="KEY" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="45" executionOrderId="9">
                  <position x="44" y="16" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="46" />
                  </connectionPointIn>
                  <expression>KEY_1</expression>
                </outVariable>
                <inVariable localId="62">
                  <position x="55" y="16" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>Send_2_0</expression>
                </inVariable>
                <connector localId="61" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="62" formalParameter="Send_2_0" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="64">
                  <position x="55" y="17" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>Send_2_1</expression>
                </inVariable>
                <connector localId="63" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="64" formalParameter="Send_2_1" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="66">
                  <position x="55" y="18" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>Send_2_2</expression>
                </inVariable>
                <connector localId="65" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="66" formalParameter="Send_2_2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="68">
                  <position x="55" y="19" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>Send_2_3</expression>
                </inVariable>
                <connector localId="67" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="68" formalParameter="Send_2_3" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="70">
                  <position x="55" y="20" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>Send_2_4</expression>
                </inVariable>
                <connector localId="69" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="70" formalParameter="Send_2_4" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="72">
                  <position x="55" y="21" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>Send_2_5</expression>
                </inVariable>
                <connector localId="71" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="72" formalParameter="Send_2_5" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="74">
                  <position x="55" y="22" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>Send_2_6</expression>
                </inVariable>
                <connector localId="73" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="74" formalParameter="Send_2_6" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="76">
                  <position x="55" y="23" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>Send_2_7</expression>
                </inVariable>
                <connector localId="75" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="76" formalParameter="Send_2_7" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="78">
                  <position x="55" y="24" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>T#500ms</expression>
                </inVariable>
                <connector localId="77" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="78" formalParameter="T#500ms" />
                  </connectionPointIn>
                </connector>
                <connector localId="82" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="62" formalParameter="Send_2_0" />
                  </connectionPointIn>
                </connector>
                <connector localId="83" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="64" formalParameter="Send_2_1" />
                  </connectionPointIn>
                </connector>
                <connector localId="84" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="66" formalParameter="Send_2_2" />
                  </connectionPointIn>
                </connector>
                <connector localId="85" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="68" formalParameter="Send_2_3" />
                  </connectionPointIn>
                </connector>
                <connector localId="86" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="70" formalParameter="Send_2_4" />
                  </connectionPointIn>
                </connector>
                <connector localId="87" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="72" formalParameter="Send_2_5" />
                  </connectionPointIn>
                </connector>
                <connector localId="88" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="74" formalParameter="Send_2_6" />
                  </connectionPointIn>
                </connector>
                <connector localId="89" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="76" formalParameter="Send_2_7" />
                  </connectionPointIn>
                </connector>
                <connector localId="90" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="78" formalParameter="T#500ms" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="92">
                  <position x="55" y="25" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IP_C</expression>
                </inVariable>
                <connector localId="91" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="92" formalParameter="IP_C" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="94">
                  <position x="55" y="26" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="93" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="94" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <block localId="81" executionOrderId="16" typeName="IRTRANS_SND_8" instanceName="IRTRANS_SND_8_2">
                  <position x="65" y="14" />
                  <inputVariables>
                    <variable formalParameter="IN_0">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="82" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN_1">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="83" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN_2">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="84" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN_3">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="85" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN_4">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="86" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN_5">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="87" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN_6">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                        <connection refLocalId="88" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN_7">
                      <connectionPointIn>
                        <relPosition x="0" y="7" />
                        <connection refLocalId="89" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="T_REPEAT">
                      <connectionPointIn>
                        <relPosition x="0" y="8" />
                        <connection refLocalId="90" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="9" />
                        <connection refLocalId="91" />
                      </connectionPointIn>
                      <connectionPointOut>
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="10" />
                        <connection refLocalId="93" />
                      </connectionPointIn>
                      <connectionPointOut>
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </inOutVariables>
                  <outputVariables>
                    <variable formalParameter="KEY">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="80" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="81" formalParameter="KEY" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="79" executionOrderId="10">
                  <position x="88" y="16" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="80" />
                  </connectionPointIn>
                  <expression>KEY_2</expression>
                </outVariable>
                <inVariable localId="97">
                  <position x="15" y="33" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>MODE</expression>
                </inVariable>
                <connector localId="96" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="97" formalParameter="MODE" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="99">
                  <position x="15" y="34" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IP_C</expression>
                </inVariable>
                <connector localId="98" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="99" formalParameter="IP_C" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="101">
                  <position x="15" y="35" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="100" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="101" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="103">
                  <position x="15" y="36" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_BUF</expression>
                </inVariable>
                <connector localId="102" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="103" formalParameter="R_BUF" />
                  </connectionPointIn>
                </connector>
                <block localId="95" executionOrderId="11" typeName="IRTRANS_SERVER" instanceName="IRTRANS_SERVER">
                  <position x="22" y="31" />
                  <inputVariables>
                    <variable formalParameter="UDP_TCP">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="96" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="98" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="100" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="102" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="S_ENABLE">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="R_ENABLE">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="105" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="95" formalParameter="S_ENABLE" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="104" executionOrderId="12">
                  <position x="44" y="33" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="105" />
                  </connectionPointIn>
                  <expression>S_ENABLE</expression>
                </outVariable>
                <connector localId="107" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="95" formalParameter="R_ENABLE" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="106" executionOrderId="13">
                  <position x="44" y="34" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="107" />
                  </connectionPointIn>
                  <expression>R_ENABLE</expression>
                </outVariable>
                <connector localId="109" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="95" formalParameter="ERROR" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="108" executionOrderId="14">
                  <position x="44" y="35" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="109" />
                  </connectionPointIn>
                  <expression>error_server</expression>
                </outVariable>
                <inVariable localId="112">
                  <position x="61" y="34" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>21000</expression>
                </inVariable>
                <connector localId="111" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="112" formalParameter="21000" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="114">
                  <position x="61" y="35" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>T#2s</expression>
                </inVariable>
                <connector localId="113" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="114" formalParameter="T#2s" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="116">
                  <position x="61" y="36" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IP_C</expression>
                </inVariable>
                <connector localId="115" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="116" formalParameter="IP_C" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="118">
                  <position x="61" y="37" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="117" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="118" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="120">
                  <position x="61" y="38" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_BUF</expression>
                </inVariable>
                <connector localId="119" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="120" formalParameter="R_BUF" />
                  </connectionPointIn>
                </connector>
                <block localId="110" executionOrderId="15" typeName="IP_CONTROL2" instanceName="IP_CONTROL2">
                  <position x="68" y="31" />
                  <inputVariables>
                    <variable formalParameter="IP">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="PORT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="111" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TIME_OUT">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="113" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="115" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="117" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="119" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <comment localId="121" height="0" width="0">
                  <position x="66" y="29" />
                  <content>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">Hardwareneutraler Ethernet IP</xhtml>
                  </content>
                </comment>
                <comment localId="122" height="0" width="0">
                  <position x="22" y="1" />
                  <content>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">IRTRANS Empfang</xhtml>
                  </content>
                </comment>
                <comment localId="123" height="0" width="0">
                  <position x="22" y="29" />
                  <content>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">IRTRANS Kommunikation</xhtml>
                  </content>
                </comment>
                <comment localId="124" height="0" width="0">
                  <position x="30" y="12" />
                  <content>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">IRTRANS Senden (beliebig viele Instanzen zulässig !)</xhtml>
                  </content>
                </comment>
              </CFC>
            </data>
          </addData>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>64dada24-1bad-42c0-8a0d-32d7445edbe4</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="MB_CLIENT_DEMO" pouType="program">
        <interface>
          <localVars>
            <variable name="IP_CONTROL2_1">
              <type>
                <derived name="IP_CONTROL2" />
              </type>
            </variable>
            <variable name="MB_CLIENT_1">
              <type>
                <derived name="MB_CLIENT" />
              </type>
            </variable>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER_SHORT" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER_SHORT" />
              </type>
            </variable>
            <variable name="DATA">
              <type>
                <array>
                  <dimension lower="0" upper="255" />
                  <baseType>
                    <WORD />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="W_DATA_BITPOS">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="W_DATA_ADR">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="W_POINTS">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="W_ADDR">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="R_DATA_BITPOS">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="R_DATA_ADR">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="R_POINTS">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="R_ADDR">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="FC">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="ENABLE">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/cfc" handleUnknown="implementation">
              <CFC>
                <inVariable localId="2">
                  <position x="15" y="6" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>256</expression>
                </inVariable>
                <connector localId="1" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="2" formalParameter="256" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="4">
                  <position x="15" y="7" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>ENABLE</expression>
                </inVariable>
                <connector localId="3" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="4" formalParameter="ENABLE" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="6">
                  <position x="15" y="8" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>FALSE</expression>
                </inVariable>
                <connector localId="5" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="6" formalParameter="FALSE" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="8">
                  <position x="15" y="9" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>FC</expression>
                </inVariable>
                <connector localId="7" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="8" formalParameter="FC" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="10">
                  <position x="15" y="10" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>3</expression>
                </inVariable>
                <connector localId="9" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="10" formalParameter="3" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="12">
                  <position x="15" y="11" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_ADDR</expression>
                </inVariable>
                <connector localId="11" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="12" formalParameter="R_ADDR" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="14">
                  <position x="15" y="12" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_POINTS</expression>
                </inVariable>
                <connector localId="13" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="14" formalParameter="R_POINTS" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="16">
                  <position x="15" y="13" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_DATA_ADR</expression>
                </inVariable>
                <connector localId="15" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="16" formalParameter="R_DATA_ADR" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="18">
                  <position x="15" y="14" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_DATA_BITPOS</expression>
                </inVariable>
                <connector localId="17" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="18" formalParameter="R_DATA_BITPOS" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="20">
                  <position x="15" y="15" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>W_ADDR</expression>
                </inVariable>
                <connector localId="19" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="20" formalParameter="W_ADDR" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="22">
                  <position x="15" y="16" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>W_POINTS</expression>
                </inVariable>
                <connector localId="21" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="22" formalParameter="W_POINTS" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="24">
                  <position x="15" y="17" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>W_DATA_ADR</expression>
                </inVariable>
                <connector localId="23" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="24" formalParameter="W_DATA_ADR" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="26">
                  <position x="15" y="18" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>W_DATA_BITPOS</expression>
                </inVariable>
                <connector localId="25" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="26" formalParameter="W_DATA_BITPOS" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="28">
                  <position x="15" y="19" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>T#1s</expression>
                </inVariable>
                <connector localId="27" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="28" formalParameter="T#1s" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="30">
                  <position x="15" y="20" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IP_C</expression>
                </inVariable>
                <connector localId="29" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="30" formalParameter="IP_C" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="32">
                  <position x="15" y="21" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="31" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="32" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="34">
                  <position x="15" y="22" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_BUF</expression>
                </inVariable>
                <connector localId="33" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="34" formalParameter="R_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="36">
                  <position x="15" y="23" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>DATA</expression>
                </inVariable>
                <connector localId="35" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="36" formalParameter="DATA" />
                  </connectionPointIn>
                </connector>
                <block localId="0" executionOrderId="1" typeName="MB_CLIENT" instanceName="MB_CLIENT_1">
                  <position x="26" y="4" />
                  <inputVariables>
                    <variable formalParameter="DATA_SIZE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="ENABLE">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="UDP">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="5" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="FC">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="7" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="UNIT_ID">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="9" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_ADDR">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="11" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_POINTS">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                        <connection refLocalId="13" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_DATA_ADR">
                      <connectionPointIn>
                        <relPosition x="0" y="7" />
                        <connection refLocalId="15" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_DATA_BITPOS">
                      <connectionPointIn>
                        <relPosition x="0" y="8" />
                        <connection refLocalId="17" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="W_ADDR">
                      <connectionPointIn>
                        <relPosition x="0" y="9" />
                        <connection refLocalId="19" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="W_POINTS">
                      <connectionPointIn>
                        <relPosition x="0" y="10" />
                        <connection refLocalId="21" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="W_DATA_ADR">
                      <connectionPointIn>
                        <relPosition x="0" y="11" />
                        <connection refLocalId="23" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="W_DATA_BITPOS">
                      <connectionPointIn>
                        <relPosition x="0" y="12" />
                        <connection refLocalId="25" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DELAY">
                      <connectionPointIn>
                        <relPosition x="0" y="13" />
                        <connection refLocalId="27" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="14" />
                        <connection refLocalId="29" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="15" />
                        <connection refLocalId="31" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="16" />
                        <connection refLocalId="33" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DATA">
                      <connectionPointIn>
                        <relPosition x="0" y="17" />
                        <connection refLocalId="35" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="ERROR">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="BUSY">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="39">
                  <position x="19" y="29" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>192</expression>
                </inVariable>
                <connector localId="38" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="39" formalParameter="192" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="41">
                  <position x="19" y="30" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>168</expression>
                </inVariable>
                <connector localId="40" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="41" formalParameter="168" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="43">
                  <position x="19" y="31" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>178</expression>
                </inVariable>
                <connector localId="42" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="43" formalParameter="178" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="45">
                  <position x="19" y="32" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>001</expression>
                </inVariable>
                <connector localId="44" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="45" formalParameter="001" />
                  </connectionPointIn>
                </connector>
                <block localId="37" executionOrderId="2" typeName="oscat_basic.DWORD_OF_BYTE">
                  <position x="26" y="27" />
                  <inputVariables>
                    <variable formalParameter="B3">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="38" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="40" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B1">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="42" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B0">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="44" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DWORD_OF_BYTE">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="47" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="37" formalParameter="DWORD_OF_BYTE" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="49">
                  <position x="68" y="30" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>502</expression>
                </inVariable>
                <connector localId="48" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="49" formalParameter="502" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="51">
                  <position x="68" y="31" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>T#5s</expression>
                </inVariable>
                <connector localId="50" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="51" formalParameter="T#5s" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="53">
                  <position x="68" y="32" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IP_C</expression>
                </inVariable>
                <connector localId="52" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="53" formalParameter="IP_C" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="55">
                  <position x="68" y="33" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="54" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="55" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="57">
                  <position x="68" y="34" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_BUF</expression>
                </inVariable>
                <connector localId="56" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="57" formalParameter="R_BUF" />
                  </connectionPointIn>
                </connector>
                <block localId="46" executionOrderId="3" typeName="IP_CONTROL2" instanceName="IP_CONTROL2_1">
                  <position x="75" y="27" />
                  <inputVariables>
                    <variable formalParameter="IP">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="47" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="PORT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="48" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TIME_OUT">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="50" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="52" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="54" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="56" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <comment localId="58" height="0" width="0">
                  <position x="20" y="26" />
                  <content>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">IP-Adresse des MODBUS-TCP-Server</xhtml>
                  </content>
                </comment>
              </CFC>
            </data>
          </addData>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e3b3c3cb-d248-44b3-a1ce-ead3c1defb6d</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="MB_SERVER_DEMO" pouType="program">
        <interface>
          <localVars>
            <variable name="IP_CONTROL2_1">
              <type>
                <derived name="IP_CONTROL2" />
              </type>
            </variable>
            <variable name="MB_SERVER_1">
              <type>
                <derived name="MB_SERVER" />
              </type>
            </variable>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER_SHORT" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER_SHORT" />
              </type>
            </variable>
            <variable name="DATA">
              <type>
                <array>
                  <dimension lower="0" upper="255" />
                  <baseType>
                    <WORD />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="VMAP">
              <type>
                <array>
                  <dimension lower="1" upper="10" />
                  <baseType>
                    <derived name="VMAP_DATA" />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="error">
              <type>
                <DWORD />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/cfc" handleUnknown="implementation">
              <CFC>
                <inVariable localId="2">
                  <position x="26" y="5" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>10</expression>
                </inVariable>
                <connector localId="1" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="2" formalParameter="10" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="4">
                  <position x="26" y="6" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>TRUE</expression>
                </inVariable>
                <connector localId="3" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="4" formalParameter="TRUE" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="6">
                  <position x="26" y="7" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>FALSE</expression>
                </inVariable>
                <connector localId="5" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="6" formalParameter="FALSE" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="8">
                  <position x="26" y="8" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IP_C</expression>
                </inVariable>
                <connector localId="7" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="8" formalParameter="IP_C" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="10">
                  <position x="26" y="9" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="9" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="10" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="12">
                  <position x="26" y="10" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_BUF</expression>
                </inVariable>
                <connector localId="11" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="12" formalParameter="R_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="14">
                  <position x="26" y="11" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>VMAP</expression>
                </inVariable>
                <connector localId="13" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="14" formalParameter="VMAP" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="16">
                  <position x="26" y="12" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>DATA</expression>
                </inVariable>
                <connector localId="15" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="16" formalParameter="DATA" />
                  </connectionPointIn>
                </connector>
                <block localId="0" executionOrderId="1" typeName="MB_SERVER" instanceName="MB_SERVER_1">
                  <position x="26" y="3" />
                  <inputVariables>
                    <variable formalParameter="DATA_SIZE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="ENABLE">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="UDP">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="5" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="7" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="9" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="11" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="VMAP">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                        <connection refLocalId="13" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DATA">
                      <connectionPointIn>
                        <relPosition x="0" y="7" />
                        <connection refLocalId="15" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="ERROR">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="19">
                  <position x="26" y="18" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>502</expression>
                </inVariable>
                <connector localId="18" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="19" formalParameter="502" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="21">
                  <position x="26" y="19" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>T#2s</expression>
                </inVariable>
                <connector localId="20" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="21" formalParameter="T#2s" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="23">
                  <position x="26" y="20" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IP_C</expression>
                </inVariable>
                <connector localId="22" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="23" formalParameter="IP_C" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="25">
                  <position x="26" y="21" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="24" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="25" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="27">
                  <position x="26" y="22" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_BUF</expression>
                </inVariable>
                <connector localId="26" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="27" formalParameter="R_BUF" />
                  </connectionPointIn>
                </connector>
                <block localId="17" executionOrderId="2" typeName="IP_CONTROL2" instanceName="IP_CONTROL2_1">
                  <position x="26" y="15" />
                  <inputVariables>
                    <variable formalParameter="IP">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="PORT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="18" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TIME_OUT">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="20" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="22" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="24" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="26" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="29" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="ERROR" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="28" executionOrderId="3">
                  <position x="48" y="5" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="29" />
                  </connectionPointIn>
                  <expression>error</expression>
                </outVariable>
              </CFC>
            </data>
          </addData>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>539643ff-b47a-4574-afce-ea8e3b91dc56</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="MD5_CRAM_AUTH_DEMO" pouType="program">
        <interface>
          <localVars>
            <variable name="run">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="timestamp">
              <type>
                <string length="64" />
              </type>
              <initialValue>
                <simpleValue value="'PDQwMzYuMTA3NjMyNDM4MUBndWlsZGVuc3Rlcm4uemVpdGZvcm0uZGU+'" />
              </initialValue>
            </variable>
            <variable name="password">
              <type>
                <string />
              </type>
              <initialValue>
                <simpleValue value="'geheimes_passwort'" />
              </initialValue>
            </variable>
            <variable name="username">
              <type>
                <string />
              </type>
              <initialValue>
                <simpleValue value="'benutzer@zeitform.de'" />
              </initialValue>
            </variable>
            <variable name="auth_key">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="MD5_CRAM_AUTH">
              <type>
                <derived name="MD5_CRAM_AUTH" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/cfc" handleUnknown="implementation">
              <CFC>
                <inVariable localId="2">
                  <position x="86" y="13" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>run</expression>
                </inVariable>
                <connector localId="1" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="2" formalParameter="run" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="4">
                  <position x="86" y="14" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>username</expression>
                </inVariable>
                <connector localId="3" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="4" formalParameter="username" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="6">
                  <position x="86" y="15" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>password</expression>
                </inVariable>
                <connector localId="5" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="6" formalParameter="password" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="8">
                  <position x="86" y="16" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>timestamp</expression>
                </inVariable>
                <connector localId="7" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="8" formalParameter="timestamp" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="10">
                  <position x="86" y="17" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>auth_key</expression>
                </inVariable>
                <connector localId="9" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="10" formalParameter="auth_key" />
                  </connectionPointIn>
                </connector>
                <block localId="0" executionOrderId="1" typeName="MD5_CRAM_AUTH" instanceName="MD5_CRAM_AUTH">
                  <position x="86" y="11" />
                  <inputVariables>
                    <variable formalParameter="RUN">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="USERNAME">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="PASSWORD">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="5" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B64_TS">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="7" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="AUTH_KEY">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="9" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <comment localId="11" height="0" width="0">
                  <position x="42" y="2" />
                  <content>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">Beispiel:</xhtml>
                  </content>
                </comment>
              </CFC>
            </data>
          </addData>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>c90c54e2-4b87-4028-b079-45ec7fcfadb8</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="NET_VAR_MASTER_DEMO" pouType="program">
        <interface>
          <localVars>
            <variable name="NET_VAR_CONTROL_1">
              <type>
                <derived name="NET_VAR_CONTROL" />
              </type>
            </variable>
            <variable name="activate">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="run">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="udp">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="master">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="remote_port">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="10000" />
              </initialValue>
            </variable>
            <variable name="scan_time">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#1s0ms" />
              </initialValue>
            </variable>
            <variable name="watchdog">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#2s0ms" />
              </initialValue>
            </variable>
            <variable name="error">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="x">
              <type>
                <derived name="NET_VAR_DATA" />
              </type>
            </variable>
            <variable name="NET_VAR_BOOL8_1">
              <type>
                <derived name="NET_VAR_BOOL8" />
              </type>
            </variable>
            <variable name="id_b8">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="in_b1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="in_b2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="in_b3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="in_b4">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="in_b5">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="in_b6">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="in_b7">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="in_b8">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="out_b1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="out_b2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="out_b3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="out_b4">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="out_b5">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="out_b6">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="out_b7">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="out_b8">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="NET_VAR_STRING_1">
              <type>
                <derived name="NET_VAR_STRING" />
              </type>
            </variable>
            <variable name="in_s1">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="out_s1">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="id_s">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="NET_VAR_BUFFER_1">
              <type>
                <derived name="NET_VAR_BUFFER" />
              </type>
            </variable>
            <variable name="id_bu">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="BUF_IN">
              <type>
                <array>
                  <dimension lower="1" upper="64" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="BUF_OUT">
              <type>
                <array>
                  <dimension lower="1" upper="64" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="id_dw">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="NET_VAR_DWORD8_1">
              <type>
                <derived name="NET_VAR_DWORD8" />
              </type>
            </variable>
            <variable name="in_dw1">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="in_dw2">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="in_dw3">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="in_dw4">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="in_dw5">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="in_dw6">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="in_dw7">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="in_dw8">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="out_dw1">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="out_dw2">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="out_dw3">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="out_dw4">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="out_dw5">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="out_dw6">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="out_dw7">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="out_dw8">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="NET_VAR_REAL8_1">
              <type>
                <derived name="NET_VAR_REAL8" />
              </type>
            </variable>
            <variable name="in_r1">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="in_r2">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="in_r3">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="in_r4">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="in_r5">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="in_r6">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="in_r7">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="in_r8">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="out_r1">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="out_r2">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="out_r3">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="out_r4">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="out_r5">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="out_r6">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="out_r7">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="out_r8">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="id_r">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="NET_VAR_X8_1">
              <type>
                <derived name="NET_VAR_X8" />
              </type>
            </variable>
            <variable name="in_x_re1">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="in_x_re2">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="in_x_di1">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="in_x_di2">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="in_x_ud1">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="in_x_ud2">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="in_x_dw1">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="in_x_dw2">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="out_x_re1">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="out_x_re2">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="out_x_di1">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="out_x_di2">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="out_x_ud1">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="out_x_ud2">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="out_x_dw1">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="out_x_dw2">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="id_x8">
              <type>
                <BYTE />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/cfc" handleUnknown="implementation">
              <CFC>
                <inVariable localId="2">
                  <position x="16" y="3" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_dw1</expression>
                </inVariable>
                <connector localId="1" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="2" formalParameter="in_dw1" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="4">
                  <position x="16" y="4" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_dw2</expression>
                </inVariable>
                <connector localId="3" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="4" formalParameter="in_dw2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="6">
                  <position x="16" y="5" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_dw3</expression>
                </inVariable>
                <connector localId="5" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="6" formalParameter="in_dw3" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="8">
                  <position x="16" y="6" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_dw4</expression>
                </inVariable>
                <connector localId="7" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="8" formalParameter="in_dw4" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="10">
                  <position x="16" y="7" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_dw5</expression>
                </inVariable>
                <connector localId="9" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="10" formalParameter="in_dw5" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="12">
                  <position x="16" y="8" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_dw6</expression>
                </inVariable>
                <connector localId="11" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="12" formalParameter="in_dw6" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="14">
                  <position x="16" y="9" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_dw7</expression>
                </inVariable>
                <connector localId="13" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="14" formalParameter="in_dw7" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="16">
                  <position x="16" y="10" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_dw8</expression>
                </inVariable>
                <connector localId="15" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="16" formalParameter="in_dw8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="18">
                  <position x="16" y="11" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="17" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="18" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="0" executionOrderId="1" typeName="NET_VAR_DWORD8" instanceName="NET_VAR_DWORD8_1">
                  <position x="23" y="1" />
                  <inputVariables>
                    <variable formalParameter="IN1">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN3">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="5" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN4">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="7" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN5">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="9" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN6">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="11" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN7">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                        <connection refLocalId="13" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN8">
                      <connectionPointIn>
                        <relPosition x="0" y="7" />
                        <connection refLocalId="15" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="8" />
                        <connection refLocalId="17" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="OUT1">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT2">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT3">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT4">
                      <connectionPointOut>
                        <relPosition x="0" y="3" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT5">
                      <connectionPointOut>
                        <relPosition x="0" y="4" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT6">
                      <connectionPointOut>
                        <relPosition x="0" y="5" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT7">
                      <connectionPointOut>
                        <relPosition x="0" y="6" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT8">
                      <connectionPointOut>
                        <relPosition x="0" y="7" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ID">
                      <connectionPointOut>
                        <relPosition x="0" y="8" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="20" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="OUT1" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="19" executionOrderId="2">
                  <position x="36" y="3" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="20" />
                  </connectionPointIn>
                  <expression>out_dw1</expression>
                </outVariable>
                <connector localId="22" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="OUT2" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="21" executionOrderId="3">
                  <position x="36" y="4" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="22" />
                  </connectionPointIn>
                  <expression>out_dw2</expression>
                </outVariable>
                <connector localId="24" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="OUT3" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="23" executionOrderId="4">
                  <position x="36" y="5" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="24" />
                  </connectionPointIn>
                  <expression>out_dw3</expression>
                </outVariable>
                <connector localId="26" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="OUT4" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="25" executionOrderId="5">
                  <position x="36" y="6" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="26" />
                  </connectionPointIn>
                  <expression>out_dw4</expression>
                </outVariable>
                <connector localId="28" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="OUT5" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="27" executionOrderId="6">
                  <position x="36" y="7" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="28" />
                  </connectionPointIn>
                  <expression>out_dw5</expression>
                </outVariable>
                <connector localId="30" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="OUT6" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="29" executionOrderId="7">
                  <position x="36" y="8" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="30" />
                  </connectionPointIn>
                  <expression>out_dw6</expression>
                </outVariable>
                <connector localId="32" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="OUT7" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="31" executionOrderId="8">
                  <position x="36" y="9" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="32" />
                  </connectionPointIn>
                  <expression>out_dw7</expression>
                </outVariable>
                <connector localId="34" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="OUT8" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="33" executionOrderId="9">
                  <position x="36" y="10" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="34" />
                  </connectionPointIn>
                  <expression>out_dw8</expression>
                </outVariable>
                <connector localId="36" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="ID" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="35" executionOrderId="10">
                  <position x="36" y="11" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="36" />
                  </connectionPointIn>
                  <expression>id_dw</expression>
                </outVariable>
                <inVariable localId="39">
                  <position x="66" y="3" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_r1</expression>
                </inVariable>
                <connector localId="38" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="39" formalParameter="in_r1" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="41">
                  <position x="66" y="4" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_r2</expression>
                </inVariable>
                <connector localId="40" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="41" formalParameter="in_r2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="43">
                  <position x="66" y="5" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_r3</expression>
                </inVariable>
                <connector localId="42" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="43" formalParameter="in_r3" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="45">
                  <position x="66" y="6" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_r4</expression>
                </inVariable>
                <connector localId="44" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="45" formalParameter="in_r4" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="47">
                  <position x="66" y="7" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_r5</expression>
                </inVariable>
                <connector localId="46" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="47" formalParameter="in_r5" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="49">
                  <position x="66" y="8" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_r6</expression>
                </inVariable>
                <connector localId="48" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="49" formalParameter="in_r6" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="51">
                  <position x="66" y="9" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_r7</expression>
                </inVariable>
                <connector localId="50" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="51" formalParameter="in_r7" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="53">
                  <position x="66" y="10" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_r8</expression>
                </inVariable>
                <connector localId="52" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="53" formalParameter="in_r8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="55">
                  <position x="66" y="11" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="54" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="55" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="37" executionOrderId="11" typeName="NET_VAR_REAL8" instanceName="NET_VAR_REAL8_1">
                  <position x="72" y="1" />
                  <inputVariables>
                    <variable formalParameter="IN1">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="38" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="40" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN3">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="42" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN4">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="44" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN5">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="46" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN6">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="48" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN7">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                        <connection refLocalId="50" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN8">
                      <connectionPointIn>
                        <relPosition x="0" y="7" />
                        <connection refLocalId="52" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="8" />
                        <connection refLocalId="54" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="OUT1">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT2">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT3">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT4">
                      <connectionPointOut>
                        <relPosition x="0" y="3" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT5">
                      <connectionPointOut>
                        <relPosition x="0" y="4" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT6">
                      <connectionPointOut>
                        <relPosition x="0" y="5" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT7">
                      <connectionPointOut>
                        <relPosition x="0" y="6" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT8">
                      <connectionPointOut>
                        <relPosition x="0" y="7" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ID">
                      <connectionPointOut>
                        <relPosition x="0" y="8" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="57" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="37" formalParameter="OUT1" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="56" executionOrderId="12">
                  <position x="84" y="3" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="57" />
                  </connectionPointIn>
                  <expression>out_r1</expression>
                </outVariable>
                <connector localId="59" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="37" formalParameter="OUT2" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="58" executionOrderId="13">
                  <position x="84" y="4" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="59" />
                  </connectionPointIn>
                  <expression>out_r2</expression>
                </outVariable>
                <connector localId="61" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="37" formalParameter="OUT3" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="60" executionOrderId="14">
                  <position x="84" y="5" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="61" />
                  </connectionPointIn>
                  <expression>out_r3</expression>
                </outVariable>
                <connector localId="63" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="37" formalParameter="OUT4" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="62" executionOrderId="15">
                  <position x="84" y="6" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="63" />
                  </connectionPointIn>
                  <expression>out_r4</expression>
                </outVariable>
                <connector localId="65" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="37" formalParameter="OUT5" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="64" executionOrderId="16">
                  <position x="84" y="7" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="65" />
                  </connectionPointIn>
                  <expression>out_r5</expression>
                </outVariable>
                <connector localId="67" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="37" formalParameter="OUT6" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="66" executionOrderId="17">
                  <position x="84" y="8" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="67" />
                  </connectionPointIn>
                  <expression>out_r6</expression>
                </outVariable>
                <connector localId="69" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="37" formalParameter="OUT7" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="68" executionOrderId="18">
                  <position x="84" y="9" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="69" />
                  </connectionPointIn>
                  <expression>out_r7</expression>
                </outVariable>
                <connector localId="71" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="37" formalParameter="OUT8" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="70" executionOrderId="19">
                  <position x="84" y="10" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="71" />
                  </connectionPointIn>
                  <expression>out_r8</expression>
                </outVariable>
                <connector localId="73" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="37" formalParameter="ID" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="72" executionOrderId="20">
                  <position x="84" y="11" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="73" />
                  </connectionPointIn>
                  <expression>id_r</expression>
                </outVariable>
                <inVariable localId="76">
                  <position x="120" y="3" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_b1</expression>
                </inVariable>
                <connector localId="75" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="76" formalParameter="in_b1" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="78">
                  <position x="120" y="4" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_b2</expression>
                </inVariable>
                <connector localId="77" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="78" formalParameter="in_b2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="80">
                  <position x="120" y="5" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_b3</expression>
                </inVariable>
                <connector localId="79" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="80" formalParameter="in_b3" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="82">
                  <position x="120" y="6" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_b4</expression>
                </inVariable>
                <connector localId="81" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="82" formalParameter="in_b4" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="84">
                  <position x="120" y="7" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_b5</expression>
                </inVariable>
                <connector localId="83" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="84" formalParameter="in_b5" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="86">
                  <position x="120" y="8" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_b6</expression>
                </inVariable>
                <connector localId="85" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="86" formalParameter="in_b6" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="88">
                  <position x="120" y="9" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_b7</expression>
                </inVariable>
                <connector localId="87" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="88" formalParameter="in_b7" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="90">
                  <position x="120" y="10" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_b8</expression>
                </inVariable>
                <connector localId="89" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="90" formalParameter="in_b8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="92">
                  <position x="120" y="11" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="91" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="92" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="74" executionOrderId="21" typeName="NET_VAR_BOOL8" instanceName="NET_VAR_BOOL8_1">
                  <position x="126" y="1" />
                  <inputVariables>
                    <variable formalParameter="IN1">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="75" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="77" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN3">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="79" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN4">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="81" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN5">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="83" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN6">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="85" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN7">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                        <connection refLocalId="87" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN8">
                      <connectionPointIn>
                        <relPosition x="0" y="7" />
                        <connection refLocalId="89" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="8" />
                        <connection refLocalId="91" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="OUT1">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT2">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT3">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT4">
                      <connectionPointOut>
                        <relPosition x="0" y="3" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT5">
                      <connectionPointOut>
                        <relPosition x="0" y="4" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT6">
                      <connectionPointOut>
                        <relPosition x="0" y="5" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT7">
                      <connectionPointOut>
                        <relPosition x="0" y="6" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT8">
                      <connectionPointOut>
                        <relPosition x="0" y="7" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ID">
                      <connectionPointOut>
                        <relPosition x="0" y="8" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="94" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="74" formalParameter="OUT1" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="93" executionOrderId="22">
                  <position x="138" y="3" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="94" />
                  </connectionPointIn>
                  <expression>out_b1</expression>
                </outVariable>
                <connector localId="96" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="74" formalParameter="OUT2" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="95" executionOrderId="23">
                  <position x="138" y="4" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="96" />
                  </connectionPointIn>
                  <expression>out_b2</expression>
                </outVariable>
                <connector localId="98" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="74" formalParameter="OUT3" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="97" executionOrderId="24">
                  <position x="138" y="5" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="98" />
                  </connectionPointIn>
                  <expression>out_b3</expression>
                </outVariable>
                <connector localId="100" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="74" formalParameter="OUT4" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="99" executionOrderId="25">
                  <position x="138" y="6" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="100" />
                  </connectionPointIn>
                  <expression>out_b4</expression>
                </outVariable>
                <connector localId="102" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="74" formalParameter="OUT5" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="101" executionOrderId="26">
                  <position x="138" y="7" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="102" />
                  </connectionPointIn>
                  <expression>out_b5</expression>
                </outVariable>
                <connector localId="104" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="74" formalParameter="OUT6" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="103" executionOrderId="27">
                  <position x="138" y="8" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="104" />
                  </connectionPointIn>
                  <expression>out_b6</expression>
                </outVariable>
                <connector localId="106" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="74" formalParameter="OUT7" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="105" executionOrderId="28">
                  <position x="138" y="9" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="106" />
                  </connectionPointIn>
                  <expression>out_b7</expression>
                </outVariable>
                <connector localId="108" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="74" formalParameter="OUT8" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="107" executionOrderId="29">
                  <position x="138" y="10" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="108" />
                  </connectionPointIn>
                  <expression>out_b8</expression>
                </outVariable>
                <connector localId="110" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="74" formalParameter="ID" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="109" executionOrderId="30">
                  <position x="138" y="11" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="110" />
                  </connectionPointIn>
                  <expression>id_b8</expression>
                </outVariable>
                <inVariable localId="113">
                  <position x="16" y="17" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>BUF_IN</expression>
                </inVariable>
                <connector localId="112" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="113" formalParameter="BUF_IN" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="115">
                  <position x="16" y="18" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>BUF_OUT</expression>
                </inVariable>
                <connector localId="114" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="115" formalParameter="BUF_OUT" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="117">
                  <position x="16" y="19" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="116" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="117" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="111" executionOrderId="31" typeName="NET_VAR_BUFFER" instanceName="NET_VAR_BUFFER_1">
                  <position x="24" y="15" />
                  <inputVariables>
                    <variable formalParameter="BUF_IN">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="112" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="BUF_OUT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="114" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="116" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="ID">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="119" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="111" formalParameter="ID" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="118" executionOrderId="32">
                  <position x="40" y="17" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="119" />
                  </connectionPointIn>
                  <expression>id_bu</expression>
                </outVariable>
                <inVariable localId="122">
                  <position x="70" y="17" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_s1</expression>
                </inVariable>
                <connector localId="121" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="122" formalParameter="in_s1" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="124">
                  <position x="70" y="18" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>out_s1</expression>
                </inVariable>
                <connector localId="123" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="124" formalParameter="out_s1" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="126">
                  <position x="70" y="19" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="125" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="126" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="120" executionOrderId="33" typeName="NET_VAR_STRING" instanceName="NET_VAR_STRING_1">
                  <position x="77" y="15" />
                  <inputVariables>
                    <variable formalParameter="IN">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="121" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="OUT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="123" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="125" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="ID">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="128" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="120" formalParameter="ID" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="127" executionOrderId="34">
                  <position x="90" y="17" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="128" />
                  </connectionPointIn>
                  <expression>id_s</expression>
                </outVariable>
                <inVariable localId="131">
                  <position x="16" y="25" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_x_re1</expression>
                </inVariable>
                <connector localId="130" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="131" formalParameter="in_x_re1" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="133">
                  <position x="16" y="26" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_x_re2</expression>
                </inVariable>
                <connector localId="132" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="133" formalParameter="in_x_re2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="135">
                  <position x="16" y="27" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_x_di1</expression>
                </inVariable>
                <connector localId="134" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="135" formalParameter="in_x_di1" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="137">
                  <position x="16" y="28" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_x_di2</expression>
                </inVariable>
                <connector localId="136" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="137" formalParameter="in_x_di2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="139">
                  <position x="16" y="29" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_x_ud1</expression>
                </inVariable>
                <connector localId="138" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="139" formalParameter="in_x_ud1" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="141">
                  <position x="16" y="30" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_x_ud2</expression>
                </inVariable>
                <connector localId="140" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="141" formalParameter="in_x_ud2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="143">
                  <position x="16" y="31" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_x_dw1</expression>
                </inVariable>
                <connector localId="142" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="143" formalParameter="in_x_dw1" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="145">
                  <position x="16" y="32" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_x_dw2</expression>
                </inVariable>
                <connector localId="144" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="145" formalParameter="in_x_dw2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="147">
                  <position x="16" y="33" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="146" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="147" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="129" executionOrderId="35" typeName="NET_VAR_X8" instanceName="NET_VAR_X8_1">
                  <position x="24" y="23" />
                  <inputVariables>
                    <variable formalParameter="IN_REAL1">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="130" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN_REAL2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="132" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN_DINT1">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="134" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN_DINT2">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="136" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN_UDINT1">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="138" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN_UDINT2">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="140" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN_DWORD1">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                        <connection refLocalId="142" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN_DWORD2">
                      <connectionPointIn>
                        <relPosition x="0" y="7" />
                        <connection refLocalId="144" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="8" />
                        <connection refLocalId="146" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="OUT_REAL1">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT_REAL2">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT_DINT1">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT_DINT2">
                      <connectionPointOut>
                        <relPosition x="0" y="3" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT_UDINT1">
                      <connectionPointOut>
                        <relPosition x="0" y="4" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT_UDINT2">
                      <connectionPointOut>
                        <relPosition x="0" y="5" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT_DWORD1">
                      <connectionPointOut>
                        <relPosition x="0" y="6" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT_DWORD2">
                      <connectionPointOut>
                        <relPosition x="0" y="7" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ID">
                      <connectionPointOut>
                        <relPosition x="0" y="8" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="149" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="129" formalParameter="OUT_REAL1" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="148" executionOrderId="36">
                  <position x="44" y="25" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="149" />
                  </connectionPointIn>
                  <expression>out_x_re1</expression>
                </outVariable>
                <connector localId="151" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="129" formalParameter="OUT_REAL2" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="150" executionOrderId="37">
                  <position x="44" y="26" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="151" />
                  </connectionPointIn>
                  <expression>out_x_re2</expression>
                </outVariable>
                <connector localId="153" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="129" formalParameter="OUT_DINT1" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="152" executionOrderId="38">
                  <position x="44" y="27" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="153" />
                  </connectionPointIn>
                  <expression>out_x_di1</expression>
                </outVariable>
                <connector localId="155" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="129" formalParameter="OUT_DINT2" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="154" executionOrderId="39">
                  <position x="44" y="28" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="155" />
                  </connectionPointIn>
                  <expression>out_x_di2</expression>
                </outVariable>
                <connector localId="157" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="129" formalParameter="OUT_UDINT1" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="156" executionOrderId="40">
                  <position x="44" y="29" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="157" />
                  </connectionPointIn>
                  <expression>out_x_ud1</expression>
                </outVariable>
                <connector localId="159" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="129" formalParameter="OUT_UDINT2" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="158" executionOrderId="41">
                  <position x="44" y="30" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="159" />
                  </connectionPointIn>
                  <expression>out_x_ud2</expression>
                </outVariable>
                <connector localId="161" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="129" formalParameter="OUT_DWORD1" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="160" executionOrderId="42">
                  <position x="44" y="31" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="161" />
                  </connectionPointIn>
                  <expression>out_x_dw1</expression>
                </outVariable>
                <connector localId="163" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="129" formalParameter="OUT_DWORD2" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="162" executionOrderId="43">
                  <position x="44" y="32" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="163" />
                  </connectionPointIn>
                  <expression>out_x_dw2</expression>
                </outVariable>
                <connector localId="165" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="129" formalParameter="ID" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="164" executionOrderId="44">
                  <position x="44" y="33" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="165" />
                  </connectionPointIn>
                  <expression>id_x8</expression>
                </outVariable>
                <inVariable localId="168">
                  <position x="14" y="44" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>192</expression>
                </inVariable>
                <connector localId="167" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="168" formalParameter="192" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="170">
                  <position x="14" y="45" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>168</expression>
                </inVariable>
                <connector localId="169" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="170" formalParameter="168" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="172">
                  <position x="14" y="46" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>178</expression>
                </inVariable>
                <connector localId="171" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="172" formalParameter="178" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="174">
                  <position x="14" y="47" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>50</expression>
                </inVariable>
                <connector localId="173" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="174" formalParameter="50" />
                  </connectionPointIn>
                </connector>
                <block localId="166" executionOrderId="45" typeName="oscat_basic.DWORD_OF_BYTE">
                  <position x="24" y="42" />
                  <inputVariables>
                    <variable formalParameter="B3">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="167" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="169" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B1">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="171" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B0">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="173" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DWORD_OF_BYTE">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="177">
                  <position x="72" y="41" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>activate</expression>
                </inVariable>
                <connector localId="176" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="177" formalParameter="activate" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="179">
                  <position x="72" y="42" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>master</expression>
                </inVariable>
                <connector localId="178" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="179" formalParameter="master" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="181">
                  <position x="72" y="43" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>udp</expression>
                </inVariable>
                <connector localId="180" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="181" formalParameter="udp" />
                  </connectionPointIn>
                </connector>
                <connector localId="182" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="166" formalParameter="DWORD_OF_BYTE" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="184">
                  <position x="72" y="45" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>remote_port</expression>
                </inVariable>
                <connector localId="183" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="184" formalParameter="remote_port" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="186">
                  <position x="72" y="46" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>scan_time</expression>
                </inVariable>
                <connector localId="185" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="186" formalParameter="scan_time" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="188">
                  <position x="72" y="47" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>watchdog</expression>
                </inVariable>
                <connector localId="187" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="188" formalParameter="watchdog" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="190">
                  <position x="72" y="48" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="189" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="190" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="175" executionOrderId="46" typeName="NET_VAR_CONTROL" instanceName="NET_VAR_CONTROL_1">
                  <position x="81" y="39" />
                  <inputVariables>
                    <variable formalParameter="ACTIVATE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="176" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="MASTER">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="178" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="UDP">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="180" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="REMOTE_IP4">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="182" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="REMOTE_PORT">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="183" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SCAN_TIME">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="185" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="WATCHDOG">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                        <connection refLocalId="187" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="7" />
                        <connection refLocalId="189" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="RUN">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="192" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="175" formalParameter="RUN" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="191" executionOrderId="47">
                  <position x="102" y="41" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="192" />
                  </connectionPointIn>
                  <expression>run</expression>
                </outVariable>
                <connector localId="194" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="175" formalParameter="ERROR" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="193" executionOrderId="48">
                  <position x="102" y="42" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="194" />
                  </connectionPointIn>
                  <expression>error</expression>
                </outVariable>
              </CFC>
            </data>
          </addData>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>da203a03-8e0d-4f72-b865-8f4525f4347f</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="NET_VAR_SLAVE_DEMO" pouType="program">
        <interface>
          <localVars>
            <variable name="NET_VAR_CONTROL_1">
              <type>
                <derived name="NET_VAR_CONTROL" />
              </type>
            </variable>
            <variable name="activate">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="run">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="udp">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="master">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="remote_port">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="10000" />
              </initialValue>
            </variable>
            <variable name="scan_time">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#1s0ms" />
              </initialValue>
            </variable>
            <variable name="watchdog">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#2s0ms" />
              </initialValue>
            </variable>
            <variable name="error">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="x">
              <type>
                <derived name="NET_VAR_DATA" />
              </type>
            </variable>
            <variable name="NET_VAR_BOOL8_1">
              <type>
                <derived name="NET_VAR_BOOL8" />
              </type>
            </variable>
            <variable name="id_b8">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="in_b1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="in_b2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="in_b3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="in_b4">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="in_b5">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="in_b6">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="in_b7">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="in_b8">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="out_b1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="out_b2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="out_b3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="out_b4">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="out_b5">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="out_b6">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="out_b7">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="out_b8">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="NET_VAR_STRING_1">
              <type>
                <derived name="NET_VAR_STRING" />
              </type>
            </variable>
            <variable name="in_s1">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="out_s1">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="id_s">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="NET_VAR_BUFFER_1">
              <type>
                <derived name="NET_VAR_BUFFER" />
              </type>
            </variable>
            <variable name="id_bu">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="BUF_IN">
              <type>
                <array>
                  <dimension lower="1" upper="64" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="BUF_OUT">
              <type>
                <array>
                  <dimension lower="1" upper="64" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="id_dw">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="NET_VAR_DWORD8_1">
              <type>
                <derived name="NET_VAR_DWORD8" />
              </type>
            </variable>
            <variable name="in_dw1">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="in_dw2">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="in_dw3">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="in_dw4">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="in_dw5">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="in_dw6">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="in_dw7">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="in_dw8">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="out_dw1">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="out_dw2">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="out_dw3">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="out_dw4">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="out_dw5">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="out_dw6">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="out_dw7">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="out_dw8">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="NET_VAR_REAL8_1">
              <type>
                <derived name="NET_VAR_REAL8" />
              </type>
            </variable>
            <variable name="in_r1">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="in_r2">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="in_r3">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="in_r4">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="in_r5">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="in_r6">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="in_r7">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="in_r8">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="out_r1">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="out_r2">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="out_r3">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="out_r4">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="out_r5">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="out_r6">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="out_r7">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="out_r8">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="id_r">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="NET_VAR_X8_1">
              <type>
                <derived name="NET_VAR_X8" />
              </type>
            </variable>
            <variable name="in_x_re1">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="in_x_re2">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="in_x_di1">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="in_x_di2">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="in_x_ud1">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="in_x_ud2">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="in_x_dw1">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="in_x_dw2">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="out_x_re1">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="out_x_re2">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="out_x_di1">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="out_x_di2">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="out_x_ud1">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="out_x_ud2">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="out_x_dw1">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="out_x_dw2">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="id_x8">
              <type>
                <BYTE />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/cfc" handleUnknown="implementation">
              <CFC>
                <inVariable localId="2">
                  <position x="9" y="3" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_dw1</expression>
                </inVariable>
                <connector localId="1" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="2" formalParameter="in_dw1" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="4">
                  <position x="9" y="4" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_dw2</expression>
                </inVariable>
                <connector localId="3" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="4" formalParameter="in_dw2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="6">
                  <position x="9" y="5" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_dw3</expression>
                </inVariable>
                <connector localId="5" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="6" formalParameter="in_dw3" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="8">
                  <position x="9" y="6" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_dw4</expression>
                </inVariable>
                <connector localId="7" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="8" formalParameter="in_dw4" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="10">
                  <position x="9" y="7" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_dw5</expression>
                </inVariable>
                <connector localId="9" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="10" formalParameter="in_dw5" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="12">
                  <position x="9" y="8" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_dw6</expression>
                </inVariable>
                <connector localId="11" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="12" formalParameter="in_dw6" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="14">
                  <position x="9" y="9" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_dw7</expression>
                </inVariable>
                <connector localId="13" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="14" formalParameter="in_dw7" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="16">
                  <position x="9" y="10" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_dw8</expression>
                </inVariable>
                <connector localId="15" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="16" formalParameter="in_dw8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="18">
                  <position x="9" y="11" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="17" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="18" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="0" executionOrderId="1" typeName="NET_VAR_DWORD8" instanceName="NET_VAR_DWORD8_1">
                  <position x="16" y="1" />
                  <inputVariables>
                    <variable formalParameter="IN1">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN3">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="5" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN4">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="7" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN5">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="9" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN6">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="11" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN7">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                        <connection refLocalId="13" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN8">
                      <connectionPointIn>
                        <relPosition x="0" y="7" />
                        <connection refLocalId="15" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="8" />
                        <connection refLocalId="17" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="OUT1">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT2">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT3">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT4">
                      <connectionPointOut>
                        <relPosition x="0" y="3" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT5">
                      <connectionPointOut>
                        <relPosition x="0" y="4" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT6">
                      <connectionPointOut>
                        <relPosition x="0" y="5" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT7">
                      <connectionPointOut>
                        <relPosition x="0" y="6" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT8">
                      <connectionPointOut>
                        <relPosition x="0" y="7" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ID">
                      <connectionPointOut>
                        <relPosition x="0" y="8" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="20" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="OUT1" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="19" executionOrderId="2">
                  <position x="36" y="3" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="20" />
                  </connectionPointIn>
                  <expression>out_dw1</expression>
                </outVariable>
                <connector localId="22" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="OUT2" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="21" executionOrderId="3">
                  <position x="36" y="4" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="22" />
                  </connectionPointIn>
                  <expression>out_dw2</expression>
                </outVariable>
                <connector localId="24" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="OUT3" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="23" executionOrderId="4">
                  <position x="36" y="5" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="24" />
                  </connectionPointIn>
                  <expression>out_dw3</expression>
                </outVariable>
                <connector localId="26" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="OUT4" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="25" executionOrderId="5">
                  <position x="36" y="6" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="26" />
                  </connectionPointIn>
                  <expression>out_dw4</expression>
                </outVariable>
                <connector localId="28" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="OUT5" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="27" executionOrderId="6">
                  <position x="36" y="7" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="28" />
                  </connectionPointIn>
                  <expression>out_dw5</expression>
                </outVariable>
                <connector localId="30" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="OUT6" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="29" executionOrderId="7">
                  <position x="36" y="8" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="30" />
                  </connectionPointIn>
                  <expression>out_dw6</expression>
                </outVariable>
                <connector localId="32" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="OUT7" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="31" executionOrderId="8">
                  <position x="36" y="9" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="32" />
                  </connectionPointIn>
                  <expression>out_dw7</expression>
                </outVariable>
                <connector localId="34" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="OUT8" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="33" executionOrderId="9">
                  <position x="36" y="10" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="34" />
                  </connectionPointIn>
                  <expression>out_dw8</expression>
                </outVariable>
                <connector localId="36" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="ID" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="35" executionOrderId="10">
                  <position x="36" y="11" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="36" />
                  </connectionPointIn>
                  <expression>id_dw</expression>
                </outVariable>
                <inVariable localId="39">
                  <position x="66" y="3" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_r1</expression>
                </inVariable>
                <connector localId="38" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="39" formalParameter="in_r1" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="41">
                  <position x="66" y="4" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_r2</expression>
                </inVariable>
                <connector localId="40" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="41" formalParameter="in_r2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="43">
                  <position x="66" y="5" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_r3</expression>
                </inVariable>
                <connector localId="42" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="43" formalParameter="in_r3" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="45">
                  <position x="66" y="6" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_r4</expression>
                </inVariable>
                <connector localId="44" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="45" formalParameter="in_r4" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="47">
                  <position x="66" y="7" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_r5</expression>
                </inVariable>
                <connector localId="46" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="47" formalParameter="in_r5" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="49">
                  <position x="66" y="8" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_r6</expression>
                </inVariable>
                <connector localId="48" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="49" formalParameter="in_r6" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="51">
                  <position x="66" y="9" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_r7</expression>
                </inVariable>
                <connector localId="50" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="51" formalParameter="in_r7" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="53">
                  <position x="66" y="10" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_r8</expression>
                </inVariable>
                <connector localId="52" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="53" formalParameter="in_r8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="55">
                  <position x="66" y="11" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="54" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="55" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="37" executionOrderId="11" typeName="NET_VAR_REAL8" instanceName="NET_VAR_REAL8_1">
                  <position x="66" y="1" />
                  <inputVariables>
                    <variable formalParameter="IN1">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="38" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="40" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN3">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="42" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN4">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="44" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN5">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="46" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN6">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="48" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN7">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                        <connection refLocalId="50" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN8">
                      <connectionPointIn>
                        <relPosition x="0" y="7" />
                        <connection refLocalId="52" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="8" />
                        <connection refLocalId="54" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="OUT1">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT2">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT3">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT4">
                      <connectionPointOut>
                        <relPosition x="0" y="3" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT5">
                      <connectionPointOut>
                        <relPosition x="0" y="4" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT6">
                      <connectionPointOut>
                        <relPosition x="0" y="5" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT7">
                      <connectionPointOut>
                        <relPosition x="0" y="6" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT8">
                      <connectionPointOut>
                        <relPosition x="0" y="7" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ID">
                      <connectionPointOut>
                        <relPosition x="0" y="8" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="57" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="37" formalParameter="OUT1" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="56" executionOrderId="12">
                  <position x="84" y="3" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="57" />
                  </connectionPointIn>
                  <expression>out_r1</expression>
                </outVariable>
                <connector localId="59" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="37" formalParameter="OUT2" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="58" executionOrderId="13">
                  <position x="84" y="4" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="59" />
                  </connectionPointIn>
                  <expression>out_r2</expression>
                </outVariable>
                <connector localId="61" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="37" formalParameter="OUT3" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="60" executionOrderId="14">
                  <position x="84" y="5" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="61" />
                  </connectionPointIn>
                  <expression>out_r3</expression>
                </outVariable>
                <connector localId="63" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="37" formalParameter="OUT4" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="62" executionOrderId="15">
                  <position x="84" y="6" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="63" />
                  </connectionPointIn>
                  <expression>out_r4</expression>
                </outVariable>
                <connector localId="65" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="37" formalParameter="OUT5" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="64" executionOrderId="16">
                  <position x="84" y="7" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="65" />
                  </connectionPointIn>
                  <expression>out_r5</expression>
                </outVariable>
                <connector localId="67" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="37" formalParameter="OUT6" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="66" executionOrderId="17">
                  <position x="84" y="8" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="67" />
                  </connectionPointIn>
                  <expression>out_r6</expression>
                </outVariable>
                <connector localId="69" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="37" formalParameter="OUT7" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="68" executionOrderId="18">
                  <position x="84" y="9" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="69" />
                  </connectionPointIn>
                  <expression>out_r7</expression>
                </outVariable>
                <connector localId="71" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="37" formalParameter="OUT8" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="70" executionOrderId="19">
                  <position x="84" y="10" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="71" />
                  </connectionPointIn>
                  <expression>out_r8</expression>
                </outVariable>
                <connector localId="73" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="37" formalParameter="ID" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="72" executionOrderId="20">
                  <position x="84" y="11" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="73" />
                  </connectionPointIn>
                  <expression>id_r</expression>
                </outVariable>
                <inVariable localId="76">
                  <position x="120" y="3" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_b1</expression>
                </inVariable>
                <connector localId="75" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="76" formalParameter="in_b1" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="78">
                  <position x="120" y="4" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_b2</expression>
                </inVariable>
                <connector localId="77" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="78" formalParameter="in_b2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="80">
                  <position x="120" y="5" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_b3</expression>
                </inVariable>
                <connector localId="79" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="80" formalParameter="in_b3" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="82">
                  <position x="120" y="6" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_b4</expression>
                </inVariable>
                <connector localId="81" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="82" formalParameter="in_b4" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="84">
                  <position x="120" y="7" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_b5</expression>
                </inVariable>
                <connector localId="83" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="84" formalParameter="in_b5" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="86">
                  <position x="120" y="8" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_b6</expression>
                </inVariable>
                <connector localId="85" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="86" formalParameter="in_b6" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="88">
                  <position x="120" y="9" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_b7</expression>
                </inVariable>
                <connector localId="87" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="88" formalParameter="in_b7" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="90">
                  <position x="120" y="10" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_b8</expression>
                </inVariable>
                <connector localId="89" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="90" formalParameter="in_b8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="92">
                  <position x="120" y="11" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="91" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="92" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="74" executionOrderId="21" typeName="NET_VAR_BOOL8" instanceName="NET_VAR_BOOL8_1">
                  <position x="120" y="1" />
                  <inputVariables>
                    <variable formalParameter="IN1">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="75" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="77" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN3">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="79" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN4">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="81" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN5">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="83" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN6">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="85" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN7">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                        <connection refLocalId="87" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN8">
                      <connectionPointIn>
                        <relPosition x="0" y="7" />
                        <connection refLocalId="89" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="8" />
                        <connection refLocalId="91" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="OUT1">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT2">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT3">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT4">
                      <connectionPointOut>
                        <relPosition x="0" y="3" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT5">
                      <connectionPointOut>
                        <relPosition x="0" y="4" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT6">
                      <connectionPointOut>
                        <relPosition x="0" y="5" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT7">
                      <connectionPointOut>
                        <relPosition x="0" y="6" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT8">
                      <connectionPointOut>
                        <relPosition x="0" y="7" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ID">
                      <connectionPointOut>
                        <relPosition x="0" y="8" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="94" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="74" formalParameter="OUT1" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="93" executionOrderId="22">
                  <position x="138" y="3" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="94" />
                  </connectionPointIn>
                  <expression>out_b1</expression>
                </outVariable>
                <connector localId="96" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="74" formalParameter="OUT2" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="95" executionOrderId="23">
                  <position x="138" y="4" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="96" />
                  </connectionPointIn>
                  <expression>out_b2</expression>
                </outVariable>
                <connector localId="98" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="74" formalParameter="OUT3" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="97" executionOrderId="24">
                  <position x="138" y="5" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="98" />
                  </connectionPointIn>
                  <expression>out_b3</expression>
                </outVariable>
                <connector localId="100" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="74" formalParameter="OUT4" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="99" executionOrderId="25">
                  <position x="138" y="6" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="100" />
                  </connectionPointIn>
                  <expression>out_b4</expression>
                </outVariable>
                <connector localId="102" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="74" formalParameter="OUT5" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="101" executionOrderId="26">
                  <position x="138" y="7" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="102" />
                  </connectionPointIn>
                  <expression>out_b5</expression>
                </outVariable>
                <connector localId="104" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="74" formalParameter="OUT6" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="103" executionOrderId="27">
                  <position x="138" y="8" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="104" />
                  </connectionPointIn>
                  <expression>out_b6</expression>
                </outVariable>
                <connector localId="106" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="74" formalParameter="OUT7" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="105" executionOrderId="28">
                  <position x="138" y="9" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="106" />
                  </connectionPointIn>
                  <expression>out_b7</expression>
                </outVariable>
                <connector localId="108" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="74" formalParameter="OUT8" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="107" executionOrderId="29">
                  <position x="138" y="10" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="108" />
                  </connectionPointIn>
                  <expression>out_b8</expression>
                </outVariable>
                <connector localId="110" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="74" formalParameter="ID" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="109" executionOrderId="30">
                  <position x="138" y="11" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="110" />
                  </connectionPointIn>
                  <expression>id_b8</expression>
                </outVariable>
                <inVariable localId="113">
                  <position x="8" y="17" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>BUF_IN</expression>
                </inVariable>
                <connector localId="112" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="113" formalParameter="BUF_IN" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="115">
                  <position x="8" y="18" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>BUF_OUT</expression>
                </inVariable>
                <connector localId="114" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="115" formalParameter="BUF_OUT" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="117">
                  <position x="8" y="19" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="116" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="117" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="111" executionOrderId="31" typeName="NET_VAR_BUFFER" instanceName="NET_VAR_BUFFER_1">
                  <position x="16" y="15" />
                  <inputVariables>
                    <variable formalParameter="BUF_IN">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="112" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="BUF_OUT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="114" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="116" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="ID">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="119" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="111" formalParameter="ID" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="118" executionOrderId="32">
                  <position x="40" y="17" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="119" />
                  </connectionPointIn>
                  <expression>id_bu</expression>
                </outVariable>
                <inVariable localId="122">
                  <position x="70" y="17" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_s1</expression>
                </inVariable>
                <connector localId="121" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="122" formalParameter="in_s1" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="124">
                  <position x="70" y="18" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>out_s1</expression>
                </inVariable>
                <connector localId="123" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="124" formalParameter="out_s1" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="126">
                  <position x="70" y="19" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="125" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="126" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="120" executionOrderId="33" typeName="NET_VAR_STRING" instanceName="NET_VAR_STRING_1">
                  <position x="77" y="15" />
                  <inputVariables>
                    <variable formalParameter="IN">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="121" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="OUT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="123" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="125" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="ID">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="128" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="120" formalParameter="ID" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="127" executionOrderId="34">
                  <position x="90" y="17" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="128" />
                  </connectionPointIn>
                  <expression>id_s</expression>
                </outVariable>
                <inVariable localId="131">
                  <position x="16" y="25" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_x_re1</expression>
                </inVariable>
                <connector localId="130" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="131" formalParameter="in_x_re1" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="133">
                  <position x="16" y="26" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_x_re2</expression>
                </inVariable>
                <connector localId="132" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="133" formalParameter="in_x_re2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="135">
                  <position x="16" y="27" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_x_di1</expression>
                </inVariable>
                <connector localId="134" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="135" formalParameter="in_x_di1" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="137">
                  <position x="16" y="28" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_x_di2</expression>
                </inVariable>
                <connector localId="136" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="137" formalParameter="in_x_di2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="139">
                  <position x="16" y="29" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_x_ud1</expression>
                </inVariable>
                <connector localId="138" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="139" formalParameter="in_x_ud1" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="141">
                  <position x="16" y="30" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_x_ud2</expression>
                </inVariable>
                <connector localId="140" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="141" formalParameter="in_x_ud2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="143">
                  <position x="16" y="31" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_x_dw1</expression>
                </inVariable>
                <connector localId="142" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="143" formalParameter="in_x_dw1" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="145">
                  <position x="16" y="32" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>in_x_dw2</expression>
                </inVariable>
                <connector localId="144" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="145" formalParameter="in_x_dw2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="147">
                  <position x="16" y="33" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="146" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="147" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="129" executionOrderId="35" typeName="NET_VAR_X8" instanceName="NET_VAR_X8_1">
                  <position x="24" y="23" />
                  <inputVariables>
                    <variable formalParameter="IN_REAL1">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="130" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN_REAL2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="132" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN_DINT1">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="134" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN_DINT2">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="136" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN_UDINT1">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="138" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN_UDINT2">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="140" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN_DWORD1">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                        <connection refLocalId="142" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN_DWORD2">
                      <connectionPointIn>
                        <relPosition x="0" y="7" />
                        <connection refLocalId="144" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="8" />
                        <connection refLocalId="146" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="OUT_REAL1">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT_REAL2">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT_DINT1">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT_DINT2">
                      <connectionPointOut>
                        <relPosition x="0" y="3" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT_UDINT1">
                      <connectionPointOut>
                        <relPosition x="0" y="4" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT_UDINT2">
                      <connectionPointOut>
                        <relPosition x="0" y="5" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT_DWORD1">
                      <connectionPointOut>
                        <relPosition x="0" y="6" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="OUT_DWORD2">
                      <connectionPointOut>
                        <relPosition x="0" y="7" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ID">
                      <connectionPointOut>
                        <relPosition x="0" y="8" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="149" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="129" formalParameter="OUT_REAL1" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="148" executionOrderId="36">
                  <position x="44" y="25" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="149" />
                  </connectionPointIn>
                  <expression>out_x_re1</expression>
                </outVariable>
                <connector localId="151" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="129" formalParameter="OUT_REAL2" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="150" executionOrderId="37">
                  <position x="44" y="26" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="151" />
                  </connectionPointIn>
                  <expression>out_x_re2</expression>
                </outVariable>
                <connector localId="153" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="129" formalParameter="OUT_DINT1" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="152" executionOrderId="38">
                  <position x="44" y="27" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="153" />
                  </connectionPointIn>
                  <expression>out_x_di1</expression>
                </outVariable>
                <connector localId="155" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="129" formalParameter="OUT_DINT2" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="154" executionOrderId="39">
                  <position x="44" y="28" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="155" />
                  </connectionPointIn>
                  <expression>out_x_re2</expression>
                </outVariable>
                <connector localId="157" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="129" formalParameter="OUT_UDINT1" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="156" executionOrderId="40">
                  <position x="44" y="29" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="157" />
                  </connectionPointIn>
                  <expression>out_x_ud1</expression>
                </outVariable>
                <connector localId="159" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="129" formalParameter="OUT_UDINT2" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="158" executionOrderId="41">
                  <position x="44" y="30" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="159" />
                  </connectionPointIn>
                  <expression>out_x_ud2</expression>
                </outVariable>
                <connector localId="161" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="129" formalParameter="OUT_DWORD1" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="160" executionOrderId="42">
                  <position x="44" y="31" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="161" />
                  </connectionPointIn>
                  <expression>out_x_dw1</expression>
                </outVariable>
                <connector localId="163" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="129" formalParameter="OUT_DWORD2" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="162" executionOrderId="43">
                  <position x="44" y="32" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="163" />
                  </connectionPointIn>
                  <expression>out_x_dw2</expression>
                </outVariable>
                <connector localId="165" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="129" formalParameter="ID" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="164" executionOrderId="44">
                  <position x="44" y="33" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="165" />
                  </connectionPointIn>
                  <expression>id_x8</expression>
                </outVariable>
                <inVariable localId="168">
                  <position x="14" y="44" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>192</expression>
                </inVariable>
                <connector localId="167" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="168" formalParameter="192" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="170">
                  <position x="14" y="45" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>168</expression>
                </inVariable>
                <connector localId="169" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="170" formalParameter="168" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="172">
                  <position x="14" y="46" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>178</expression>
                </inVariable>
                <connector localId="171" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="172" formalParameter="178" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="174">
                  <position x="14" y="47" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>2</expression>
                </inVariable>
                <connector localId="173" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="174" formalParameter="2" />
                  </connectionPointIn>
                </connector>
                <block localId="166" executionOrderId="45" typeName="oscat_basic.DWORD_OF_BYTE">
                  <position x="20" y="42" />
                  <inputVariables>
                    <variable formalParameter="B3">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="167" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="169" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B1">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="171" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B0">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="173" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DWORD_OF_BYTE">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="177">
                  <position x="72" y="41" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>activate</expression>
                </inVariable>
                <connector localId="176" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="177" formalParameter="activate" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="179">
                  <position x="72" y="42" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>master</expression>
                </inVariable>
                <connector localId="178" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="179" formalParameter="master" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="181">
                  <position x="72" y="43" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>udp</expression>
                </inVariable>
                <connector localId="180" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="181" formalParameter="udp" />
                  </connectionPointIn>
                </connector>
                <connector localId="182" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="166" formalParameter="DWORD_OF_BYTE" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="184">
                  <position x="72" y="45" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>remote_port</expression>
                </inVariable>
                <connector localId="183" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="184" formalParameter="remote_port" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="186">
                  <position x="72" y="46" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>scan_time</expression>
                </inVariable>
                <connector localId="185" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="186" formalParameter="scan_time" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="188">
                  <position x="72" y="47" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>watchdog</expression>
                </inVariable>
                <connector localId="187" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="188" formalParameter="watchdog" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="190">
                  <position x="72" y="48" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>x</expression>
                </inVariable>
                <connector localId="189" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="190" formalParameter="x" />
                  </connectionPointIn>
                </connector>
                <block localId="175" executionOrderId="46" typeName="NET_VAR_CONTROL" instanceName="NET_VAR_CONTROL_1">
                  <position x="81" y="39" />
                  <inputVariables>
                    <variable formalParameter="ACTIVATE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="176" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="MASTER">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="178" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="UDP">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="180" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="REMOTE_IP4">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="182" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="REMOTE_PORT">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="183" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SCAN_TIME">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="185" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="WATCHDOG">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                        <connection refLocalId="187" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="7" />
                        <connection refLocalId="189" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="RUN">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="192" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="175" formalParameter="RUN" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="191" executionOrderId="47">
                  <position x="102" y="41" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="192" />
                  </connectionPointIn>
                  <expression>run</expression>
                </outVariable>
                <connector localId="194" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="175" formalParameter="ERROR" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="193" executionOrderId="48">
                  <position x="102" y="42" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="194" />
                  </connectionPointIn>
                  <expression>error</expression>
                </outVariable>
              </CFC>
            </data>
          </addData>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>78d1dffe-67ea-4431-bbf1-815a5dcaa282</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="RC4_CRYPT_DEMO" pouType="program">
        <interface>
          <localVars>
            <variable name="RC4_CRYPT_STREAM">
              <type>
                <derived name="RC4_CRYPT_STREAM" />
              </type>
            </variable>
            <variable name="buf">
              <type>
                <array>
                  <dimension lower="0" upper="63" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
              <initialValue>
                <arrayValue>
                  <value>
                    <simpleValue value="110" />
                  </value>
                  <value>
                    <simpleValue value="60" />
                  </value>
                  <value>
                    <simpleValue value="3" />
                  </value>
                  <value>
                    <simpleValue value="219" />
                  </value>
                </arrayValue>
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> crypt </xhtml>
              </documentation>
            </variable>
            <variable name="mode">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="key">
              <type>
                <string />
              </type>
              <initialValue>
                <simpleValue value="'1234'" />
              </initialValue>
            </variable>
            <variable name="size">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="4" />
              </initialValue>
            </variable>
            <variable name="pos">
              <type>
                <UDINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/cfc" handleUnknown="implementation">
              <CFC>
                <inVariable localId="2">
                  <position x="39" y="6" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>mode</expression>
                </inVariable>
                <connector localId="1" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="2" formalParameter="mode" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="4">
                  <position x="39" y="7" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>key</expression>
                </inVariable>
                <connector localId="3" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="4" formalParameter="key" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="6">
                  <position x="39" y="8" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>buf</expression>
                </inVariable>
                <connector localId="5" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="6" formalParameter="buf" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="8">
                  <position x="39" y="9" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>size</expression>
                </inVariable>
                <connector localId="7" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="8" formalParameter="size" />
                  </connectionPointIn>
                </connector>
                <block localId="0" executionOrderId="1" typeName="RC4_CRYPT_STREAM" instanceName="RC4_CRYPT_STREAM">
                  <position x="46" y="4" />
                  <inputVariables>
                    <variable formalParameter="MODE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="KEY">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="5" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SIZE">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="7" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="POS">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="10" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="POS" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="9" executionOrderId="2">
                  <position x="68" y="6" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="10" />
                  </connectionPointIn>
                  <expression>pos</expression>
                </outVariable>
              </CFC>
            </data>
          </addData>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>7fc4bae7-6cdc-44b0-9062-7561595ac832</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="SHA1_MD5_DEMO" pouType="program">
        <interface>
          <localVars>
            <variable name="text">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
              <initialValue>
                <simpleValue value="'&lt;4036.1076324381@guildenstern.zeitform.de&gt;'" />
              </initialValue>
            </variable>
            <variable name="MD5_STR">
              <type>
                <derived name="MD5_STR" />
              </type>
            </variable>
            <variable name="SHA1_STR">
              <type>
                <derived name="SHA1_STR" />
              </type>
            </variable>
            <variable name="md5_hash">
              <type>
                <array>
                  <dimension lower="0" upper="15" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="sha1_hash">
              <type>
                <array>
                  <dimension lower="0" upper="19" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="start1">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="start2">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="done1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="done2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="md5_strh">
              <type>
                <string length="32" />
              </type>
            </variable>
            <variable name="sha1_strh">
              <type>
                <string length="40" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/cfc" handleUnknown="implementation">
              <CFC>
                <inVariable localId="2">
                  <position x="62" y="7" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>start1</expression>
                </inVariable>
                <connector localId="1" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="2" formalParameter="start1" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="4">
                  <position x="62" y="8" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>text</expression>
                </inVariable>
                <connector localId="3" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="4" formalParameter="text" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="6">
                  <position x="62" y="9" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>md5_hash</expression>
                </inVariable>
                <connector localId="5" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="6" formalParameter="md5_hash" />
                  </connectionPointIn>
                </connector>
                <block localId="0" executionOrderId="1" typeName="MD5_STR" instanceName="MD5_STR">
                  <position x="62" y="5" />
                  <inputVariables>
                    <variable formalParameter="RUN">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="STR">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="MD5">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="5" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DONE">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="8" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="DONE" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="7" executionOrderId="2">
                  <position x="78" y="7" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="8" />
                  </connectionPointIn>
                  <expression>done1</expression>
                </outVariable>
                <inVariable localId="11">
                  <position x="62" y="13" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>md5_hash</expression>
                </inVariable>
                <connector localId="10" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="11" formalParameter="md5_hash" />
                  </connectionPointIn>
                </connector>
                <block localId="9" executionOrderId="3" typeName="MD5_TO_STRH">
                  <position x="62" y="11" />
                  <inputVariables>
                    <variable formalParameter="MD5">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="10" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="MD5_TO_STRH">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="13" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="9" formalParameter="MD5_TO_STRH" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="12" executionOrderId="4">
                  <position x="90" y="13" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="13" />
                  </connectionPointIn>
                  <expression>md5_strh</expression>
                </outVariable>
                <inVariable localId="16">
                  <position x="62" y="18" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>start2</expression>
                </inVariable>
                <connector localId="15" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="16" formalParameter="start2" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="18">
                  <position x="62" y="19" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>text</expression>
                </inVariable>
                <connector localId="17" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="18" formalParameter="text" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="20">
                  <position x="62" y="20" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>sha1_hash</expression>
                </inVariable>
                <connector localId="19" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="20" formalParameter="sha1_hash" />
                  </connectionPointIn>
                </connector>
                <block localId="14" executionOrderId="5" typeName="SHA1_STR" instanceName="SHA1_STR">
                  <position x="62" y="16" />
                  <inputVariables>
                    <variable formalParameter="RUN">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="15" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="STR">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="17" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SHA1">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="19" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DONE">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="22" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="14" formalParameter="DONE" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="21" executionOrderId="6">
                  <position x="80" y="18" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="22" />
                  </connectionPointIn>
                  <expression>done2</expression>
                </outVariable>
                <inVariable localId="25">
                  <position x="62" y="24" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>sha1_hash</expression>
                </inVariable>
                <connector localId="24" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="25" formalParameter="sha1_hash" />
                  </connectionPointIn>
                </connector>
                <block localId="23" executionOrderId="7" typeName="SHA1_TO_STRH">
                  <position x="62" y="22" />
                  <inputVariables>
                    <variable formalParameter="SHA1">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="24" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="SHA1_TO_STRH">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="27" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="23" formalParameter="SHA1_TO_STRH" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="26" executionOrderId="8">
                  <position x="92" y="24" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="27" />
                  </connectionPointIn>
                  <expression>sha1_strh</expression>
                </outVariable>
              </CFC>
            </data>
          </addData>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>7047a7da-3e30-47fb-9380-c5024290e627</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="SMTP_CLIENT_DEMO" pouType="program">
        <interface>
          <localVars>
            <variable name="SMTP_CLIENT">
              <type>
                <derived name="SMTP_CLIENT" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">
	smtp_server: STRING := 'oscat_test%freenet.de:oscat123456@mx.freenet.de';
	smtp_mailfrom: STRING := 'oscat_test@freenet.de';
</xhtml>
              </documentation>
            </variable>
            <variable name="smtp_activate">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="smtp_timeout">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#30s0ms" />
              </initialValue>
            </variable>
            <variable name="smtp_error_t">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="smtp_error_c">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="smtp_busy">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="smtp_done">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="smtp_dti">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="smtp_dti_offset">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="60" />
              </initialValue>
            </variable>
            <variable name="smtp_files">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
              <initialValue>
                <simpleValue value="''" />
              </initialValue>
            </variable>
            <variable name="smtp_server">
              <type>
                <string />
              </type>
              <initialValue>
                <simpleValue value="'110876022:oscat123456@mail.gmx.net'" />
              </initialValue>
            </variable>
            <variable name="smtp_mailfrom">
              <type>
                <string />
              </type>
              <initialValue>
                <simpleValue value="'oscat@gmx.net;Station_01'" />
              </initialValue>
            </variable>
            <variable name="smtp_mailto">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
              <initialValue>
                <simpleValue value="'oscat@gmx.net'" />
              </initialValue>
            </variable>
            <variable name="smtp_subject">
              <type>
                <string />
              </type>
              <initialValue>
                <simpleValue value="'Das ist der Betreff'" />
              </initialValue>
            </variable>
            <variable name="smtp_body">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
              <initialValue>
                <simpleValue value="'Das ist der Email-Text'" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/cfc" handleUnknown="implementation">
              <CFC>
                <inVariable localId="2">
                  <position x="14" y="14" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="1" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="2" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="4">
                  <position x="14" y="15" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="3" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="4" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="6">
                  <position x="14" y="16" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="5" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="6" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="8">
                  <position x="14" y="17" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="7" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="8" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <block localId="0" executionOrderId="1" typeName="oscat_basic.DWORD_OF_BYTE">
                  <position x="19" y="12" />
                  <inputVariables>
                    <variable formalParameter="B3">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B1">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="5" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B0">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="7" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DWORD_OF_BYTE">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="11">
                  <position x="74" y="10" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>smtp_activate</expression>
                </inVariable>
                <connector localId="10" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="11" formalParameter="smtp_activate" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="13">
                  <position x="74" y="11" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>smtp_timeout</expression>
                </inVariable>
                <connector localId="12" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="13" formalParameter="smtp_timeout" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="15">
                  <position x="74" y="12" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>smtp_dti</expression>
                </inVariable>
                <connector localId="14" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="15" formalParameter="smtp_dti" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="17">
                  <position x="74" y="13" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>smtp_dti_offset</expression>
                </inVariable>
                <connector localId="16" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="17" formalParameter="smtp_dti_offset" />
                  </connectionPointIn>
                </connector>
                <connector localId="18" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="DWORD_OF_BYTE" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="20">
                  <position x="74" y="15" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>smtp_server</expression>
                </inVariable>
                <connector localId="19" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="20" formalParameter="smtp_server" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="22">
                  <position x="74" y="16" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>smtp_mailfrom</expression>
                </inVariable>
                <connector localId="21" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="22" formalParameter="smtp_mailfrom" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="24">
                  <position x="74" y="17" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>smtp_mailto</expression>
                </inVariable>
                <connector localId="23" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="24" formalParameter="smtp_mailto" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="26">
                  <position x="74" y="18" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>smtp_subject</expression>
                </inVariable>
                <connector localId="25" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="26" formalParameter="smtp_subject" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="28">
                  <position x="74" y="19" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>smtp_body</expression>
                </inVariable>
                <connector localId="27" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="28" formalParameter="smtp_body" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="30">
                  <position x="74" y="20" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>smtp_files</expression>
                </inVariable>
                <connector localId="29" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="30" formalParameter="smtp_files" />
                  </connectionPointIn>
                </connector>
                <block localId="9" executionOrderId="2" typeName="SMTP_CLIENT" instanceName="SMTP_CLIENT">
                  <position x="85" y="8" />
                  <inputVariables>
                    <variable formalParameter="ACTIVATE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="10" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TIMEOUT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="12" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DTI">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="14" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DTI_OFFSET">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="16" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DNS_IP4">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="18" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SERVER">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="19" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="MAILFROM">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                        <connection refLocalId="21" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="MAILTO">
                      <connectionPointIn>
                        <relPosition x="0" y="7" />
                        <connection refLocalId="23" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SUBJECT">
                      <connectionPointIn>
                        <relPosition x="0" y="8" />
                        <connection refLocalId="25" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="BODY">
                      <connectionPointIn>
                        <relPosition x="0" y="9" />
                        <connection refLocalId="27" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="FILES">
                      <connectionPointIn>
                        <relPosition x="0" y="10" />
                        <connection refLocalId="29" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DONE">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="BUSY">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR_C">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR_T">
                      <connectionPointOut>
                        <relPosition x="0" y="3" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="32" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="9" formalParameter="DONE" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="31" executionOrderId="3">
                  <position x="100" y="10" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="32" />
                  </connectionPointIn>
                  <expression>smtp_done</expression>
                </outVariable>
                <connector localId="34" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="9" formalParameter="BUSY" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="33" executionOrderId="4">
                  <position x="100" y="11" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="34" />
                  </connectionPointIn>
                  <expression>smtp_busy</expression>
                </outVariable>
                <connector localId="36" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="9" formalParameter="ERROR_C" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="35" executionOrderId="5">
                  <position x="100" y="12" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="36" />
                  </connectionPointIn>
                  <expression>smtp_error_c</expression>
                </outVariable>
                <connector localId="38" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="9" formalParameter="ERROR_T" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="37" executionOrderId="6">
                  <position x="100" y="13" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="38" />
                  </connectionPointIn>
                  <expression>smtp_error_t</expression>
                </outVariable>
              </CFC>
            </data>
          </addData>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>df32fb37-dd50-43be-9941-19b435bdd186</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="SPIDER_DEMO" pouType="program">
        <interface>
          <localVars>
            <variable name="SPIDER_ACCESS">
              <type>
                <derived name="SPIDER_ACCESS" />
              </type>
            </variable>
            <variable name="IP_CONTROL">
              <type>
                <derived name="IP_CONTROL" />
              </type>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="MODE">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
            </variable>
            <variable name="VALUE">
              <type>
                <string />
              </type>
            </variable>
            <variable name="VAR_NAME">
              <type>
                <string length="40" />
              </type>
              <initialValue>
                <simpleValue value="'RTC_SECONDS'" />
              </initialValue>
            </variable>
            <variable name="ERROR">
              <type>
                <DWORD />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/cfc" handleUnknown="implementation">
              <CFC>
                <inVariable localId="2">
                  <position x="19" y="5" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>MODE</expression>
                </inVariable>
                <connector localId="1" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="2" formalParameter="MODE" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="4">
                  <position x="19" y="6" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IP_C</expression>
                </inVariable>
                <connector localId="3" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="4" formalParameter="IP_C" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="6">
                  <position x="19" y="7" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="5" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="6" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="8">
                  <position x="19" y="8" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_BUF</expression>
                </inVariable>
                <connector localId="7" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="8" formalParameter="R_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="10">
                  <position x="19" y="9" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>VALUE</expression>
                </inVariable>
                <connector localId="9" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="10" formalParameter="VALUE" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="12">
                  <position x="19" y="10" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>VAR_NAME</expression>
                </inVariable>
                <connector localId="11" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="12" formalParameter="VAR_NAME" />
                  </connectionPointIn>
                </connector>
                <block localId="0" executionOrderId="1" typeName="SPIDER_ACCESS" instanceName="SPIDER_ACCESS">
                  <position x="28" y="3" />
                  <inputVariables>
                    <variable formalParameter="MODE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="5" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="7" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="VALUE">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="9" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="VAR_NAME">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="11" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="ERROR">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="14" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="ERROR" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="13" executionOrderId="2">
                  <position x="54" y="5" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="14" />
                  </connectionPointIn>
                  <expression>ERROR</expression>
                </outVariable>
                <inVariable localId="17">
                  <position x="12" y="16" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>149</expression>
                </inVariable>
                <connector localId="16" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="17" formalParameter="149" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="19">
                  <position x="12" y="17" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>208</expression>
                </inVariable>
                <connector localId="18" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="19" formalParameter="208" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="21">
                  <position x="12" y="18" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>100</expression>
                </inVariable>
                <connector localId="20" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="21" formalParameter="100" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="23">
                  <position x="12" y="19" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>118</expression>
                </inVariable>
                <connector localId="22" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="23" formalParameter="118" />
                  </connectionPointIn>
                </connector>
                <block localId="15" executionOrderId="3" typeName="oscat_basic.DWORD_OF_BYTE">
                  <position x="18" y="14" />
                  <inputVariables>
                    <variable formalParameter="B3">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="16" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="18" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B1">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="20" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B0">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="22" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DWORD_OF_BYTE">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="25" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="15" formalParameter="DWORD_OF_BYTE" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="27">
                  <position x="56" y="17" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>80</expression>
                </inVariable>
                <connector localId="26" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="27" formalParameter="80" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="29">
                  <position x="56" y="18" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>T#5s</expression>
                </inVariable>
                <connector localId="28" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="29" formalParameter="T#5s" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="31">
                  <position x="56" y="19" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IP_C</expression>
                </inVariable>
                <connector localId="30" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="31" formalParameter="IP_C" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="33">
                  <position x="56" y="20" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="32" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="33" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="35">
                  <position x="56" y="21" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_BUF</expression>
                </inVariable>
                <connector localId="34" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="35" formalParameter="R_BUF" />
                  </connectionPointIn>
                </connector>
                <block localId="24" executionOrderId="4" typeName="IP_CONTROL" instanceName="IP_CONTROL">
                  <position x="63" y="14" />
                  <inputVariables>
                    <variable formalParameter="IP">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="25" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="PORT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="26" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TIME_OUT">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="28" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="30" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="32" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="34" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <comment localId="36" height="0" width="0">
                  <position x="22" y="13" />
                  <content>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">IP-Adresse der SPS</xhtml>
                  </content>
                </comment>
              </CFC>
            </data>
          </addData>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>9a04915f-bbe0-4729-985e-2cc89a74d19e</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TELNET_LOG_DEMO" pouType="program">
        <interface>
          <localVars>
            <variable name="TELNET_LOG">
              <type>
                <derived name="TELNET_LOG" />
              </type>
            </variable>
            <variable name="IPC">
              <type>
                <derived name="IP_C" />
              </type>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="READY">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="IP_CONTROL">
              <type>
                <derived name="IP_CONTROL" />
              </type>
            </variable>
            <variable name="TON_1">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="LOG_MSG">
              <type>
                <derived name="LOG_MSG" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/cfc" handleUnknown="implementation">
              <CFC>
                <inVariable localId="2">
                  <position x="24" y="5" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>TRUE</expression>
                </inVariable>
                <connector localId="1" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="2" formalParameter="TRUE" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="4">
                  <position x="24" y="8" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IPC</expression>
                </inVariable>
                <connector localId="3" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="4" formalParameter="IPC" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="6">
                  <position x="24" y="9" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="5" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="6" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="8">
                  <position x="24" y="10" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>LOG_CL</expression>
                </inVariable>
                <connector localId="7" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="8" formalParameter="LOG_CL" />
                  </connectionPointIn>
                </connector>
                <block localId="0" executionOrderId="1" typeName="TELNET_LOG" instanceName="TELNET_LOG">
                  <position x="24" y="3" />
                  <inputVariables>
                    <variable formalParameter="ENABLE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="OPTION">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="PORT">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="5" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="LOG_CL">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="7" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="READY">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="10" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="READY" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="9" executionOrderId="2">
                  <position x="44" y="5" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="10" />
                  </connectionPointIn>
                  <expression>READY</expression>
                </outVariable>
                <inVariable localId="13">
                  <position x="24" y="16" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>T#2s</expression>
                </inVariable>
                <connector localId="12" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="13" formalParameter="T#2s" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="15">
                  <position x="24" y="17" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IPC</expression>
                </inVariable>
                <connector localId="14" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="15" formalParameter="IPC" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="17">
                  <position x="24" y="18" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="16" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="17" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="19">
                  <position x="24" y="19" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_BUF</expression>
                </inVariable>
                <connector localId="18" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="19" formalParameter="R_BUF" />
                  </connectionPointIn>
                </connector>
                <block localId="11" executionOrderId="3" typeName="IP_CONTROL" instanceName="IP_CONTROL">
                  <position x="24" y="12" />
                  <inputVariables>
                    <variable formalParameter="IP">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="PORT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TIME_OUT">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="12" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="14" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="16" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="18" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="22">
                  <position x="60" y="17" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>TON_1.Q</expression>
                </inVariable>
                <connector localId="21" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="22" formalParameter="TON_1.Q" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="24">
                  <position x="60" y="18" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>T#500ms</expression>
                </inVariable>
                <connector localId="23" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="24" formalParameter="T#500ms" />
                  </connectionPointIn>
                </connector>
                <block localId="20" executionOrderId="4" typeName="TON" instanceName="TON_1">
                  <position x="60" y="15" />
                  <inputVariables>
                    <variable formalParameter="IN" negated="true">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="21" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="PT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="23" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="Q">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ET">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="27">
                  <position x="34" y="25" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>TON_1.Q</expression>
                </inVariable>
                <connector localId="26" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="27" formalParameter="TON_1.Q" />
                  </connectionPointIn>
                </connector>
                <block localId="25" executionOrderId="5" typeName="NOT">
                  <position x="34" y="23" />
                  <inputVariables>
                    <variable formalParameter="In1">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="26" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="Out1">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">operator</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="29" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="25" formalParameter="" />
                  </connectionPointIn>
                </connector>
                <return localId="28" executionOrderId="6">
                  <position x="42" y="25" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="29" />
                  </connectionPointIn>
                </return>
                <inVariable localId="32">
                  <position x="44" y="27" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'~1 OSCAT TELNET Debug Test'</expression>
                </inVariable>
                <connector localId="31" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="32" formalParameter="'~1 OSCAT TELNET Debug Test'" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="30" executionOrderId="7">
                  <position x="44" y="27" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="31" />
                  </connectionPointIn>
                  <expression>LOG_CL.NEW_MSG</expression>
                </outVariable>
                <inVariable localId="35">
                  <position x="32" y="30" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>LOG_CL.UPDATE_COUNT</expression>
                </inVariable>
                <connector localId="34" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="35" formalParameter="LOG_CL.UPDATE_COUNT" />
                  </connectionPointIn>
                </connector>
                <block localId="33" executionOrderId="8" typeName="UINT_TO_STRING">
                  <position x="32" y="28" />
                  <inputVariables>
                    <variable formalParameter="In1">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="34" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="Out1">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">operator</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="37" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="33" formalParameter="" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="36" executionOrderId="9">
                  <position x="50" y="30" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="37" />
                  </connectionPointIn>
                  <expression>LOG_CL.PRINTF[1]</expression>
                </outVariable>
                <block localId="38" executionOrderId="10" typeName="LOG_MSG" instanceName="LOG_MSG">
                  <position x="32" y="32" />
                  <inputVariables />
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <comment localId="39" height="0" width="0">
                  <position x="26" y="22" />
                  <content>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">Eintrag im LOG-Buffer erzeugen</xhtml>
                  </content>
                </comment>
                <comment localId="40" height="0" width="0">
                  <position x="12" y="1" />
                  <content>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">TELNET_LOG Demonstration: Zyklisches Erzeugen von LOG Meldungen</xhtml>
                  </content>
                </comment>
              </CFC>
            </data>
          </addData>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>6635dc5d-93ae-4f76-81b5-cba3bedc3965</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TELNET_PRINT_DEMO" pouType="program">
        <interface>
          <localVars>
            <variable name="COUNT_BR_1">
              <type>
                <derived name="OSCAT_BASIC.COUNT_BR" />
              </type>
            </variable>
            <variable name="READY">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="TON_1">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="TEXT">
              <type>
                <string />
              </type>
            </variable>
            <variable name="TEXT_ATTRIBUTE">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="GEN_SIN_1">
              <type>
                <derived name="oscat_basic.GEN_SIN" />
              </type>
            </variable>
            <variable name="X_POS">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="Y_POS">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="GEN_SIN_2">
              <type>
                <derived name="oscat_basic.GEN_SIN" />
              </type>
            </variable>
            <variable name="TELNET_PRINT">
              <type>
                <derived name="TELNET_PRINT" />
              </type>
            </variable>
            <variable name="DONE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="IP_CONTROL">
              <type>
                <derived name="IP_CONTROL" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/cfc" handleUnknown="implementation">
              <CFC>
                <inVariable localId="2">
                  <position x="16" y="5" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>TON_1.Q</expression>
                </inVariable>
                <connector localId="1" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="2" formalParameter="TON_1.Q" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="4">
                  <position x="6" y="6" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>T#100ms</expression>
                </inVariable>
                <connector localId="3" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="4" formalParameter="T#100ms" />
                  </connectionPointIn>
                </connector>
                <block localId="0" executionOrderId="1" typeName="TON" instanceName="TON_1">
                  <position x="16" y="3" />
                  <inputVariables>
                    <variable formalParameter="IN" negated="true">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="PT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="3" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="Q">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ET">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="6" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="Q" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="8">
                  <position x="34" y="6" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>READY</expression>
                </inVariable>
                <connector localId="7" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="8" formalParameter="READY" />
                  </connectionPointIn>
                </connector>
                <block localId="5" executionOrderId="2" typeName="AND">
                  <position x="40" y="3" />
                  <inputVariables>
                    <variable formalParameter="In1">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="6" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="In2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="7" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="Out1">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">operator</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="11">
                  <position x="52" y="4" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>BYTE#1</expression>
                </inVariable>
                <connector localId="10" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="11" formalParameter="BYTE#1" />
                  </connectionPointIn>
                </connector>
                <connector localId="12" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="5" formalParameter="" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="14">
                  <position x="51" y="8" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>BYTE#31</expression>
                </inVariable>
                <connector localId="13" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="14" formalParameter="BYTE#31" />
                  </connectionPointIn>
                </connector>
                <block localId="9" executionOrderId="3" typeName="oscat_basic.COUNT_BR" instanceName="COUNT_BR_1">
                  <position x="59" y="1" />
                  <inputVariables>
                    <variable formalParameter="SET">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IN">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="10" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="UP">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="12" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DN">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="STEP">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="MX">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="13" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="RST">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="CNT">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="16" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="9" formalParameter="CNT" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="15" executionOrderId="4">
                  <position x="75" y="3" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="16" />
                  </connectionPointIn>
                  <expression>TEXT_ATTRIBUTE</expression>
                </outVariable>
                <inVariable localId="19">
                  <position x="13" y="12" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>T#5s</expression>
                </inVariable>
                <connector localId="18" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="19" formalParameter="T#5s" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="21">
                  <position x="13" y="13" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>43.0</expression>
                </inVariable>
                <connector localId="20" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="21" formalParameter="43.0" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="23">
                  <position x="13" y="14" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>22.0</expression>
                </inVariable>
                <connector localId="22" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="23" formalParameter="22.0" />
                  </connectionPointIn>
                </connector>
                <block localId="17" executionOrderId="5" typeName="oscat_basic.GEN_SIN" instanceName="GEN_SIN_1">
                  <position x="20" y="10" />
                  <inputVariables>
                    <variable formalParameter="PT">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="18" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="AM">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="20" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="OS">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="22" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DL">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="Q">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="Out">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="25" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="17" formalParameter="Out" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="27">
                  <position x="34" y="14" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>0.0</expression>
                </inVariable>
                <connector localId="26" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="27" formalParameter="0.0" />
                  </connectionPointIn>
                </connector>
                <block localId="24" executionOrderId="6" typeName="oscat_basic.STAIR">
                  <position x="40" y="11" />
                  <inputVariables>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="25" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="D">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="26" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="STAIR">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="29" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="24" formalParameter="STAIR" />
                  </connectionPointIn>
                </connector>
                <block localId="28" executionOrderId="7" typeName="REAL_TO_BYTE">
                  <position x="54" y="11" />
                  <inputVariables>
                    <variable formalParameter="In1">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="29" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="Out1">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">operator</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="31" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="28" formalParameter="" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="30" executionOrderId="8">
                  <position x="72" y="13" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="31" />
                  </connectionPointIn>
                  <expression>X_POS</expression>
                </outVariable>
                <inVariable localId="34">
                  <position x="13" y="19" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>T#7s</expression>
                </inVariable>
                <connector localId="33" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="34" formalParameter="T#7s" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="36">
                  <position x="13" y="20" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>24.0</expression>
                </inVariable>
                <connector localId="35" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="36" formalParameter="24.0" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="38">
                  <position x="13" y="21" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>13.0</expression>
                </inVariable>
                <connector localId="37" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="38" formalParameter="13.0" />
                  </connectionPointIn>
                </connector>
                <block localId="32" executionOrderId="9" typeName="oscat_basic.GEN_SIN" instanceName="GEN_SIN_2">
                  <position x="20" y="17" />
                  <inputVariables>
                    <variable formalParameter="PT">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="33" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="AM">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="35" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="OS">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="37" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="DL">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="Q">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="Out">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="40" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="32" formalParameter="Out" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="42">
                  <position x="34" y="21" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>0.0</expression>
                </inVariable>
                <connector localId="41" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="42" formalParameter="0.0" />
                  </connectionPointIn>
                </connector>
                <block localId="39" executionOrderId="10" typeName="oscat_basic.STAIR">
                  <position x="40" y="18" />
                  <inputVariables>
                    <variable formalParameter="X">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="40" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="D">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="41" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="STAIR">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="44" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="39" formalParameter="STAIR" />
                  </connectionPointIn>
                </connector>
                <block localId="43" executionOrderId="11" typeName="REAL_TO_BYTE">
                  <position x="54" y="18" />
                  <inputVariables>
                    <variable formalParameter="In1">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="44" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="Out1">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">operator</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="46" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="43" formalParameter="" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="45" executionOrderId="12">
                  <position x="72" y="20" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="46" />
                  </connectionPointIn>
                  <expression>Y_POS</expression>
                </outVariable>
                <inVariable localId="49">
                  <position x="32" y="28" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>TEXT_ATTRIBUTE</expression>
                </inVariable>
                <connector localId="48" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="49" formalParameter="TEXT_ATTRIBUTE" />
                  </connectionPointIn>
                </connector>
                <block localId="47" executionOrderId="13" typeName="BYTE_TO_STRING">
                  <position x="32" y="26" />
                  <inputVariables>
                    <variable formalParameter="In1">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="48" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="Out1">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">operator</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="52">
                  <position x="38" y="25" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>' OSCAT TELNET_Print - Test: Color: '</expression>
                </inVariable>
                <connector localId="51" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="52" formalParameter="' OSCAT TELNET_Print - Test: Color: '" />
                  </connectionPointIn>
                </connector>
                <connector localId="53" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="47" formalParameter="" />
                  </connectionPointIn>
                </connector>
                <block localId="50" executionOrderId="14" typeName="CONCAT">
                  <position x="54" y="25" />
                  <inputVariables>
                    <variable formalParameter="STR1">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="51" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="STR2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="53" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="CONCAT">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="55" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="50" formalParameter="CONCAT" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="54" executionOrderId="15">
                  <position x="72" y="27" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="55" />
                  </connectionPointIn>
                  <expression>TEXT</expression>
                </outVariable>
                <inVariable localId="58">
                  <position x="31" y="33" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>TEXT</expression>
                </inVariable>
                <connector localId="57" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="58" formalParameter="TEXT" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="60">
                  <position x="31" y="34" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>TRUE</expression>
                </inVariable>
                <connector localId="59" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="60" formalParameter="TRUE" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="62">
                  <position x="31" y="35" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>TON_1.Q</expression>
                </inVariable>
                <connector localId="61" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="62" formalParameter="TON_1.Q" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="64">
                  <position x="31" y="36" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>BYTE#2#0000_0101</expression>
                </inVariable>
                <connector localId="63" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="64" formalParameter="BYTE#2#0000_0101" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="66">
                  <position x="31" y="37" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>BYTE#00</expression>
                </inVariable>
                <connector localId="65" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="66" formalParameter="BYTE#00" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="68">
                  <position x="31" y="38" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>TEXT_ATTRIBUTE</expression>
                </inVariable>
                <connector localId="67" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="68" formalParameter="TEXT_ATTRIBUTE" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="70">
                  <position x="31" y="39" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>X_POS</expression>
                </inVariable>
                <connector localId="69" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="70" formalParameter="X_POS" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="72">
                  <position x="31" y="40" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>Y_POS</expression>
                </inVariable>
                <connector localId="71" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="72" formalParameter="Y_POS" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="74">
                  <position x="31" y="42" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IP_C</expression>
                </inVariable>
                <connector localId="73" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="74" formalParameter="IP_C" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="76">
                  <position x="31" y="43" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="75" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="76" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <block localId="56" executionOrderId="16" typeName="TELNET_PRINT" instanceName="TELNET_PRINT">
                  <position x="42" y="31" />
                  <inputVariables>
                    <variable formalParameter="TEXT">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="57" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="ENABLE">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="59" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="SEND">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="61" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="OPTION">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="63" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="BACK_COLOR">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="65" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="FRONT_COLOR">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="67" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="X_POS">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                        <connection refLocalId="69" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="Y_POS">
                      <connectionPointIn>
                        <relPosition x="0" y="7" />
                        <connection refLocalId="71" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="PORT">
                      <connectionPointIn>
                        <relPosition x="0" y="8" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="9" />
                        <connection refLocalId="73" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="10" />
                        <connection refLocalId="75" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="READY">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="DONE">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="78" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="56" formalParameter="READY" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="77" executionOrderId="17">
                  <position x="70" y="33" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="78" />
                  </connectionPointIn>
                  <expression>READY</expression>
                </outVariable>
                <connector localId="80" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="56" formalParameter="DONE" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="79" executionOrderId="18">
                  <position x="70" y="34" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="80" />
                  </connectionPointIn>
                  <expression>DONE</expression>
                </outVariable>
                <inVariable localId="83">
                  <position x="40" y="50" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>T#2s</expression>
                </inVariable>
                <connector localId="82" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="83" formalParameter="T#2s" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="85">
                  <position x="40" y="51" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IP_C</expression>
                </inVariable>
                <connector localId="84" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="85" formalParameter="IP_C" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="87">
                  <position x="40" y="52" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="86" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="87" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="89">
                  <position x="40" y="53" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_BUF</expression>
                </inVariable>
                <connector localId="88" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="89" formalParameter="R_BUF" />
                  </connectionPointIn>
                </connector>
                <block localId="81" executionOrderId="19" typeName="IP_CONTROL" instanceName="IP_CONTROL">
                  <position x="48" y="46" />
                  <inputVariables>
                    <variable formalParameter="IP">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="PORT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TIME_OUT">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="82" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="84" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="86" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="88" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
              </CFC>
            </data>
          </addData>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b8969f7a-0017-4427-ab69-f163b5968279</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TN_VISION_DEMO_1" pouType="program">
        <interface>
          <localVars>
            <variable name="FB_TN_FRAMEWORK">
              <type>
                <derived name="TN_FRAMEWORK" />
              </type>
            </variable>
            <variable name="FB_LOG_MESSAGE">
              <type>
                <derived name="LOG_MSG" />
              </type>
            </variable>
            <variable name="FB_LOG_VIEWPORT">
              <type>
                <derived name="LOG_VIEWPORT" />
              </type>
            </variable>
            <variable name="FB_TN_SC_LINE">
              <type>
                <derived name="TN_SC_LINE" />
              </type>
            </variable>
            <variable name="FB_TN_SC_FILL">
              <type>
                <derived name="TN_SC_FILL" />
              </type>
            </variable>
            <variable name="FB_TN_SC_WRITE_C">
              <type>
                <derived name="TN_SC_WRITE_C" />
              </type>
            </variable>
            <variable name="FB_TN_SC_BOX">
              <type>
                <derived name="TN_SC_BOX" />
              </type>
            </variable>
            <variable name="FB_TN_SC_ADD_SHADOW">
              <type>
                <derived name="TN_SC_ADD_SHADOW" />
              </type>
            </variable>
            <variable name="FB_TN_SC_WRITE">
              <type>
                <derived name="TN_SC_WRITE" />
              </type>
            </variable>
            <variable name="FB_TN_SC_VIEWPORT">
              <type>
                <derived name="TN_SC_VIEWPORT" />
              </type>
            </variable>
            <variable name="Xus_TN_MENU">
              <type>
                <derived name="us_TN_MENU" />
              </type>
            </variable>
            <variable name="Xus_TN_INPUT_CONTROL">
              <type>
                <derived name="us_TN_INPUT_CONTROL" />
              </type>
            </variable>
            <variable name="Xus_TN_SCREEN">
              <type>
                <derived name="us_TN_SCREEN" />
              </type>
            </variable>
            <variable name="us_LOG_VIEWPORT">
              <type>
                <derived name="us_LOG_VIEWPORT" />
              </type>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
            </variable>
            <variable name="Gst_SysLog_Command">
              <type>
                <string />
              </type>
            </variable>
            <variable name="in_index">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">FB_TN_FRAMEWORK(
					us_TN_INPUT_CONTROL := Xus_TN_INPUT_CONTROL ,
					us_TN_SCREEN := Xus_TN_SCREEN ,
					us_TN_MENU := Xus_TN_MENU ,
					S_BUF := S_BUF ,
					R_BUF:= R_BUF ,
					IP_C:= IP_C ,
					PORT := WORD#0
					 );

(* Modaler Dialog aktiv ? *)
IF (Xus_TN_SCREEN.bo_Modal_Dialog = TRUE) THEN RETURN; END_IF;

IF Xus_TN_MENU.in_Menu_Selected &gt; 0 THEN

	CASE Xus_TN_MENU.in_Menu_Selected OF

	41: (* Seite LOGIN aufrufen *)
		Xus_TN_SCREEN.in_Page_Number := INT#00;
		(* Gedächtnis löschen *)
		Xus_TN_MENU.bo_Destroy := TRUE;

	END_CASE;

	(* Echo Menu-Auswahl *)
	Gst_SysLog_Command := CONCAT('MENU_SELECT: ',INT_TO_STRING(Xus_TN_MENU.in_Menu_Selected));

	(* Menu-Auswahl löschen *)
	Xus_TN_MENU.in_Menu_Selected := 0;

END_IF;

(* Initialisierung der Daten und Strukturen *)
IF (Xus_TN_SCREEN.in_Page_Number = INT#00 ) THEN
	Xus_TN_SCREEN.in_Page_Number := INT#01;

	(* Clear-Screen (Farbe setzen + Display löschen) *)
	Xus_TN_SCREEN.by_Clear_Screen_Attr := BYTE#16#00;
	Xus_TN_SCREEN.bo_Clear_Screen := TRUE;

	(* Screen initialisieren (mit Leerzeichen füllen) *)
	FB_TN_SC_FILL(	Iin_X1 := INT#00,
					Iin_Y1 := INT#00,
					Iin_X2 := INT#79,
					Iin_Y2 := INT#23,
					Iby_CHAR := BYTE#179,
					Iby_Attr := BYTE#16#76,
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Titlezeile zeichnen *)
	FB_TN_SC_FILL(	Iin_X1 := INT#00,
					Iin_Y1 := INT#00,
					Iin_X2 := INT#79,
					Iin_Y2 := INT#00,
					Iby_CHAR := BYTE#32,
					Iby_Attr := BYTE#16#07,
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Title zeichnen *)
	FB_TN_SC_WRITE(	Iin_X := INT#00,
					Iin_Y := INT#00,
					Iby_ATTR := BYTE#16#77,
					Ist_STRING := ' TELNET-VISION BIOS v1.0',
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Fusszeile zeichnen *)
	FB_TN_SC_FILL(	Iin_X1 := INT#00,
					Iin_Y1 := INT#23,
					Iin_X2 := INT#79,
					Iin_Y2 := INT#23,
					Iby_CHAR := BYTE#32,
					Iby_Attr := BYTE#16#37,
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Rahmen für Viewport zeichnen *)
	FB_TN_SC_BOX(	Iin_X1 := INT#03,
					Iin_Y1 := INT#03,
					Iin_X2 := INT#75,
					Iin_Y2 := INT#19,
					Iby_FILL := BYTE#16#20, (* Füllung *)
					Iin_BORDER := INT#02, (* Double-Line Border *)
					Iby_ATTR := BYTE#16#74, (* Weiss , Blau *)
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Shadow für Rahmen von Viewport zeichnen *)
	FB_TN_SC_ADD_SHADOW(	Iin_X1 := INT#04,
							Iin_Y1 := INT#04,
							Iin_X2 := INT#76,
							Iin_Y2 := INT#20,
							Iin_OPTION := INT#00,
							Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Title Viewport zeichnen *)
	FB_TN_SC_WRITE(	Iin_X := INT#31,
					Iin_Y := INT#03,
					Iby_ATTR := BYTE#16#74,
					Ist_STRING := '[ LOGIN-DIALOG ]',
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* LOGO Zeilen zeichnen *)
	FOR in_index := 5 TO 16 DO

		CASE in_index OF

		05: FB_TN_SC_WRITE.Ist_STRING := 'ÛÛÛÛÛÛÛÛ» ÛÛÛÛÛÛÛ» ÛÛ»      ÛÛÛ»   ÛÛ» ÛÛÛÛÛÛÛ» ÛÛÛÛÛÛÛÛ»';
		06: FB_TN_SC_WRITE.Ist_STRING := 'ÈÍÍÛÛÉÍÍ¼ ÛÛÉÍÍÍÍ¼ ÛÛº      ÛÛÛÛ»  ÛÛº ÛÛÉÍÍÍÍ¼ ÈÍÍÛÛÉÍÍ¼';
		07: FB_TN_SC_WRITE.Ist_STRING := '   ÛÛº    ÛÛÛÛÛ»   ÛÛº      ÛÛÉÛÛ» ÛÛº ÛÛÛÛÛ»      ÛÛº';
		08: FB_TN_SC_WRITE.Ist_STRING := '   ÛÛº    ÛÛÉÍÍ¼   ÛÛº      ÛÛºÈÛÛ»ÛÛº ÛÛÉÍÍ¼      ÛÛº';
		09: FB_TN_SC_WRITE.Ist_STRING := '   ÛÛº    ÛÛÛÛÛÛÛ» ÛÛÛÛÛÛÛ» ÛÛº ÈÛÛÛÛº ÛÛÛÛÛÛÛ»    ÛÛº';
		10: FB_TN_SC_WRITE.Ist_STRING := '   ÈÍ¼    ÈÍÍÍÍÍÍ¼ ÈÍÍÍÍÍÍ¼ ÈÍ¼  ÈÍÍÍ¼ ÈÍÍÍÍÍÍ¼    ÈÍ¼';
		11: FB_TN_SC_WRITE.Ist_STRING := '     ÛÛ»   ÛÛ» ÛÛ» ÛÛÛÛÛÛÛ» ÛÛ»  ÛÛÛÛÛÛ»  ÛÛÛ»   ÛÛ»';
		12: FB_TN_SC_WRITE.Ist_STRING := '     ÛÛº   ÛÛº ÛÛº ÛÛÉÍÍÍÍ¼ ÛÛº ÛÛÉÍÍÍÛÛ» ÛÛÛÛ»  ÛÛº';
		13: FB_TN_SC_WRITE.Ist_STRING := '     ÛÛº   ÛÛº ÛÛº ÛÛÛÛÛÛÛ» ÛÛº ÛÛº   ÛÛº ÛÛÉÛÛ» ÛÛº';
		14: FB_TN_SC_WRITE.Ist_STRING := '     ÈÛÛ» ÛÛÉ¼ ÛÛº ÈÍÍÍÍÛÛº ÛÛº ÛÛº   ÛÛº ÛÛºÈÛÛ»ÛÛº';
		15: FB_TN_SC_WRITE.Ist_STRING := '      ÈÛÛÛÛÉ¼  ÛÛº ÛÛÛÛÛÛÛº ÛÛº ÈÛÛÛÛÛÛÉ¼ ÛÛº ÈÛÛÛÛº';
		16: FB_TN_SC_WRITE.Ist_STRING := '       ÈÍÍÍ¼   ÈÍ¼ ÈÍÍÍÍÍÍ¼ ÈÍ¼  ÈÍÍÍÍÍ¼  ÈÍ¼  ÈÍÍÍ¼';

		END_CASE;

		FB_TN_SC_WRITE(	Iin_Y := in_index,
						Iin_X := INT#11,
						Iby_ATTR := BYTE#16#34,
						Xus_TN_SCREEN := Xus_TN_SCREEN);
	END_FOR;

	(* Trennlinie zeichnen *)
	FB_TN_SC_LINE(	Iin_X1 := INT#03,
					Iin_Y1 := INT#17,
					Iin_X2 := INT#75,
					Iin_Y2 := INT#17,
					Iby_ATTR := BYTE#16#74,
					Iby_BORDER := BYTE#02,
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Alle Input-Controls initialisieren *)

	Xus_TN_INPUT_CONTROL.bo_Enable := FALSE;

	(* Initialisierung der Eingabe-Zeile *)
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].in_Type := INT#01;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].in_Y := INT#18;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].in_X := INT#49;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].by_Attr_mF := BYTE#16#17;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].by_Attr_oF := BYTE#16#47;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].in_Cursor_Pos := INT#0;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].bo_Input_Only_Num := FALSE;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].bo_Input_Hidden := TRUE;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].st_Input_Mask := '                ';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].st_Input_Data := Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].st_Input_Mask;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].st_Input_ToolTip := ' enter password | press enter to login     |';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].in_Input_Option := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].in_Title_Y_Offset := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].in_Title_X_Offset := -12;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].by_Title_Attr := BYTE#16#34;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].st_Title_String := 'password:  [                ]';

	(* Initialisierung Selection Text *)
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].in_Type := INT#03;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].in_Y := INT#18;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].in_X := INT#18;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].by_Attr_mF := BYTE#16#17;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].by_Attr_oF := BYTE#16#47;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].st_Input_ToolTip := ' select user       | press enter to select |';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].in_Input_Option := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].in_Title_Y_Offset := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].in_Title_X_Offset := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].by_Title_Attr := BYTE#16#34;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].st_Title_String := ' user ';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].st_Input_Mask := '           ';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].st_Input_Data := 'admin#guest#maintenance';

	(* Control-Tool-Tip *)
	Xus_TN_INPUT_CONTROL.in_ToolTip_Y := INT#23;
	Xus_TN_INPUT_CONTROL.in_ToolTip_X := INT#00;
	Xus_TN_INPUT_CONTROL.by_ToolTip_Attr := BYTE#16#37;
	Xus_TN_INPUT_CONTROL.in_ToolTip_Size := INT#80;

	(* Control-Verwaltung initialisieren *)
	Xus_TN_INPUT_CONTROL.in_Count := INT#02;
	Xus_TN_INPUT_CONTROL.bo_Enable := TRUE;
	Xus_TN_INPUT_CONTROL.bo_Reset_Fokus := TRUE;

END_IF;

IF (Xus_TN_SCREEN.in_Page_Number = INT#01) THEN
	(* eingegebenen String übernehmen *)
	IF Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].bo_Input_Entered = TRUE THEN

		Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].bo_Input_Entered := FALSE;
		Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].st_Input_String :=
			OSCAT_BASIC.LOWERCASE(str:=Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].st_Input_String);

		IF Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].st_Input_String = 'oscat' THEN
			Xus_TN_SCREEN.in_Page_Number := INT#10;

			Gst_SysLog_Command := CONCAT('LOGON: USER-',Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].st_Input_String);

		ELSE
			FB_TN_SC_WRITE_C(	Iin_X := Xus_TN_INPUT_CONTROL.in_ToolTip_X,
								Iin_Y := Xus_TN_INPUT_CONTROL.in_ToolTip_Y,
								Iby_ATTR := BYTE#16#F1,
								Iin_OPTION := INT#02, (* Center-String *)
								Iin_LENGTH := Xus_TN_INPUT_CONTROL.in_ToolTip_Size,
								Ist_STRING := 'Password Failed   ',
								Xus_TN_SCREEN := Xus_TN_SCREEN);

			Gst_SysLog_Command := CONCAT('LOGON: ',FB_TN_SC_WRITE_C.Ist_STRING);

		END_IF;
	END_IF;
END_IF;

(* Initialisierung der Daten und Strukturen *)
IF (Xus_TN_SCREEN.in_Page_Number = INT#10 ) THEN
	Xus_TN_SCREEN.in_Page_Number := INT#11;

	(* Clear-Screen (Farbe setzen + Display löschen) *)
	Xus_TN_SCREEN.by_Clear_Screen_Attr := BYTE#16#00;
	Xus_TN_SCREEN.bo_Clear_Screen := TRUE;

	(* Screen initialisieren (mit Leerzeichen füllen) *)
	FB_TN_SC_FILL(	Iin_X1 := INT#00,
					Iin_Y1 := INT#00,
					Iin_X2 := INT#79,
					Iin_Y2 := INT#23,
					Iby_CHAR := BYTE#179,
					Iby_Attr := BYTE#16#76,
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Titlezeile zeichnen *)
	FB_TN_SC_FILL(	Iin_X1 := INT#00,
					Iin_Y1 := INT#00,
					Iin_X2 := INT#79,
					Iin_Y2 := INT#00,
					Iby_CHAR := BYTE#32,
					Iby_Attr := BYTE#16#07,
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Fusszeile zeichnen *)
	FB_TN_SC_FILL(	Iin_X1 := INT#00,
					Iin_Y1 := INT#23,
					Iin_X2 := INT#79,
					Iin_Y2 := INT#23,
					Iby_CHAR := BYTE#32,
					Iby_Attr := BYTE#16#37,
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Rahmen für Viewport zeichnen *)
	FB_TN_SC_BOX(	Iin_X1 := INT#00,
					Iin_Y1 := INT#01,
					Iin_X2 := INT#77,
					Iin_Y2 := INT#17,
					Iby_FILL := BYTE#16#00, (* keine Füllung *)
					Iin_BORDER := INT#02, (* Double-Line Border *)
					Iby_ATTR := BYTE#16#74, (* Weiss , Blau *)
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Shadow für Rahmen von Viewport zeichnen *)
	FB_TN_SC_ADD_SHADOW(Iin_X1 := INT#01,
						Iin_Y1 := INT#02,
						Iin_X2 := INT#78,
						Iin_Y2 := INT#18,
						Iin_OPTION := INT#00,
						Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Trennlinie Viewport_Data und Commandline zeichnen *)
	FB_TN_SC_LINE(	Iin_X1 := INT#00,
					Iin_Y1 := INT#15,
					Iin_X2 := INT#77,
					Iin_Y2 := INT#15,
					Iby_ATTR := BYTE#16#74,
					Iby_BORDER := BYTE#02,
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Title Viewport zeichnen *)
	FB_TN_SC_WRITE(	Iin_X := INT#29,
					Iin_Y := INT#01,
					Iby_ATTR := BYTE#16#74,
					Ist_STRING := '[ SYSTEM-CONSOLE ]',
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Rahmen für Parameter-Feld zeichnen *)
	FB_TN_SC_BOX(	Iin_X1 := INT#02,
					Iin_Y1 := INT#19,
					Iin_X2 := INT#74,
					Iin_Y2 := INT#21,
					Iby_FILL := BYTE#16#20,
					Iin_BORDER := INT#01, (* Double-Line Border *)
					Iby_ATTR := BYTE#16#74, (* Weiss , Blau *)
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Shadow für Rahmen von Parameter-Feld zeichnen *)
	FB_TN_SC_ADD_SHADOW(Iin_X1 := INT#03,
						Iin_Y1 := INT#20,
						Iin_X2 := INT#75,
						Iin_Y2 := INT#22,
						Iin_OPTION := INT#00,
						Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Alle Input-Controls initialisieren *)

	Xus_TN_INPUT_CONTROL.bo_Enable := FALSE;

	(* Initialisierung der Eingabe-Zeile *)
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].in_Type := INT#01;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].in_Y := INT#16;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].in_X := INT#09;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].by_Attr_mF := BYTE#16#72; (* Weiss, Grün *)
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].by_Attr_oF := BYTE#16#74; (* Weiss, Blau *)
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].in_Cursor_Pos := INT#0;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].bo_Input_Only_Num := FALSE;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].bo_Input_Hidden := FALSE;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].st_Input_Mask := '                                                                    ';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].st_Input_Data := Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].st_Input_Mask;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].st_Input_ToolTip := 'Eingabezeile aktiv       | SCROLL F1/F2/F3/F4 |';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].in_Input_Option := INT#02;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].in_Title_Y_Offset := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].in_Title_X_Offset := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].by_Title_Attr := BYTE#16#34;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].st_Title_String := 'Befehl: ';

	(* Initialisierung Selection Text *)
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].in_Type := INT#03;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].in_Y := INT#20;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].in_X := INT#18;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].by_Attr_mF := BYTE#16#17;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].by_Attr_oF := BYTE#16#47;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].st_Input_ToolTip := ' aktuellen LOG-Level aendern     | press enter to select |';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].in_Input_Option := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].in_Title_Y_Offset := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].in_Title_X_Offset := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].by_Title_Attr := BYTE#16#34;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].st_Title_String := ' LOG-Level ';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].st_Input_Mask := '  ';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].st_Input_Data := '01#02#03#04#05#06#07#08#09#10#11#12#13#14#15';

	(* Initialisierung Selection Text *)
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[3].in_Type := INT#02;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[3].in_Y := INT#20;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[3].in_X := INT#37;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[3].by_Attr_mF := BYTE#16#17;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[3].by_Attr_oF := BYTE#16#47;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[3].st_Input_ToolTip := ' Optionline aktiv      | press space to select |';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[3].in_Input_Option := INT#02;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[3].in_Title_Y_Offset := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[3].in_Title_X_Offset := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[3].by_Title_Attr := BYTE#16#34;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[3].st_Title_String := '  Selektion  ';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[3].st_Input_Mask := '     ';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[3].st_Input_Data := '[ ]#[x]';

	(* Initialisierung Selection Text *)
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[4].in_Type := INT#02;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[4].in_Y := INT#20;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[4].in_X := INT#58;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[4].by_Attr_mF := BYTE#16#17;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[4].by_Attr_oF := BYTE#16#47;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[4].st_Input_ToolTip := ' Selektion-Text aktiv      | press space to select |';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[4].in_Input_Option := INT#02;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[4].in_Title_Y_Offset := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[4].in_Title_X_Offset := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[4].by_Title_Attr := BYTE#16#34;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[4].st_Title_String := ' Betriebsart ';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[4].st_Input_Mask := '               ';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[4].st_Input_Data := '&lt;Auto&gt;#&lt;Hand&gt;#&lt;Einzelschritt&gt;#&lt;Stop&gt;#&lt;Restart&gt;';

	(* Control-Tool-Tip *)
	Xus_TN_INPUT_CONTROL.in_ToolTip_Y := INT#23;
	Xus_TN_INPUT_CONTROL.in_ToolTip_X := INT#00;
	Xus_TN_INPUT_CONTROL.by_ToolTip_Attr := BYTE#16#37;
	Xus_TN_INPUT_CONTROL.in_ToolTip_Size := INT#60;

	(* Control-Verwaltung initialisieren *)
	Xus_TN_INPUT_CONTROL.in_Count := INT#04;
	Xus_TN_INPUT_CONTROL.bo_Enable := TRUE;
	Xus_TN_INPUT_CONTROL.bo_Reset_Fokus := TRUE;

	(* LOG-Viewport initialisieren und Neuzeichnen auslösen *)
	us_LOG_VIEWPORT.COUNT := 13;
	us_LOG_VIEWPORT.UPDATE := TRUE;

	(* Menu initialisieren *)
	Xus_TN_MENU.in_X := INT#00;
	Xus_TN_MENU.in_Y := INT#00;
	Xus_TN_MENU.by_Attr_mF := BYTE#16#33; (* yellow + brown *)
	Xus_TN_MENU.by_Attr_oF := BYTE#16#0F; (* schwarz + grau *)
	Xus_TN_MENU.st_MENU_TEXT := 'Datei#Bearbeiten#Ansicht#Ende';
	Xus_TN_MENU.st_MENU_TEXT := CONCAT(Xus_TN_MENU.st_MENU_TEXT,'%oeffnen#-#speichern#beenden%loeschen#-#einfuegen#-#kopieren');
	Xus_TN_MENU.st_MENU_TEXT := CONCAT(Xus_TN_MENU.st_MENU_TEXT,'%alles#detail#kopieren%Logout');
	Xus_TN_MENU.bo_Create := TRUE;

END_IF;

IF (Xus_TN_SCREEN.in_Page_Number = INT#11) THEN

	(* Eingabezeile: Befehl -&gt; eingegebenen String übernehmen *)
	IF (Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].bo_Input_Entered = TRUE) THEN

		Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].bo_Input_Entered := FALSE;
		Gst_SysLog_Command := Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].st_Input_String;

	END_IF;

	(* Eingabezeile: LOG_LEVEL -&gt; eingegebenen String übernehmen *)
	IF (Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].bo_Input_Entered = TRUE) THEN

		Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].bo_Input_Entered := FALSE;
		Gst_SysLog_Command := CONCAT('LOG_LEVEL ',Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].st_Input_String);

	END_IF;

	(* LOG-Viewport - Scroll Funktionen *)
	IF (Xus_TN_INPUT_CONTROL.in_Focus_at = INT#01) THEN
		CASE BYTE_TO_INT(Xus_TN_SCREEN.by_Input_Exten_Code) OF
		80: (* F1 Taste *)
			us_LOG_VIEWPORT.MOVE_TO_X := 30001; (* Scrollen zum Listenanfang *)
		81: (* F2 Taste *)
			us_LOG_VIEWPORT.MOVE_TO_X := us_LOG_VIEWPORT.COUNT; (* Scrollen eine Seite nach oben *)
		82: (* F3 Taste *)
			us_LOG_VIEWPORT.MOVE_TO_X := 0 - us_LOG_VIEWPORT.COUNT;
		83: (* F4 Taste *)
			us_LOG_VIEWPORT.MOVE_TO_X := 30000; (* Scrollen zum Listenende *)
		END_CASE;
	END_IF;

	(* LOG-Viewport Updaten *)
	FB_LOG_VIEWPORT(LC := LOG_CL,
					LV := us_LOG_VIEWPORT);

	(* LOG-Viewport zeichnen *)
	FB_TN_SC_VIEWPORT(	Xus_LOG_VIEWPORT := us_LOG_VIEWPORT,
						Xus_LOG_CONTROL := LOG_CL,
						Xus_TN_SCREEN := Xus_TN_SCREEN,
						Iin_X := INT#01,
						Iin_Y := INT#02,
						Iin_Width := INT#76,
						Idw_ATTR_1 := DWORD#16#64542434, (* Color + Level 3:2:1:0 *)
						Idw_ATTR_2 := DWORD#16#94047414, (* Color + Level 7:6:5:4 *)
						Iti_TIME := TIME#100ms);
END_IF;

IF LEN(Gst_SysLog_Command) &gt; 0 THEN

	(* Kommando echo *)
	LOG_CL.NEW_MSG := CONCAT('ACTION: ',Gst_SysLog_Command);
	LOG_CL.NEW_MSG_OPTION := 0;
	FB_LOG_MESSAGE();

	Gst_SysLog_Command := '';

END_IF;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>92035546-1812-4f23-8fa6-7130a1234762</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TN_VISION_DEMO_2" pouType="program">
        <interface>
          <localVars>
            <variable name="FB_TN_FRAMEWORK">
              <type>
                <derived name="TN_FRAMEWORK" />
              </type>
            </variable>
            <variable name="FB_TN_SC_FILL">
              <type>
                <derived name="TN_SC_FILL" />
              </type>
            </variable>
            <variable name="FB_TN_SC_WRITE_C">
              <type>
                <derived name="TN_SC_WRITE_C" />
              </type>
            </variable>
            <variable name="FB_TN_SC_WRITE">
              <type>
                <derived name="TN_SC_WRITE" />
              </type>
            </variable>
            <variable name="Xus_TN_MENU">
              <type>
                <derived name="us_TN_MENU" />
              </type>
            </variable>
            <variable name="Xus_TN_INPUT_CONTROL">
              <type>
                <derived name="us_TN_INPUT_CONTROL" />
              </type>
            </variable>
            <variable name="Xus_TN_SCREEN">
              <type>
                <derived name="us_TN_SCREEN" />
              </type>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">FB_TN_FRAMEWORK(
					us_TN_INPUT_CONTROL := Xus_TN_INPUT_CONTROL ,
					us_TN_SCREEN := Xus_TN_SCREEN ,
					us_TN_MENU := Xus_TN_MENU ,
					S_BUF := S_BUF ,
					R_BUF:= R_BUF ,
					IP_C:= IP_C ,
					PORT := WORD#0
					 );


(* Initialisierung der Daten und Strukturen *)
IF (Xus_TN_SCREEN.in_Page_Number = INT#00) THEN
	Xus_TN_SCREEN.in_Page_Number := INT#01;

	(* Clear-Screen (Farbe setzen + Display löschen) *)
	Xus_TN_SCREEN.by_Clear_Screen_Attr := BYTE#16#00;
	Xus_TN_SCREEN.bo_Clear_Screen := TRUE;

	(* Screen initialisieren (mit Leerzeichen füllen) *)
	FB_TN_SC_FILL(	Iin_X1 := INT#00,
					Iin_Y1 := INT#00,
					Iin_X2 := INT#79,
					Iin_Y2 := INT#23,
					Iby_CHAR := BYTE#32,
					Iby_Attr := BYTE#16#00,
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Statische Texte ausgeben *)
	FB_TN_SC_WRITE(	Iin_X := INT#00,
					Iin_Y := INT#00,
					Iby_ATTR := BYTE#16#70,
					Ist_STRING := 'Login Screen                                                     FL SWITCH MM HS',
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Statische Texte ausgeben *)
	FB_TN_SC_WRITE(	Iin_X := INT#00,
					Iin_Y := INT#03,
					Iby_ATTR := BYTE#16#70,
					Ist_STRING := 'XXXXXXXXX',
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Statische Texte ausgeben *)
	FB_TN_SC_WRITE(	Iin_X := INT#00,
					Iin_Y := INT#04,
					Iby_ATTR := BYTE#16#70,
					Ist_STRING := 'X   X  XX',
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Statische Texte ausgeben *)
	FB_TN_SC_WRITE(	Iin_X := INT#00,
					Iin_Y := INT#05,
					Iby_ATTR := BYTE#16#70,
					Ist_STRING := 'X   O   X      ---&gt; Phoenix Contact Managed Switch System &lt;---',
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Statische Texte ausgeben *)
	FB_TN_SC_WRITE(	Iin_X := INT#00,
					Iin_Y := INT#06,
					Iby_ATTR := BYTE#16#70,
					Ist_STRING := 'X   X  XX               Phoenix Contact GmbH &amp; Co KG',
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Statische Texte ausgeben *)
	FB_TN_SC_WRITE(	Iin_X := INT#00,
					Iin_Y := INT#07,
					Iby_ATTR := BYTE#16#70,
					Ist_STRING := 'X   XXXXX                   www.PhoenixContact.com',
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Statische Texte ausgeben *)
	FB_TN_SC_WRITE(	Iin_X := INT#00,
					Iin_Y := INT#08,
					Iby_ATTR := BYTE#16#70,
					Ist_STRING := 'X   XXXXX',
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Statische Texte ausgeben *)
	FB_TN_SC_WRITE(	Iin_X := INT#00,
					Iin_Y := INT#09,
					Iby_ATTR := BYTE#16#70,
					Ist_STRING := 'XXXXXXXXX',
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Statische Texte ausgeben *)
	FB_TN_SC_WRITE(	Iin_X := INT#00,
					Iin_Y := INT#11,
					Iby_ATTR := BYTE#16#70,
					Ist_STRING := '                Running switch application version:  4.00',
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Alle Input-Controls initialisieren *)

	Xus_TN_INPUT_CONTROL.bo_Enable := FALSE;

  (* Initialisierung der Eingabe-Zeile *)
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].in_Type := INT#01;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].in_Y := INT#17;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].in_X := INT#33;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].by_Attr_mF := BYTE#16#70;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].by_Attr_oF := BYTE#16#70;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].in_Cursor_Pos := INT#0;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].bo_Input_Only_Num := FALSE;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].bo_Input_Hidden := TRUE;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].st_Input_Mask := '                ';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].st_Input_Data := Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].st_Input_Mask;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].st_Input_ToolTip := '';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].in_Input_Option := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].in_Title_Y_Offset := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].in_Title_X_Offset := -12;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].by_Title_Attr := BYTE#16#70;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].st_Title_String := 'Password:  [                ]';

	(* Control-Tool-Tip *)
	Xus_TN_INPUT_CONTROL.in_ToolTip_Y := INT#23;
	Xus_TN_INPUT_CONTROL.in_ToolTip_X := INT#09;
	Xus_TN_INPUT_CONTROL.by_ToolTip_Attr := BYTE#16#70;
	Xus_TN_INPUT_CONTROL.in_ToolTip_Size := INT#30;

	(* Control-Verwaltung initialisieren *)
	Xus_TN_INPUT_CONTROL.in_Count := INT#01;
	Xus_TN_INPUT_CONTROL.bo_Enable := TRUE;
	Xus_TN_INPUT_CONTROL.bo_Reset_Fokus := TRUE;
END_IF;

IF (Xus_TN_SCREEN.in_Page_Number = INT#01) THEN

	(* eingegebenen String übernehmen *)
	IF Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].bo_Input_Entered = TRUE THEN

		Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].bo_Input_Entered := FALSE;

		Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].st_Input_String :=
			OSCAT_BASIC.LOWERCASE(str:=Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].st_Input_String);

		IF Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].st_Input_String = 'oscat' THEN
			Xus_TN_SCREEN.in_Page_Number := INT#04;

		ELSE
			FB_TN_SC_WRITE_C(	Iin_Y := Xus_TN_INPUT_CONTROL.in_ToolTip_Y,
								Iin_X := Xus_TN_INPUT_CONTROL.in_ToolTip_X,
								Iby_ATTR := BYTE#16#F1,
								Iin_OPTION := INT#02, (* Center-String *)
								Iin_LENGTH := Xus_TN_INPUT_CONTROL.in_ToolTip_Size,
								Ist_STRING := ' User Password Failed   ',
								Xus_TN_SCREEN := Xus_TN_SCREEN);
		END_IF;
	END_IF;
END_IF;

(* Initialisierung der Daten und Strukturen *)
IF (Xus_TN_SCREEN.in_Page_Number = INT#04) THEN
	Xus_TN_SCREEN.in_Page_Number := INT#05;

	(* Clear-Screen (Farbe setzen + Display löschen) *)
	Xus_TN_SCREEN.by_Clear_Screen_Attr := BYTE#16#00;
	Xus_TN_SCREEN.bo_Clear_Screen := TRUE;

	(* Screen initialisieren (mit Leerzeichen füllen) *)
	FB_TN_SC_FILL(	Iin_X1 := INT#00,
					Iin_Y1 := INT#00,
					Iin_X2 := INT#79,
					Iin_Y2 := INT#23,
					Iby_CHAR := BYTE#32,
					Iby_Attr := BYTE#16#00,
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Statische Texte ausgeben *)
	FB_TN_SC_WRITE(	Iin_X := INT#00,
					Iin_Y := INT#00,
					Iby_ATTR := BYTE#16#70,
					Ist_STRING := 'Basic Switch Configuration                                       FL SWITCH MM HS',
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Statische Texte ausgeben                                         *)
	FB_TN_SC_WRITE(	Iin_X := INT#00,
					Iin_Y := INT#03,
					Iby_ATTR := BYTE#16#70,
					Ist_STRING := 'XXXXXXXXX        MAC Address             : 00:A0:45:00:6E:9B',
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Statische Texte ausgeben *)
	FB_TN_SC_WRITE(	Iin_X := INT#00,
					Iin_Y := INT#04,
					Iby_ATTR := BYTE#16#70,
					Ist_STRING := 'X   X  XX',
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Statische Texte ausgeben *)
	FB_TN_SC_WRITE(	Iin_X := INT#00,
					Iin_Y := INT#05,
					Iby_ATTR := BYTE#16#70,
					Ist_STRING := 'X   O   X',
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Statische Texte ausgeben *)
	FB_TN_SC_WRITE(	Iin_X := INT#00,
					Iin_Y := INT#06,
					Iby_ATTR := BYTE#16#70,
					Ist_STRING := 'X   X  XX',
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Statische Texte ausgeben *)
	FB_TN_SC_WRITE(	Iin_X := INT#00,
					Iin_Y := INT#07,
					Iby_ATTR := BYTE#16#70,
					Ist_STRING := 'X   XXXXX',
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Statische Texte ausgeben *)
	FB_TN_SC_WRITE(	Iin_X := INT#00,
					Iin_Y := INT#08,
					Iby_ATTR := BYTE#16#70,
					Ist_STRING := 'X   XXXXX',
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Statische Texte ausgeben *)
	FB_TN_SC_WRITE(	Iin_X := INT#00,
					Iin_Y := INT#09,
					Iby_ATTR := BYTE#16#70,
					Ist_STRING := 'XXXXXXXXX',
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Alle Input-Controls initialisieren *)

	Xus_TN_INPUT_CONTROL.bo_Enable      := FALSE;

	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].in_Type := INT#01;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].in_Y := INT#04;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].in_X := INT#44;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].by_Attr_mF := BYTE#16#07; (* Weiss, Grün *)
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].by_Attr_oF := BYTE#16#70; (* Weiss, Blau *)
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].in_Cursor_Pos := INT#0;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].bo_Input_Only_Num := TRUE;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].bo_Input_Hidden := FALSE;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].st_Input_Mask := '   .   .   .   ';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].st_Input_Data := Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].st_Input_Mask;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].st_Input_ToolTip := 'Enter Agent IP Address in decimal dot format (e.g., 209.131.209.13)';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].in_Input_Option := INT#01;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].in_Title_Y_Offset := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].in_Title_X_Offset := -27;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].by_Title_Attr := BYTE#16#70;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].st_Title_String := 'IP Address              : [149.208.100.100]';

	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].in_Type := INT#01;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].in_Y := INT#05;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].in_X := INT#44;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].by_Attr_mF := BYTE#16#07; (* Weiss, Grün *)
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].by_Attr_oF := BYTE#16#70; (* Weiss, Blau *)
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].in_Cursor_Pos := INT#0;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].bo_Input_Only_Num := TRUE;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].bo_Input_Hidden := FALSE;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].st_Input_Mask := '   .   .   .   ';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].st_Input_Data := Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].st_Input_Mask;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].st_Input_ToolTip := 'Enter Agent Netmask (e.g., 255.255.255.0)';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].in_Input_Option := INT#01;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].in_Title_Y_Offset := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].in_Title_X_Offset := -27;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].by_Title_Attr := BYTE#16#70;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[2].st_Title_String := 'Subnet Mask             : [255.255.255.128]';

	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[3].in_Type := INT#01;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[3].in_Y := INT#06;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[3].in_X := INT#44;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[3].by_Attr_mF := BYTE#16#07; (* Weiss, Grün *)
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[3].by_Attr_oF := BYTE#16#70; (* Weiss, Blau *)
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[3].in_Cursor_Pos := INT#0;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[3].bo_Input_Only_Num := TRUE;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[3].bo_Input_Hidden := FALSE;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[3].st_Input_Mask := '   .   .   .   ';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[3].st_Input_Data := Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].st_Input_Mask;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[3].st_Input_ToolTip := 'Enter Agent Default Gateway, (e.g., 209.131.209.1)';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[3].in_Input_Option := INT#01;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[3].in_Title_Y_Offset := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[3].in_Title_X_Offset := -27;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[3].by_Title_Attr := BYTE#16#70;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[3].st_Title_String := 'Default Gateway         : [149.208.100.1  ]';

	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[4].in_Type := INT#02;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[4].in_Y := INT#07;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[4].in_X := INT#44;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[4].by_Attr_mF := BYTE#16#07;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[4].by_Attr_oF := BYTE#16#70;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[4].st_Input_Mask := '       ';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[4].st_Input_Data := 'BootP  #DHCP   #DCP    #Static ';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[4].st_Input_ToolTip := 'Push SPACE to select the address assignment (effective after reboot)';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[4].in_Input_Option := INT#02;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[4].in_Title_Y_Offset := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[4].in_Title_X_Offset := -27;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[4].by_Title_Attr := BYTE#16#70;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[4].st_Title_String := 'IP Parameter Assignment : &lt;BootP  &gt;';

	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[5].in_Type := INT#02;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[5].in_Y := INT#09;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[5].in_X := INT#44;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[5].by_Attr_mF := BYTE#16#07;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[5].by_Attr_oF := BYTE#16#70;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[5].st_Input_Mask := '                              ';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[5].st_Input_Data := 'No Redundancy#Rapid Spanning Tree, Disabled#Rapid Spanning Tree, Enabled';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[5].st_Input_ToolTip := 'Push SPACE to chose redundancy (network disruption for few seconds if enabled)';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[5].in_Input_Option := INT#02;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[5].in_Title_Y_Offset := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[5].in_Title_X_Offset := -27;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[5].by_Title_Attr := BYTE#16#70;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[5].st_Title_String := 'Redundancy              : &lt;No Redundancy                 &gt;';

	(* Statische Texte ausgeben *)
	FB_TN_SC_WRITE(	Iin_X := INT#17,
					Iin_Y := INT#10,
					Iby_ATTR := BYTE#16#70,
					Ist_STRING := 'Current Vlan Status     :  VLAN Transparent',
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[6].in_Type := INT#02;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[6].in_Y := INT#11;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[6].in_X := INT#44;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[6].by_Attr_mF := BYTE#16#07;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[6].by_Attr_oF := BYTE#16#70;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[6].st_Input_Mask := '                        ';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[6].st_Input_Data := 'VLAN Transparent#VLAN Tagging';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[6].st_Input_ToolTip := 'Push SPACE to toggle the VLAN Mode (effective after reboot)';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[6].in_Input_Option := INT#02;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[6].in_Title_Y_Offset := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[6].in_Title_X_Offset := -27;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[6].by_Title_Attr := BYTE#16#70;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[6].st_Title_String := 'Vlan Mode               : &lt;VLAN Transparent        &gt;';

	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[7].in_Type := INT#02;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[7].in_Y := INT#12;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[7].in_X := INT#44;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[7].by_Attr_mF := BYTE#16#07;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[7].by_Attr_oF := BYTE#16#70;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[7].st_Input_Mask := '       ';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[7].st_Input_Data := 'Disable#Enable';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[7].st_Input_ToolTip := 'Push SPACE to Enable/Disable Port Security';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[7].in_Input_Option := INT#02;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[7].in_Title_Y_Offset := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[7].in_Title_X_Offset := -27;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[7].by_Title_Attr := BYTE#16#70;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[7].st_Title_String := 'Port Security           : &lt;Disable&gt;';

	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[8].in_Type := INT#02;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[8].in_Y := INT#13;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[8].in_X := INT#44;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[8].by_Attr_mF := BYTE#16#07;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[8].by_Attr_oF := BYTE#16#70;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[8].st_Input_Mask := '       ';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[8].st_Input_Data := 'Disable#Enable';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[8].st_Input_ToolTip := 'Push SPACE to Enable/Disable Access Control for the WEB Interface';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[8].in_Input_Option := INT#02;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[8].in_Title_Y_Offset := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[8].in_Title_X_Offset := -27;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[8].by_Title_Attr := BYTE#16#70;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[8].st_Title_String := 'Access Control for Web  : &lt;Disable&gt;';

	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[9].in_Type := INT#02;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[9].in_Y := INT#14;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[9].in_X := INT#44;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[9].by_Attr_mF := BYTE#16#07;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[9].by_Attr_oF := BYTE#16#70;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[9].st_Input_Mask := '        ';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[9].st_Input_Data := 'Default#Profinet';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[9].st_Input_ToolTip := 'Push SPACE to select the switch operating mode';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[9].in_Input_Option := INT#02;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[9].in_Title_Y_Offset := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[9].in_Title_X_Offset := -27;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[9].by_Title_Attr := BYTE#16#70;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[9].st_Title_String := 'Switch Operating Mode   : &lt;Default &gt;';

	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[10].in_Type := INT#02;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[10].in_Y := INT#16;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[10].in_X := INT#44;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[10].by_Attr_mF := BYTE#16#07;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[10].by_Attr_oF := BYTE#16#70;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[10].st_Input_Mask := '       ';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[10].st_Input_Data := 'Enable#Disable';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[10].st_Input_ToolTip := 'Push SPACE to Enable/Disable Web Interface (effective after reboot)';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[10].in_Input_Option := INT#02;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[10].in_Title_Y_Offset := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[10].in_Title_X_Offset := -27;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[10].by_Title_Attr := BYTE#16#70;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[10].st_Title_String := 'Web Interface           : &lt;Enable &gt;';

	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[11].in_Type := INT#02;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[11].in_Y := INT#17;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[11].in_X := INT#44;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[11].by_Attr_mF := BYTE#16#07;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[11].by_Attr_oF := BYTE#16#70;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[11].st_Input_Mask := '       ';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[11].st_Input_Data := 'Enable#Disable';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[11].st_Input_ToolTip := 'Push SPACE to Enable/Disable Telnet Interface (effective after reboot)';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[11].in_Input_Option := INT#02;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[11].in_Title_Y_Offset := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[11].in_Title_X_Offset := -27;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[11].by_Title_Attr := BYTE#16#70;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[11].st_Title_String := 'Telnet Interface        : &lt;Enable &gt;';

	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[12].in_Type := INT#02;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[12].in_Y := INT#18;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[12].in_X := INT#44;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[12].by_Attr_mF := BYTE#16#07;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[12].by_Attr_oF := BYTE#16#70;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[12].st_Input_Mask := '       ';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[12].st_Input_Data := 'Enable#Disable';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[12].st_Input_ToolTip := 'Push SPACE to Enable/Disable SNMP Interface (effective after reboot)';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[12].in_Input_Option := INT#02;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[12].in_Title_Y_Offset := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[12].in_Title_X_Offset := -27;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[12].by_Title_Attr := BYTE#16#70;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[12].st_Title_String := 'SNMP Interface          : &lt;Enable &gt;';

	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[13].in_Type := INT#02;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[13].in_Y := INT#20;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[13].in_X := INT#44;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[13].by_Attr_mF := BYTE#16#07;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[13].by_Attr_oF := BYTE#16#70;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[13].st_Input_Mask := '                                 ';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[13].st_Input_Data := 'No reset#Reset Switch#Reset Switch to factory defaults';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[13].st_Input_ToolTip := 'Push SPACE to select Reset Option';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[13].in_Input_Option := INT#02;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[13].in_Title_Y_Offset := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[13].in_Title_X_Offset := -27;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[13].by_Title_Attr := BYTE#16#70;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[13].st_Title_String := 'Reset                   : &lt;No reset                         &gt;';

	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[14].in_Type := INT#02;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[14].in_Y := INT#22;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[14].in_X := INT#18;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[14].by_Attr_mF := BYTE#16#07;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[14].by_Attr_oF := BYTE#16#70;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[14].st_Input_ToolTip := 'Apply and save ALL changes to permanent memory';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[14].in_Input_Option := INT#01;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[14].in_Title_Y_Offset := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[14].in_Title_X_Offset := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[14].by_Title_Attr := BYTE#16#70;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[14].st_Title_String := '';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[14].st_Input_Mask := '    ';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[14].st_Input_Data := 'SAVE';

	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[15].in_Type := INT#02;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[15].in_Y := INT#22;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[15].in_X := INT#11;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[15].by_Attr_mF := BYTE#16#07;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[15].by_Attr_oF := BYTE#16#70;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[15].st_Input_ToolTip := 'Apply changes';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[15].in_Input_Option := INT#01;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[15].in_Title_Y_Offset := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[15].in_Title_X_Offset := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[15].by_Title_Attr := BYTE#16#70;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[15].st_Title_String := '';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[15].st_Input_Mask := '     ';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[15].st_Input_Data := 'APPLY';

	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[16].in_Type := INT#02;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[16].in_Y := INT#22;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[16].in_X := INT#03;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[16].by_Attr_mF := BYTE#16#07;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[16].by_Attr_oF := BYTE#16#70;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[16].st_Input_ToolTip := 'Return to Main Menu';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[16].in_Input_Option := INT#01;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[16].in_Title_Y_Offset := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[16].in_Title_X_Offset := INT#00;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[16].by_Title_Attr := BYTE#16#70;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[16].st_Title_String := '';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[16].st_Input_Mask := '      ';
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[16].st_Input_Data := 'LOGOUT';

	(* Control-Tool-Tip *)
	Xus_TN_INPUT_CONTROL.in_ToolTip_Y := INT#23;
	Xus_TN_INPUT_CONTROL.in_ToolTip_X := INT#00;
	Xus_TN_INPUT_CONTROL.by_ToolTip_Attr := BYTE#07;
	Xus_TN_INPUT_CONTROL.in_ToolTip_Size := INT#80;

	(* Control-Verwaltung initialisieren *)
	Xus_TN_INPUT_CONTROL.in_Count := INT#16;
	Xus_TN_INPUT_CONTROL.bo_Enable := TRUE;
	Xus_TN_INPUT_CONTROL.bo_Reset_Fokus := TRUE;

END_IF;

IF (Xus_TN_SCREEN.in_Page_Number = INT#05) THEN

	(* eingegebenen String übernehmen *)
	IF Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[16].bo_Input_Entered = TRUE THEN

		Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[16].bo_Input_Entered := FALSE;
		Xus_TN_SCREEN.in_Page_Number := INT#00;
	END_IF;
END_IF;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>45447a7d-aa2c-4cbb-aad3-6d781d13291a</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="WORLD_WEATHER_DEMO" pouType="program">
        <interface>
          <localVars>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="IP_CONTROL_1">
              <type>
                <derived name="IP_CONTROL" />
              </type>
            </variable>
            <variable name="activate">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="done">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="busy">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="error_c">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="error_t">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="latitude">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="48.21" />
              </initialValue>
            </variable>
            <variable name="longitude">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="16.37" />
              </initialValue>
            </variable>
            <variable name="WORLD_WEATHER">
              <type>
                <derived name="WORLD_WEATHER" />
              </type>
            </variable>
            <variable name="WW_DATA">
              <type>
                <derived name="WORLD_WEATHER_DATA" />
              </type>
            </variable>
            <variable name="CLK_PRG">
              <type>
                <derived name="oscat_basic.CLK_PRG" />
              </type>
            </variable>
            <variable name="WORLD_WEATHER_DESC_GE">
              <type>
                <derived name="WORLD_WEATHER_DESC_GE" />
              </type>
            </variable>
            <variable name="WORLD_WEATHER_ICON_OSCAT">
              <type>
                <derived name="WORLD_WEATHER_ICON_OSCAT" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/cfc" handleUnknown="implementation">
              <CFC>
                <inVariable localId="2">
                  <position x="14" y="4" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>t#3h</expression>
                </inVariable>
                <connector localId="1" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="2" formalParameter="t#3h" />
                  </connectionPointIn>
                </connector>
                <block localId="0" executionOrderId="1" typeName="oscat_basic.CLK_PRG" instanceName="CLK_PRG">
                  <position x="24" y="2" />
                  <inputVariables>
                    <variable formalParameter="PT">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="1" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="Q">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="4" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="Q" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="3" executionOrderId="2">
                  <position x="36" y="4" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="4" />
                  </connectionPointIn>
                  <expression>activate</expression>
                </outVariable>
                <inVariable localId="7">
                  <position x="18" y="9" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>activate</expression>
                </inVariable>
                <connector localId="6" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="7" formalParameter="activate" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="9">
                  <position x="18" y="10" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>latitude</expression>
                </inVariable>
                <connector localId="8" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="9" formalParameter="latitude" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="11">
                  <position x="18" y="11" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>longitude</expression>
                </inVariable>
                <connector localId="10" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="11" formalParameter="longitude" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="13">
                  <position x="30" y="12" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'y94qq6e9dfk4ufwvv7eahnqs'</expression>
                </inVariable>
                <connector localId="12" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="13" formalParameter="'y94qq6e9dfk4ufwvv7eahnqs'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="15">
                  <position x="18" y="13" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IP_C</expression>
                </inVariable>
                <connector localId="14" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="15" formalParameter="IP_C" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="17">
                  <position x="18" y="14" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="16" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="17" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="19">
                  <position x="18" y="15" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_BUF</expression>
                </inVariable>
                <connector localId="18" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="19" formalParameter="R_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="21">
                  <position x="18" y="16" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>WW_DATA</expression>
                </inVariable>
                <connector localId="20" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="21" formalParameter="WW_DATA" />
                  </connectionPointIn>
                </connector>
                <block localId="5" executionOrderId="3" typeName="WORLD_WEATHER" instanceName="WORLD_WEATHER">
                  <position x="30" y="7" />
                  <inputVariables>
                    <variable formalParameter="ACTIVATE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="6" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="LATITUDE">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="8" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="LONGITUDE">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="10" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="KEY">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="12" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="14" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="16" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                        <connection refLocalId="18" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="WW">
                      <connectionPointIn>
                        <relPosition x="0" y="7" />
                        <connection refLocalId="20" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="BUSY">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="DONE">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR_C">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR_T">
                      <connectionPointOut>
                        <relPosition x="0" y="3" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="23" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="5" formalParameter="BUSY" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="22" executionOrderId="4">
                  <position x="54" y="9" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="23" />
                  </connectionPointIn>
                  <expression>busy</expression>
                </outVariable>
                <connector localId="25" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="5" formalParameter="DONE" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="24" executionOrderId="5">
                  <position x="54" y="10" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="25" />
                  </connectionPointIn>
                  <expression>done</expression>
                </outVariable>
                <connector localId="27" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="5" formalParameter="ERROR_C" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="26" executionOrderId="6">
                  <position x="54" y="11" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="27" />
                  </connectionPointIn>
                  <expression>error_c</expression>
                </outVariable>
                <connector localId="29" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="5" formalParameter="ERROR_T" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="28" executionOrderId="7">
                  <position x="54" y="12" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="29" />
                  </connectionPointIn>
                  <expression>error_t</expression>
                </outVariable>
                <inVariable localId="32">
                  <position x="16" y="24" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>done</expression>
                </inVariable>
                <connector localId="31" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="32" formalParameter="done" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="34">
                  <position x="16" y="25" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>WW_DATA</expression>
                </inVariable>
                <connector localId="33" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="34" formalParameter="WW_DATA" />
                  </connectionPointIn>
                </connector>
                <block localId="30" executionOrderId="8" typeName="WORLD_WEATHER_DESC_GE" instanceName="WORLD_WEATHER_DESC_GE">
                  <position x="24" y="22" />
                  <inputVariables>
                    <variable formalParameter="ACTIVATE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="31" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="WW">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="33" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="37">
                  <position x="61" y="24" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>done</expression>
                </inVariable>
                <connector localId="36" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="37" formalParameter="done" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="39">
                  <position x="61" y="25" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>WW_DATA</expression>
                </inVariable>
                <connector localId="38" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="39" formalParameter="WW_DATA" />
                  </connectionPointIn>
                </connector>
                <block localId="35" executionOrderId="9" typeName="WORLD_WEATHER_ICON_OSCAT" instanceName="WORLD_WEATHER_ICON_OSCAT">
                  <position x="70" y="22" />
                  <inputVariables>
                    <variable formalParameter="ACTIVATE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="36" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="WW">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="38" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="42">
                  <position x="18" y="32" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="41" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="42" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="44">
                  <position x="18" y="33" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="43" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="44" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="46">
                  <position x="18" y="34" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="45" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="46" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="48">
                  <position x="18" y="35" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="47" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="48" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <block localId="40" executionOrderId="10" typeName="oscat_basic.DWORD_OF_BYTE">
                  <position x="24" y="30" />
                  <inputVariables>
                    <variable formalParameter="B3">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="41" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="43" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B1">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="45" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B0">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="47" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DWORD_OF_BYTE">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="50" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="40" formalParameter="DWORD_OF_BYTE" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="52">
                  <position x="60" y="34" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>T#5s</expression>
                </inVariable>
                <connector localId="51" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="52" formalParameter="T#5s" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="54">
                  <position x="60" y="35" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IP_C</expression>
                </inVariable>
                <connector localId="53" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="54" formalParameter="IP_C" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="56">
                  <position x="60" y="36" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="55" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="56" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="58">
                  <position x="60" y="37" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_BUF</expression>
                </inVariable>
                <connector localId="57" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="58" formalParameter="R_BUF" />
                  </connectionPointIn>
                </connector>
                <block localId="49" executionOrderId="11" typeName="IP_CONTROL" instanceName="IP_CONTROL_1">
                  <position x="68" y="30" />
                  <inputVariables>
                    <variable formalParameter="IP">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="50" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="PORT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TIME_OUT">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="51" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="53" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="55" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="57" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <comment localId="59" height="0" width="0">
                  <position x="70" y="20" />
                  <content>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">ICONS nach OSCAT-Standard (optional)</xhtml>
                  </content>
                </comment>
                <comment localId="60" height="0" width="0">
                  <position x="20" y="29" />
                  <content>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">IP-Adresse des DNS-Server oder des DSL-Router</xhtml>
                  </content>
                </comment>
                <comment localId="61" height="0" width="0">
                  <position x="22" y="20" />
                  <content>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">Wetterbeschreibung auf Deutsch (optional)</xhtml>
                  </content>
                </comment>
              </CFC>
            </data>
          </addData>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>4d049e72-3866-460c-b5b3-6cdf880779ff</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="YAHOO_WEATHER_DEMO" pouType="program">
        <interface>
          <localVars>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="IP_CONTROL_1">
              <type>
                <derived name="IP_CONTROL" />
              </type>
            </variable>
            <variable name="activate">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="done">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="busy">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="error_c">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="error_t">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="YAHOO_WEATHER">
              <type>
                <derived name="YAHOO_WEATHER" />
              </type>
            </variable>
            <variable name="YW_DATA">
              <type>
                <derived name="YAHOO_WEATHER_DATA" />
              </type>
            </variable>
            <variable name="CLK_PRG">
              <type>
                <derived name="oscat_basic.CLK_PRG" />
              </type>
            </variable>
            <variable name="YAHOO_WEATHER_DESC_GE">
              <type>
                <derived name="YAHOO_WEATHER_DESC_GE" />
              </type>
            </variable>
            <variable name="YAHOO_WEATHER_ICON_OSCAT">
              <type>
                <derived name="YAHOO_WEATHER_ICON_OSCAT" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/cfc" handleUnknown="implementation">
              <CFC>
                <inVariable localId="2">
                  <position x="12" y="4" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>t#3h</expression>
                </inVariable>
                <connector localId="1" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="2" formalParameter="t#3h" />
                  </connectionPointIn>
                </connector>
                <block localId="0" executionOrderId="1" typeName="oscat_basic.CLK_PRG" instanceName="CLK_PRG">
                  <position x="22" y="2" />
                  <inputVariables>
                    <variable formalParameter="PT">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="1" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="Q">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="4" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="0" formalParameter="Q" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="3" executionOrderId="2">
                  <position x="34" y="4" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="4" />
                  </connectionPointIn>
                  <expression>activate</expression>
                </outVariable>
                <inVariable localId="7">
                  <position x="12" y="9" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>activate</expression>
                </inVariable>
                <connector localId="6" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="7" formalParameter="activate" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="9">
                  <position x="12" y="10" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>FALSE</expression>
                </inVariable>
                <connector localId="8" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="9" formalParameter="FALSE" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="11">
                  <position x="12" y="11" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>'551801'</expression>
                </inVariable>
                <connector localId="10" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="11" formalParameter="'551801'" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="13">
                  <position x="12" y="12" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IP_C</expression>
                </inVariable>
                <connector localId="12" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="13" formalParameter="IP_C" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="15">
                  <position x="12" y="13" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="14" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="15" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="17">
                  <position x="12" y="14" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_BUF</expression>
                </inVariable>
                <connector localId="16" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="17" formalParameter="R_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="19">
                  <position x="12" y="15" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>YW_DATA</expression>
                </inVariable>
                <connector localId="18" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="19" formalParameter="YW_DATA" />
                  </connectionPointIn>
                </connector>
                <block localId="5" executionOrderId="3" typeName="YAHOO_WEATHER" instanceName="YAHOO_WEATHER">
                  <position x="22" y="7" />
                  <inputVariables>
                    <variable formalParameter="ACTIVATE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="6" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="UNITS">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="8" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="LOCATION">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="10" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="12" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="14" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="16" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="YW">
                      <connectionPointIn>
                        <relPosition x="0" y="6" />
                        <connection refLocalId="18" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="BUSY">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="DONE">
                      <connectionPointOut>
                        <relPosition x="0" y="1" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR_C">
                      <connectionPointOut>
                        <relPosition x="0" y="2" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                    <variable formalParameter="ERROR_T">
                      <connectionPointOut>
                        <relPosition x="0" y="3" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="21" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="5" formalParameter="BUSY" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="20" executionOrderId="4">
                  <position x="42" y="9" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="21" />
                  </connectionPointIn>
                  <expression>busy</expression>
                </outVariable>
                <connector localId="23" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="5" formalParameter="DONE" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="22" executionOrderId="5">
                  <position x="42" y="10" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="23" />
                  </connectionPointIn>
                  <expression>done</expression>
                </outVariable>
                <connector localId="25" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="5" formalParameter="ERROR_C" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="24" executionOrderId="6">
                  <position x="42" y="11" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="25" />
                  </connectionPointIn>
                  <expression>error_c</expression>
                </outVariable>
                <connector localId="27" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="5" formalParameter="ERROR_T" />
                  </connectionPointIn>
                </connector>
                <outVariable localId="26" executionOrderId="7">
                  <position x="42" y="12" />
                  <connectionPointIn>
                    <relPosition x="0" y="0" />
                    <connection refLocalId="27" />
                  </connectionPointIn>
                  <expression>error_t</expression>
                </outVariable>
                <inVariable localId="30">
                  <position x="12" y="23" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>done</expression>
                </inVariable>
                <connector localId="29" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="30" formalParameter="done" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="32">
                  <position x="12" y="24" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>YW_DATA</expression>
                </inVariable>
                <connector localId="31" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="32" formalParameter="YW_DATA" />
                  </connectionPointIn>
                </connector>
                <block localId="28" executionOrderId="8" typeName="YAHOO_WEATHER_DESC_GE" instanceName="YAHOO_WEATHER_DESC_GE">
                  <position x="22" y="21" />
                  <inputVariables>
                    <variable formalParameter="ACTIVATE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="29" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="YW">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="31" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="35">
                  <position x="59" y="23" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>done</expression>
                </inVariable>
                <connector localId="34" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="35" formalParameter="done" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="37">
                  <position x="59" y="24" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>YW_DATA</expression>
                </inVariable>
                <connector localId="36" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="37" formalParameter="YW_DATA" />
                  </connectionPointIn>
                </connector>
                <block localId="33" executionOrderId="9" typeName="YAHOO_WEATHER_ICON_OSCAT" instanceName="YAHOO_WEATHER_ICON_OSCAT">
                  <position x="68" y="21" />
                  <inputVariables>
                    <variable formalParameter="ACTIVATE">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="34" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="YW">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="36" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="40">
                  <position x="17" y="32" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="39" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="40" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="42">
                  <position x="17" y="33" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="41" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="42" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="44">
                  <position x="17" y="34" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="43" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="44" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="46">
                  <position x="17" y="35" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>8</expression>
                </inVariable>
                <connector localId="45" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="46" formalParameter="8" />
                  </connectionPointIn>
                </connector>
                <block localId="38" executionOrderId="10" typeName="oscat_basic.DWORD_OF_BYTE">
                  <position x="22" y="30" />
                  <inputVariables>
                    <variable formalParameter="B3">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="39" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B2">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="41" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B1">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="43" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="B0">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="45" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="DWORD_OF_BYTE">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">function</CallType>
                    </data>
                  </addData>
                </block>
                <connector localId="48" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="38" formalParameter="DWORD_OF_BYTE" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="50">
                  <position x="59" y="34" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>T#5s</expression>
                </inVariable>
                <connector localId="49" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="50" formalParameter="T#5s" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="52">
                  <position x="59" y="35" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>IP_C</expression>
                </inVariable>
                <connector localId="51" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="52" formalParameter="IP_C" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="54">
                  <position x="59" y="36" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>S_BUF</expression>
                </inVariable>
                <connector localId="53" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="54" formalParameter="S_BUF" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="56">
                  <position x="59" y="37" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>R_BUF</expression>
                </inVariable>
                <connector localId="55" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="56" formalParameter="R_BUF" />
                  </connectionPointIn>
                </connector>
                <block localId="47" executionOrderId="11" typeName="IP_CONTROL" instanceName="IP_CONTROL_1">
                  <position x="66" y="30" />
                  <inputVariables>
                    <variable formalParameter="IP">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="48" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="PORT">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="TIME_OUT">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                        <connection refLocalId="49" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="IP_C">
                      <connectionPointIn>
                        <relPosition x="0" y="3" />
                        <connection refLocalId="51" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="S_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="4" />
                        <connection refLocalId="53" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="R_BUF">
                      <connectionPointIn>
                        <relPosition x="0" y="5" />
                        <connection refLocalId="55" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <comment localId="57" height="0" width="0">
                  <position x="68" y="19" />
                  <content>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">ICONS nach OSCAT-Standard (optional)</xhtml>
                  </content>
                </comment>
                <comment localId="58" height="0" width="0">
                  <position x="18" y="29" />
                  <content>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">IP-Adresse des DNS-Server oder des DSL-Router</xhtml>
                  </content>
                </comment>
                <comment localId="59" height="0" width="0">
                  <position x="20" y="19" />
                  <content>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">Wetterbeschreibung auf Deutsch (optional)</xhtml>
                  </content>
                </comment>
              </CFC>
            </data>
          </addData>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>609e4355-cf4c-4da1-b25d-dcb341c2678b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="IRTRANS_DECODE" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> IP_Control Verwaltungsstruktur </xhtml>
              </documentation>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER_SHORT" />
              </type>
            </variable>
          </inOutVars>
          <outputVars>
            <variable name="CMD">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="DEV">
              <type>
                <string />
              </type>
            </variable>
            <variable name="KEY">
              <type>
                <string />
              </type>
            </variable>
            <variable name="ERROR">
              <type>
                <BOOL />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="i">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="stop">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="pt">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="buffer">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="32000" />
                      <baseType>
                        <BYTE />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="size">
              <type>
                <UINT />
              </type>
            </variable>
            <variable name="z">
              <type>
                <BYTE />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">size := R_BUF.SIZE;

(* do nothing if the buffer is empty *)
IF size &gt; 0 AND IP_C.MAILBOX[1] &lt;&gt; z THEN
	i := 0;
	error := TRUE;
	stop := size - 2;
	(* read characters before first comma and store in device *)
	pt := ADR(dev);
	buffer := ADR(R_BUF.BUFFER);
	WHILE i &lt; stop DO
		IF buffer^[i] = 44 THEN EXIT; END_IF;
		pt^ := buffer^[i];
		pt := pt + 1;
		i := i + 1;
	END_WHILE;
	(* terminate the device string *)
	pt^ := 0;
	(* read after first comma and store in key *)
	i := i + 1;
	pt := ADR(key);
	WHILE i &lt; stop DO
		pt^ := buffer^[i];
		pt := pt + 1;
		i := i + 1;
	END_WHILE;
	(* terminate the key string *)
	pt^:= 0;
	(* check if last two characters are $R$N 13, 10 *)
	IF buffer^[i] &lt;&gt; 13 AND buffer^[i+1] &lt;&gt; 10 THEN	RETURN;	END_IF;
	(* check if device and key are present *)
	IF LEN(dev) = 0 OR LEN(key) = 0 THEN RETURN; END_IF;
	(* a valid transmission has been received *)
	cmd := TRUE;
	error := FALSE;
ELSE
	error := FALSE;
	cmd := FALSE;
END_IF;

z := IP_C.MAILBOX[1];

(* revision history
ks	18. oct. 2008	rev 1.0
	original version
ks	20. oct. 2009	rev 1.1
	Networkbuffer und Buffer-funktionen auf Basis 0
ks	06. dec. 2009	rev 1.2
	Codeanpassung für IRTRANS_SERVER
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>7aba4988-2de9-460c-b66a-37fa7c81bf4b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="IRTRANS_RCV_1" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="DEV_CODE">
              <type>
                <string />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="KEY_CODE">
              <type>
                <string />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="CMD">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <inOutVars>
            <variable name="DEV">
              <type>
                <string />
              </type>
            </variable>
            <variable name="KEY">
              <type>
                <string />
              </type>
            </variable>
          </inOutVars>
          <outputVars>
            <variable name="Q">
              <type>
                <BOOL />
              </type>
            </variable>
          </outputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Q := cmd AND dev_code = dev AND key_code = key;

(* revision history
hm	2. jan 2008		rev 1.0
	original version

hm	20. 6. 2008		rev 1.1
	performance improvement

hm	19. oct. 2008	rev 1.2
	changed input device_code to dev_code and device to dev for compatibility reasons

hm	06. dec. 2008	rev 1.3
	IRTRANS_1 renamed to IRTRANS_RCV_1

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>f3d3903b-777d-4975-9868-ab34b386c90f</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="IRTRANS_RCV_4" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="DEV_CODE">
              <type>
                <string />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="KEY_CODE_0">
              <type>
                <string />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="KEY_CODE_1">
              <type>
                <string />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="KEY_CODE_2">
              <type>
                <string />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="KEY_CODE_3">
              <type>
                <string />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="CMD">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <inOutVars>
            <variable name="DEV">
              <type>
                <string />
              </type>
            </variable>
            <variable name="KEY">
              <type>
                <string />
              </type>
            </variable>
          </inOutVars>
          <outputVars>
            <variable name="Q0">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Q1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Q2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Q3">
              <type>
                <BOOL />
              </type>
            </variable>
          </outputVars>
          <tempVars>
            <variable name="decode">
              <type>
                <BOOL />
              </type>
            </variable>
          </tempVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">decode := cmd AND dev_code = dev;

Q0 := key = key_code_0 AND decode;
Q1 := key = key_code_1 AND decode;
Q2 := key = key_code_2 AND decode;
Q3 := key = key_code_3 AND decode;



(* revision history
hm	2. jan 2008		rev 1.0
	original version

hm	17. oct. 2008	rev 1.1
	improved performance

hm	19. oct. 2008	rev 1.2
	changed input device_code to dev_code and device to dev for compatibility reasons

hm	06. dec. 2008	rev 1.3
	IRTRANS_1 renamed to IRTRANS_RCV_4

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ea578eb0-cd71-460d-80ca-e622d09d8aaa</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="IRTRANS_RCV_8" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="dev_code">
              <type>
                <string />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="key_code_0">
              <type>
                <string />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="key_code_1">
              <type>
                <string />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="key_code_2">
              <type>
                <string />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="key_code_3">
              <type>
                <string />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="key_code_4">
              <type>
                <string />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="key_code_5">
              <type>
                <string />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="key_code_6">
              <type>
                <string />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="key_code_7">
              <type>
                <string />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="CMD">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <inOutVars>
            <variable name="DEV">
              <type>
                <string />
              </type>
            </variable>
            <variable name="KEY">
              <type>
                <string />
              </type>
            </variable>
          </inOutVars>
          <outputVars>
            <variable name="Q0">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Q1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Q2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Q3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Q4">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Q5">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Q6">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Q7">
              <type>
                <BOOL />
              </type>
            </variable>
          </outputVars>
          <tempVars>
            <variable name="decode">
              <type>
                <BOOL />
              </type>
            </variable>
          </tempVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">decode := cmd AND dev_code = dev;

Q0 := key = key_code_0 AND decode;
Q1 := key = key_code_1 AND decode;
Q2 := key = key_code_2 AND decode;
Q3 := key = key_code_3 AND decode;
Q4 := key = key_code_4 AND decode;
Q5 := key = key_code_5 AND decode;
Q6 := key = key_code_6 AND decode;
Q7 := key = key_code_7 AND decode;


(* revision history
hm	2. jan 2008		rev 1.0
	original version

hm	17. oct 2008	rev 1.1
	improved performance

hm	19. oct. 2008	rev 1.2
	changed input device_code to dev_code and device to dev for compatibility reasons

hm	06. dec. 2008	rev 1.3
	IRTRANS_1 renamed to IRTRANS_RCV_8

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>9c314b4f-5504-4f50-9244-08fc4d9aa884</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="IRTRANS_SERVER" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> IP_Control Verwaltungsstruktur </xhtml>
              </documentation>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER_SHORT" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER_SHORT" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="UDP_TCP">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="S_ENABLE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="R_ENABLE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ERROR">
              <type>
                <DWORD />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="t">
              <type>
                <derived name="TON" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF NOT IP_C.C_ENABLE THEN
	(* IP Datenverkehr einrichten *)
	IP_C.C_PORT := WORD#0; (* Portnummer eintragen *)
	IP_C.C_IP := DWORD#00; (* IP eintragen *)
	IP_C.C_MODE := SEL(UDP_TCP,5,4); (* 4 = Mode: TCP+PASSIV+PORT / 5 = Mode: UDP+PASSIV+PORT*)
	IP_C.C_ENABLE := TRUE; (* Verbindungsaufbau freigeben *)
	IP_C.R_OBSERVE := FALSE; (* Datenempfang ueberwachen *)
	IP_C.TIME_RESET := TRUE; (* Zeitueberwachung rücksetzen *)
	S_BUF.SIZE := UINT#0; (* Sendedaten rücksetzen *)
	R_BUF.SIZE := UINT#0; (* Empfangsdaten rücksetzen *)
END_IF;

R_ENABLE := IP_C.C_STATE &gt; 127;
S_ENABLE := R_ENABLE AND (IP_C.MAILBOX[1] &gt; 0 OR IP_C.C_MODE &lt;&gt; 5);
ERROR := IP_C.ERROR;

t(IN:= IP_C.ERROR &gt; 0, PT:=T#5s);
IF t.Q THEN
	IP_C.TIME_RESET := TRUE; (* Error Reset *)
END_IF;

(* revision history
ks	6. dec 2009		rev 1.0
	original version

ks	17. may 2011		rev 1.1
	neue Fehlerausgabe und Empfangsbuffer rücksetzen
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>76687677-b949-4767-8908-ddf54acea13b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="IRTRANS_SND_1" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="DEV_CODE">
              <type>
                <string />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="KEY_CODE">
              <type>
                <string />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="IN">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="T_REPEAT">
              <type>
                <TIME />
              </type>
            </variable>
          </inputVars>
          <inOutVars>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> IP_Control Verwaltungsstruktur </xhtml>
              </documentation>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER_SHORT" />
              </type>
            </variable>
          </inOutVars>
          <outputVars>
            <variable name="KEY">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="skey">
              <type>
                <string />
              </type>
            </variable>
            <variable name="size">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="str">
              <type>
                <string />
              </type>
            </variable>
            <variable name="t">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="k">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="lk">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="d">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">d := IP_C.C_STATE &gt; 127 AND (IP_C.MAILBOX[1] &gt; 0 OR IP_C.C_MODE &lt;&gt; 5);
IF NOT d THEN RETURN; END_IF;

t(IN:= lk = k , PT:=T_REPEAT);

IF S_BUF.SIZE = 0 THEN
	IF IN THEN
		skey := KEY_CODE; k := 1;
	ELSE
		lk := 0;
		KEY := 0;
		RETURN; (* beenden wenn kein Key aktiv *)
	END_IF;

	IF lk &lt;&gt; k OR T.Q THEN (* anderer Key oder repeat wartezeit abgelaufen *)
		str := CONCAT('snd ',dev_code);
		str := CONCAT(str,',');
		str := CONCAT(str,skey);
		size := LEN(str);
		OSCAT_BASIC._STRING_TO_BUFFER(STR:=str, POS:=0, PT:=ADR(S_BUF.BUFFER), SIZE:=size);
		S_BUF.SIZE := size; (* Sendelänge eintragen *)
		KEY := k;
		lk := k; (* letzten Key speichern *)
		t(IN:=FALSE); (* Reset Time *)
	END_IF;
END_IF;

(* revision history
hm	6. dec 2009		rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>959815d6-b002-483d-a0af-2a00cbc13b12</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="IRTRANS_SND_4" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="DEV_CODE">
              <type>
                <string />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="KEY_CODE_0">
              <type>
                <string />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="KEY_CODE_1">
              <type>
                <string />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="KEY_CODE_2">
              <type>
                <string />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="KEY_CODE_3">
              <type>
                <string />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="IN_0">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="IN_1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="IN_2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="IN_3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="T_REPEAT">
              <type>
                <TIME />
              </type>
            </variable>
          </inputVars>
          <inOutVars>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> IP_Control Verwaltungsstruktur </xhtml>
              </documentation>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER_SHORT" />
              </type>
            </variable>
          </inOutVars>
          <outputVars>
            <variable name="KEY">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="skey">
              <type>
                <string />
              </type>
            </variable>
            <variable name="size">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="str">
              <type>
                <string />
              </type>
            </variable>
            <variable name="t">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="k">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="lk">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="d">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">d := IP_C.C_STATE &gt; 127 AND (IP_C.MAILBOX[1] &gt; 0 OR IP_C.C_MODE &lt;&gt; 5);
IF NOT d THEN RETURN; END_IF;

t(IN:= lk = k , PT:=T_REPEAT);

IF S_BUF.SIZE = 0 THEN
	IF IN_0 THEN
		skey := KEY_CODE_0; k := 1;
	ELSIF IN_1 THEN
		skey := KEY_CODE_1; k := 2;
	ELSIF IN_2 THEN
		skey := KEY_CODE_2; k := 3;
	ELSIF IN_3 THEN
		skey := KEY_CODE_3; k := 4;
	ELSE
		lk := 0;
		KEY := 0;
		RETURN; (* beenden wenn kein Key aktiv *)
	END_IF;

	IF lk &lt;&gt; k OR T.Q THEN (* anderer Key oder repeat wartezeit abgelaufen *)
		str := CONCAT('snd ',dev_code);
		str := CONCAT(str,',');
		str := CONCAT(str,skey);
		size := LEN(str);
		OSCAT_BASIC._STRING_TO_BUFFER(STR:=str, POS:=0, PT:=ADR(S_BUF.BUFFER), SIZE:=size);
		S_BUF.SIZE := size; (* Sendelänge eintragen *)
		KEY := k;
		lk := k; (* letzten Key speichern *)
		t(IN:=FALSE); (* Reset Time *)
	END_IF;
END_IF;

(* revision history
hm	6. dec 2009		rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>9936175a-2273-4de9-a5bc-5548356a3d60</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="IRTRANS_SND_8" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="DEV_CODE">
              <type>
                <string />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="KEY_CODE_0">
              <type>
                <string />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="KEY_CODE_1">
              <type>
                <string />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="KEY_CODE_2">
              <type>
                <string />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="KEY_CODE_3">
              <type>
                <string />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="KEY_CODE_4">
              <type>
                <string />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="KEY_CODE_5">
              <type>
                <string />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="KEY_CODE_6">
              <type>
                <string />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="KEY_CODE_7">
              <type>
                <string />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="input_constant" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="IN_0">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="IN_1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="IN_2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="IN_3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="IN_4">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="IN_5">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="IN_6">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="IN_7">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="T_REPEAT">
              <type>
                <TIME />
              </type>
            </variable>
          </inputVars>
          <inOutVars>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> IP_Control Verwaltungsstruktur </xhtml>
              </documentation>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER_SHORT" />
              </type>
            </variable>
          </inOutVars>
          <outputVars>
            <variable name="KEY">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="skey">
              <type>
                <string />
              </type>
            </variable>
            <variable name="size">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="str">
              <type>
                <string />
              </type>
            </variable>
            <variable name="t">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="k">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="lk">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="d">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">d := IP_C.C_STATE &gt; 127 AND (IP_C.MAILBOX[1] &gt; 0 OR IP_C.C_MODE &lt;&gt; 5);
IF NOT d THEN RETURN; END_IF;

t(IN:= lk = k , PT:=T_REPEAT);

IF S_BUF.SIZE = 0 THEN
	IF IN_0 THEN
		skey := KEY_CODE_0; k := 1;
	ELSIF IN_1 THEN
		skey := KEY_CODE_1; k := 2;
	ELSIF IN_2 THEN
		skey := KEY_CODE_2; k := 3;
	ELSIF IN_3 THEN
		skey := KEY_CODE_3; k := 4;
	ELSIF IN_4 THEN
		skey := KEY_CODE_4; k := 5;
	ELSIF IN_5 THEN
		skey := KEY_CODE_5; k := 6;
	ELSIF IN_6 THEN
		skey := KEY_CODE_6; k := 7;
	ELSIF IN_7 THEN
		skey := KEY_CODE_7; k := 8;
	ELSE
		lk := 0;
		KEY := 0;
		RETURN; (* beenden wenn kein Key aktiv *)
	END_IF;

	IF lk &lt;&gt; k OR T.Q THEN (* anderer Key oder repeat wartezeit abgelaufen *)
		str := CONCAT('snd ',dev_code);
		str := CONCAT(str,',');
		str := CONCAT(str,skey);
		size := LEN(str);
		OSCAT_BASIC._STRING_TO_BUFFER(STR:=str, POS:=0, PT:=ADR(S_BUF.BUFFER), SIZE:=size);
		S_BUF.SIZE := size; (* Sendelänge eintragen *)
		KEY := k;
		lk := k; (* letzten Key speichern *)
		t(IN:=FALSE); (* Reset Time *)
	END_IF;
END_IF;

(* revision history
hm	6. dec 2009		rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>dd275c12-c857-4e17-a0ad-acdec8a7c6b8</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CSV_PARSER_BUF" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="SEP">
              <type>
                <BYTE />
              </type>
            </variable>
          </inputVars>
          <inOutVars>
            <variable name="RUN">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="OFFSET">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="VALUE">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="PT">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
          </inOutVars>
          <outputVars>
            <variable name="RESULT">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="step">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="size">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="c">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="v_add">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="i">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="state">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="eof">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="pv">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pve">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="watchdog">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="x">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF RUN &gt; 0 THEN
	IF state = 0 THEN (* Auswertung neu beginnen *)

		pv := ADR(VALUE);
		pv^ := 0; (* VALUE = '' *)
		pve := pv + INT_TO_DWORD(OSCAT_BASIC.STRING_LENGTH);
		i := UDINT_TO_INT(OFFSET);
		size := UINT_TO_INT(PT.SIZE) - 1;
		RESULT := 0;
		state := 5; (* Befehl in Arbeit (Busy) *)
		step := 0; (* Auswertung neu beginnen *)

		(* ---------------- Debug-Message -----------------------*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'CPF: Startindex: ~1';
			LOG_CL.PRINTF[1] := INT_TO_STRING(i);
			LOG_MSG();
		END_IF;*)
		(* -----------------------------------------------------------------*)

	END_IF;

	watchdog(IN:=FALSE,PT:=T#1ms); (* Timer neustarten *)
	watchdog.IN := TRUE;

	WHILE (state = 5) DO (* Schleife solange kein Ergebnis *)

		watchdog(); (* Timer aktualisieren *)

		IF watchdog.Q THEN (* watchdog ausgelöst *)
			state := 5;
			EXIT;
		ELSIF i &gt; size THEN (* kein weiteres zeichen vorhanden *)
			state := 10; (* nichts gefunden - Daten-Ende erreicht *)
			EXIT;
		ELSE

			c := PT.BUFFER[i]; (* neues Zeichen aus Buffer lesen *)
			eof := i + 1 = PT.SIZE; (* End of File *)

			v_add := 0;

			IF c = SEP THEN (* Neues Element erkannt *)
				state := 1;
				x := TRUE;
			ELSIF c &gt;= 32 THEN (* Element erkannt *)
				v_add := c; (* Zeichen ablegen *)
				IF eof THEN
					state := 2; (* Element und Zeilenende erkannt *)
				ELSE
					x := TRUE;
				END_IF;
			ELSE
				IF x THEN
					state := 2; (* Element und Zeilenende erkannt *)
					x := FALSE;
				END_IF;
			END_IF;

			IF v_add &gt; 0  AND pv &lt; pve THEN (* Zeichen zu Value-String hinzufügen *)
				pv^ := v_add; (* Zeichen eintragen *)
				pv := pv + 1;
				pv^ := 0; (* String-Terminierung eintragen *)
			END_IF;

			i := i + 1; (* Datenzeiger erhöhen *)

		END_IF;
	END_WHILE;

	CASE state OF
	01:	(* Element gefunden *)
		RESULT := 1; (* Element gefunden *)
		OFFSET := i; (* Offset uebernehmen *)
		RUN := 0;
		state := 0;
	02:	(* Element gefunden *)
		RESULT := 2; (* Element und Zeilenende erkannt *)
		OFFSET := i; (* Offset uebernehmen *)
		RUN := 0;
		state := 0;

	05:	RESULT := 5; (* in Arbeit *)

	10:	(* Indexüberschreitung - Bufferende *)
		RESULT := 10; (* nichts gefunden - Datenende erreicht *)
		OFFSET := i; (* Offset uebernehmen *)
		RUN := 0;
		state := 0;
	END_CASE;

	(* ---------------- Debug-Message -----------------------*)
	(*IF _debug_enable THEN
		LOG_CL.NEW_MSG := 'CPF: intern Result ~1 , state ~2, step ~3 , offset ~4, run ~5';
		LOG_CL.PRINTF[1] := BYTE_TO_STRING(RESULT);
		LOG_CL.PRINTF[2] := BYTE_TO_STRING(state);
		LOG_CL.PRINTF[3] := INT_TO_STRING(step);
		LOG_CL.PRINTF[4] := UDINT_TO_STRING(OFFSET);
		LOG_CL.PRINTF[5] := BYTE_TO_STRING(RUN);
		LOG_MSG();
	END_IF;*)
	(* -----------------------------------------------------------------*)

END_IF;

(* ---------------- Debug-Message -----------------------*)
(*IF _debug_enable THEN
	IF step_last &lt;&gt; step THEN
		LOG_CL.NEW_MSG := 'IPB: Step: ~1';
		LOG_CL.PRINTF[1]  := INT_TO_STRING(step);
		LOG_MSG();
	END_IF;
	step_last := step;
END_IF;*)
(* -----------------------------------------------------------------*)

(* revision history
ks	01. oct. 2010	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>116ee5e5-1aa9-4b66-a63a-0104efc8af66</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CSV_PARSER_FILE" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="SEP">
              <type>
                <BYTE />
              </type>
            </variable>
          </inputVars>
          <inOutVars>
            <variable name="FILENAME">
              <type>
                <string />
              </type>
            </variable>
            <variable name="FSD">
              <type>
                <derived name="FILE_SERVER_DATA" />
              </type>
            </variable>
            <variable name="RUN">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="OFFSET">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="VALUE">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="PT">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
          </inOutVars>
          <outputVars>
            <variable name="RESULT">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="i">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="state">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="e">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="mode">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="step">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="c">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="v_add">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="eof">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="pv">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pve">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="watchdog">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="x">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="FB">
              <type>
                <derived name="FILE_BLOCK" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF RUN &gt; 0 THEN

	IF state = 0 THEN (* Auswertung neu beginnen *)
		pv := ADR(VALUE);
		pv^ := 0; (* VALUE = '' *)
		pve := pv + INT_TO_DWORD(OSCAT_BASIC.STRING_LENGTH);
		i := OFFSET;
		RESULT := 0;
		state := 5; (* Befehl in Arbeit (Busy) *)
		step := 0; (* Auswertung neu beginnen *)

		(* ---------------- Debug-Message -----------------------*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'CPF: Startindex: ~1';
			LOG_CL.PRINTF[1] := UDINT_TO_STRING(i);
			LOG_MSG();
		END_IF;*)
		(* -----------------------------------------------------------------*)

	END_IF;

	watchdog(IN:=FALSE,PT:=T#1ms); (* Timer neustarten *)
	watchdog.IN := TRUE;

	WHILE (state = 5) DO (* Schleife solange kein Ergebnis *)

		mode := 1;
		FB(MODE:=mode,FSD:=fsd,PT:=PT,FILENAME:=FILENAME,POS:=i );
		e:=FB.ERROR;
		c:=FB.DATA;

		eof := i + 1 = FSD.FILE_SIZE; (* End of File *)

		(* ---------------- Debug-Message -----------------------*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'CPF: mode: ~1, error: ~2 , &gt;~7&lt;&gt;~3&lt; ~4 step ~5 index ~6';
			LOG_CL.PRINTF[1] := BYTE_TO_STRING(mode);
			LOG_CL.PRINTF[2] := BYTE_TO_STRING(e);
			LOG_CL.PRINTF[3] := BYTE_TO_STRING(c);
			LOG_CL.PRINTF[4] := BOOL_TO_STRING(eof);
			LOG_CL.PRINTF[5] := INT_TO_STRING(step);
			LOG_CL.PRINTF[6] := UDINT_TO_STRING(i);
			LOG_CL.PRINTF[7] := CHR_TO_STRING(c);
			LOG_MSG();
		END_IF;*)
		(* -----------------------------------------------------------------*)
		watchdog(); (* Timer aktualisieren *)

		IF mode &gt; 0 OR watchdog.Q THEN (* Baustein noch aktiv, oder watchdog ausgelöst *)
			state := 5;
			EXIT;
		ELSIF e &gt; 0 THEN (* File_error oder kein weiteres zeichen vorhanden *)
			state := 10; (* nichts gefunden - Daten-Ende erreicht *)
			EXIT;
		ELSE

			v_add := 0;

			IF c = SEP THEN (* Neues Element erkannt *)
				state := 1;
				x := TRUE;
			ELSIF c &gt;= 32 THEN (* Element erkannt *)
				v_add := c; (* Zeichen ablegen *)
				IF eof THEN
					state := 2; (* Element und Zeilenende erkannt *)
				ELSE
					x := TRUE;
				END_IF;
			ELSE
				IF x THEN
					state := 2; (* Element und Zeilenende erkannt *)
					x := FALSE;
				END_IF;
			END_IF;

			IF v_add &gt; 0  AND pv &lt; pve THEN (* Zeichen zu Value-String hinzufügen *)
				pv^ := v_add; (* Zeichen eintragen *)
				pv := pv + 1;
				pv^ := 0; (* String-Terminierung eintragen *)
			END_IF;

			i := i + 1; (* Datenzeiger erhöhen *)

		END_IF;
	END_WHILE;

	CASE state OF
	01:	(* Element gefunden *)
		RESULT := 1; (* Element gefunden *)
		OFFSET := i; (* Offset uebernehmen *)
		RUN := 0;
		state := 0;
	02:	(* Element gefunden *)
		RESULT := 2; (* Element und Zeilenende erkannt *)
		OFFSET := i; (* Offset uebernehmen *)
		RUN := 0;
		state := 0;

	05:	RESULT := 5; (* in Arbeit *)

	10:	(* Indexüberschreitung - Bufferende *)
		RESULT := 10; (* nichts gefunden - Datenende erreicht *)
		OFFSET := i; (* Offset uebernehmen *)
		RUN := 0;
		state := 0;
	END_CASE;

	(* ---------------- Debug-Message -----------------------*)
	(*IF _debug_enable THEN
		LOG_CL.NEW_MSG := 'CPF: intern Result ~1 , state ~2, step ~3 , offset ~4, run ~5';
		LOG_CL.PRINTF[1] := BYTE_TO_STRING(RESULT);
		LOG_CL.PRINTF[2] := BYTE_TO_STRING(state);
		LOG_CL.PRINTF[3] := INT_TO_STRING(step);
		LOG_CL.PRINTF[4] := UDINT_TO_STRING(OFFSET);
		LOG_CL.PRINTF[5] := BYTE_TO_STRING(RUN);
		LOG_MSG();
	END_IF;*)
	(* -----------------------------------------------------------------*)

END_IF;

(* ---------------- Debug-Message -----------------------*)
(*IF _debug_enable THEN
	IF step_last &lt;&gt; step THEN
		LOG_CL.NEW_MSG := 'CPF: Step: ~1';
		LOG_CL.PRINTF[1]  := INT_TO_STRING(step);
		LOG_MSG();
	END_IF;
	step_last := step;
END_IF;*)
(* -----------------------------------------------------------------*)

(* revision history
ks	01. oct. 2010	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>36b680dc-b6aa-48cb-b290-fe5e5d56b74b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FILE_BLOCK" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="MODE">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="FILENAME">
              <type>
                <string />
              </type>
            </variable>
            <variable name="FSD">
              <type>
                <derived name="FILE_SERVER_DATA" />
              </type>
            </variable>
            <variable name="PT">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="POS">
              <type>
                <UDINT />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="ERROR">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="DATA">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="step">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="i">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="data_start">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="data_stop">
              <type>
                <UDINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE step OF
0:	IF MODE &gt; 0 THEN
		ERROR := 0;
		IF FSD.FILE_OPEN AND (FSD.FILE_SIZE = 0 OR POS &gt;= FSD.FILE_SIZE) THEN
			ERROR := 255;
			MODE := 0;
		ELSIF POS &lt; data_start OR POS &gt; data_stop OR NOT FSD.FILE_OPEN THEN (* Daten lesen notwendig *)
			FSD.FILENAME := FILENAME;
			FSD.MODE := 1; (* open + read *)
			FSD.OFFSET := POS;
			PT.SIZE := 65535; (* maximale anzahl lesen *);
			data_start := 0;
			data_stop := 0;
			step := 10;
		ELSE (* Daten sind im Buffer vorhanden *)
			i := UDINT_TO_INT(POS - data_start); (* index berechnen *)
			DATA := PT.BUFFER[i];
			MODE := 0;
			(* ---------------------- Debug-Message ----------------------------*)
			(*IF _debug_enable THEN
				LOG_CL.NEW_MSG := 'FB: Pos: ~1 Byte: ~2 &gt;~3&lt;';
				LOG_CL.PRINTF[1] := UDINT_TO_STRING(POS);
				LOG_CL.PRINTF[2] := BYTE_TO_STRING(DATA);
				LOG_CL.PRINTF[3] := CHR_TO_STRING(DATA);
				LOG_MSG();
			END_IF;*)
			(* -----------------------------------------------------------------*)
		END_IF;
	END_IF;

10:	IF FSD.MODE = 0 THEN (* Befehl beendet *)
		IF FSD.ERROR &gt; 0 THEN
			ERROR := FSD.ERROR; (* Fehler ausgeben *)
			MODE := 0;
		ELSE
			data_start := POS;
			data_stop := POS + UINT_TO_UDINT(PT.SIZE) - 1;
		END_IF;
		step := 0;
	END_IF;
END_CASE;

(* revision history
ks	23. sep. 2010	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>1fef6738-5fb3-44c4-b70f-fe4ee63baf9a</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FILE_PATH_SPLIT" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="FILENAME">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
          </inputVars>
          <inOutVars>
            <variable name="X">
              <type>
                <derived name="FILE_PATH_DATA" />
              </type>
            </variable>
          </inOutVars>
          <localVars>
            <variable name="b">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="c">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="d">
              <type>
                <string length="1" />
              </type>
            </variable>
            <variable name="p1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="p2">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">X.DRIVE := '';
X.DIRECTORY := '';
X.FILENAME := '';
c := LEN(FILENAME);
IF c = 0 THEN
	FILE_PATH_SPLIT := FALSE;
	RETURN;
END_IF;

FOR b := 1 TO c DO
	d := MID(FILENAME, 1, b);
	IF d = ':' THEN
		p1 := b;
	ELSIF d = '/' OR d = '\' THEN
		p2 := b;
	END_IF;
END_FOR;

IF p1 = 2 THEN
	X.DRIVE := LEFT(FILENAME,p1);
END_IF;

IF p2 &gt; 0 AND p2 &gt; p1 THEN
	X.DIRECTORY := MID(FILENAME,p2 - p1,p1+1); (* len , pos *)
END_IF;

X.FILENAME := RIGHT(FILENAME,c - MAX (p1,p2));
FILE_PATH_SPLIT := TRUE;

(* revision history
ks	01. jan. 2011	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b6d3018b-3d69-440e-ae40-465c4e7321da</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="INI_PARSER_BUF" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="STR">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="RUN">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="OFFSET">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="KEY">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="VALUE">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="PT">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
          </inOutVars>
          <outputVars>
            <variable name="RESULT">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="step">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="size">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="c">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="k_add">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="v_add">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="i">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="state">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="eof">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="pv">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pk">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pve">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="pke">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="watchdog">
              <type>
                <derived name="TON" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF RUN &gt; 0 THEN
	IF state = 0 THEN (* Auswertung neu beginnen *)

		pv := ADR(VALUE);
		pv^ := 0; (* VALUE = '' *)
		pve := pv + INT_TO_DWORD(OSCAT_BASIC.STRING_LENGTH);
		pk := ADR(KEY);
		pk^ := 0; (* KEY = '' *)
		pke := pk + INT_TO_DWORD(OSCAT_BASIC.STRING_LENGTH);

		i := UDINT_TO_INT(OFFSET);
		size := UINT_TO_INT(PT.SIZE) - 1;
		RESULT := 0;
		state := 5; (* Befehl in Arbeit (Busy) *)
		step := 0; (* Auswertung neu beginnen *)

		(*####################  DEBUG-MESSAGE  ###################################*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'IPB: Startindex: ~1';
			LOG_CL.PRINTF[1]  := INT_TO_STRING(i);
			LOG_MSG();
		END_IF;*)
		(*########################################################################*)
	END_IF;

	watchdog(IN:=FALSE,PT:=T#1ms); (* Timer neustarten *)
	watchdog.IN := TRUE;

	WHILE (state = 5) DO (* Schleife solange kein Ergebnis *)

		watchdog(); (* Timer aktualisieren *)

		IF watchdog.Q THEN (* watchdog ausgelöst *)
			state := 5;
			EXIT;
		ELSIF i &gt; size THEN (* kein weiteres zeichen vorhanden *)
			state := 10; (* nichts gefunden - Daten-Ende erreicht *)
			EXIT;
		ELSE

			c := PT.BUFFER[i]; (* neues Zeichen aus Buffer lesen *)
			eof := i + 1 = PT.SIZE; (* End of File *)

			k_add := 0;
			v_add := 0;

			CASE step OF

			0: (* noch kein Modus erkannt *)
				IF c = 91 THEN (* mit "[" vergleichen *)
					step := 200; (* Modus für Section aktivieren *)
				ELSIF c = 59 OR c = 35 THEN (* mit ";" und '#' vergleichen *)
					step := 100; (* Modus für Kommentar aktivieren *)
				ELSIF c &gt; 32 THEN (* Key erkannt *)
					k_add := c; (* Zeichen ablegen *)
					step := 300; (* Key auswertung starten *)
				END_IF;
			100: (* Kommentar erkannt -&gt; Zeilenende suchen *)
				IF c &lt; 32 THEN (* prüfe auf Steuerzeichen *)
					state  := 3; (* Beenden -&gt; Kommentar wurde gefunden *)
				END_IF;
			200: (* Sections-start erkannt -&gt; Sectionsende suchen *)
				IF c = 93 THEN (* mit "]" vergleichen *)
					IF pk &gt; ADR(KEY) &gt; 0 THEN (* innerhalb von [] muss sich mindestens ein Zeichen befinden *)
						state  := 1; (* Beenden -&gt; Section wurde gefunden *)
					ELSE
						pk := ADR(KEY);
						pk^ := 0; (* KEY = '' *)
						step := 0; (* fehlerhafte Section-Zeile vorhanden -&gt; weitersuchen *)
					END_IF;
				ELSIF c &lt; 32 OR eof THEN (* Steuerzeichen - fehlerhafte Section-Zeile -&gt; weitersuchen *)
					pk := ADR(KEY);
					pk^ := 0; (* KEY = '' *)
					step := 0;
				ELSE
					k_add := c; (* Zeichen ablegen *)
				END_IF;
			300: (* Beginn: Key erkannt -&gt; Name auswerten *)
				IF c &lt; 32 THEN (* Steuerzeichen - fehlerhafte Key-Zeile -&gt; weitersuchen *)
					pk := ADR(KEY);
					pk^ := 0; (* KEY = '' *)
					step := 0;
				ELSIF c = 61 THEN (* prüfe auf '=' *)
					step := 330;
				ELSE
					k_add := c; (* Zeichen ablegen *)
				END_IF;
			330: (* KeyValue beginn suchen *)
				IF c &lt; 32 THEN (* Steuerzeichen  *)
					state := 2; (* Key ohne Value gefunden *)
				ELSIF eof THEN
					state := 2; (* Key ohne Value gefunden *)
					v_add := c; (* Zeichen ablegen *)
				ELSE
					v_add := c; (* Zeichen ablegen *)
					step := 350;
				END_IF;
			350: (* KeyValue Ende suchen *)
				IF c &lt; 32 THEN (* Steuerzeichen *)
					state := 2; (* Key gefunden *)
				ELSIF eof THEN
					v_add := c; (* Zeichen ablegen *)
					state := 2; (* Key gefunden *)
				ELSE
					v_add := c; (* Zeichen ablegen *)
				END_IF;
			END_CASE;

			IF v_add &gt; 0  AND pv &lt; pve THEN (* Zeichen zu Value-String hinzufügen *)
				pv^ := v_add; (* Zeichen eintragen *)
				pv := pv + 1;
				pv^ := 0; (* String-Terminierung eintragen *)
			END_IF;

			IF k_add &gt; 0 AND pk &lt; pke THEN (* Zeichen zu Key-String hinzufügen *)
				pk^ := k_add; (* Zeichen eintragen *)
				pk := pk + 1;
				pk^ := 0; (* String-Terminierung eintragen *)
			END_IF;

			i := i + 1; (* Datenzeiger erhöhen *)

		END_IF;
	END_WHILE;

	CASE state OF
	01:	(* Section gefunden *)
		IF RUN = 1 OR RUN = 3 THEN (* Section vorgewählt oder alles rückmelden *)
			IF KEY = STR OR LEN(STR) = 0 THEN (* mit gesuchter Section vergleichen oder keine Section vorgegeben *)
				RESULT := 1; (* Section gefunden *)
				OFFSET := i; (* Offset uebernehmen *)
				RUN := 0;
				state := 0;
			END_IF;
		ELSE
			pk := ADR(KEY);
			pk^ := 0; (* KEY = '' *)
			RESULT := 11; (* Key nicht gefunden , Section-Ende - Offset nicht verändern *)
			RUN := 0;
			state := 0;
		END_IF;
	02:	(* Key gefunden *)
		IF RUN = 2 OR RUN = 3 THEN (* Key vorgewählt oder alles rückmelden *)
			IF KEY = STR OR LEN(STR) = 0 THEN (* mit gesuchten Key vergleichen *)
				RESULT := 2; (* Key gefunden *)
				OFFSET := i; (* Offset uebernehmen *)
				RUN := 0;
				state := 0;
			END_IF;
		END_IF;
	03:	(* Kommenar gefunden *)
		OFFSET := i; (* Offset uebernehmen *)
		state := 0;

	05:	RESULT := 5; (* in Arbeit *)

	10:	(* Indexüberschreitung - Bufferende *)
		RESULT := 10; (* nichts gefunden - Datenende erreicht *)
		OFFSET := i; (* Offset uebernehmen *)
		RUN := 0;
		state := 0;
	END_CASE;

	(*####################  DEBUG-MESSAGE  ###################################*)
	(*IF _debug_enable THEN
		LOG_CL.NEW_MSG := 'IPF: intern Result ~1 , state ~2, step ~3 , offset ~4, run ~5';
		LOG_CL.PRINTF[1] := BYTE_TO_STRING(RESULT);
		LOG_CL.PRINTF[2] := BYTE_TO_STRING(state);
		LOG_CL.PRINTF[3] := INT_TO_STRING(step);
		LOG_CL.PRINTF[4] := UDINT_TO_STRING(OFFSET);
		LOG_CL.PRINTF[5] := BYTE_TO_STRING(RUN);
		LOG_MSG();
	END_IF;*)
	(*########################################################################*)

END_IF;

(*####################  DEBUG-MESSAGE  ###################################*)
(*IF _debug_enable THEN
	IF step_last &lt;&gt; step THEN
		LOG_CL.NEW_MSG := 'IPB: Step: ~1';
		LOG_CL.PRINTF[1]  := INT_TO_STRING(step);
		LOG_MSG();
	END_IF;
	step_last := step;
END_IF;*)
(*########################################################################*)

(* revision history
ks	23. sep. 2010	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>76baad16-5fac-489b-abd3-629ed2201054</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="INI_PARSER_FILE" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="FILENAME">
              <type>
                <string />
              </type>
            </variable>
            <variable name="FSD">
              <type>
                <derived name="FILE_SERVER_DATA" />
              </type>
            </variable>
            <variable name="STR">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="RUN">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="OFFSET">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="KEY">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="VALUE">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="PT">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
          </inOutVars>
          <outputVars>
            <variable name="RESULT">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="FB">
              <type>
                <derived name="FILE_BLOCK" />
              </type>
            </variable>
            <variable name="i">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="state">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="e">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="mode">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="step">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="c">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="k_add">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="v_add">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="eof">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="pv">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pk">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pve">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="pke">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="watchdog">
              <type>
                <derived name="TON" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF RUN &gt; 0 THEN

	IF state = 0 THEN (* Auswertung neu beginnen *)
		pv := ADR(VALUE);
		pv^ := 0; (* VALUE = '' *)
		pve := pv + INT_TO_DWORD(OSCAT_BASIC.STRING_LENGTH);
		pk := ADR(KEY);
		pk^ := 0; (* KEY = '' *)
		pke := pk + INT_TO_DWORD(OSCAT_BASIC.STRING_LENGTH);

		i := OFFSET;
		RESULT := 0;
		state := 5; (* Befehl in Arbeit (Busy) *)
		step := 0; (* Auswertung neu beginnen *)

		(*####################  DEBUG-MESSAGE  ###################################*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'IPF: Startindex: ~1';
			LOG_CL.PRINTF[1] := UDINT_TO_STRING(i);
			LOG_MSG();
		END_IF;*)
		(*########################################################################*)

	END_IF;

	watchdog(IN:=FALSE,PT:=T#1ms); (* Timer neustarten *)
	watchdog.IN := TRUE;

	WHILE (state = 5) DO (* Schleife solange kein Ergebnis *)

		mode := 1;
		FB(MODE:=mode,FSD:=fsd,PT:=PT,FILENAME:=FILENAME,POS:=i );
		e:=FB.ERROR;
		c:=FB.DATA;

		eof := i + 1 = FSD.FILE_SIZE; (* End of File *)

		(*####################  DEBUG-MESSAGE  ###################################*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'IPF: mode: ~1, error: ~2 , &gt;~7&lt;&gt;~3&lt; ~4 step ~5 index ~6';
			LOG_CL.PRINTF[1] := BYTE_TO_STRING(mode);
			LOG_CL.PRINTF[2] := BYTE_TO_STRING(e);
			LOG_CL.PRINTF[3] := BYTE_TO_STRING(c);
			LOG_CL.PRINTF[4] := BOOL_TO_STRING(eof);
			LOG_CL.PRINTF[5] := INT_TO_STRING(step);
			LOG_CL.PRINTF[6] := UDINT_TO_STRING(i);
			LOG_CL.PRINTF[7] := CHR_TO_STRING(c);
			LOG_MSG();
		END_IF;*)
		(*########################################################################*)

		watchdog(); (* Timer aktualisieren *)

		IF mode &gt; 0 OR watchdog.Q THEN (* Baustein noch aktiv, oder watchdog ausgelöst *)
			state := 5;
			EXIT;
		ELSIF e &gt; 0 THEN (* File_error oder kein weiteres zeichen vorhanden *)
			state := 10; (* nichts gefunden - Daten-Ende erreicht *)
			EXIT;
		ELSE

			k_add := 0;
			v_add := 0;

			CASE step OF

			0: (* noch kein Modus erkannt *)
				IF c = 91 THEN (* mit "[" vergleichen *)
					step := 200; (* Modus für Section aktivieren *)
				ELSIF c = 59 OR c = 35 THEN (* mit ";" und '#' vergleichen *)
					step := 100; (* Modus für Kommentar aktivieren *)
				ELSIF c &gt; 32 THEN (* Key erkannt *)
					k_add := c; (* Zeichen ablegen *)
					step := 300; (* Key auswertung starten *)
				END_IF;
			100: (* Kommentar erkannt -&gt; Zeilenende suchen *)
				IF c &lt; 32 THEN (* prüfe auf Steuerzeichen *)
					state  := 3; (* Beenden -&gt; Kommentar wurde gefunden *)
				END_IF;
			200: (* Sections-start erkannt -&gt; Sectionsende suchen *)
				IF c = 93 THEN (* mit "]" vergleichen *)
					IF pk &gt; ADR(KEY) &gt; 0 THEN (* innerhalb von [] muss sich mindestens ein Zeichen befinden *)
						state  := 1; (* Beenden -&gt; Section wurde gefunden *)
					ELSE
						pk := ADR(KEY);
						pk^ := 0; (* KEY = '' *)
						step := 0; (* fehlerhafte Section-Zeile vorhanden -&gt; weitersuchen *)
					END_IF;
				ELSIF c &lt; 32 OR eof THEN (* Steuerzeichen - fehlerhafte Section-Zeile -&gt; weitersuchen *)
					pk := ADR(KEY);
					pk^ := 0; (* KEY = '' *)
					step := 0;
				ELSE
					k_add := c; (* Zeichen ablegen *)
				END_IF;
			300: (* Beginn: Key erkannt -&gt; Name auswerten *)
				IF c &lt; 32 THEN (* Steuerzeichen - fehlerhafte Key-Zeile -&gt; weitersuchen *)
					pk := ADR(KEY);
					pk^ := 0; (* KEY = '' *)
					step := 0;
				ELSIF c = 61 THEN (* prüfe auf '=' *)
					step := 330;
				ELSE
					k_add := c; (* Zeichen ablegen *)
				END_IF;
			330: (* KeyValue beginn suchen *)
				IF c &lt; 32 THEN (* Steuerzeichen  *)
					state := 2; (* Key ohne Value gefunden *)
				ELSIF eof THEN
					state := 2; (* Key ohne Value gefunden *)
					v_add := c; (* Zeichen ablegen *)
				ELSE
					v_add := c; (* Zeichen ablegen *)
					step := 350;
				END_IF;
			350: (* KeyValue Ende suchen *)
				IF c &lt; 32 THEN (* Steuerzeichen *)
					state := 2; (* Key gefunden *)
				ELSIF eof THEN
					v_add := c; (* Zeichen ablegen *)
					state := 2; (* Key gefunden *)
				ELSE
					v_add := c; (* Zeichen ablegen *)
				END_IF;
			END_CASE;

			IF v_add &gt; 0  AND pv &lt; pve THEN (* Zeichen zu Value-String hinzufügen *)
				pv^ := v_add; (* Zeichen eintragen *)
				pv := pv + 1;
				pv^ := 0; (* String-Terminierung eintragen *)
			END_IF;

			IF k_add &gt; 0 AND pk &lt; pke THEN (* Zeichen zu Key-String hinzufügen *)
				pk^ := k_add; (* Zeichen eintragen *)
				pk := pk + 1;
				pk^ := 0; (* String-Terminierung eintragen *)
			END_IF;

			i := i + 1; (* Datenzeiger erhöhen *)

		END_IF;
	END_WHILE;

	CASE state OF
	01:	(* Section gefunden *)
		IF RUN = 1 OR RUN = 3 THEN (* Section vorgewählt oder alles rückmelden *)
			IF KEY = STR OR LEN(STR) = 0 THEN (* mit gesuchter Section vergleichen oder keine Section vorgegeben *)
				RESULT := 1; (* Section gefunden *)
				OFFSET := i; (* Offset uebernehmen *)
				RUN := 0;
				state := 0;
			END_IF;
		ELSE
			pk := ADR(KEY);
			pk^ := 0; (* KEY = '' *)
			RESULT := 11; (* Key nicht gefunden , Section-Ende - Offset nicht verändern *)
			RUN := 0;
			state := 0;
		END_IF;
	02:	(* Key gefunden *)
		IF RUN = 2 OR RUN = 3 THEN (* Key vorgewählt oder alles rückmelden *)
			IF KEY = STR OR LEN(STR) = 0 THEN (* mit gesuchten Key vergleichen *)
				RESULT := 2; (* Key gefunden *)
				OFFSET := i; (* Offset uebernehmen *)
				RUN := 0;
				state := 0;
			END_IF;
		END_IF;
	03:	(* Kommenar gefunden *)
		OFFSET := i; (* Offset uebernehmen *)
		state := 0;

	05:	RESULT := 5; (* in Arbeit *)

	10:	(* Indexüberschreitung - Bufferende *)
		RESULT := 10; (* nichts gefunden - Datenende erreicht *)
		OFFSET := i; (* Offset uebernehmen *)
		RUN := 0;
		state := 0;
	END_CASE;

	(*####################  DEBUG-MESSAGE  ###################################*)
	(*IF _debug_enable THEN
		LOG_CL.NEW_MSG := 'IPF: intern Result ~1 , state ~2, step ~3 , offset ~4, run ~5';
		LOG_CL.PRINTF[1] := BYTE_TO_STRING(RESULT);
		LOG_CL.PRINTF[2] := BYTE_TO_STRING(state);
		LOG_CL.PRINTF[3] := INT_TO_STRING(step);
		LOG_CL.PRINTF[4] := UDINT_TO_STRING(OFFSET);
		LOG_CL.PRINTF[5] := BYTE_TO_STRING(RUN);
		LOG_MSG();
	END_IF;*)
	(*########################################################################*)

END_IF;

(*####################  DEBUG-MESSAGE  ###################################*)
(*IF _debug_enable THEN
	IF step_last &lt;&gt; step THEN
		LOG_CL.NEW_MSG := 'IPB: Step: ~1';
		LOG_CL.PRINTF[1]  := INT_TO_STRING(step);
		LOG_MSG();
	END_IF;
	step_last := step;
END_IF;*)
(*########################################################################*)

(* revision history
ks	23. sep. 2010	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>3584a67c-c67b-4d83-a129-6c5cc810d9bb</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FILE_SERVER" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="FSD">
              <type>
                <derived name="FILE_SERVER_DATA" />
              </type>
            </variable>
            <variable name="PT">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
          </inOutVars>
          <localVars>
            <variable name="buf_size">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="handle">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="read_max_length">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="file_position">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="used_filename">
              <type>
                <string />
              </type>
            </variable>
            <variable name="length_read">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="write_length">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="length_written">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="open_handle">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="seek_position">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="tell_position">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="file_size">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="open_mode">
              <type>
                <string length="2" />
              </type>
            </variable>
            <variable name="last_mode">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="command">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="error_code">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="error">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="file_change">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="step">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="FSR">
              <type>
                <derived name="FILE_SERVER_RUNTIME" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE step OF
0:
	IF FSD.MODE = LIMIT(1,FSD.MODE,5) THEN

		(* ---------------------- Debug-Message ----------------------------*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'File_Start Mode=~1';
			LOG_CL.PRINTF[1] := BYTE_TO_STRING(FSD.MODE);
			FB_LOG_MESSAGE();
		END_IF;*)
		(* -----------------------------------------------------------------*)

		buf_size := SIZEOF(PT.BUFFER);

		IF FSD.MODE = 4 THEN (* File_Remove *)
			IF handle &gt; 0 THEN
				File_change := TRUE;
				step := 32000; (* File_Close ausführen *)
			ELSE
				step := 90; (* File_Remove ausführen *)
			END_IF;

		ELSIF FSD.MODE = 5 THEN (* File_Close *)
			step := 32000; (* File_Close ausführen *)

		ELSIF handle = 0 THEN (* MODE 1,2,3 *)
			step := 100; (* File muss erst geöffnet werden *)

		ELSE (* File ist geöffnset *)
			IF used_filename = FSD.FILENAME AND FSD.MODE = last_mode THEN (* kein Moduswechsel ? *)
				step := 200; (* ohne open prozedure weitermachen *)
			ELSE
				step := 32000;
				File_change := TRUE;
			END_IF;
		END_IF;
	END_IF;

(* ----------------------------------- *)
090: (* File_Remove *)
	command := 7; (* File Remove *)
	step := 95;

095: (* File_Remove beendet *)
	IF command = 0 THEN
		step := 30000; (* Beenden *)
	END_IF;
(* ----------------------------------- *)

100: (* File Size - Dateigroesse bestimmen *)
	command := 8; (* File Size *)
	step := 110;

110: (* File Size beendet *)
	IF command = 0 THEN
		IF FSD.MODE = 1 THEN (* open + read *)
			open_mode := 'r';
			FSD.FILE_SIZE := file_size; (* aktuelle Dateigroesse *)
		ELSIF FSD.MODE = 2 THEN (* open + write *)
			open_mode := 'a';
			FSD.FILE_SIZE := file_size; (* aktuelle Dateigroesse *)
		ELSE (* open new + write *)
			open_mode := 'w';
			FSD.FILE_SIZE := 0; (* aktuelle Dateigroesse *)
		END_IF;
		command := 1; (* File Open *)
		last_mode := FSD.MODE;
		step := 150; (* File_Open ausführen *)
	END_IF;

150: (* File Open *)
	IF command = BYTE#0 THEN
		IF error THEN
			step := 30000; (* Beenden *)
		ELSE
			(* Filedaten eintragen *)
			handle := open_handle;
			used_filename := FSD.FILENAME;
			file_position := UDINT#4294967295; (* maximal = unbekannt *)
			FSD.FILE_OPEN := TRUE;
			step := 200;
		END_IF;
	END_IF;

200: (* File Seek *)
	IF FSD.OFFSET = UDINT#4294967294 THEN (* 16#FFFF_FFFE -&gt; Zeiger auf Dateiende stellen *)
		command := 5; (* File-Seek *)
		seek_position := FSD.FILE_SIZE;
		step := 210;
	ELSIF FSD.OFFSET &gt; FSD.FILE_SIZE THEN (* prüfe auf gültige offset-vorgabe *)
		error_code := 255;
		step := 30000; (* Beenden *)
	ELSIF FSD.OFFSET &lt;&gt; file_position THEN
		command := 5; (* File-Seek *)
		seek_position := FSD.OFFSET;
		step := 210;
	ELSE
		step := 300;
	END_IF;

210: (* File Seek *)
	IF command = 0 THEN
		file_position := seek_position;
		IF error THEN
			step := 30000; (* Beenden *)
		ELSE
			step := 300;
		END_IF;
	END_IF;

300: (* Read or Write ? *)
	IF FSD.MODE = 1 THEN
		step := 400; (* Read *)
	ELSE
		step := 500; (* Write *)
	END_IF;

400: (* File Read *)
	IF UINT_TO_UDINT(PT.SIZE) &gt; buf_size THEN (* Leselänge auf Buffergroesse begrenzen *)
		read_max_length := buf_size;
	ELSE
		read_max_length := UINT_TO_UDINT(PT.SIZE);
	END_IF;

	(* Leselänge an Dateilänge anpassen *)
	IF file_position + read_max_length &gt; FSD.FILE_SIZE THEN
		read_max_length := FSD.FILE_SIZE - file_position;
	END_IF;

	IF read_max_length &gt; 0 THEN
		command := 3; (* File_Read *)
		step := 410;
	ELSE
		PT.SIZE := UINT#0;
		step := 30000; (* Beenden *)
	END_IF;

410: (* File Read *)
	IF command = 0 THEN
		PT.SIZE := UDINT_TO_UINT(length_read);
		IF NOT Error THEN
			file_position := file_position + length_read; (* aktueller File_Position korrigieren *)
			FSD.OFFSET := file_position;
		END_IF;
		step := 30000; (* Beenden *)
	END_IF;

500: (* File Write *)
	IF UINT_TO_UDINT(PT.SIZE) &gt; buf_size THEN (* Schreiblänge auf Buffergroesse begrenzen *)
		write_length := buf_size;
	ELSE
		write_length := UINT_TO_UDINT(PT.SIZE);
	END_IF;

	IF write_length &gt; 0 THEN
		command := 4; (* File_Write *)
		step := 510;
	ELSE
		step := 30000; (* Beenden *)
	END_IF;

510:
	IF command = 0 THEN
		IF NOT Error THEN
			file_position := file_position + length_written; (* aktueller File_Position korrigieren *)
			FSD.OFFSET := file_position;
			IF file_position &gt; FSD.FILE_SIZE THEN (* Datei ist groesser geworden *)
				FSD.FILE_SIZE := file_position;
			END_IF;
		END_IF;
		step := 30000; (* Beenden *)
	END_IF;

 (* --------------------------------------------- *)

30000: (* Befehl fertig *)
	FSD.MODE := 0;
	FSD.ERROR := error_code;
	step := 0;

	(* ---------------- Debug-Message -----------------------*)
	(*IF _debug_enable THEN
		LOG_CL.NEW_MSG := 'File_Stop: File ~1, error ~7, code ~8';
		LOG_CL.PRINTF[1]  := used_filename;
		LOG_CL.PRINTF[7]  := INT_TO_STRING(BOOL_TO_INT(error));
		LOG_CL.PRINTF[8]  := BYTE_TO_STRING(error_code);
		FB_LOG_MESSAGE();
	END_IF;*)
	(* --------------------------------------------- *)

32000:
	IF handle &gt; 0 THEN
		command := 2; (* File_Close ausführen *)
	END_IF;
	step := 32100;

32100:
	IF command = 0 THEN (* File Close beendet *)
		(* Filedaten ablöschen *)
		FSD.FILE_OPEN := FALSE;
		file_position := 0;
		FSD.FILE_SIZE := 0;
		FSD.OFFSET := 0;
		used_filename := '';
		handle := 0;

		(* File_Name wurde fliegend geändert ? *)
		IF File_change THEN
			File_change := FALSE;
			step := 0;
		ELSE
			step := 30000;
		END_IF;
	END_IF;

END_CASE;

(* 1 = file_open
   2 = file_close
   3 = file_read
   4 = file_write
   5 = file_seek
   6 = file_tell
   7 = file_remove
*) 

FSR(MODE:=BYTE#0,COMMAND:=command,FSD:=FSD); (* File server Runtime / Befehlsstart überwachen *)

(* ------------ File Open ------------- *)
IF command = 1 THEN
	open_handle := SysFileOpen(FSD.FILENAME,open_mode);
	error := open_handle = 0;
	error_code := SEL(error,0,command);
	command := 0;
	FSR(MODE:=BYTE#1,COMMAND:=command,FSD:=FSD); (* File server Runtime / Befehlstop überwachen *)
	(* ---------------- Debug-Message -----------------------*)
	(*IF _debug_enable THEN
		LOG_CL.NEW_MSG := 'Open: File ~1, handle ~2 , mode ~3 , error ~7, code ~8';
		LOG_CL.PRINTF[1] := FSD.FILENAME;
		LOG_CL.PRINTF[2] := DWORD_TO_STRING(open_handle);
		LOG_CL.PRINTF[3] := open_mode;
		LOG_CL.PRINTF[7] := INT_TO_STRING(BOOL_TO_INT(error));
		LOG_CL.PRINTF[8] := BYTE_TO_STRING(error_code);
		FB_LOG_MESSAGE();
	END_IF;*)
	(* -----------------------------------------------------------------*)
END_IF;

(* ----------- File Close ------------- *)
IF command = 2 THEN
	error := NOT SysFileClose(handle);
	error_code := SEL(error,0,command);
	command := 0;
	FSR(MODE:=BYTE#1,COMMAND:=command,FSD:=FSD); (* File server Runtime / Befehlstop überwachen *)
	(* ---------------- Debug-Message -----------------------*)
	(*IF _debug_enable THEN
		LOG_CL.NEW_MSG := 'Close: File ~1, error ~7, code ~8';
		LOG_CL.PRINTF[1] := used_filename;
		LOG_CL.PRINTF[7] := INT_TO_STRING(BOOL_TO_INT(error));
		LOG_CL.PRINTF[8] := BYTE_TO_STRING(error_code);
		FB_LOG_MESSAGE();
	END_IF;*)
	(* -----------------------------------------------------------------*)
END_IF;

(* ------------ File Read ------------- *)
IF command = 3 THEN
	length_read := SysFileRead(handle, ADR(PT.BUFFER), read_max_length);
	error := length_read = 0;
	error_code := SEL(error,0,command);
	command := 0;
	FSR(MODE:=BYTE#1,COMMAND:=command,FSD:=FSD); (* File server Runtime / Befehlstop überwachen *)
	(* ---------------- Debug-Message -----------------------*)
	(*IF _debug_enable THEN
		LOG_CL.NEW_MSG := 'Read: File ~1, soll ~2,ist ~3 ,error ~7, code ~8';
		LOG_CL.PRINTF[1] := used_filename;
		LOG_CL.PRINTF[2] := UDINT_TO_STRING(read_max_length);
		LOG_CL.PRINTF[3] := UDINT_TO_STRING(length_read);
		LOG_CL.PRINTF[7] := INT_TO_STRING(BOOL_TO_INT(error));
		LOG_CL.PRINTF[8] := BYTE_TO_STRING(error_code);
		FB_LOG_MESSAGE();
	END_IF;*)
	(* -----------------------------------------------------------------*)
END_IF;

(* ------------ File Write ------------- *)
IF command = 4 THEN
	length_written := SysFileWrite(handle, ADR(PT.BUFFER), write_length);
	error := length_written = 0;
	error_code := SEL(error,0,command);
	command := 0;
	FSR(MODE:=BYTE#1,COMMAND:=command,FSD:=FSD); (* File server Runtime / Befehlstop überwachen *)
	(* ---------------- Debug-Message -----------------------*)
	(*IF _debug_enable THEN
		LOG_CL.NEW_MSG := 'Write: File ~1, soll ~2,ist ~3 ,error ~7, code ~8';
		LOG_CL.PRINTF[1] := used_filename;
		LOG_CL.PRINTF[2] := UDINT_TO_STRING(write_length);
		LOG_CL.PRINTF[3] := UDINT_TO_STRING(length_written);
		LOG_CL.PRINTF[7] := INT_TO_STRING(BOOL_TO_INT(error));
		LOG_CL.PRINTF[8] := BYTE_TO_STRING(error_code);
		FB_LOG_MESSAGE();
	END_IF;*)
	(* -----------------------------------------------------------------*)
END_IF;

(* ------------ File Seek ------------- *)
IF command = 5 THEN
	error := NOT SysFileSetPos(handle, seek_position);
	error_code := SEL(error,0,command);
	command := 0;
	FSR(MODE:=BYTE#1,COMMAND:=command,FSD:=FSD); (* File server Runtime / Befehlstop überwachen *)
	(* ---------------- Debug-Message -----------------------*)
	(*IF _debug_enable THEN
		LOG_CL.NEW_MSG := 'Seek: File ~1,pos ~3 ,error ~7, code ~8';
		LOG_CL.PRINTF[1] := used_filename;
		LOG_CL.PRINTF[3] := UDINT_TO_STRING(seek_position);
		LOG_CL.PRINTF[7] := INT_TO_STRING(BOOL_TO_INT(error));
		LOG_CL.PRINTF[8] := BYTE_TO_STRING(error_code);
		FB_LOG_MESSAGE();
	END_IF;*)
	(* -----------------------------------------------------------------*)
END_IF;

(* ------------ File Tell ------------- *)
IF command = 6 THEN
	tell_position := SysFileGetPos(handle);
	error := tell_position &lt; 0;
	error_code := SEL(error,0,command);
	command := 0;
	FSR(MODE:=BYTE#1,COMMAND:=command,FSD:=FSD); (* File server Runtime / Befehlstop überwachen *)
	(* ---------------- Debug-Message -----------------------*)
	(*IF _debug_enable THEN
		LOG_CL.NEW_MSG := 'Tell: File ~1, pos ~3 ,error ~7, code ~8';
		LOG_CL.PRINTF[1] := used_filename;
		LOG_CL.PRINTF[3] := UDINT_TO_STRING(tell_position);
		LOG_CL.PRINTF[7] := INT_TO_STRING(BOOL_TO_INT(error));
		LOG_CL.PRINTF[8] := BYTE_TO_STRING(error_code);
		FB_LOG_MESSAGE();
	END_IF;*)
	(* -----------------------------------------------------------------*)
END_IF;

(* ------------ File Remove ------------- *)
IF command = 7 THEN
	error := NOT SysFileDelete(FSD.FILENAME);
	error_code := SEL(error,0,command);
	command := 0;
	FSR(MODE:=BYTE#1,COMMAND:=command,FSD:=FSD); (* File server Runtime / Befehlstop überwachen *)
	(* ---------------- Debug-Message -----------------------*)
	(*IF _debug_enable THEN
		LOG_CL.NEW_MSG := 'Remove: File ~1, error ~7, code ~8';
		LOG_CL.PRINTF[1] := FSD.FILENAME;
		LOG_CL.PRINTF[7] := INT_TO_STRING(BOOL_TO_INT(error));
		LOG_CL.PRINTF[8] := BYTE_TO_STRING(error_code);
		FB_LOG_MESSAGE();
	END_IF;*)
	(* -----------------------------------------------------------------*)
END_IF;

(* ------------ File Size ------------- *)
IF command = 8 THEN
	file_size := SysFileGetSize(FSD.FILENAME);
	error_code := 0; (* kein Errorcode vorhanden *)
	command := 0;
	FSR(MODE:=BYTE#1,COMMAND:=command,FSD:=FSD); (* File server Runtime / Befehlstop überwachen *)
	(* ---------------- Debug-Message -----------------------*)
	(*IF _debug_enable THEN
		LOG_CL.NEW_MSG := 'Size: File ~1, size ~3, error ~7, code ~8';
		LOG_CL.PRINTF[1] := FSD.FILENAME;
		LOG_CL.PRINTF[3] := DINT_TO_STRING(file_size);
		LOG_CL.PRINTF[7] := INT_TO_STRING(BOOL_TO_INT(error));
		LOG_CL.PRINTF[8] := BYTE_TO_STRING(error_code);
		FB_LOG_MESSAGE();
	END_IF;*)
	(* -----------------------------------------------------------------*)
END_IF;

(* ---------------- Debug-Message -----------------------*)
(*IF _debug_enable THEN
	IF step_last &lt;&gt; step THEN
		LOG_CL.NEW_MSG := 'Step: ~1';
		LOG_CL.PRINTF[1] := INT_TO_STRING(step);
		FB_LOG_MESSAGE();
	END_IF;
	step_last := step;
END_IF;*)
(* -----------------------------------------------------------------*)

(* revision history
ks	08. mar. 2016	rev 1.2
	Filesystem Laufzeitmessungen

ks	02. oct. 2014	rev 1.1.1
	PCWORX SRT File Delete error

ks	05. mai. 2012	rev 1.1
	auto_close funktion entfernt

ks	23. sep. 2010	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>6f6b82b1-4af4-486c-9f3a-df642d24ec39</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FILE_SERVER_RUNTIME" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="MODE">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="COMMAND">
              <type>
                <BYTE />
              </type>
            </variable>
          </inputVars>
          <inOutVars>
            <variable name="FSD">
              <type>
                <derived name="FILE_SERVER_DATA" />
              </type>
            </variable>
          </inOutVars>
          <localVars>
            <variable name="last_command">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="init">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="start_tx">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="stop_tx">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="runtime">
              <type>
                <DWORD />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF init = FALSE THEN
	init := TRUE;
	FSD.RUNTIME.TIME_FILE_OPEN_MIN := UDINT#99999999;
	FSD.RUNTIME.TIME_FILE_CLOSE_MIN := UDINT#99999999;
	FSD.RUNTIME.TIME_FILE_READ_MIN := UDINT#99999999;
	FSD.RUNTIME.TIME_FILE_WRITE_MIN := UDINT#99999999;
	FSD.RUNTIME.TIME_FILE_TELL_MIN := UDINT#99999999;
	FSD.RUNTIME.TIME_FILE_SEEK_MIN := UDINT#99999999;
	FSD.RUNTIME.TIME_FILE_DELETE_MIN := UDINT#99999999;
END_IF;

(* warten auf File_Server Befehl *)
IF MODE = BYTE#0 THEN

	(* neuen befehl erkannt *)
	IF last_command = BYTE#0 AND COMMAND &lt;&gt; BYTE#0 THEN

		(* read system time *)
		start_tx := OSCAT_BASIC.T_PLC_MS();

	END_IF;
END_IF;


IF MODE = BYTE#1 THEN

	(* read system time *)
	stop_tx:=  OSCAT_BASIC.T_PLC_MS();

	runtime:= (stop_tx - start_tx);

	CASE BYTE_TO_INT(COMMAND) OF

	1:	FSD.RUNTIME.TIME_FILE_OPEN_CUR := runtime; 			(* aktuelle laufzeit *)
		IF FSD.RUNTIME.TIME_FILE_OPEN_MAX &lt; runtime THEN
			FSD.RUNTIME.TIME_FILE_OPEN_MAX := runtime;		(* neue max laufzeit *)
		END_IF;
		IF FSD.RUNTIME.TIME_FILE_OPEN_MIN &gt; runtime THEN
			FSD.RUNTIME.TIME_FILE_OPEN_MIN := runtime;		(* neue min laufzeit *)
		END_IF;

	2:	FSD.RUNTIME.TIME_FILE_CLOSE_CUR := runtime; 			(* aktuelle laufzeit *)
		IF FSD.RUNTIME.TIME_FILE_CLOSE_MAX &lt; runtime THEN
			FSD.RUNTIME.TIME_FILE_CLOSE_MAX := runtime;		(* neue max laufzeit *)
		END_IF;
		IF FSD.RUNTIME.TIME_FILE_CLOSE_MIN &gt; runtime THEN
			FSD.RUNTIME.TIME_FILE_CLOSE_MIN := runtime;		(* neue min laufzeit *)
		END_IF;

	3:	FSD.RUNTIME.TIME_FILE_READ_CUR := runtime; 			(* aktuelle laufzeit *)
		IF FSD.RUNTIME.TIME_FILE_READ_MAX &lt; runtime THEN
			FSD.RUNTIME.TIME_FILE_READ_MAX := runtime;		(* neue max laufzeit *)
		END_IF;
		IF FSD.RUNTIME.TIME_FILE_READ_MIN &gt; runtime THEN
			FSD.RUNTIME.TIME_FILE_READ_MIN := runtime;		(* neue min laufzeit *)
		END_IF;

	4:	FSD.RUNTIME.TIME_FILE_WRITE_CUR := runtime; 			(* aktuelle laufzeit *)
		IF FSD.RUNTIME.TIME_FILE_WRITE_MAX &lt; runtime THEN
			FSD.RUNTIME.TIME_FILE_WRITE_MAX := runtime;		(* neue max laufzeit *)
		END_IF;
		IF FSD.RUNTIME.TIME_FILE_WRITE_MIN &gt; runtime THEN
			FSD.RUNTIME.TIME_FILE_WRITE_MIN := runtime;		(* neue min laufzeit *)
		END_IF;

	5:	FSD.RUNTIME.TIME_FILE_SEEK_CUR := runtime; 			(* aktuelle laufzeit *)
		IF FSD.RUNTIME.TIME_FILE_SEEK_MAX &lt; runtime THEN
			FSD.RUNTIME.TIME_FILE_SEEK_MAX := runtime;		(* neue max laufzeit *)
		END_IF;
		IF FSD.RUNTIME.TIME_FILE_SEEK_MIN &gt; runtime THEN
			FSD.RUNTIME.TIME_FILE_SEEK_MIN := runtime;		(* neue min laufzeit *)
		END_IF;

	6:	FSD.RUNTIME.TIME_FILE_TELL_CUR := runtime; 			(* aktuelle laufzeit *)
		IF FSD.RUNTIME.TIME_FILE_TELL_MAX &lt; runtime THEN
			FSD.RUNTIME.TIME_FILE_TELL_MAX := runtime;		(* neue max laufzeit *)
		END_IF;
		IF FSD.RUNTIME.TIME_FILE_TELL_MIN &gt; runtime THEN
			FSD.RUNTIME.TIME_FILE_TELL_MIN := runtime;		(* neue min laufzeit *)
		END_IF;

	7:	FSD.RUNTIME.TIME_FILE_DELETE_CUR := runtime; 			(* aktuelle laufzeit *)
		IF FSD.RUNTIME.TIME_FILE_DELETE_MAX &lt; runtime THEN
			FSD.RUNTIME.TIME_FILE_DELETE_MAX := runtime;		(* neue max laufzeit *)
		END_IF;
		IF FSD.RUNTIME.TIME_FILE_DELETE_MIN &gt; runtime THEN
			FSD.RUNTIME.TIME_FILE_DELETE_MIN := runtime;		(* neue min laufzeit *)
		END_IF;

	END_CASE;

END_IF;

last_command := COMMAND;

(* revision history

ks	08. mar. 2016	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>208d08d1-2a3d-4e3c-9b33-252e37213526</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="IP_CONTROL" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> IP_Control Verwaltungsstruktur </xhtml>
              </documentation>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Externer Sendbuffer </xhtml>
              </documentation>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Externer Receivebuffer </xhtml>
              </documentation>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="IP">
              <type>
                <DWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> IP Adresse </xhtml>
              </documentation>
            </variable>
            <variable name="PORT">
              <type>
                <WORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Port Nummer </xhtml>
              </documentation>
            </variable>
            <variable name="TIME_OUT">
              <type>
                <TIME />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Ueberwachungszeit Connect / Send / Receive </xhtml>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="c_time">
              <type>
                <UDINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> CONNECT-Time (Zeit bei nicht vorhandener Verbindung) </xhtml>
              </documentation>
            </variable>
            <variable name="s_time">
              <type>
                <UDINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> SEND-Time    (Zeit seit letzten Datensenden) </xhtml>
              </documentation>
            </variable>
            <variable name="r_time">
              <type>
                <UDINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> RECEIVE-Time (Zeit seit letztem Datenempfang) </xhtml>
              </documentation>
            </variable>
            <variable name="c_enable">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Connect: freigabe </xhtml>
              </documentation>
            </variable>
            <variable name="c_ip">
              <type>
                <DWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Connect: aktuelle IP-Adresse </xhtml>
              </documentation>
            </variable>
            <variable name="c_port">
              <type>
                <WORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Connect: aktuelle Port-Nummer </xhtml>
              </documentation>
            </variable>
            <variable name="c_mode">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Connect: aktueller Mode UDP/TCP...... </xhtml>
              </documentation>
            </variable>
            <variable name="c_status">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Connect: Status (Errorcode) </xhtml>
              </documentation>
            </variable>
            <variable name="c_ready">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Connect: Verbindung aufgebaut </xhtml>
              </documentation>
            </variable>
            <variable name="c_ready_old">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Connect: letzter Zustand von c_ready für Flankenauswertung </xhtml>
              </documentation>
            </variable>
            <variable name="c_select">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> non blocking mode - abfrage über select durchführen </xhtml>
              </documentation>
            </variable>
            <variable name="c_fdWrite">
              <type>
                <derived name="SOCKET_FD_SET" />
              </type>
            </variable>
            <variable name="c_Timeout">
              <type>
                <derived name="SOCKET_TIMEVAL" />
              </type>
            </variable>
            <variable name="s_total">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Send: Gesamtanzahl Bytes zum senden </xhtml>
              </documentation>
            </variable>
            <variable name="s_cur_pos">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Send: aktuelle Sendeposition </xhtml>
              </documentation>
            </variable>
            <variable name="s_cur_size">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Send: aktuelle Sendegroesse </xhtml>
              </documentation>
            </variable>
            <variable name="s_max_size">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Send: maximale Telegrammlänge fuer Senden </xhtml>
              </documentation>
            </variable>
            <variable name="s_start">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Send: Sende modus aktivieren </xhtml>
              </documentation>
            </variable>
            <variable name="s_active">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Send: Daten senden ist aktiv </xhtml>
              </documentation>
            </variable>
            <variable name="s_req">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Send: Start Daten senden </xhtml>
              </documentation>
            </variable>
            <variable name="s_done">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Send: ohne Fehler beendet </xhtml>
              </documentation>
            </variable>
            <variable name="s_status">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Send: Status (Errorcodes) </xhtml>
              </documentation>
            </variable>
            <variable name="r_status">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Receive: Status (Errorcodes) </xhtml>
              </documentation>
            </variable>
            <variable name="r_count">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Receive: Anzahl empfangener Bytes </xhtml>
              </documentation>
            </variable>
            <variable name="r_offset">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Receive: aktuelle Position in externen Receivebuffer </xhtml>
              </documentation>
            </variable>
            <variable name="r_max_size">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Receive: groesse des externen Empfangbuffers</xhtml>
              </documentation>
            </variable>
            <variable name="new_connection">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Neue Verbindungsparameter vorhanden </xhtml>
              </documentation>
            </variable>
            <variable name="tx">
              <type>
                <DWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> letzter zeitwert </xhtml>
              </documentation>
            </variable>
            <variable name="error_time">
              <type>
                <DWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> aktueller Timeout-Wert </xhtml>
              </documentation>
            </variable>
            <variable name="state">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> schrittmerker für connect </xhtml>
              </documentation>
            </variable>
            <variable name="server_socket">
              <type>
                <DINT />
              </type>
              <initialValue>
                <simpleValue value="SOCKET_INVALID" />
              </initialValue>
            </variable>
            <variable name="socket">
              <type>
                <DINT />
              </type>
              <initialValue>
                <simpleValue value="SOCKET_INVALID" />
              </initialValue>
            </variable>
            <variable name="sockaddr">
              <type>
                <derived name="SOCKADDRESS" />
              </type>
            </variable>
            <variable name="sockaddr_size">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="plc_841">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="plc_881">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="dint_true">
              <type>
                <DINT />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
            <variable name="bytes_received">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="bytes_sent">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="udp_mode">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="STOP">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="TS_INIT">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
            <variable name="TS_OPEN">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="2" />
              </initialValue>
            </variable>
            <variable name="UDP_INIT">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="31" />
              </initialValue>
            </variable>
            <variable name="TC_INIT">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="51" />
              </initialValue>
            </variable>
            <variable name="TC_CONNECT">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="52" />
              </initialValue>
            </variable>
            <variable name="C_WAIT">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="250" />
              </initialValue>
            </variable>
            <variable name="C_CLOSE">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="251" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* ---------------------- Debug-Message ----------------------------*)
(*IF _debug_enable THEN
	IF IP_C.FIFO.ID &gt; BYTE#0 THEN
		debug_index := IP_C.FIFO.NR;
		debug_ID := BYTE_TO_INT(IP_C.FIFO.X[debug_index]);
	END_IF;
END_IF;*)
(* -----------------------------------------------------------------------------*)

(* read system time *)
tx := OSCAT_BASIC.T_PLC_MS();

IF IP_C.C_PORT = 0 THEN
	IP_C.C_PORT := PORT; (* uebergebenen PORT durch parametrierten PORT ersetzen *)
END_IF;
IF IP_C.C_IP = 0 AND IP_C.C_MODE &lt; 4 THEN
	IP_C.C_IP := IP; (* uebergebene IP durch paramtrierte IP ersetzen *)
END_IF;

new_connection := c_ip &lt;&gt; IP_C.C_IP OR c_mode &lt;&gt; IP_C.C_MODE OR c_port &lt;&gt; IP_C.C_PORT; (* neue Verbindungs erwünscht ? *)
c_enable := IP_C.C_ENABLE AND NOT new_connection;

IF IP_C.C_ENABLE AND IP_C.ERROR = 0 AND state = STOP THEN (* Freigabe,kein Fehler,kein Socket offen *)
	c_ip   := IP_C.C_IP;
	c_mode := IP_C.C_MODE;
	c_port := IP_C.C_PORT;
	plc_841 := SYSLIBSOCKETS_OPTION.1; (* Bit 1 = WAGO 750-841 *)
	plc_881 := SYSLIBSOCKETS_OPTION.2; (* Bit 1 = WAGO 750-881 *)
	udp_mode := C_MODE.0; (* Mode 1,3,5 = udp *)

	error_time := TIME_TO_DWORD(MAX(T#200ms,TIME_OUT));
	IP_C.TIME_RESET := TRUE; (* Alle Timer ruecksetzen *)

	r_max_size := SIZEOF(R_BUF.BUFFER);
	s_max_size := SIZEOF(S_BUF.BUFFER);

	IF C_MODE.0 THEN (* Mode: 1,3,5 = UDP CLIENT/SERVER *)
		state := UDP_INIT;
	ELSIF C_MODE = 0 THEN (* Mode: 0 = TCP CLIENT *)
		state := TC_INIT;
	ELSE
		state := TS_INIT; (* Mode: 2,4 = TCP SERVER *)
	END_IF;

	(* ---------------------- Debug-Message ----------------------------*)
	(*IF _debug_enable THEN
		LOG_CL.NEW_MSG := 'IP_CON: MODE ~1 / IP ~2 / PORT ~3 /ID ~6';
		LOG_CL.PRINTF[1] := BYTE_TO_STRING(C_MODE);
		LOG_CL.PRINTF[2] := IP4_TO_STRING(c_ip);
		LOG_CL.PRINTF[3] := WORD_TO_STRING(c_port);
		LOG_CL.PRINTF[6] := INT_TO_STRING(debug_ID);
		LOG_MSG();
	END_IF;*)
	(* -----------------------------------------------------------------------------*)

END_IF;

(* ---------------------- Debug-Message ----------------------------*)
(*IF  _debug_enable THEN
	IF state &lt;&gt; state_last THEN
		LOG_CL.NEW_MSG := 'IP_STEP ~1 -IP_ID ~6';
		LOG_CL.PRINTF[1] := BYTE_TO_STRING(state);
		LOG_CL.PRINTF[6] := INT_TO_STRING(debug_ID);
		LOG_MSG();
		state_last := state;
	END_IF;
END_IF;*)
(* -----------------------------------------------------------------------------*)

IF IP_C.TIME_RESET THEN (* Alle Timer ruecksetzen *)
	IP_C.TIME_RESET := FALSE; (* Reset rücksetzen *)
	c_time := tx; (* Connect Timer ruecksetzen *)
	s_time := tx; (* Send Timer ruecksetzen *)
	r_time := tx; (* Receive Timer ruecksetzen *)

	c_status := BYTE#0; (* letzten Connect Fehler rücksetzen *)
	s_status := BYTE#0; (* letzten Send Fehler rücksetzen *)
	r_status := BYTE#0; (* letzten Receive Fehler rücksetzen *)
END_IF;

(* ---------------------------------------------- *)

CASE state OF

UDP_INIT: (* UDP_CLIENT + SERVER *)
	socket := SysSockCreate(SOCKET_AF_INET, SOCKET_DGRAM, SOCKET_IPPROTO_IP);
	IF socket &lt; 0 THEN
		c_status := 1; (* SysSockCreate failed *)
		state := C_CLOSE;
	ELSE
		SysSockSetOption(socket, SOCKET_SOL, SOCKET_SO_BROADCAST, ADR(dint_true), SIZEOF(dint_true)); (* allow broadcast *)
		SysSockIoctl(socket, SOCKET_FIONBIO, ADR(dint_true)); (* put socket in non-blocking mode *)
		sockaddr.sin_family := SOCKET_AF_INET;
		sockaddr.sin_port := SysSockHtons(c_port);
		sockaddr.sin_addr := SEL(c_mode = 1, SOCKET_INADDR_ANY, SysSockNtohl(c_ip));

		IF c_mode &gt;= 2 THEN (* SERVER Mode *)
			IF SysSockBind(socket, ADR(sockaddr), SIZEOF(sockaddr)) THEN
				c_ready := TRUE; (* Connected *)
				state:= C_WAIT;
			ELSE
				c_status := 2; (* SysSockBind failed *)
				state := C_CLOSE;
			END_IF;
		ELSE
			c_ready := TRUE; (* Connected *)
			state:= C_WAIT;
		END_IF;
	END_IF;

(* ---------------------------------------------- *)

TC_INIT: (* TCP-CLIENT (AKTIV) *)
	socket := SysSockCreate(SOCKET_AF_INET, SOCKET_STREAM, SOCKET_IPPROTO_IP);
	IF socket &lt; 0 THEN
		c_status := 1;  (* SysSockCreate failed *)
		state := C_CLOSE;
	ELSE
		IF plc_841 OR plc_881 THEN
			SysSockSetOption(socket,6,SOCKET_TCP_NODELAY, ADR(dint_true), SIZEOF(dint_true)); (* Set Push-Bit *)
		END_IF;
		SysSockIoctl(socket, SOCKET_FIONBIO, ADR(dint_true)); (* NonBlocking mode *)
		sockaddr.sin_family := SOCKET_AF_INET;
		sockaddr.sin_port := SysSockNtohs(c_port);
		sockaddr.sin_addr := SysSockNtohl(c_ip);
		c_select := FALSE;
		state := TC_CONNECT;
	END_IF;

(* ---------------------------------------------- *)

TC_CONNECT:
	IF NOT c_enable OR c_status = 255 THEN (* keine freigabe oder connect timeout *)
			state:= C_CLOSE;
	ELSE
		IF c_select = FALSE THEN
			IF SysSockConnect(socket,ADR(sockaddr),SIZEOF(sockaddr)) THEN
				c_ready := TRUE; (* Connected *)
				state:= C_WAIT;
			ELSE
				(* Connect durchgeführt, aber noch nicht verbunden, dann optional mit select-abfrage weitermachen *)
				c_select := SYSLIBSOCKETS_OPTION.0; (* Bit 0 = TCP-Client - use SysSockselect *)
			END_IF;
		ELSE
			c_Timeout.tv_sec := 0;
			c_Timeout.tv_usec := 0;
			c_fdWrite.fd_count := 1;
			c_fdWrite.fd_array[0] := socket;
			IF SysSockSelect(SOCKET_FD_SETSIZE,0,ADR(c_fdWrite),0, ADR(c_Timeout)) &gt; 0 THEN
				c_ready := TRUE; (* Connected *)
				state:= C_WAIT;
			END_IF;
		END_IF;
	END_IF;

(* ---------------------------------------------- *)

TS_INIT: (* TCP-SERVER (PASSIV) *)
	server_socket := SysSockCreate(SOCKET_AF_INET, SOCKET_STREAM, SOCKET_IPPROTO_IP); (* Create Socket *)
	IF server_socket = SOCKET_INVALID THEN
		c_status := 1; (* SysSockCreate failed *)
		state:= C_CLOSE;
	ELSE (* Address bindings *)
		SysSockSetOption( server_socket, SOCKET_SOL, SOCKET_SO_REUSEADDR, ADR(dint_true), SIZEOF(dint_true) );
		sockaddr.sin_family:= SOCKET_AF_INET;
		sockaddr.sin_port := SysSockHtons(c_port);
		sockaddr.sin_addr := SOCKET_INADDR_ANY;
		IF NOT SysSockBind(server_socket, ADR(sockaddr), SIZEOF(sockaddr)) THEN
			c_status := 2; (* SysSockBind failed *)
			state := C_CLOSE;
		ELSIF NOT SysSockListen(server_socket, 1) THEN (* erzeugt Warteschlange für eine Verbindung *)
			c_status := 3; (* SysSockListen failed *)
			state:= C_CLOSE;
		ELSE
			SysSockIoctl(server_socket, SOCKET_FIONBIO, ADR(dint_true)); (* NonBlocking mode *)
			state:= TS_OPEN;
		END_IF;
	END_IF;

(* ---------------------------------------------- *)

TS_OPEN: (* Waiting for incomming connection *)
	sockaddr_size := SIZEOF(sockaddr);
	socket := SysSockAccept(server_socket, ADR(sockaddr), ADR(sockaddr_size));

	IF socket &lt;&gt; SOCKET_INVALID THEN (* neuer Verbindungswunsch vorhanden *)
		IF c_mode = BYTE#2 AND sockaddr.sin_addr &lt;&gt; SysSockNtohl(c_ip) THEN (* Mode 2 = TCP + PASSIVE + PORT + IP  auf richtige Partner-IP prüfen *)
			state:= C_CLOSE;
		ELSE
			IF plc_841 OR plc_881 THEN
				SysSockSetOption(socket, 6, SOCKET_TCP_NODELAY, ADR(dint_true), SIZEOF(dint_true)); (* Set Push-Bit *)
			END_IF;
			SysSockIoctl(socket, SOCKET_FIONBIO, ADR(dint_true)); (* NonBlocking mode *)
			c_ready := TRUE; (* Connected *)
			state := C_WAIT;
		END_IF;
	ELSIF NOT c_enable THEN (* keine freigabe mehr ? *)
			state:= C_CLOSE;
	END_IF;

(* ---------------------------------------------- *)

C_WAIT: (* Warten auf Anforderung für Beenden *)
	IF NOT c_enable OR NOT c_ready THEN
		state:= C_CLOSE;
	END_IF

(* ---------------------------------------------- *)

C_CLOSE: (* Close the Sockets *)
	c_ready := FALSE;
	IF socket &gt;= 0 THEN
		IF (NOT plc_841) AND (NOT plc_881) THEN
			SysSockShutdown(socket, 0); (* 870 *)
		END_IF;
		SysSockClose(socket);
		socket := SOCKET_INVALID;
	END_IF
	IF server_socket &gt;= 0 THEN
		IF (NOT plc_841) AND (NOT plc_881) THEN
			SysSockShutdown(server_socket, 0); (* 870 *)
		END_IF;
		SysSockClose(server_socket);
		server_socket := SOCKET_INVALID;
	END_IF
	state:= STOP;
END_CASE;

(* ---------------------------------------------- *)

IF c_ready THEN
	IF NOT c_ready_old THEN (* Verbindung aufgebaut - positive Flanke erkannt *)
		IP_C.C_STATE := 254;
		IP_C.TIME_RESET := TRUE; (* Alle Timer ruecksetzen *)
		(* ---------------------- Debug-Message ----------------------------*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'IP_CON: CONNECTED -IP_ID ~6';
			LOG_CL.PRINTF[6] := INT_TO_STRING(debug_ID);
			LOG_MSG();
		END_IF;*)
		(* -----------------------------------------------------------------------------*)
	ELSE
		IP_C.C_STATE := 255; (* Verbindung ist aufgebaut *)
	END_IF;
ELSE
	IF c_ready_old THEN (* Verbindung abgebaut - negative Flanke erkannt *)
		IP_C.C_STATE := 1;
		IP_C.MAILBOX[1] := 0; (* Receive Info rücksetzen *)
		IP_C.MAILBOX[2] := 0; (* Send-Pause rücksetzen *)
		IP_C.MAILBOX[3] := 0; (* Receive-Pause rücksetzen *)
		IF NOT new_connection THEN
			s_active := FALSE; (* Sendeaktivitäten stoppen *)
			s_req := FALSE; (* Sendefreigabe rücksetzen *)
			S_BUF.SIZE := 0; (* Sendelänge löschen *)
			(*IP_C.TIME_RESET := TRUE;*) (* Alle Timer ruecksetzen *)
		END_IF;
		(* ---------------------- Debug-Message ----------------------------*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'IP_CON: DISCONNECTED';
			LOG_MSG();
		END_IF;*)
		(* -----------------------------------------------------------------------------*)
	ELSE
		IP_C.C_STATE := 0; (* Verbindung ist abgebaut *)
	END_IF;
END_IF;

c_ready_old := c_ready;

(* Der Datenempfang wird angehalten solange ein Sendevorgang läuft *)
(* sonst kann es vorkommen das die Antwort-daten schon empfangen werden, *)
(* bevor der Sendevorgang vom programm abgeschlossen wurde *)

IF c_ready AND NOT s_active AND IP_C.MAILBOX[3] = 0 THEN
	IF R_BUF.SIZE &gt;= INT_TO_UINT(r_max_size) THEN
		R_BUF.SIZE := UINT#0;
		r_status := 254; (* Empfangsbuffer wegen Überlauf rückgesetzt *)
	END_IF;

	r_offset := SEL(udp_mode,UINT_TO_INT(R_BUF.SIZE),0);
	r_count := r_max_size - r_offset;

	IF udp_mode THEN
		bytes_received := SysSockRecvFrom(socket, ADR(R_BUF.BUFFER), r_count, 0, ADR(sockaddr), SIZEOF(sockaddr));

		IF c_mode = BYTE#3 AND sockaddr.sin_addr &lt;&gt; SysSockNtohl(c_ip) THEN (* Mode 3 = UDP + PASSIVE + PORT + IP  auf richtige Partner-IP prüfen *)
			bytes_received := 0;
			R_BUF.SIZE := UINT#0;
			sockaddr.sin_port := SysSockNtohs(c_port);
			sockaddr.sin_addr := SysSockNtohl(c_ip);
		END_IF;

	ELSE
		bytes_received := SysSockRecv(socket, ADR(R_BUF.BUFFER[r_offset]), r_count, 0);
	END_IF;

	(*UDP: IPC returns -1 if no data available or error occured,841 returns -1 if error occured and 0 if no data available*)
	CASE bytes_received OF
	-2147483648..-1: ; (* No data available or error occured *)
	 0: IF NOT udp_mode THEN (* TCP-Mode: socket wurde von remote geschlossen *)
			c_status := 253;
			c_ready := FALSE;
		END_IF;
	ELSE (* daten wurden empfangen *)
  		r_time := tx; (* Receive Timer ruecksetzen *)
		R_BUF.SIZE := INT_TO_UINT(r_offset + DINT_TO_UINT(bytes_received)); (* aktuelle buffersize eintragen *)
		IP_C.MAILBOX[1] := IP_C.MAILBOX[1] + 1; (* Receive Info *)
		IF IP_C.MAILBOX[1] = 0 THEN IP_C.MAILBOX[1] := 1; END_IF;

		(* ---------------------- Debug-Message ----------------------------*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'IP_REC DATA: POS: ~1 : SIZE: ~2 TOTAL ~3 -IP_ID ~6';
			LOG_CL.PRINTF[1] := INT_TO_STRING(r_offset);
			LOG_CL.PRINTF[2] := INT_TO_STRING(r_count);
			LOG_CL.PRINTF[3] := UINT_TO_STRING(R_BUF.SIZE);
			LOG_CL.PRINTF[6] := INT_TO_STRING(debug_ID);
			LOG_MSG();
		END_IF;*)
		(* -----------------------------------------------------------------------------*)

	END_CASE
END_IF;

(* ---------------------------------------------- *)

IF S_BUF.SIZE &gt; 0 THEN
	IF c_ready AND c_enable THEN
		IF NOT s_active AND IP_C.MAILBOX[2] = 0 THEN
			(* Gesamtanzahl an Bytes limitieren und uebergeben *)
			s_total := LIMIT(0,UINT_TO_INT(S_BUF.SIZE),r_max_size);
			s_cur_pos  := 0;
			s_cur_size := 0;
			s_start := TRUE; (* Daten kopieren und senden anstossen *)
			s_active := TRUE; (* Sende-Betrieb aktivieren *)
			(* ---------------------- Debug-Message ----------------------------*)
			(*IF _debug_enable THEN
				LOG_CL.NEW_MSG := 'IP_SEN INIT: TOTAL: ~1 -IP_ID ~6';
				LOG_CL.PRINTF[1] := INT_TO_STRING(S_TOTAL);
				LOG_CL.PRINTF[6] := INT_TO_STRING(debug_ID);
				LOG_MSG();
			END_IF;*)
			(* -----------------------------------------------------------------------------*)
		END_IF;

		IF s_done OR s_start THEN (* Daten senden aktiv *)

			s_start := FALSE;
			s_cur_pos := s_cur_pos + s_cur_size; (* neue Sende-Datenposition bestimmen *)
			IF s_total &gt; s_cur_pos THEN (* weitere Daten zum senden vorhanden ? *)
				s_cur_size := s_total - s_cur_pos;
				s_cur_size := LIMIT(0, s_cur_size, s_max_size); (* Telegrammlänge begrenzen *)
				(* ---------------------- Debug-Message ----------------------------*)
				(*IF _debug_enable THEN
					LOG_CL.NEW_MSG := 'IP_SEN DATA: POS: ~1 : SIZE: ~2 TOTAL ~3 -IP_ID ~6';
					LOG_CL.PRINTF[1] := INT_TO_STRING(S_CUR_POS);
					LOG_CL.PRINTF[2] := INT_TO_STRING(S_CUR_SIZE);
					LOG_CL.PRINTF[3] := INT_TO_STRING(S_TOTAL);
					LOG_CL.PRINTF[6] := INT_TO_STRING(debug_ID);
					LOG_MSG();
				END_IF;*)
				(* -----------------------------------------------------------------------------*)
				s_time := tx; (* Send Timer ruecksetzen *)
				r_time := tx; (* Receive Timer ruecksetzen *)
				s_req := TRUE;

			ELSE
				(* keine weitere Sendedaten vorhanden -&gt; Senden beenden *)
				s_req := FALSE;
				s_active := FALSE;
				S_BUF.SIZE := 0;
				(* ---------------------- Debug-Message ----------------------------*)
				(*IF _debug_enable THEN
					LOG_CL.NEW_MSG := 'IP_SEN FINISH -IP_ID ~6';
					LOG_CL.PRINTF[6] := INT_TO_STRING(debug_ID);
					LOG_MSG();
				END_IF;*)
				(* -----------------------------------------------------------------------------*)
			END_IF;
		END_IF;
	END_IF;
END_IF;

IF s_req THEN
	s_done := FALSE;
	IF udp_mode THEN
		bytes_sent := SysSockSendTo(socket, ADR(S_BUF.BUFFER[s_cur_pos]), s_cur_size, 0, ADR(sockaddr), SIZEOF(sockaddr));
	ELSE
		bytes_sent := SysSockSend(socket, ADR(S_BUF.BUFFER[s_cur_pos]), s_cur_size, 0);
	END_IF;

	CASE bytes_sent OF
	-2147483648..-1:	; (* ERROR: Noch nicht bereit um Daten aufzunehmen -&gt; nächsten Zyklus wieder probieren *)
	 0: IF NOT udp_mode THEN (* TCP-Mode: socket wurde von remote geschlossen *)
			c_status := 253;
			c_ready := FALSE;
		END_IF;
	ELSE
		s_done := TRUE;
		s_cur_size := DINT_TO_INT(bytes_sent); (* Anzahl der wirklich versendeten Bytes übernehmen *)
		(* ---------------------- Debug-Message ----------------------------*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'IP_SEN SEND_COUNT ~1 -IP_ID ~6';
			LOG_CL.PRINTF[1] := DINT_TO_STRING(s_cur_size);
			LOG_CL.PRINTF[6] := INT_TO_STRING(debug_ID);
			LOG_MSG();
		END_IF;*)
		(* -----------------------------------------------------------------------------*)
	END_CASE
END_IF;

(* ---------------------------------------------- *)

IF IP_C.R_OBSERVE = FALSE OR s_active THEN
    r_time := tx;
END_IF;

IF c_status = 0 AND tx - c_time &gt; error_time AND c_enable AND NOT c_ready AND c_mode &lt; 2 THEN (* Connect Timeout *)
	c_status := 255; (* Timeout-Fehler ausgeben *)
END_IF;
IF s_status = 0 AND tx - s_time &gt; error_time AND s_active THEN (* Send Timeout *)
	s_status := 255; (* Timeout-Fehler ausgeben *)
END_IF;
IF r_status = 0 AND tx - r_time &gt; error_time AND c_ready AND IP_C.R_OBSERVE THEN (* Receive Timeout *)
	r_status := 255; (* Timeout-Fehler ausgeben *)
END_IF;

IP_C.ERROR := OSCAT_BASIC.DWORD_OF_BYTE(c_status,s_status,r_status,0);

(* ---------------------- Debug-Message ----------------------------*)
(*IF  _debug_enable THEN
	IF (IP_C.ERROR &lt;&gt; debug_lasterror) THEN
		LOG_CL.NEW_MSG := 'IP_ERROR ~1 -IP_ID ~6';
		LOG_CL.PRINTF[1] := DWORD_TO_STRING(IP_C.ERROR);
		LOG_CL.PRINTF[6] := INT_TO_STRING(debug_ID);
		LOG_MSG();

		debug_lasterror := IP_C.ERROR;
		debug_last_id := debug_ID;
	END_IF;
END_IF;*)
(* -----------------------------------------------------------------------------*)

(* revision history
ks	18. oct. 2008	rev 1.0
	original version
ks	05. jan. 2009	rev 1.1
	zusätzlichen Parameter "Port" hinzugefügt, und Code bei Verbindungsaufbau angepasst
ks	28. feb. 2009	rev 1.2
	connect code angepasst und verkürzung der zyklen bei Send
ks	20. oct. 2009	rev 1.3
	network_buffer basis 0
ks	06. dec. 2009	rev 1.4
	receive_count MAILBOX[1]
ks	10. nov. 2010	rev 1.5
	send_pause MAILBOX[2] and receive_pause MAILBOX[3] 
ks	07. feb. 2011	rev 1.6
	Fehlercode 253 bei Remote-Verbindungsabbruch
ks	30. may. 2011	rev 1.7
	Fehler bei Empfangsüberwachung
ks	26. july. 2011	rev 1.8
	Error-Reset, diverse optimierungen 
ks	26. feb. 2012	rev 1.9
	Code-Optimierung für höhere kompatibilität

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>fe00699d-634e-4485-997d-7bda7e09138c</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="IP_CONTROL2" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> IP_Control Verwaltungsstruktur </xhtml>
              </documentation>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER_SHORT" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Externer Sendbuffer </xhtml>
              </documentation>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER_SHORT" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Externer Receivebuffer </xhtml>
              </documentation>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="IP">
              <type>
                <DWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> IP Adresse </xhtml>
              </documentation>
            </variable>
            <variable name="PORT">
              <type>
                <WORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Port Nummer </xhtml>
              </documentation>
            </variable>
            <variable name="TIME_OUT">
              <type>
                <TIME />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Ueberwachungszeit Connect / Send / Receive </xhtml>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="c_time">
              <type>
                <UDINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> CONNECT-Time (Zeit bei nicht vorhandener Verbindung) </xhtml>
              </documentation>
            </variable>
            <variable name="s_time">
              <type>
                <UDINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> SEND-Time    (Zeit seit letzten Datensenden) </xhtml>
              </documentation>
            </variable>
            <variable name="r_time">
              <type>
                <UDINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> RECEIVE-Time (Zeit seit letztem Datenempfang) </xhtml>
              </documentation>
            </variable>
            <variable name="c_enable">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Connect: freigabe </xhtml>
              </documentation>
            </variable>
            <variable name="c_ip">
              <type>
                <DWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Connect: aktuelle IP-Adresse </xhtml>
              </documentation>
            </variable>
            <variable name="c_port">
              <type>
                <WORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Connect: aktuelle Port-Nummer </xhtml>
              </documentation>
            </variable>
            <variable name="c_mode">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Connect: aktueller Mode UDP/TCP...... </xhtml>
              </documentation>
            </variable>
            <variable name="c_status">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Connect: Status (Errorcode) </xhtml>
              </documentation>
            </variable>
            <variable name="c_ready">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Connect: Verbindung aufgebaut </xhtml>
              </documentation>
            </variable>
            <variable name="c_ready_old">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Connect: letzter Zustand von c_ready für Flankenauswertung </xhtml>
              </documentation>
            </variable>
            <variable name="c_select">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> non blocking mode - abfrage über select durchführen </xhtml>
              </documentation>
            </variable>
            <variable name="c_fdWrite">
              <type>
                <derived name="SOCKET_FD_SET" />
              </type>
            </variable>
            <variable name="c_Timeout">
              <type>
                <derived name="SOCKET_TIMEVAL" />
              </type>
            </variable>
            <variable name="s_total">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Send: Gesamtanzahl Bytes zum senden </xhtml>
              </documentation>
            </variable>
            <variable name="s_cur_pos">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Send: aktuelle Sendeposition </xhtml>
              </documentation>
            </variable>
            <variable name="s_cur_size">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Send: aktuelle Sendegroesse </xhtml>
              </documentation>
            </variable>
            <variable name="s_max_size">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Send: maximale Telegrammlänge fuer Senden </xhtml>
              </documentation>
            </variable>
            <variable name="s_start">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Send: Sende modus aktivieren </xhtml>
              </documentation>
            </variable>
            <variable name="s_active">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Send: Daten senden ist aktiv </xhtml>
              </documentation>
            </variable>
            <variable name="s_req">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Send: Start Daten senden </xhtml>
              </documentation>
            </variable>
            <variable name="s_done">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Send: ohne Fehler beendet </xhtml>
              </documentation>
            </variable>
            <variable name="s_status">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Send: Status (Errorcodes) </xhtml>
              </documentation>
            </variable>
            <variable name="r_status">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Receive: Status (Errorcodes) </xhtml>
              </documentation>
            </variable>
            <variable name="r_count">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Receive: Anzahl empfangener Bytes </xhtml>
              </documentation>
            </variable>
            <variable name="r_offset">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Receive: aktuelle Position in externen Receivebuffer </xhtml>
              </documentation>
            </variable>
            <variable name="r_max_size">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Receive: groesse des externen Empfangbuffers</xhtml>
              </documentation>
            </variable>
            <variable name="new_connection">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Neue Verbindungsparameter vorhanden </xhtml>
              </documentation>
            </variable>
            <variable name="tx">
              <type>
                <DWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> letzter zeitwert </xhtml>
              </documentation>
            </variable>
            <variable name="error_time">
              <type>
                <DWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> aktueller Timeout-Wert </xhtml>
              </documentation>
            </variable>
            <variable name="state">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> schrittmerker für connect </xhtml>
              </documentation>
            </variable>
            <variable name="server_socket">
              <type>
                <DINT />
              </type>
              <initialValue>
                <simpleValue value="SOCKET_INVALID" />
              </initialValue>
            </variable>
            <variable name="socket">
              <type>
                <DINT />
              </type>
              <initialValue>
                <simpleValue value="SOCKET_INVALID" />
              </initialValue>
            </variable>
            <variable name="sockaddr">
              <type>
                <derived name="SOCKADDRESS" />
              </type>
            </variable>
            <variable name="sockaddr_size">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="plc_841">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="plc_881">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="dint_true">
              <type>
                <DINT />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
            <variable name="bytes_received">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="bytes_sent">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="udp_mode">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="STOP">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="TS_INIT">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
            <variable name="TS_OPEN">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="2" />
              </initialValue>
            </variable>
            <variable name="UDP_INIT">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="31" />
              </initialValue>
            </variable>
            <variable name="TC_INIT">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="51" />
              </initialValue>
            </variable>
            <variable name="TC_CONNECT">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="52" />
              </initialValue>
            </variable>
            <variable name="C_WAIT">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="250" />
              </initialValue>
            </variable>
            <variable name="C_CLOSE">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="251" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* ---------------------- Debug-Message ----------------------------*)
(*IF _debug_enable THEN
	IF IP_C.FIFO.ID &gt; BYTE#0 THEN
		debug_index := IP_C.FIFO.NR;
		debug_ID := BYTE_TO_INT(IP_C.FIFO.X[debug_index]);
	END_IF;
END_IF;*)
(* -----------------------------------------------------------------------------*)

(* read system time *)
tx := OSCAT_BASIC.T_PLC_MS();

IF IP_C.C_PORT = 0 THEN
	IP_C.C_PORT := PORT; (* uebergebenen PORT durch parametrierten PORT ersetzen *)
END_IF;
IF IP_C.C_IP = 0 AND IP_C.C_MODE &lt; 4 THEN
	IP_C.C_IP := IP; (* uebergebene IP durch paramtrierte IP ersetzen *)
END_IF;

new_connection := c_ip &lt;&gt; IP_C.C_IP OR c_mode &lt;&gt; IP_C.C_MODE OR c_port &lt;&gt; IP_C.C_PORT; (* neue Verbindungs erwünscht ? *)
c_enable := IP_C.C_ENABLE AND NOT new_connection;

IF IP_C.C_ENABLE AND IP_C.ERROR = 0 AND state = STOP THEN (* Freigabe,kein Fehler,kein Socket offen *)
	c_ip   := IP_C.C_IP;
	c_mode := IP_C.C_MODE;
	c_port := IP_C.C_PORT;
	plc_841 := SYSLIBSOCKETS_OPTION.1; (* Bit 1 = WAGO 750-841 *)
	plc_881 := SYSLIBSOCKETS_OPTION.2; (* Bit 1 = WAGO 750-881 *)
	udp_mode := C_MODE.0; (* Mode 1,3,5 = udp *)

	error_time := TIME_TO_DWORD(MAX(T#200ms,TIME_OUT));
	IP_C.TIME_RESET := TRUE; (* Alle Timer ruecksetzen *)

	r_max_size := SIZEOF(R_BUF.BUFFER);
	s_max_size := SIZEOF(S_BUF.BUFFER);

	IF C_MODE.0 THEN (* Mode: 1,3,5 = UDP CLIENT/SERVER *)
		state := UDP_INIT;
	ELSIF C_MODE = 0 THEN (* Mode: 0 = TCP CLIENT *)
		state := TC_INIT;
	ELSE
		state := TS_INIT; (* Mode: 2,4 = TCP SERVER *)
	END_IF;

	(* ---------------------- Debug-Message ----------------------------*)
	(*IF _debug_enable THEN
		LOG_CL.NEW_MSG := 'IP_CON: MODE ~1 / IP ~2 / PORT ~3 /ID ~6';
		LOG_CL.PRINTF[1] := BYTE_TO_STRING(C_MODE);
		LOG_CL.PRINTF[2] := IP4_TO_STRING(c_ip);
		LOG_CL.PRINTF[3] := WORD_TO_STRING(c_port);
		LOG_CL.PRINTF[6] := INT_TO_STRING(debug_ID);
		LOG_MSG();
	END_IF;*)
	(* -----------------------------------------------------------------------------*)

END_IF;

(* ---------------------- Debug-Message ----------------------------*)
(*IF  _debug_enable THEN
	IF state &lt;&gt; state_last THEN
		LOG_CL.NEW_MSG := 'IP_STEP ~1 -IP_ID ~6';
		LOG_CL.PRINTF[1] := BYTE_TO_STRING(state);
		LOG_CL.PRINTF[6] := INT_TO_STRING(debug_ID);
		LOG_MSG();
		state_last := state;
	END_IF;
END_IF;*)
(* -----------------------------------------------------------------------------*)

IF IP_C.TIME_RESET THEN (* Alle Timer ruecksetzen *)
	IP_C.TIME_RESET := FALSE; (* Reset rücksetzen *)
	c_time := tx; (* Connect Timer ruecksetzen *)
	s_time := tx; (* Send Timer ruecksetzen *)
	r_time := tx; (* Receive Timer ruecksetzen *)

	c_status := BYTE#0; (* letzten Connect Fehler rücksetzen *)
	s_status := BYTE#0; (* letzten Send Fehler rücksetzen *)
	r_status := BYTE#0; (* letzten Receive Fehler rücksetzen *)
END_IF;

(* ---------------------------------------------- *)

CASE state OF

UDP_INIT: (* UDP_CLIENT + SERVER *)
	socket := SysSockCreate(SOCKET_AF_INET, SOCKET_DGRAM, SOCKET_IPPROTO_IP);
	IF socket &lt; 0 THEN
		c_status := 1; (* SysSockCreate failed *)
		state := C_CLOSE;
	ELSE
		SysSockSetOption(socket, SOCKET_SOL, SOCKET_SO_BROADCAST, ADR(dint_true), SIZEOF(dint_true)); (* allow broadcast *)
		SysSockIoctl(socket, SOCKET_FIONBIO, ADR(dint_true)); (* put socket in non-blocking mode *)
		sockaddr.sin_family := SOCKET_AF_INET;
		sockaddr.sin_port := SysSockHtons(c_port);
		sockaddr.sin_addr := SEL(c_mode = 1, SOCKET_INADDR_ANY, SysSockNtohl(c_ip));

		IF c_mode &gt;= 2 THEN (* SERVER Mode *)
			IF SysSockBind(socket, ADR(sockaddr), SIZEOF(sockaddr)) THEN
				c_ready := TRUE; (* Connected *)
				state:= C_WAIT;
			ELSE
				c_status := 2; (* SysSockBind failed *)
				state := C_CLOSE;
			END_IF;
		ELSE
			c_ready := TRUE; (* Connected *)
			state:= C_WAIT;
		END_IF;
	END_IF;

(* ---------------------------------------------- *)

TC_INIT: (* TCP-CLIENT (AKTIV) *)
	socket := SysSockCreate(SOCKET_AF_INET, SOCKET_STREAM, SOCKET_IPPROTO_IP);
	IF socket &lt; 0 THEN
		c_status := 1;  (* SysSockCreate failed *)
		state := C_CLOSE;
	ELSE
		IF plc_841 OR plc_881 THEN
			SysSockSetOption(socket,6,SOCKET_TCP_NODELAY, ADR(dint_true), SIZEOF(dint_true)); (* Set Push-Bit *)
		END_IF;
		SysSockIoctl(socket, SOCKET_FIONBIO, ADR(dint_true)); (* NonBlocking mode *)
		sockaddr.sin_family := SOCKET_AF_INET;
		sockaddr.sin_port := SysSockNtohs(c_port);
		sockaddr.sin_addr := SysSockNtohl(c_ip);
		c_select := FALSE;
		state := TC_CONNECT;
	END_IF;

(* ---------------------------------------------- *)

TC_CONNECT:
	IF NOT c_enable OR c_status = 255 THEN (* keine freigabe oder connect timeout *)
			state:= C_CLOSE;
	ELSE
		IF c_select = FALSE THEN
			IF SysSockConnect(socket,ADR(sockaddr),SIZEOF(sockaddr)) THEN
				c_ready := TRUE; (* Connected *)
				state:= C_WAIT;
			ELSE
				(* Connect durchgeführt, aber noch nicht verbunden, dann optional mit select-abfrage weitermachen *)
				c_select := SYSLIBSOCKETS_OPTION.0; (* Bit 0 = TCP-Client - use SysSockselect *)
			END_IF;
		ELSE
			c_Timeout.tv_sec := 0;
			c_Timeout.tv_usec := 0;
			c_fdWrite.fd_count := 1;
			c_fdWrite.fd_array[0] := socket;
			IF SysSockSelect(SOCKET_FD_SETSIZE,0,ADR(c_fdWrite),0, ADR(c_Timeout)) &gt; 0 THEN
				c_ready := TRUE; (* Connected *)
				state:= C_WAIT;
			END_IF;
		END_IF;
	END_IF;

(* ---------------------------------------------- *)

TS_INIT: (* TCP-SERVER (PASSIV) *)
	server_socket := SysSockCreate(SOCKET_AF_INET, SOCKET_STREAM, SOCKET_IPPROTO_IP); (* Create Socket *)
	IF server_socket = SOCKET_INVALID THEN
		c_status := 1; (* SysSockCreate failed *)
		state:= C_CLOSE;
	ELSE (* Address bindings *)
		SysSockSetOption( server_socket, SOCKET_SOL, SOCKET_SO_REUSEADDR, ADR(dint_true), SIZEOF(dint_true) );
		sockaddr.sin_family:= SOCKET_AF_INET;
		sockaddr.sin_port := SysSockHtons(c_port);
		sockaddr.sin_addr := SOCKET_INADDR_ANY;
		IF NOT SysSockBind(server_socket, ADR(sockaddr), SIZEOF(sockaddr)) THEN
			c_status := 2; (* SysSockBind failed *)
			state := C_CLOSE;
		ELSIF NOT SysSockListen(server_socket, 1) THEN (* erzeugt Warteschlange für eine Verbindung *)
			c_status := 3; (* SysSockListen failed *)
			state:= C_CLOSE;
		ELSE
			SysSockIoctl(server_socket, SOCKET_FIONBIO, ADR(dint_true)); (* NonBlocking mode *)
			state:= TS_OPEN;
		END_IF;
	END_IF;

(* ---------------------------------------------- *)

TS_OPEN: (* Waiting for incomming connection *)
	sockaddr_size := SIZEOF(sockaddr);
	socket := SysSockAccept(server_socket, ADR(sockaddr), ADR(sockaddr_size));

	IF socket &lt;&gt; SOCKET_INVALID THEN (* neuer Verbindungswunsch vorhanden *)
		IF c_mode = BYTE#2 AND sockaddr.sin_addr &lt;&gt; SysSockNtohl(c_ip) THEN (* Mode 2 = TCP + PASSIVE + PORT + IP  auf richtige Partner-IP prüfen *)
			state:= C_CLOSE;
		ELSE
			IF plc_841 OR plc_881 THEN
				SysSockSetOption(socket, 6, SOCKET_TCP_NODELAY, ADR(dint_true), SIZEOF(dint_true)); (* Set Push-Bit *)
			END_IF;
			SysSockIoctl(socket, SOCKET_FIONBIO, ADR(dint_true)); (* NonBlocking mode *)
			c_ready := TRUE; (* Connected *)
			state := C_WAIT;
		END_IF;
	ELSIF NOT c_enable THEN (* keine freigabe mehr ? *)
			state:= C_CLOSE;
	END_IF;

(* ---------------------------------------------- *)

C_WAIT: (* Warten auf Anforderung für Beenden *)
	IF NOT c_enable OR NOT c_ready THEN
		state:= C_CLOSE;
	END_IF

(* ---------------------------------------------- *)

C_CLOSE: (* Close the Sockets *)
	c_ready := FALSE;
	IF socket &gt;= 0 THEN
		IF (NOT plc_841) AND (NOT plc_881) THEN
			SysSockShutdown(socket, 0); (* 870 *)
		END_IF;
		SysSockClose(socket);
		socket := SOCKET_INVALID;
	END_IF
	IF server_socket &gt;= 0 THEN
		IF (NOT plc_841) AND (NOT plc_881) THEN
			SysSockShutdown(server_socket, 0); (* 870 *)
		END_IF;
		SysSockClose(server_socket);
		server_socket := SOCKET_INVALID;
	END_IF
	state:= STOP;
END_CASE;

(* ---------------------------------------------- *)

IF c_ready THEN
	IF NOT c_ready_old THEN (* Verbindung aufgebaut - positive Flanke erkannt *)
		IP_C.C_STATE := 254;
		IP_C.TIME_RESET := TRUE; (* Alle Timer ruecksetzen *)
		(* ---------------------- Debug-Message ----------------------------*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'IP_CON: CONNECTED -IP_ID ~6';
			LOG_CL.PRINTF[6] := INT_TO_STRING(debug_ID);
			LOG_MSG();
		END_IF;*)
		(* -----------------------------------------------------------------------------*)
	ELSE
		IP_C.C_STATE := 255; (* Verbindung ist aufgebaut *)
	END_IF;
ELSE
	IF c_ready_old THEN (* Verbindung abgebaut - negative Flanke erkannt *)
		IP_C.C_STATE := 1;
		IP_C.MAILBOX[1] := 0; (* Receive Info rücksetzen *)
		IP_C.MAILBOX[2] := 0; (* Send-Pause rücksetzen *)
		IP_C.MAILBOX[3] := 0; (* Receive-Pause rücksetzen *)
		IF NOT new_connection THEN
			s_active := FALSE; (* Sendeaktivitäten stoppen *)
			s_req := FALSE; (* Sendefreigabe rücksetzen *)
			S_BUF.SIZE := 0; (* Sendelänge löschen *)
			(* IP_C.TIME_RESET := TRUE; *) (* Alle Timer ruecksetzen *)
		END_IF;
		(* ---------------------- Debug-Message ----------------------------*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'IP_CON: DISCONNECTED';
			LOG_MSG();
		END_IF;*)
		(* -----------------------------------------------------------------------------*)
	ELSE
		IP_C.C_STATE := 0; (* Verbindung ist abgebaut *)
	END_IF;
END_IF;

c_ready_old := c_ready;

(* Der Datenempfang wird angehalten solange ein Sendevorgang läuft *)
(* sonst kann es vorkommen das die Antwort-daten schon empfangen werden, *)
(* bevor der Sendevorgang vom programm abgeschlossen wurde *)

IF c_ready AND NOT s_active AND IP_C.MAILBOX[3] = 0 THEN
	IF R_BUF.SIZE &gt;= INT_TO_UINT(r_max_size) THEN
		R_BUF.SIZE := UINT#0;
		r_status := 254; (* Empfangsbuffer wegen Überlauf rückgesetzt *)
	END_IF;

	r_offset := SEL(udp_mode,UINT_TO_INT(R_BUF.SIZE),0);
	r_count := r_max_size - r_offset;

	IF udp_mode THEN
		bytes_received := SysSockRecvFrom(socket, ADR(R_BUF.BUFFER), r_count, 0, ADR(sockaddr), SIZEOF(sockaddr));

		IF c_mode = BYTE#3 AND sockaddr.sin_addr &lt;&gt; SysSockNtohl(c_ip) THEN (* Mode 3 = UDP + PASSIVE + PORT + IP  auf richtige Partner-IP prüfen *)
			bytes_received := 0;
			R_BUF.SIZE := UINT#0;
			sockaddr.sin_port := SysSockNtohs(c_port);
			sockaddr.sin_addr := SysSockNtohl(c_ip);
		END_IF;

	ELSE
		bytes_received := SysSockRecv(socket, ADR(R_BUF.BUFFER[r_offset]), r_count, 0);
	END_IF;

	(*UDP: IPC returns -1 if no data available or error occured,841 returns -1 if error occured and 0 if no data available*)
	CASE bytes_received OF
	-2147483648..-1: ; (* No data available or error occured *)
	 0: IF NOT udp_mode THEN (* TCP-Mode: socket wurde von remote geschlossen *)
			c_status := 253;
			c_ready := FALSE;
		END_IF;
	ELSE (* daten wurden empfangen *)
  		r_time := tx; (* Receive Timer ruecksetzen *)
		R_BUF.SIZE := INT_TO_UINT(r_offset + DINT_TO_UINT(bytes_received)); (* aktuelle buffersize eintragen *)
		IP_C.MAILBOX[1] := IP_C.MAILBOX[1] + 1; (* Receive Info *)
		IF IP_C.MAILBOX[1] = 0 THEN IP_C.MAILBOX[1] := 1; END_IF;

		(* ---------------------- Debug-Message ----------------------------*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'IP_REC DATA: POS: ~1 : SIZE: ~2 TOTAL ~3 -IP_ID ~6';
			LOG_CL.PRINTF[1] := INT_TO_STRING(r_offset);
			LOG_CL.PRINTF[2] := INT_TO_STRING(r_count);
			LOG_CL.PRINTF[3] := UINT_TO_STRING(R_BUF.SIZE);
			LOG_CL.PRINTF[6] := INT_TO_STRING(debug_ID);
			LOG_MSG();
		END_IF;*)
		(* -----------------------------------------------------------------------------*)

	END_CASE
END_IF;

(* ---------------------------------------------- *)

IF S_BUF.SIZE &gt; 0 THEN
	IF c_ready AND c_enable THEN
		IF NOT s_active AND IP_C.MAILBOX[2] = 0 THEN
			(* Gesamtanzahl an Bytes limitieren und uebergeben *)
			s_total := LIMIT(0,UINT_TO_INT(S_BUF.SIZE),r_max_size);
			s_cur_pos  := 0;
			s_cur_size := 0;
			s_start := TRUE; (* Daten kopieren und senden anstossen *)
			s_active := TRUE; (* Sende-Betrieb aktivieren *)
			(* ---------------------- Debug-Message ----------------------------*)
			(*IF _debug_enable THEN
				LOG_CL.NEW_MSG := 'IP_SEN INIT: TOTAL: ~1 -IP_ID ~6';
				LOG_CL.PRINTF[1] := INT_TO_STRING(S_TOTAL);
				LOG_CL.PRINTF[6] := INT_TO_STRING(debug_ID);
				LOG_MSG();
			END_IF;*)
			(* -----------------------------------------------------------------------------*)
		END_IF;

		IF s_done OR s_start THEN (* Daten senden aktiv *)

			s_start := FALSE;
			s_cur_pos := s_cur_pos + s_cur_size; (* neue Sende-Datenposition bestimmen *)
			IF s_total &gt; s_cur_pos THEN (* weitere Daten zum senden vorhanden ? *)
				s_cur_size := s_total - s_cur_pos;
				s_cur_size := LIMIT(0, s_cur_size, s_max_size); (* Telegrammlänge begrenzen *)

				(* ---------------------- Debug-Message ----------------------------*)
				(*IF _debug_enable THEN
					LOG_CL.NEW_MSG := 'IP_SEN DATA: POS: ~1 : SIZE: ~2 TOTAL ~3 -IP_ID ~6';
					LOG_CL.PRINTF[1] := INT_TO_STRING(S_CUR_POS);
					LOG_CL.PRINTF[2] := INT_TO_STRING(S_CUR_SIZE);
					LOG_CL.PRINTF[3] := INT_TO_STRING(S_TOTAL);
					LOG_CL.PRINTF[6] := INT_TO_STRING(debug_ID);
					LOG_MSG();
				END_IF;*)
				(* -----------------------------------------------------------------------------*)

				s_time := tx; (* Send Timer ruecksetzen *)
				r_time := tx; (* Receive Timer ruecksetzen *)
				s_req := TRUE;

			ELSE
				(* keine weitere Sendedaten vorhanden -&gt; Senden beenden *)
				s_req := FALSE;
				s_active := FALSE;
				S_BUF.SIZE := 0;
				(* ---------------------- Debug-Message ----------------------------*)
				(*IF _debug_enable THEN
					LOG_CL.NEW_MSG := 'IP_SEN FINISH -IP_ID ~6';
					LOG_CL.PRINTF[6] := INT_TO_STRING(debug_ID);
					LOG_MSG();
				END_IF;*)
				(* -----------------------------------------------------------------------------*)
			END_IF;
		END_IF;
	END_IF;
END_IF;

IF s_req THEN
	s_done := FALSE;
	IF udp_mode THEN
		bytes_sent := SysSockSendTo(socket, ADR(S_BUF.BUFFER[s_cur_pos]), s_cur_size, 0, ADR(sockaddr), SIZEOF(sockaddr));
	ELSE
		bytes_sent := SysSockSend(socket, ADR(S_BUF.BUFFER[s_cur_pos]), s_cur_size, 0);
	END_IF;

	CASE bytes_sent OF
	-2147483648..-1:	; (* ERROR: Noch nicht bereit um Daten aufzunehmen -&gt; nächsten Zyklus wieder probieren *)
	 0: IF NOT udp_mode THEN (* TCP-Mode: socket wurde von remote geschlossen *)
			c_status := 253;
			c_ready := FALSE;
		END_IF;
	ELSE
		s_done := TRUE;
		s_cur_size := DINT_TO_INT(bytes_sent); (* Anzahl der wirklich versendeten Bytes übernehmen *)
		(* ---------------------- Debug-Message ----------------------------*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'IP_SEN SEND_COUNT ~1 -IP_ID ~6';
			LOG_CL.PRINTF[1] := DINT_TO_STRING(s_cur_size);
			LOG_CL.PRINTF[6] := INT_TO_STRING(debug_ID);
			LOG_MSG();
		END_IF;*)
		(* -----------------------------------------------------------------------------*)
	END_CASE
END_IF;

(* ---------------------------------------------- *)

IF IP_C.R_OBSERVE = FALSE OR s_active THEN
    r_time := tx;
END_IF;

IF c_status = 0 AND tx - c_time &gt; error_time AND c_enable AND NOT c_ready AND c_mode &lt; 2 THEN (* Connect Timeout *)
	c_status := 255; (* Timeout-Fehler ausgeben *)
END_IF;
IF s_status = 0 AND tx - s_time &gt; error_time AND s_active THEN (* Send Timeout *)
	s_status := 255; (* Timeout-Fehler ausgeben *)
END_IF;
IF r_status = 0 AND tx - r_time &gt; error_time AND c_ready AND IP_C.R_OBSERVE THEN (* Receive Timeout *)
	r_status := 255; (* Timeout-Fehler ausgeben *)
END_IF;

IP_C.ERROR := OSCAT_BASIC.DWORD_OF_BYTE(c_status,s_status,r_status,0);

(* ---------------------- Debug-Message ----------------------------*)
(*IF  _debug_enable THEN
	IF (IP_C.ERROR &lt;&gt; debug_lasterror) THEN
		LOG_CL.NEW_MSG := 'IP_ERROR ~1 -IP_ID ~6';
		LOG_CL.PRINTF[1] := DWORD_TO_STRING(IP_C.ERROR);
		LOG_CL.PRINTF[6] := INT_TO_STRING(debug_ID);
		LOG_MSG();

		debug_lasterror := IP_C.ERROR;
		debug_last_id := debug_ID;
	END_IF;
END_IF;*)
(* -----------------------------------------------------------------------------*)

(* revision history
ks	18. oct. 2008	rev 1.0
	original version
ks	05. jan. 2009	rev 1.1
	zusätzlichen Parameter "Port" hinzugefügt, und Code bei Verbindungsaufbau angepasst
ks	28. feb. 2009	rev 1.2
	connect code angepasst und verkürzung der zyklen bei Send
ks	20. oct. 2009	rev 1.3
	network_buffer basis 0
ks	06. dec. 2009	rev 1.4
	receive_count MAILBOX[1]
ks	10. nov. 2010	rev 1.5
	send_pause MAILBOX[2] and receive_pause MAILBOX[3] 
ks	07. feb. 2011	rev 1.6
	Fehlercode 253 bei Remote-Verbindungsabbruch 
ks	30. may. 2011	rev 1.7
	Fehler bei Empfangsüberwachung
ks	26. july. 2011	rev 1.8
	Error-Reset, diverse optimierungen 
ks	26. feb. 2012	rev 1.9
	Code-Optimierung für höhere kompatibilität
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>73caf32e-1531-456f-97c9-6af4cf8ecac2</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="NET_VAR_BOOL8" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="X">
              <type>
                <derived name="NET_VAR_DATA" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="IN1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="IN2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="IN3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="IN4">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="IN5">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="IN6">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="IN7">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="IN8">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="OUT1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="OUT2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="OUT3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="OUT4">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="OUT5">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="OUT6">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="OUT7">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="OUT8">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ID">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="init">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="index">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="index2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="BYTE_TO_BITS">
              <type>
                <derived name="OSCAT_BASIC.BYTE_TO_BITS" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF NOT init THEN
	init := TRUE;
	X.ID_MAX := X.ID_MAX + USINT#1;
	ID := USINT_TO_BYTE(X.ID_MAX);
END_IF;

IF X.STATE &gt; BYTE#0 AND X.ERROR_ID = BYTE#0 THEN
	index := X.index; (* PCWORX Workaround *)
	IF INT_TO_UINT(index + 3) &gt; X.BUF_SIZE THEN
		X.ERROR_ID := ID;
	ELSE
		IF X.STATE = BYTE#1 THEN (* Daten schreiben *)
			X.S_BUF.BUFFER[index] := ID; (* ID *)
			index := index + 1;
			X.S_BUF.BUFFER[index] := BYTE#4; (* TYPE BOOL8 *)
			index := index + 1;
			X.S_BUF.BUFFER[index] := OSCAT_BASIC.BYTE_OF_BIT(IN1,IN2,IN3,IN4,IN5,IN6,IN7,IN8);
			index := index + 1;

		ELSIF X.STATE = BYTE#2 THEN (* Daten lesen *)
			index2 := index + 1; (* PCWORX Workaround *)
			IF X.R_BUF.BUFFER[index] &lt;&gt; ID OR X.R_BUF.BUFFER[index2] &lt;&gt; BYTE#4 THEN
				X.ERROR_ID := ID;
			ELSE
				index := index + 2;
				BYTE_TO_BITS(IN:=X.R_BUF.BUFFER[index]);
				OUT1 := BYTE_TO_BITS.B0;
				OUT2 := BYTE_TO_BITS.B1;
				OUT3 := BYTE_TO_BITS.B2;
				OUT4 := BYTE_TO_BITS.B3;
				OUT5 := BYTE_TO_BITS.B4;
				OUT6 := BYTE_TO_BITS.B5;
				OUT7 := BYTE_TO_BITS.B6;
				OUT8 := BYTE_TO_BITS.B7;
				index := index + 1;
			END_IF;
		END_IF;
		X.index := index;
	END_IF;
END_IF;

(* revision history
ks	15.may. 2011	rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>44d6491a-6d18-47e7-a5c2-50df3ab4c2b4</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="NET_VAR_BUFFER" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="BUF_IN">
              <type>
                <array>
                  <dimension lower="1" upper="64" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="BUF_OUT">
              <type>
                <array>
                  <dimension lower="1" upper="64" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="X">
              <type>
                <derived name="NET_VAR_DATA" />
              </type>
            </variable>
          </inOutVars>
          <outputVars>
            <variable name="ID">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="size">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="init">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="index">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="index2">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF NOT init THEN
	init := TRUE;
	X.ID_MAX := X.ID_MAX + USINT#1;
	ID := USINT_TO_BYTE(X.ID_MAX);
END_IF;

IF X.STATE &gt; BYTE#0 AND X.ERROR_ID = BYTE#0 THEN
	index := X.index; (* PCWORX Workaround *)
	IF X.STATE = BYTE#1 THEN (* Daten schreiben *)
		size := SIZEOF(BUF_IN);
		IF INT_TO_UINT(index + 3 + size) &gt; X.BUF_SIZE THEN
			X.ERROR_ID := ID;
		ELSE
			X.S_BUF.BUFFER[index] := ID; (* ID *)
			index := index + 1;
			X.S_BUF.BUFFER[index] := BYTE#20; (* TYPE BUFFER *)
			index := index + 1;
			X.S_BUF.BUFFER[index] := INT_TO_BYTE(size); (* Anzahl der Bytes *)
				index := index + 1;
			FOR index2 := 1 TO size DO
				X.S_BUF.BUFFER[index] := BUF_IN[index2];
				index := index + 1;
			END_FOR;
		END_IF;
	ELSIF X.STATE = BYTE#2 THEN (* Daten lesen *)
		index2 := index + 1; (* PCWORX Workaround *)
		IF X.R_BUF.BUFFER[index] &lt;&gt; ID OR X.R_BUF.BUFFER[index2] &lt;&gt; BYTE#20 THEN
			X.ERROR_ID := ID;
		ELSE
			index := index + 2;
			size := BYTE_TO_INT(X.R_BUF.BUFFER[index]);
			index := index + 1;
			FOR index2 := 1 TO size DO
				BUF_OUT[index2] := X.R_BUF.BUFFER[index];
				index := index + 1;
			END_FOR;
		END_IF;
	END_IF;
	X.index := index;
END_IF;

(* revision history
ks	15.may. 2011	rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>6d7071c5-81f5-41c3-afa7-928ea99f2a0c</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="NET_VAR_CONTROL" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="ACTIVATE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="MASTER">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="UDP">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="REMOTE_IP4">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="REMOTE_PORT">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="10000" />
              </initialValue>
            </variable>
            <variable name="SCAN_TIME">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#1s0ms" />
              </initialValue>
            </variable>
            <variable name="WATCHDOG">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#2s0ms" />
              </initialValue>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="RUN">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ERROR">
              <type>
                <DWORD />
              </type>
            </variable>
          </outputVars>
          <inOutVars>
            <variable name="X">
              <type>
                <derived name="NET_VAR_DATA" />
              </type>
            </variable>
          </inOutVars>
          <localVars>
            <variable name="IPC">
              <type>
                <derived name="IP_CONTROL" />
              </type>
            </variable>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> IP_Control Verwaltungsstruktur </xhtml>
              </documentation>
            </variable>
            <variable name="step">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="activate_last">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="tscan">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="reset">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF X.ERROR_ID &gt; BYTE#0 THEN (* Schwere Fehler bei Variablenzuordnung vorhanden  !! *)
	X.STATE := BYTE#0;
	ERROR := BYTE_TO_DWORD(X.ERROR_ID);
	X.ERROR_ID := BYTE#0;
	step := 999;
END_IF;

CASE step OF

00:	IF ACTIVATE AND NOT activate_last OR reset THEN

        (*  TCP + MASTER = C_MODE 0 (TCP + ACTIVE + PORT + IP) *)
        (*  UDP + MASTER = C_MODE 1 (UDP + ACTIVE + PORT + IP) *)
        (*  TCP + SLAVE  = C_MODE 2 (TCP + PASSIV + PORT + IP) *)
        (*  UDP + SLAVE  = C_MODE 3 (UDP + PASSIV + PORT + IP) *)
	IF MASTER THEN
		IP_C.C_MODE := BYTE#0;
		step := 100;
	ELSE
		IP_C.C_MODE := BYTE#2;
		step := 200;
	END_IF;
        IF UDP THEN IP_C.C_MODE := IP_C.C_MODE OR BYTE#1; END_IF;
	  	IP_C.C_PORT := REMOTE_PORT; (* Portnummer eintragen *)
	  	IP_C.C_IP := REMOTE_IP4; (* IP eintragen *)
	  	IP_C.TIME_RESET := TRUE; (* Zeitueberwachung rücksetzen *)
	  	IP_C.C_ENABLE := TRUE; (* Verbindungsaufbau freigeben *)
	  	IP_C.R_OBSERVE := TRUE; (* Empfangsueberwachung *)
		X.S_BUF.SIZE := UINT#0;
		X.R_BUF.SIZE := UINT#0;
		X.CYCLE := UDINT#0;
		X.ERROR_ID := BYTE#0;
		reset := FALSE;
	END_IF;

(* ++++++++++++++++++++++++++++++++++++++++++++++ *)

100:IF IP_C.C_STATE &gt; BYTE#127 THEN (* Verbindung vorhanden *)
		X.STATE := BYTE#1; (* Daten sammeln *)
		X.BUF_SIZE := SIZEOF(X.S_BUF.BUFFER);
		X.S_BUF.BUFFER[0] := UDINT_TO_BYTE(X.CYCLE);
		X.INDEX := 1;
		step := 110;
	END_IF;

110:X.STATE := BYTE#0;
	X.S_BUF.SIZE := INT_TO_UINT(X.INDEX); (* Datenlänge eintragen *)
	step := 120;

120:IF X.S_BUF.SIZE = UINT#0 AND X.R_BUF.SIZE &gt;= UINT#1 THEN (* länge der empfangenen Daten prüfen *)
		X.STATE := BYTE#2; (* Daten ausgeben *)
		X.BUF_SIZE := X.R_BUF.SIZE;
		X.INDEX := 1;
		X.ERROR_ID := BYTE#0;
		X.CYCLE := X.CYCLE + UDINT#1;
		ERROR := DWORD#0; (* nach erfolgreichen Zyklus letzten Fehlercode löschen *)
		RUN := TRUE;
		step := 130;
	END_IF;

130:X.STATE := BYTE#0;
	X.R_BUF.SIZE := UINT#0;
	IF NOT ACTIVATE THEN
		step := 999; (* Beenden *)
	ELSIF tscan.Q THEN
		step := 100;
	END_IF;

(* ++++++++++++++++++++++++++++++++++++++++++++++ *)

200:IF X.R_BUF.SIZE &gt;= UINT#1 THEN
		X.STATE := BYTE#2; (* Daten ausgeben *)
		X.BUF_SIZE := X.R_BUF.SIZE;
		X.INDEX := 1;
		step := 210;
	END_IF;

210:X.STATE := BYTE#1; (* Daten sammeln *)
	X.BUF_SIZE := SIZEOF(X.R_BUF.BUFFER);;
	X.S_BUF.BUFFER[0] := X.R_BUF.BUFFER[0]; (* Cycle übernehmen *)
	X.INDEX := 1;
	X.R_BUF.SIZE := UINT#0;
	step := 220;

220:X.STATE := BYTE#0;
	X.S_BUF.SIZE := INT_TO_UINT(X.INDEX); (* Datenlänge eintragen *)
	step := 230;

230:IF X.S_BUF.SIZE = UINT#0 THEN
		ERROR := DWORD#0; (* nach erfolgreichen Zyklus letzten Fehlercode löschen *)
		RUN := TRUE;
		IF NOT ACTIVATE THEN
			step := 999; (* Beenden *)
		ELSE
			step := 200;
		END_IF;
	END_IF;

999:IP_C.C_ENABLE := FALSE; (* Beenden *)
	RUN := FALSE;
	step := 0;

END_CASE;

(* ++++++++++++++++++++++++++++++++++++++++++++++ *)

IPC(IP:= DWORD#0, PORT:= WORD#0 , TIME_OUT:= WATCHDOG, IP_C:= IP_C, S_BUF:= X.S_BUF, R_BUF:= X.R_BUF);

IF IP_C.ERROR &gt; DWORD#0 THEN
	ERROR := IP_C.ERROR;
	RUN := FALSE;
	reset := TRUE;
	step := 0;
END_IF;

ACTIVATE_LAST := ACTIVATE; (* letzten Status sichern zur Flankenerkennung *)
tscan(IN:= step &lt;&gt; 110 ,PT:=SCAN_TIME);

(* revision history
ks	15.may. 2011	rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>709a90c3-388a-40ed-8701-37b78f1f1697</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="NET_VAR_DWORD8" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="X">
              <type>
                <derived name="NET_VAR_DATA" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="IN1">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="IN2">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="IN3">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="IN4">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="IN5">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="IN6">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="IN7">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="IN8">
              <type>
                <DWORD />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="OUT1">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="OUT2">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="OUT3">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="OUT4">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="OUT5">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="OUT6">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="OUT7">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="OUT8">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="ID">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="init">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="i">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="i2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="index">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="index2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="ra">
              <type>
                <array>
                  <dimension lower="1" upper="8" />
                  <baseType>
                    <DWORD />
                  </baseType>
                </array>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF NOT init THEN
	init := TRUE;
	X.ID_MAX := X.ID_MAX + USINT#1;
	ID := USINT_TO_BYTE(X.ID_MAX);
END_IF;

IF X.STATE &gt; BYTE#0 AND X.ERROR_ID = BYTE#0 THEN
	index := X.index; (* PCWORX Workaround *)
	IF INT_TO_UINT(index + 34) &gt; X.BUF_SIZE THEN  (* ID (1) + TYPE (1) + 8 x DWORD (4) *)
		X.ERROR_ID := ID;
	ELSE
		IF X.STATE = BYTE#1 THEN (* Daten schreiben *)
			ra[1] := IN1;
			ra[2] := IN2;
			ra[3] := IN3;
			ra[4] := IN4;
			ra[5] := IN5;
			ra[6] := IN6;
			ra[7] := IN7;
			ra[8] := IN8;
			X.S_BUF.BUFFER[index] := ID; (* ID *)
			index := index + 1;
			X.S_BUF.BUFFER[index] := BYTE#13; (* TYPE DWORD8 *)
			index := index + 1;
			FOR i2 := 1 TO 8 DO;
				FOR i := 1 TO 4 DO;
					X.S_BUF.BUFFER[index] := DWORD_TO_BYTE(ra[i2]);
					ra[i2] := ROR(ra[i2],8);
					index := index + 1;
				END_FOR;
			END_FOR;

		ELSIF X.STATE = BYTE#2 THEN (* Daten lesen *)
			index2 := index + 1; (* PCWORX Workaround *)
			IF X.R_BUF.BUFFER[index] &lt;&gt; ID OR X.R_BUF.BUFFER[index2] &lt;&gt; BYTE#13 THEN (* TYPE DWORD8 *)
				X.ERROR_ID := ID;
			ELSE
				index := index + 2;
				FOR i2 := 1 TO 8 DO;
					ra[i2] := DWORD#0;
					FOR i := 1 TO 4 DO;
						ra[i2] := ra[i2] OR BYTE_TO_DWORD(X.R_BUF.BUFFER[index]);
						ra[i2] := ROR(ra[i2],8);
						index := index + 1;
					END_FOR;
				END_FOR;
				OUT1 := ra[1];
				OUT2 := ra[2];
				OUT3 := ra[3];
				OUT4 := ra[4];
				OUT5 := ra[5];
				OUT6 := ra[6];
				OUT7 := ra[7];
				OUT8 := ra[8];
			END_IF;
		END_IF;
		X.index := index;
	END_IF;
END_IF;

(* revision history
ks	15.may. 2011	rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>33f07a7f-14f8-487b-bfac-7857a8087a9a</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="NET_VAR_REAL8" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="X">
              <type>
                <derived name="NET_VAR_DATA" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="IN1">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="IN2">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="IN3">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="IN4">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="IN5">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="IN6">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="IN7">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="IN8">
              <type>
                <REAL />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="OUT1">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="OUT2">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="OUT3">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="OUT4">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="OUT5">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="OUT6">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="OUT7">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="OUT8">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="ID">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="init">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="i">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="i2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="index">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="index2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="r_dw">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="ra">
              <type>
                <array>
                  <dimension lower="1" upper="8" />
                  <baseType>
                    <REAL />
                  </baseType>
                </array>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF NOT init THEN
	init := TRUE;
	X.ID_MAX := X.ID_MAX + USINT#1;
	ID := USINT_TO_BYTE(X.ID_MAX);
END_IF;

IF X.STATE &gt; BYTE#0 AND X.ERROR_ID = BYTE#0 THEN
	index := X.index; (* PCWORX Workaround *)
	IF INT_TO_UINT(index + 34) &gt; X.BUF_SIZE THEN (* ID (1) + TYPE (1) + 8 x REAL (4) *)
		X.ERROR_ID := ID;
	ELSE
		IF X.STATE = BYTE#1 THEN (* Daten schreiben *)
			ra[1] := IN1;
			ra[2] := IN2;
			ra[3] := IN3;
			ra[4] := IN4;
			ra[5] := IN5;
			ra[6] := IN6;
			ra[7] := IN7;
			ra[8] := IN8;
			X.S_BUF.BUFFER[index] := ID; (* ID *)
			index := index + 1;
			X.S_BUF.BUFFER[index] := BYTE#15; (* TYPE REAL8 *)
			index := index + 1;
			FOR i2 := 1 TO 8 DO;
				r_dw := OSCAT_BASIC.REAL_TO_DW(X:=ra[i2]);
				FOR i := 1 TO 4 DO;
					X.S_BUF.BUFFER[index] := DWORD_TO_BYTE(r_dw);
					r_dw := ROR(r_dw,8);
					index := index + 1;
				END_FOR;
			END_FOR;

		ELSIF X.STATE = BYTE#2 THEN (* Daten lesen *)
			index2 := index + 1; (* PCWORX Workaround *)
			IF X.R_BUF.BUFFER[index] &lt;&gt; ID OR X.R_BUF.BUFFER[index2] &lt;&gt; BYTE#15 THEN (* TYPE REAL8 *)
				X.ERROR_ID := ID;
			ELSE
				index := index + 2;
				FOR i2 := 1 TO 8 DO;
					r_dw := DWORD#0;
					FOR i := 1 TO 4 DO;
						r_dw := r_dw OR BYTE_TO_DWORD(X.R_BUF.BUFFER[index]);
						r_dw := ROR(r_dw,8);
						index := index + 1;
					END_FOR;
					ra[i2] := OSCAT_BASIC.DW_TO_REAL(X:=r_dw);
				END_FOR;
				OUT1 := ra[1];
				OUT2 := ra[2];
				OUT3 := ra[3];
				OUT4 := ra[4];
				OUT5 := ra[5];
				OUT6 := ra[6];
				OUT7 := ra[7];
				OUT8 := ra[8];
			END_IF;
		END_IF;
		X.index := index;
	END_IF;
END_IF;

(* revision history
ks	15.may. 2011	rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>45eba169-8903-411d-92fc-63ff213316c3</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="NET_VAR_STRING" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="IN">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="OUT">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="X">
              <type>
                <derived name="NET_VAR_DATA" />
              </type>
            </variable>
          </inOutVars>
          <outputVars>
            <variable name="ID">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="init">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="len_str">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="index">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="index2">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF NOT init THEN
	init := TRUE;
	X.ID_MAX := X.ID_MAX + USINT#1;
	ID := USINT_TO_BYTE(X.ID_MAX);
END_IF;

IF X.STATE &gt; BYTE#0 AND X.ERROR_ID = BYTE#0 THEN
	index := X.index; (* PCWORX Workaround *)
	IF X.STATE = BYTE#1 THEN (* Daten schreiben *)
		len_str := LEN(IN);
		IF INT_TO_UINT(index + 3 + len_str) &gt; X.BUF_SIZE THEN
			X.ERROR_ID := ID;
		ELSE
			X.S_BUF.BUFFER[index] := ID; (* ID *)
			index := index + 1;
			X.S_BUF.BUFFER[index] := BYTE#6; (* TYPE REAL *)
			index := index + 1;
			X.S_BUF.BUFFER[index] := INT_TO_BYTE(len_str); (* Anzahl der Bytes *)
			index := index + 1;
			OSCAT_BASIC._STRING_TO_BUFFER(STR:=IN,POS:=index,PT:=ADR(X.S_BUF.BUFFER),SIZE:=X.BUF_SIZE);
			index := index + len_str;
		END_IF;
	ELSIF X.STATE = BYTE#2 THEN (* Daten lesen *)
		index2 := index + 1; (* PCWORX Workaround *)
		IF X.R_BUF.BUFFER[index] &lt;&gt; ID OR X.R_BUF.BUFFER[index2] &lt;&gt; BYTE#6 THEN
			X.ERROR_ID := ID;
		ELSE
			index := index + 2;
			len_str := BYTE_TO_INT(X.R_BUF.BUFFER[index]);
			index2 := index + 1;
			index := index2 + len_str;
			IF len_STR &gt; 0 THEN
				OUT := OSCAT_BASIC.BUFFER_TO_STRING(PT:=ADR(X.R_BUF.BUFFER),SIZE:=X.BUF_SIZE,START:=INT_TO_UINT(index2),STOP:=INT_TO_UINT(index - 1));
			ELSE
				OUT := '';
			END_IF;
		END_IF;
	END_IF;
	X.index := index;
END_IF;

(* revision history
ks	15.may. 2011	rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>237de9e4-eaad-4683-9449-da745cea45aa</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="NET_VAR_X8" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="X">
              <type>
                <derived name="NET_VAR_DATA" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="IN_REAL1">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="IN_REAL2">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="IN_DINT1">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="IN_DINT2">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="IN_UDINT1">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="IN_UDINT2">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="IN_DWORD1">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="IN_DWORD2">
              <type>
                <DWORD />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="OUT_REAL1">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="OUT_REAL2">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="OUT_DINT1">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="OUT_DINT2">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="OUT_UDINT1">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="OUT_UDINT2">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="OUT_DWORD1">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="OUT_DWORD2">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="ID">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="init">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="i">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="i2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="index">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="index2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="ra">
              <type>
                <array>
                  <dimension lower="1" upper="8" />
                  <baseType>
                    <DWORD />
                  </baseType>
                </array>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF NOT init THEN
	init := TRUE;
	X.ID_MAX := X.ID_MAX + USINT#1;
	ID := USINT_TO_BYTE(X.ID_MAX);
END_IF;

IF X.STATE &gt; BYTE#0 AND X.ERROR_ID = BYTE#0 THEN
	index := X.index; (* PCWORX Workaround *)
	IF INT_TO_UINT(index + 34) &gt; X.BUF_SIZE THEN  (* ID (1) + TYPE (1) + 8 x DWORD (4) *)
		X.ERROR_ID := ID;
	ELSE
		IF X.STATE = BYTE#1 THEN (* Daten schreiben *)
			ra[1] := OSCAT_BASIC.REAL_TO_DW(X:=IN_REAL1);
			ra[2] := OSCAT_BASIC.REAL_TO_DW(X:=IN_REAL2);
			ra[3] := DINT_TO_DWORD(IN_DINT1);
			ra[4] := DINT_TO_DWORD(IN_DINT2);
			ra[5] := UDINT_TO_DWORD(IN_UDINT1);
			ra[6] := UDINT_TO_DWORD(IN_UDINT2);
			ra[7] := IN_DWORD1;
			ra[8] := IN_DWORD2;
			X.S_BUF.BUFFER[index] := ID; (* ID *)
			index := index + 1;
			X.S_BUF.BUFFER[index] := BYTE#21; (* TYPE X8 *)
			index := index + 1;
			FOR i2 := 1 TO 8 DO;
				FOR i := 1 TO 4 DO;
					X.S_BUF.BUFFER[index] := DWORD_TO_BYTE(ra[i2]);
					ra[i2] := ROR(ra[i2],8);
					index := index + 1;
				END_FOR;
			END_FOR;

		ELSIF X.STATE = BYTE#2 THEN (* Daten lesen *)
			index2 := index + 1; (* PCWORX Workaround *)
			IF X.R_BUF.BUFFER[index] &lt;&gt; ID OR X.R_BUF.BUFFER[index2] &lt;&gt; BYTE#21 THEN (* TYPE X8 *)
				X.ERROR_ID := ID;
			ELSE
				index := index + 2;
				FOR i2 := 1 TO 8 DO;
					ra[i2] := DWORD#0;
					FOR i := 1 TO 4 DO;
						ra[i2] := ra[i2] OR BYTE_TO_DWORD(X.R_BUF.BUFFER[index]);
						ra[i2] := ROR(ra[i2],8);
						index := index + 1;
					END_FOR;
				END_FOR;
				OUT_REAL1 := OSCAT_BASIC.DW_TO_REAL(X:=ra[1]);
				OUT_REAL2 := OSCAT_BASIC.DW_TO_REAL(X:=ra[2]);
				OUT_DINT1 := DWORD_TO_DINT(ra[3]);
				OUT_DINT2 := DWORD_TO_DINT(ra[4]);
				OUT_UDINT1 := DWORD_TO_UDINT(ra[5]);
				OUT_UDINT2 := DWORD_TO_UDINT(ra[6]);
				OUT_DWORD1 := ra[7];
				OUT_DWORD2 := ra[8];
			END_IF;
		END_IF;
		X.index := index;
	END_IF;
END_IF;

(* revision history
ks	15.may. 2011	rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>337abaef-14af-4ad6-b92d-1a47004027cd</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="DNS_CLIENT" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> IP_Control Verwaltungsstruktur </xhtml>
              </documentation>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="ACTIVATE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="DOMAIN">
              <type>
                <string />
              </type>
            </variable>
            <variable name="IP4_DNS">
              <type>
                <DWORD />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="IP4">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="DONE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ERROR">
              <type>
                <DWORD />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="IP_FIFO">
              <type>
                <derived name="IP_FIFO" />
              </type>
            </variable>
            <variable name="ip_state">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="ip_id">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="i">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="state">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="domain_copy">
              <type>
                <string />
              </type>
            </variable>
            <variable name="activate_last">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="url_length">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="char">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="char_count">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="tid">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="anc">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="x">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="rr_stop">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ttl_last">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="ttl_tmp">
              <type>
                <DWORD />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Domain Name System (query) *)

CASE state OF

00:	IF ACTIVATE AND NOT activate_last THEN (* auf positive Flanke GET warten *)
		DONE := FALSE;
		ERROR := DWORD#0;
		state := 5;
	END_IF;

05:	IP4 := IP4_DECODE(str:=DOMAIN); (* prüfe ob domain schon eine IP4-Adresse ist *)
	IF IP4 &gt; DWORD#00 THEN
		DONE := TRUE;
		state := 0;
        		(*####################  DEBUG-MESSAGE  ###################################*)
        		(*IF _debug_enable THEN
            		LOG_CL.NEW_MSG := 'DNS: S05 IP4 ~1';
            		LOG_CL.PRINTF[1]  := DOMAIN;
            		LOG_MSG();
        		END_IF;*)
        		(*########################################################################*)
	ELSE
		ip_state := BYTE#1;
		ttl_last := DWORD#0;
		domain_copy := DOMAIN; (* DOMAIN String sichern *)
		state := 10;
        		(*####################  DEBUG-MESSAGE  ###################################*)
        		(*IF _debug_enable THEN
            		LOG_CL.NEW_MSG := 'DNS: S05 START';
            		LOG_MSG();
        		END_IF;*)
        		(*########################################################################*)
	END_IF;

10:	IF ip_state = BYTE#3 THEN (* Bei IP_Control anmelden *)
		url_length := LEN(domain_copy);
		char_count := 17 + url_length; (* sendebuffer initialisieren *)
		FOR i := 0 TO char_count DO
			S_BUF.BUFFER[i] := BYTE#00;
		END_FOR;
		tid := UINT_TO_BYTE(BYTE_TO_UINT(tid) + UINT#1);
		S_BUF.BUFFER[01] := tid; (* Transaction ID lowbyte *)
		S_BUF.BUFFER[02] := BYTE#16#01; (* Flags: highbyte *)
		S_BUF.BUFFER[05] := BYTE#16#01; (* Questions: lowbyte *)
		i := url_length + 12;	(* den servernamen von hinten nach vorne bearbeiten *)
		char_count := 0;
		WHILE i &gt; 12 DO
			char := OSCAT_BASIC.CODE(STR:=domain_copy,POS:=i - 12);
			IF char = BYTE#46 THEN (* prüfe auf haupt/sub domänen namens-teiler "." *)
				S_BUF.BUFFER[i] := INT_TO_BYTE(char_count); (* anstelle des teilers "." wird die länge des erkannten haupt/sub domänennames eingetragen *)
				char_count := 0;
			ELSE
				S_BUF.BUFFER[i] := char; (* char in buffer eintragen *)
				char_count := char_count + 1; (* anzahl char zählen *)
			END_IF;
			i := i - 1;
		END_WHILE;
		S_BUF.BUFFER[i] := INT_TO_BYTE(char_count); (* längenangabe des ganz linken (ersten) domänennamens eintragen *)
		i := url_length + 15; (* position hinter dem servernamen *)
		S_BUF.BUFFER[i] := BYTE#01; (* Type: A Hostaddress lowbyte *)
		i := i + 2;
		S_BUF.BUFFER[i] := BYTE#01; (* Class: IN lowbyte *)
		i := i + 1;
		(* IP Datenverkehr einrichten *)
		IP_C.C_PORT := WORD#53; (* Portnummer eintragen *)
		IP_C.C_IP := IP4_DNS; (* IP eintragen *)
		IP_C.C_MODE := BYTE#1; (* Mode: UDP+AKTIV+PORT+IP *)
		IP_C.C_ENABLE := TRUE; (* Verbindungsaufbau freigeben *)
		IP_C.TIME_RESET := TRUE; (* Zeitueberwachung rücksetzen *)
		IP_C.R_OBSERVE  := TRUE; (* Datenempfang ueberwachen *)
		S_BUF.SIZE := INT_TO_UINT(i); (* sendelänge eintragen *)
		R_BUF.SIZE := UINT#0; (* Empfangslänge rücksetzen *)
		state := 30;

        		(*####################  DEBUG-MESSAGE  ###################################*)
        		(*IF _debug_enable THEN
            		LOG_CL.NEW_MSG := 'DNS: S10 SEND';
            		LOG_MSG();
        		END_IF;*)
        		(*########################################################################*)
	END_IF;

30:	IF IP_C.ERROR &lt;&gt; DWORD#00 THEN
		ERROR := IP_C.ERROR;
		state := 99;
        		(*####################  DEBUG-MESSAGE  ###################################*)
        		(*IF _debug_enable THEN
            		LOG_CL.NEW_MSG := 'DNS: S30 ERROR ~1';
            		LOG_CL.PRINTF[1]  := DWORD_TO_STRING(ERROR);
            		LOG_MSG();
        		END_IF;*)
        		(*########################################################################*)

	ELSIF (S_BUF.SIZE = UINT#0) AND (tid = R_BUF.BUFFER[1]) AND (R_BUF.SIZE &gt;= INT_TO_UINT(34 + url_length)) THEN	(* prüfe ob antwort telegramm die richtige Transaction-ID und mindestlänge hat *)
		ERROR := BYTE_TO_DWORD(R_BUF.BUFFER[3] AND BYTE#2#0000_1111); (* prüfe Return code der Flags. 4 bits *)
		IF ERROR = DWORD#00 THEN
			anc := R_BUF.BUFFER[7]; (* Anzahl der Answer-RR *)
			IP_C.R_OBSERVE := FALSE; (* Datenempfang ueberwachen *)
			state := 40;
		ELSE
			state := 99;
		END_IF;
	END_IF;

40:	IF anc &gt; 0 THEN
		anc := anc - 1;
		WHILE i &lt; R_BUF.SIZE DO
			x := R_BUF.BUFFER[i];
			IF rr_stop = FALSE THEN
				IF x &gt; BYTE#63 THEN (* zeiger auf namen *)
					i := i + 1;
					rr_stop := TRUE;
				ELSIF x= BYTE#0 THEN (* namens ende *)
					rr_stop := TRUE;
				ELSE
					i := i + x; (* namen *)
				END_IF;
				i := i + 1;
			ELSE
				rr_stop := FALSE;
				IF R_BUF.BUFFER[i+1] = BYTE#1 AND R_BUF.BUFFER[i+3] = BYTE#1 THEN (* Type A / Class IN *)
					i := i + 4;
					ttl_tmp := OSCAT_BASIC.DWORD_OF_BYTE(R_BUF.BUFFER[i],R_BUF.BUFFER[i+1],R_BUF.BUFFER[i+2],R_BUF.BUFFER[i+3]); (* Time to live *)
					i := i + 6;
					IF ttl_tmp &gt;= ttl_last THEN (* TTL ist länger *)
						ttl_last := ttl_tmp;
						IP4 := OSCAT_BASIC.DWORD_OF_BYTE(R_BUF.BUFFER[i],R_BUF.BUFFER[i+1],R_BUF.BUFFER[i+2],R_BUF.BUFFER[i+3]); (* IP-Adresse *)
					END_IF;
					i := i + 4;
				ELSE
					i := i + 9;
					i := i + R_BUF.BUFFER[i] + 1; (* offset zu nächsten Block *)
				END_IF;
				EXIT;
			END_IF;
		END_WHILE;
	ELSE
		IF IP4 &gt; DWORD#0 THEN (* gültige RR mit IP gefunden *)
			DONE := TRUE;
            		(*####################  DEBUG-MESSAGE  ###################################*)
            		(*IF _debug_enable THEN
                			LOG_CL.NEW_MSG := 'DNS: S40 OK';
                			LOG_MSG();
            		END_IF;*)
            		(*########################################################################*)
		ELSE
			ERROR := DWORD#255; (* Daten fehlerhaft - keine IP-Adresse vorhanden *)
		END_IF;
		state := 99;
	END_IF;

99:	R_BUF.SIZE := UINT#0; (* Empfangslänge rücksetzen *)
	ip_state := BYTE#4; (* Abmelden *)
	state := 00;

END_CASE;

activate_last := ACTIVATE; (* letzten Status sichern zur Flankenerkennung *)
IP_FIFO(FIFO:=IP_C.FIFO,STATE:=ip_state,ID:=ip_id); (* IP_FIFO *)

(* revision history

ks	18. oct. 2008	rev 1.0
	original version

ks	20. oct. 2009	rev 1.1
	unbenutzten code entfernt, all buffer base 0

ks	20. dec. 2010	rev 1.2
	parsing nach rfc1305

ks	26. jul. 2011	rev 1.3
	verbesserte ip-auswertung , neue fehlermeldung
*)


(*----------------------------------------------------------------------------------------------------------------*)
(* Flags: 0x0100 (Standard query)                                                                                            *)
(* 0... .... .... .... = Response: Message is a query                                                                   *)
(* .000 0... ....  = Opcode: Standard query (0)                                                                          *)
(* .... ..0. .... .... = Truncated: Message is not truncated                                                          *)
(* .... ...1 .... .... = Recursion desired: Do query recursively                                                    *)
(* .... .... .0.. .... = Z: reserved (0)                                                                                                  *)
(* .... .... ...0 .... = Non-authenticated data OK: Non-authenticated data is unacceptable *)
(*-----------------------------------------------------------------------------------------------------------------*)

(*      0  1  2  3  4  5  6  7  8  9  0  1  2  3  4  5  *)
(*    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+ *)
(*    |                      ID                       | idx: 0/1   *)
(*    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+ *)
(*    |QR|   Opcode  |AA|TC|RD|RA|   Z    |   RCODE   | idx: 2/3   *)
(*    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+ *)
(*    |                    QDCOUNT                    | idx: 4/5   *)
(*    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+ *)
(*    |                    ANCOUNT                    | idx: 6/7   *)
(*    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+ *)
(*    |                    NSCOUNT                    | idx: 8/9   *)
(*    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+ *)
(*    |                    ARCOUNT                    | idx: 10/11 *)
(*    +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+ *)

(*
Errorcodes  Description	References 
000	No error. 		 	The request completed successfully.
001	Format error. 		The name server was unable to interpret the query. 
002	Server failure.  	The name server was unable to process this query due to a problem with the name server. 
003	Name Error. 	 	Meaningful only for responses from an authoritative name server, this code signifies that the domain name referenced in the query does not exist.
004	Not Implemented. 	The name server does not support the requested kind of query.
005	Refused. 			The name server refuses to perform the specified operation for policy reasons.
  						 For example, a name server may not wish to provide the information to the particular requester, or a name server may not wish to perform a particular operation (e.g., zone transfer) for particular data.
006	YXDomain.			Name Exists when it should not. 
007	YXRRSet. RR			Set Exists when it should not. 
008	NXRRSet. RR			Set that should exist does not. 
009	NotAuth.			Server Not Authoritative for zone. 
010	NotZone,			Name not contained in zone. 
255	Timeout				No Response  
   

beispiel einer DNS Request von google.at
ein request mit 3 Answer-Blocks


Domain Name System (response)
[Request In: 3]
[Time: 0.027533000 seconds]
Transaction ID: 0x5e1a
Flags: 0x8180 (Standard query response, No error)
1... .... .... .... = Response: Message is a response
.000 0... .... .... = Opcode: Standard query (0)
.... .0.. .... .... = Authoritative: Server is not an authority for domain
.... ..0. .... .... = Truncated: Message is not truncated
.... ...1 .... .... = Recursion desired: Do query recursively
.... .... 1... .... = Recursion available: Server can do recursive queries
.... .... .0.. .... = Z: reserved (0)
.... .... ..0. .... = Answer authenticated: Answer/authority portion was not authenticated
.... .... .... 0000 = Reply code: No error (0)
Questions: 1
Answer RRs: 3
Authority RRs: 0
Additional RRs: 0

Queries
google.at: type A, class IN
Name: google.at
Type: A (Host address)
Class: IN (0x0001)

Answers
google.at: type A, class IN, addr 72.14.221.104
Name: google.at
Type: A (Host address)
Class: IN (0x0001)
Time to live: 19 minutes, 9 seconds
Data length: 4
Addr: 72.14.221.104

google.at: type A, class IN, addr 66.249.93.104
Name: google.at
Type: A (Host address)
Class: IN (0x0001)
Time to live: 19 minutes, 9 seconds
Data length: 4
Addr: 66.249.93.104

google.at: type A, class IN, addr 216.239.59.104
Name: google.at
Type: A (Host address)
Class: IN (0x0001)
Time to live: 19 minutes, 9 seconds
Data length: 4
Addr: 216.239.59.104
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>c33236ef-b5d5-4a82-95ac-939237b6f1bf</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="DNS_DYN" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> IP_Control Verwaltungsstruktur </xhtml>
              </documentation>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="ENABLE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="UPDATE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="T_UPDATE">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#60m0s0ms" />
              </initialValue>
            </variable>
            <variable name="MODE">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="HOSTNAME">
              <type>
                <string length="30" />
              </type>
            </variable>
            <variable name="USERNAME">
              <type>
                <string length="20" />
              </type>
            </variable>
            <variable name="PASSWORD">
              <type>
                <string length="20" />
              </type>
            </variable>
            <variable name="IP4">
              <type>
                <DWORD />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="BUSY">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="DONE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ERROR_C">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="ERROR_T">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="DNS_CLIENT">
              <type>
                <derived name="DNS_CLIENT" />
              </type>
            </variable>
            <variable name="HTTP_GET">
              <type>
                <derived name="HTTP_GET" />
              </type>
            </variable>
            <variable name="BASE64_ENCODE_STR">
              <type>
                <derived name="BASE64_ENCODE_STR" />
              </type>
            </variable>
            <variable name="URL_DATA">
              <type>
                <derived name="url" />
              </type>
            </variable>
            <variable name="update_last">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="state">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="base64_done">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="s1">
              <type>
                <string length="144" />
              </type>
            </variable>
            <variable name="s2">
              <type>
                <string length="192" />
              </type>
            </variable>
            <variable name="w">
              <type>
                <derived name="TON" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE state OF

00:	IF ENABLE AND ((UPDATE AND NOT update_last) OR w.Q) THEN
		state := 20;
		DONE := FALSE;
		BUSY := TRUE;
		ERROR_C := DWORD#0;
		ERROR_T := BYTE#0;

		IF MODE = 0 THEN (* dyndns.org *)
			s2 := CONCAT('http://members.dyndns.org/nic/update?hostname=',HOSTNAME);
		ELSE (* selfhost.de *)
			s2 := 'http://carol.selfhost.de/nic/update?hostname=1';
		END_IF;
		IF IP4 &gt; 0 THEN (* parametrierte IP verwenden *)
			s1 := CONCAT('&amp;myip=',IP4_TO_STRING(IP4));
			s2 := CONCAT(s2,s1);
		END_IF;
		URL_DATA:=STRING_TO_URL(STR:=s2, DEFAULT_PROTOCOL:='', DEFAULT_PATH:=''); (* URL for DNS UND HTTP-GET *)
		s1 := CONCAT(USERNAME,':');
		s1 := CONCAT(s1,PASSWORD); (* BASE64 Encode Text *)
	END_IF;

20:	IF DNS_CLIENT.DONE THEN (* DNS_CLIENT *)
			state := 40;
	ELSIF (DNS_CLIENT.ERROR &gt; DWORD#00) THEN (* Fehlerbehandlung *)
		ERROR_C := DNS_CLIENT.ERROR;
		ERROR_T := BYTE#01;
		BUSY := FALSE;
		state := 0;
	END_IF;

40: IF base64_done THEN (* BASE64 Encode beendet ? *)
		s1 := CONCAT('Authorization: Basic ',s2);
		s1 := CONCAT(s1,'$0D$0AUser-Agent: x$0D$0A');
		URL_DATA.HEADER := s1;
		state := 60;
	END_IF;

60:	IF HTTP_GET.DONE THEN
		state := 0;
		BUSY := FALSE;
		DONE := TRUE;

		(* !! Codes !!
		Successful Updates: 		good , nchg
		Update Syntax Errors:		badsys , badagent
		Account-Related Errors:		badauth , !donator
		Hostname-Related Errors:	notfqdn , nohost , !yours , numhost , abuse
		Server Error Conditions:	dnserr , 911
		*)
		s2 := OSCAT_BASIC.BUFFER_TO_STRING(PT:=ADR(R_BUF.BUFFER),SIZE:=SIZEOF(R_BUF.BUFFER),START:=HTTP_GET.BODY_START + 3,STOP:=HTTP_GET.BODY_STOP - 7);
		IF FIND(s2,'good') = 0 THEN
			IF FIND(s2,'nochg') = 0 THEN
				ERROR_C := DWORD#1;
				ERROR_T := BYTE#03;
				DONE := FALSE;
			END_IF;
		END_IF;
	ELSIF (HTTP_GET.ERROR &gt; DWORD#00) THEN (* Fehlerbehandlung *)
		ERROR_C := HTTP_GET.ERROR;
		ERROR_T := BYTE#02;
		BUSY := FALSE;
		state := 0;
	END_IF;

END_CASE;

DNS_CLIENT(IP_C:=IP_C,	S_BUF:=S_BUF, R_BUF:=R_BUF,DOMAIN:=URL_DATA.DOMAIN, IP4_DNS:=0, ACTIVATE:=state=20); (* DNS_CLIENT *)
HTTP_GET( IP_C:=IP_C, S_BUF:=S_BUF, R_BUF:=R_BUF, IP4:=DNS_CLIENT.IP4, GET:=state=60, MODE:=2, UNLOCK_BUF:=state&lt;&gt;60,URL_DATA:=URL_DATA); (* HTTP_GET *)
BASE64_ENCODE_STR( RUN:=state=40, STR1:=s1, STR2:=s2, DONE=&gt;base64_done); (* BASE64 Encode *)

IF T_UPDATE &gt; T#0ms THEN w(IN:=state=0, PT:=T_UPDATE); END_IF;
update_last := UPDATE;

(* revision history
ks	01. jan. 2010	rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ae7c503d-eb00-45c1-a012-dcd9e4436a67</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="DNS_REV_CLIENT" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> IP_Control Verwaltungsstruktur </xhtml>
              </documentation>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="ACTIVATE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="IP4">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="IP4_DNS">
              <type>
                <DWORD />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="DOMAIN">
              <type>
                <string />
              </type>
            </variable>
            <variable name="DONE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ERROR">
              <type>
                <DWORD />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="IP_FIFO">
              <type>
                <derived name="IP_FIFO" />
              </type>
            </variable>
            <variable name="ip_state">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="ip_id">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="state">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="ip4_copy">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="d">
              <type>
                <string length="27" />
              </type>
            </variable>
            <variable name="activate_last">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="i">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="dl">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="p1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="char">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="char_count">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="tid">
              <type>
                <BYTE />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Domain Name System (query) *)

CASE state OF
00: (* auf positive Flanke GET warten *)
	IF ACTIVATE AND NOT activate_last THEN
		ERROR := DWORD#0;
		ip4_copy := ip4; (* IP4 sichern *)
		ip_state := BYTE#1;
		DOMAIN := '';
		DONE := FALSE;

		d := '';
		FOR i := 1 TO 4 DO
			d := CONCAT(d,BYTE_TO_STRING(DWORD_TO_BYTE(IP4)));
			d := CONCAT(d,'.');
			IP4 := ROR(IP4,8);
		END_FOR;
		d := CONCAT(d,'in-addr.arpa');
		state := 10;
	END_IF;

10: (* Bei IP_Control anmelden *)
	IF ip_state = BYTE#3 THEN
		dl := LEN(d);

		(* sendebuffer initialisieren *)
		char_count := 17 + dl;
		FOR i := 0 TO char_count DO
			S_BUF.BUFFER[i] := BYTE#00;
		END_FOR;

		tid := UINT_TO_BYTE(BYTE_TO_UINT(tid) + UINT#1);
		S_BUF.BUFFER[01] := tid; (* Transaction ID lowbyte *)
		S_BUF.BUFFER[02] := BYTE#16#01; (* Flags: highbyte *)
		S_BUF.BUFFER[05] := BYTE#16#01; (* Questions: lowbyte *)

		(* den servernamen von hinten nach vorne bearbeiten *)
		i := dl + 12;
		char_count := 0;

		WHILE i &gt; 12 DO
			char := OSCAT_BASIC.CODE(STR:=d,POS:=i - 12);

			(* prüfe auf haupt/sub domänen namens-teiler "." *)
			IF char = BYTE#46 THEN
				(* anstelle des teilers "." wird die länge des erkannten haupt/sub domänennames eingetragen *)
				S_BUF.BUFFER[i] := INT_TO_BYTE(char_count);
				char_count := 0;
			ELSE
				S_BUF.BUFFER[i] := char; (* char in buffer eintragen *)
				char_count := char_count + 1; (* anzahl char zählen *)
			END_IF;
			i := i - 1;
		END_WHILE;

		S_BUF.BUFFER[i] := INT_TO_BYTE(char_count); (* längenangabe des ganz linken (ersten) domänennamens eintragen *)
		i := dl + 15; (* position hinter dem servernamen *)
		S_BUF.BUFFER[i] := BYTE#12; (* Type: PTR (Domain name pointer) lowbyte *)
		i := i + 2;
		S_BUF.BUFFER[i] := BYTE#01; (* Class: IN lowbyte *)
		i := i + 1;

		(* IP Datenverkehr einrichten *)
		IP_C.C_PORT := WORD#53; (* Portnummer eintragen *)
		IP_C.C_IP := IP4_DNS; (* IP eintragen *)
		IP_C.C_MODE := BYTE#1; (* Mode: UDP+AKTIV+PORT+IP *)
		IP_C.C_ENABLE := TRUE; (* Verbindungsaufbau freigeben *)
		IP_C.TIME_RESET := TRUE; (* Zeitueberwachung rücksetzen *)
		IP_C.R_OBSERVE  := TRUE; (* Datenempfang ueberwachen *)
		S_BUF.SIZE := INT_TO_UINT(i); (* sendelänge eintragen *)
		R_BUF.SIZE := UINT#0; (* Empfangslänge rücksetzen *)
		state := 30;
	END_IF;

30:
	IF IP_C.ERROR &lt;&gt; DWORD#00 THEN
		ERROR := IP_C.ERROR;
	(* prüfe ob antwort telegramm die richtige Transaction-ID und mindestlänge hat *)
	ELSIF (S_BUF.SIZE = UINT#0) AND (tid = R_BUF.BUFFER[1]) AND (R_BUF.SIZE &gt;= INT_TO_UINT(i+12)) THEN

		(* prüfe Return code der Flags. 4 bits *)
		ERROR := BYTE_TO_DWORD(R_BUF.BUFFER[3] AND BYTE#2#0000_1111);

		IF ERROR = DWORD#00 THEN

			i := R_BUF.SIZE - 2;
			WHILE R_BUF.BUFFER[i] &gt; 0 DO
				IF i = 0 THEN EXIT; END_IF;
				i := i - 1;
			END_WHILE;

			i := i + 2;
			p1 := i + 1;
			WHILE i &lt; R_BUF.SIZE DO
				dl := R_BUF.BUFFER[i];
				IF dl &gt; 0 THEN
					R_BUF.BUFFER[i] := BYTE#46;
					i := i + dl + 1;
				ELSE
					DOMAIN := OSCAT_BASIC.BUFFER_TO_STRING(PT:=ADR(R_BUF.BUFFER),SIZE:=SIZEOF(R_BUF.BUFFER),START:=p1,STOP:=i-1);
					EXIT;
				END_IF;
			END_WHILE;
			state := 0;
			DONE := TRUE;
		END_IF;
	END_IF;

	IF ERROR &lt;&gt; DWORD#0 THEN
		state := 0;
	END_IF;

	IF state = 0 THEN
		IP_C.R_OBSERVE := FALSE; (* Datenempfang ueberwachen *)
		ip_state := BYTE#4; (* Abmelden *)
	END_IF;

END_CASE;

activate_last := ACTIVATE; (* letzten Status sichern zur Flankenerkennung *)

(* IP_FIFO *)
IP_FIFO(FIFO:=IP_C.FIFO,STATE:=ip_state,ID:=ip_id);

(* revision history

ks	28. dec. 2009	rev 1.0
	original version

*)


(*----------------------------------------------------------------------------------------------------------------*)
(* Flags: 0x0100 (Standard query)                                                                                            *)
(* 0... .... .... .... = Response: Message is a query                                                                   *)
(* .000 0... ....  = Opcode: Standard query (0)                                                                          *)
(* .... ..0. .... .... = Truncated: Message is not truncated                                                          *)
(* .... ...1 .... .... = Recursion desired: Do query recursively                                                    *)
(* .... .... .0.. .... = Z: reserved (0)                                                                                                  *)
(* .... .... ...0 .... = Non-authenticated data OK: Non-authenticated data is unacceptable *)
(*-----------------------------------------------------------------------------------------------------------------*)

(*
Errorcodes  Description	References 
000	No error. 		 	The request completed successfully.
001	Format error. 		The name server was unable to interpret the query. 
002	Server failure.  	The name server was unable to process this query due to a problem with the name server. 
003	Name Error. 	 	Meaningful only for responses from an authoritative name server, this code signifies that the domain name referenced in the query does not exist.
004	Not Implemented. 	The name server does not support the requested kind of query.
005	Refused. 			The name server refuses to perform the specified operation for policy reasons.
  						 For example, a name server may not wish to provide the information to the particular requester, or a name server may not wish to perform a particular operation (e.g., zone transfer) for particular data.
006	YXDomain.			Name Exists when it should not. 
007	YXRRSet. RR			Set Exists when it should not. 
008	NXRRSet. RR			Set that should exist does not. 
009	NotAuth.			Server Not Authoritative for zone. 
010	NotZone,			Name not contained in zone. 
255	Timeout				No Response  
*)   </xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>69109b46-8368-409d-ac3f-9091bf373017</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FTP_CLIENT" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="ACTIVATE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="FILENAME">
              <type>
                <string />
              </type>
            </variable>
            <variable name="FTP_URL">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="FTP_DOWNLOAD">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="FTP_ACTIV">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="FILE_DELETE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="TIMEOUT">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="DNS_IP4">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="PLC_IP4">
              <type>
                <DWORD />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="DONE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="BUSY">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ERROR_C">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="ERROR_T">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="IP_C1">
              <type>
                <derived name="IP_C" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> IP_Control Verwaltungsstruktur </xhtml>
              </documentation>
            </variable>
            <variable name="IP_C2">
              <type>
                <derived name="IP_C" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> IP_Control Verwaltungsstruktur </xhtml>
              </documentation>
            </variable>
            <variable name="S_BUF1">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="S_BUF2">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="R_BUF1">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="R_BUF2">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="URL_DATA">
              <type>
                <derived name="url" />
              </type>
            </variable>
            <variable name="DNS_CLIENT">
              <type>
                <derived name="DNS_CLIENT" />
              </type>
            </variable>
            <variable name="IPC1">
              <type>
                <derived name="IP_CONTROL" />
              </type>
            </variable>
            <variable name="IPC2">
              <type>
                <derived name="IP_CONTROL" />
              </type>
            </variable>
            <variable name="FS">
              <type>
                <derived name="FILE_SERVER" />
              </type>
            </variable>
            <variable name="FSD">
              <type>
                <derived name="FILE_SERVER_DATA" />
              </type>
            </variable>
            <variable name="activate_last">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="step">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="snd_step">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="snd_text">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="rcv_text">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="rcv_state">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="TON_WAIT">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="last_step">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="next_step">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="idx1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="idx2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="str1">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="str2">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="ftp_path">
              <type>
                <string />
              </type>
            </variable>
            <variable name="byar">
              <type>
                <array>
                  <dimension lower="0" upper="5" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="dw_tmp">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="w_tmp">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="fpd">
              <type>
                <derived name="FILE_PATH_DATA" />
              </type>
            </variable>
            <variable name="timeout2">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="timeout3">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="ftp_file_size">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="ip_c1_red_disable">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> IP_CONTROL 1 - Remote Disconnect Error unterdrücken </xhtml>
              </documentation>
            </variable>
            <variable name="ip_c2_red_disable">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> IP_CONTROL 1 - Remote Disconnect Error unterdrücken </xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE step OF

00:	IF ACTIVATE AND NOT activate_last THEN
		ftp_file_size := UDINT#0;
		TIMEOUT := MAX(T#10s,TIMEOUT);
		timeout2 := TIMEOUT + T#1s;
		timeout3 := TIMEOUT / 2;
		DONE := FALSE;
		ip_c1_red_disable := FALSE;
		ip_c2_red_disable := FALSE;
		ERROR_C := DWORD#0;
		ERROR_T := BYTE#0;
		FSD.ERROR := BYTE#0;
		URL_DATA := STRING_TO_URL(STR:=FTP_URL,DEFAULT_PROTOCOL:='',DEFAULT_PATH:='/');
		IF LEN(URL_DATA.USER) = 0 THEN
			URL_DATA.USER := 'Anonymous';
			URL_DATA.PASSWORD := 'User@';
		END_IF;

		FILE_PATH_SPLIT(FILENAME:=FILENAME,X:=fpd); (* Datei-Path zerlegen *)
		str1 := fpd.FILENAME; (* zwischenspeichern *)
		FILE_PATH_SPLIT(FILENAME:=URL_DATA.PATH,X:=fpd); (* FTP-Path zerlegen *)
		IF LEN(fpd.FILENAME) = 0 THEN (* wenn FTP-Path keinen Dateinamen enthält , dann den Namen der lokalen Datei benutzen *)
			ftp_path := CONCAT(URL_DATA.PATH,str1);
		ELSE
			ftp_path := URL_DATA.PATH;
		END_IF;
		step := 10;
	END_IF;

10:	IF DNS_CLIENT.DONE THEN
		step := 20;
	ELSIF DNS_CLIENT.ERROR &lt;&gt; DWORD#0 THEN
		ERROR_C := DNS_CLIENT.ERROR;
		ERROR_T := BYTE#1;
		step := 980;
	END_IF;

20:	(* FTP Steuerkanal einrichten *)
	IP_C1.C_PORT := WORD#21; (* Portnummer eintragen *)
  	IP_C1.C_IP := DNS_CLIENT.IP4; (* IP eintragen *)
  	IP_C1.C_MODE := BYTE#0; (* Mode: TCP+ACTIV+PORT *)
  	IP_C1.TIME_RESET := TRUE; (* Zeitueberwachung rücksetzen *)
  	IP_C1.C_ENABLE := TRUE; (* Verbindungsaufbau freigeben *)
  	IP_C1.R_OBSERVE := TRUE; (* Empfangsueberwachung *)
	R_BUF1.SIZE := UINT#0;

  	IP_C2.C_ENABLE   := FALSE; (* Verbindungsaufbau sperren *)
	step := 30;

30:	IF rcv_state = 220 THEN (* 220 = Service ready for new user *)
		snd_text := CONCAT('USER ',URL_DATA.USER);
		next_step := 40;
	END_IF;

40:	IF rcv_state = 331 THEN (* 331 = User name okay, need password *)
		snd_text := CONCAT('PASS ',URL_DATA.PASSWORD);
		next_step := 50;
	ELSIF rcv_state = 230 THEN (* 230 = User logged in, proceed *)
		next_step := 50;
	ELSIF rcv_state = 220 THEN (* 220 = Service ready for new user *)
		next_step := 20; (* WORK verbindung sollte ab/aufgebaut werden *)
	END_IF;

50:	IF rcv_state = 230 THEN (* 230 = User logged in, proceed *)
		snd_text := 'TYPE I';  (* binären Modus aktivieren *)
		next_step := 54;
	END_IF;

54:	IF rcv_state = 200 THEN (* 200 = Command okay *)
		IF FTP_DOWNLOAD THEN (* Datei von FTP Empfangen *)
			snd_text := CONCAT('SIZE ', ftp_path); (* SIZE /PFAD/FILENAME *)
			next_step := 56;
		ELSE
			step := 60;
		END_IF;
	END_IF;

56:	IF rcv_state = 213 THEN (* 213 Filesize *)
		str1 := ELEMENT_GET(SEP:=BYTE#32,POS:=1,ELEMENT:=rcv_text);
		ftp_file_size := STRING_TO_UDINT(str1); (* Dateigroesse in bytes gestimmen *)
		step := 60;
	END_IF;

60:	IF FTP_ACTIV THEN (* FTP Server aktiv *)
		IF URL_DATA.PORT = WORD#0 THEN
			URL_DATA.PORT := WORD#20; (* Standard Datenkanal *)
		END_IF;
		str2 := '';
		dw_tmp := PLC_IP4;
		FOR idx1 := 0 TO 5 DO
			IF idx1 = 4 THEN
				dw_tmp := ROR(WORD_TO_DWORD(URL_DATA.PORT),8);
			ELSE
				dw_tmp := ROL(dw_tmp,8);
			END_IF;
			str2 := CONCAT(str2,BYTE_TO_STRING(DWORD_TO_BYTE(dw_tmp)));
			IF idx1 &lt; 5 THEN
				str2 := CONCAT(str2,',');
			END_IF;
		END_FOR;
		dw_tmp := DNS_CLIENT.IP4; (* IP eintragen *)
		w_tmp := URL_DATA.PORT; (* Port Nummer des Datenkanals *)
		snd_text := CONCAT('PORT ',str2); (* FTP Server in den aktiv-mode schalten *)
		next_step := 80;
	ELSE
		snd_text := 'PASV';  (* FTP Server in den passiv-mode schalten *)
		next_step := 70;
	END_IF;
	step := 999; (* Warten auf next_step *)

70:	IF rcv_state = 227 THEN (* 227 = Entered Passive Mode (213,202,225,43,212,186) *)
		idx1 := FIND(rcv_text , '(' );
		idx2 := FIND(rcv_text , ')' );
		IF idx1 &gt; 0 AND idx2 &gt; idx1+1 THEN
			str1 := MID(rcv_text, idx2 - idx1 - 1, idx1+1);
			FOR idx1 := 0 TO 5 DO
				str2 := ELEMENT_GET(SEP:=BYTE#44,POS:=idx1,ELEMENT:=str1);
				byar[idx1] := STRING_TO_BYTE(str2);
			END_FOR;
			dw_tmp := OSCAT_BASIC.DWORD_OF_BYTE(byar[0],byar[1],byar[2],byar[3]); (* IP Adresse des Datenkanals *)
			w_tmp := OSCAT_BASIC.WORD_OF_BYTE(byar[4],byar[5]); (* Port Nummer des Datenkanals *)
		END_IF;
		step := 100;
	END_IF;

80:	IF rcv_state = 200 THEN (* 200 = PORT command successful *)
		step := 100;
	END_IF;

100:IP_C2.C_MODE := SEL(FTP_ACTIV,BYTE#0,BYTE#2); (* Aktiv = Mode 2: TCP+PASSIV+PORT / passiv = Mode 0: TCP+ACTIV+PORT *)
	IP_C2.C_IP := dw_tmp; (* IP Adresse des Datenkanals *)
	IP_C2.C_PORT := w_tmp; (* Port Nummer des Datenkanals *)
  	IP_C2.TIME_RESET := TRUE; (* Zeitueberwachung rücksetzen *)
  	IP_C2.C_ENABLE := TRUE; (* Verbindungsaufbau freigeben *)
	IP_C2.R_OBSERVE := FALSE; (* Empfangsueberwachung *)
	R_BUF2.SIZE := UINT#0;
	step := 120;

120:IF IP_C2.C_STATE &gt; BYTE#127 THEN (* FTP Datenkanal aufgebaut *)
		IF FTP_DOWNLOAD THEN (* File von FTP empfangen *)
			IP_C2.MAILBOX[3] := BYTE#1; (* IP Empfang sperren *)
			step := 400;
		ELSE
			snd_text := 'STOR ';
			next_step := 140;
			snd_text := CONCAT(snd_text, ftp_path); (* STORE /PFAD/FILENAME *)
			step := 999; (* Warten auf next_step *)
		END_IF;
	END_IF;

(* ============== File an FTP senden ================ *)

140:IF rcv_state = 125 OR rcv_state = 150 THEN (* 125 = Data connection already open / 150 = File status okay; about to open data connection *)
		step := 160;
	END_IF;

160:FSD.FILENAME := FILENAME; (* Dateiname *)
	FSD.MODE := BYTE#1; (* vorhandene Datei zum lesen öffnen *)
	FSD.OFFSET := UDINT#0; (* Start bei Dateianfang *)
	S_BUF2.SIZE := UINT#65535; (* maximale länge einlesen *)
	IP_C2.MAILBOX[2] := BYTE#1; (* IP Senden blockieren *)
	step := 200;

200:IF FSD.MODE = BYTE#0 AND FSD.ERROR = BYTE#0 THEN
		IP_C2.MAILBOX[2] := BYTE#0; (* IP Senden erlauben *)
		step := 210;
	END_IF;

210:IF S_BUF2.SIZE = UINT#0 THEN (* warten bis alle daten gesendet sind *)
		IF FSD.FILE_SIZE - FSD.OFFSET &gt; UDINT#0 THEN
			FSD.MODE := BYTE#1; (* vorhandene Datei zum lesen öffnen *)
			S_BUF2.SIZE := UINT#65535; (* maximale länge einlesen *)
			IP_C2.MAILBOX[2] := BYTE#1; (* IP Senden blockieren *)
			step := 200;
		ELSE
			IP_C2.C_ENABLE := FALSE; (* FTP Datenkanal schliessen *)
			step := 300;
		END_IF;
	END_IF;

300:IF rcv_state = 226 THEN (* 226 Closing data connection. Requested file action successful  *)
		snd_text := 'QUIT';
		ip_c1_red_disable := TRUE;
		next_step := 320;
	END_IF;

320:IF rcv_state = 221 OR TON_WAIT.ET &gt; timeout3  THEN (* 221 Service closing control connection *)
		IP_C1.C_ENABLE := FALSE; (* FTP Steuerkanal schliessen *)
		IF FILE_DELETE THEN (* Datei nach transfer löschen *)
			FSD.MODE := BYTE#4; (* File Remove *)
			step := 340;
		ELSE
			step := 900;
		END_IF;
	END_IF;

340:IF FSD.MODE = BYTE#0 AND FSD.ERROR = BYTE#0 THEN
		step := 900;
	END_IF;

(*  ============== File vom FTP Empfangen  ============== *)

400:snd_text := 'RETR ';
	next_step := 410;
	snd_text := CONCAT(snd_text, ftp_path); (* RETR /PFAD/FILENAME *)
	step := 999; (* Warten auf next_step *)

410:IF rcv_state = 125 OR rcv_state = 150 THEN (* 125 = Data connection already open / 150 = File status okay; about to open data connection *)
		IP_C2.R_OBSERVE := TRUE; (* Empfangsueberwachung *)
		step := 420;
	END_IF;

420:FSD.FILENAME := FILENAME; (* Dateiname *)
	FSD.MODE := BYTE#3; (* Datei neu anlegen *)
	FSD.OFFSET := UDINT#0; (* Start bei Dateianfang *)
	step := 460;

440:IF R_BUF2.SIZE &gt; UINT#0 THEN (* warten bis daten empfangen wurden *)
		IP_C2.MAILBOX[3] := BYTE#1; (* IP Empfang blockieren bis Daten in Datei geschrieben wurden *)
		FSD.MODE := BYTE#3; (* Daten in Datei schreiben *)
		step := 460;
	ELSIF FSD.FILE_SIZE = ftp_file_size THEN (* Verbindung abgebaut ? , oder 226 = Closing data connection. Requested file action successful *)
		IP_C2.C_ENABLE := FALSE; (* FTP Datenkanal schliessen *)
		ip_c2_red_disable := TRUE;
		step := 700;
	END_IF;

460:IF FSD.MODE = BYTE#0 AND FSD.ERROR = BYTE#0 THEN (* warten bis Daten geschreiben wurden *)
		R_BUF2.SIZE := UINT#0; (* Daten löschen *)
		IP_C2.MAILBOX[3] := BYTE#0; (* IP Empfang wieder erlauben *)
		step := 440;
	END_IF;

(* ================================================== *)

700:IF rcv_state = 226 OR  TON_WAIT.ET &gt; timeout3 THEN (* 226 Closing control connection. Requested file action successful  *)
		IF FTP_DOWNLOAD AND FILE_DELETE THEN (* FTP Download und File löschen ? *)
			snd_text := CONCAT('DELE ', ftp_path); (* DELE /PFAD/FILENAME *)
			next_step := 720;
		ELSE
			step := 740;
		END_IF;
	END_IF;

720:IF rcv_state = 250 THEN (* 250 Requested file action okay, completed *)
		step := 740;
	END_IF;

740:snd_text := 'QUIT';
	ip_c1_red_disable := TRUE;
	next_step := 760;
	step := 999; (* Warten auf next_step *)

760:IF rcv_state = 221 OR TON_WAIT.ET &gt; timeout3 THEN (* 221 Service closing control connection  *)
		IP_C1.C_ENABLE := FALSE; (* FTP Steuerkanal schliessen *)
		IF NOT FTP_DOWNLOAD AND FILE_DELETE THEN (* FTP Upload und Datei nach transfer löschen *)
			FSD.MODE := BYTE#4; (* File Remove *)
			step := 780;
		ELSE
			step := 900;
		END_IF;
	END_IF;

780:IF FSD.MODE = BYTE#0 AND FSD.ERROR = BYTE#0 THEN
		step := 900;
	END_IF;

(* ================================================== *)

900:DONE := TRUE;
	step := 980;

980:IP_C1.C_ENABLE := FALSE; (* FTP Steuerkanal schliessen *)
	IP_C2.C_ENABLE := FALSE; (* FTP Datenkanal schliessen *)
	IP_C2.MAILBOX[2] := BYTE#0; (* IP Senden wieder erlauben *)
	IP_C2.MAILBOX[3] := BYTE#0; (* IP Empfang wieder erlauben *)
	S_BUF1.SIZE := UINT#0;
	S_BUF2.SIZE := UINT#0;
	R_BUF1.SIZE := UINT#0;
	R_BUF2.SIZE := UINT#0;
	ftp_file_size := UDINT#0;
	snd_step := 0;
	next_step := 0;
	FSD.MODE := BYTE#5; (* Datei schliessen *)
	step := 990;

990:IF IP_C1.C_STATE = BYTE#0 AND IP_C2.C_STATE = BYTE#0 AND FSD.FILE_OPEN = FALSE THEN
		step := 0;
	END_IF;

999: ; (* Dummy Schritt, warten bis neuer schritt durch "next_step" aktiv wird *)

END_CASE;

(* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *)

IF step &gt;= 30 THEN
	IF R_BUF1.SIZE &gt; UINT#0 THEN (* Daten wurden empfangen ? *)
		idx1 := UINT_TO_INT(R_BUF1.SIZE);
		REPEAT (* zeilenterminierung erkennen und echtes TEXT-Ende bestimmen *)
			idx1 := idx1 - 1;
		UNTIL idx1 = 0 OR R_BUF1.BUFFER[idx1] &gt;= BYTE#32 (* TRUE = EXIT *)
		END_REPEAT;
		idx1 := idx1 + 1; (* index auf SIZE umrechnen *)
		rcv_text := OSCAT_BASIC.BUFFER_TO_STRING(PT:=ADR(R_BUF1.BUFFER),SIZE:=idx1,START:=0,STOP:=OSCAT_BASIC.STRING_LENGTH-1);
		IF LEN(rcv_text) &gt;= 3 THEN (* Statuscode prüfen und auswerten *)
			str1 := LEFT(rcv_text,3);
			IF OSCAT_BASIC.IS_NUM(STR:=str1) THEN (* enthält nur Zahlen ? *)
				rcv_state := STRING_TO_INT(str1);
			END_IF;
			IP_C1.R_OBSERVE := FALSE;
		END_IF;
		R_BUF1.SIZE := UINT#0; (* daten löschen *)

	        (*####################  DEBUG-MESSAGE  ###################################*)
	        (*IF _debug_enable THEN
	          LOG_CL.NEW_MSG := 'RCV: &gt;~1&lt;';
	          LOG_CL.PRINTF[1] := rcv_text;
	          LOG_MSG();
	        END_IF;*)
	        (*########################################################################*)

	END_IF;
END_IF;

(* automatisches Datensenden *)

CASE snd_step OF

00:	IF LEN(snd_text) &gt; 0 THEN
	        (*####################  DEBUG-MESSAGE  ###################################*)
	        (*IF _debug_enable THEN
	          LOG_CL.NEW_MSG := 'SND: &gt;~1&lt;';
	          LOG_CL.PRINTF[1] := snd_text;
	          LOG_MSG();
	        END_IF;*)
	        (*########################################################################*)
		OSCAT_BASIC._STRING_TO_BUFFER(str:=snd_text,pos:=0,pt:=ADR(S_BUF1.BUFFER),size:=SIZEOF(S_BUF1.BUFFER)); (* String in puffer kopieren *)
		idx1 := LEN(snd_text);
		S_BUF1.BUFFER[idx1] := BYTE#16#0D;
		idx1 := idx1 + 1;
		S_BUF1.BUFFER[idx1] := BYTE#16#0A;
		idx1 := idx1 + 1;
		S_BUF1.SIZE := INT_TO_UINT(idx1); (* Sendelänge eintragen *)
		R_BUF1.SIZE := UINT#0; (* Empfangsbuffer rücksetzen *)
		IP_C1.R_OBSERVE := TRUE;
		rcv_state := 9999; (* letzen FTP Status löschen *)
		snd_text := '';
		snd_step := 10;
	END_IF;

10:	IF S_BUF1.SIZE = UINT#0 THEN (* warten bis alle daten gesendet sind *)
		step := next_step;
		snd_step := 0;
	END_IF;

END_CASE;

(* Globale Fehlerbehandlung für Haupt-Routine *)
IF ERROR_T = BYTE#0 AND step &gt; 20 THEN (* noch kein Fehler gespeichert und Hauptroutine aktiv *)

	IF IP_C1.ERROR &gt; DWORD#0 AND IP_C1.C_ENABLE AND NOT IP_C1.TIME_RESET THEN  (* IP Control 1 *)
		IF ip_c1_red_disable = FALSE OR IP_C1.ERROR &lt;&gt; DWORD#16#FD000000 THEN
			ERROR_C := IP_C1.ERROR;
			ERROR_T := BYTE#2;
			step := 980;
		END_IF;
	END_IF;

	IF IP_C2.ERROR &gt; DWORD#0 AND IP_C2.C_ENABLE AND NOT IP_C2.TIME_RESET THEN  (* IP Control 2 *)
		IF ip_c2_red_disable = FALSE OR IP_C2.ERROR &lt;&gt; DWORD#16#FD000000 THEN
			ERROR_C := IP_C2.ERROR;
			ERROR_T := BYTE#3;
			step := 980;
		END_IF;
	END_IF;

	IF FSD.MODE = BYTE#0 THEN
		IF FSD.ERROR &gt; BYTE#0 THEN
			ERROR_C := BYTE_TO_DWORD(FSD.ERROR);
			ERROR_T := BYTE#4; (* Dateizugriff *)
			step := 980;
		END_IF;
	END_IF;
END_IF;

IF TON_WAIT.Q THEN (* Ablaufstörung - Schrittkette *)
	ERROR_C := SHL(INT_TO_DWORD(step),16) OR INT_TO_DWORD(rcv_state); (* aktuellen Schritt und letzten FTP Status eintragen *)
	ERROR_T := BYTE#5;
	step := 980;
END_IF;

(* ######################################################## *)

DNS_CLIENT(IP_C:=IP_C1, S_BUF:=S_BUF1, R_BUF:=R_BUF1, DOMAIN:=URL_DATA.DOMAIN, IP4_DNS:= DNS_IP4, ACTIVATE:=step=10); (* DNS-Client *)
IPC1(IP:= DWORD#0, PORT:= WORD#0 , TIME_OUT:= TIMEOUT, IP_C:= IP_C1, S_BUF:= S_BUF1, R_BUF:= R_BUF1); (* FTP Steuerkanal *)
IPC2(IP:= DWORD#0, PORT:= WORD#0 , TIME_OUT:= TIMEOUT, IP_C:= IP_C2, S_BUF:= S_BUF2, R_BUF:= R_BUF2); (* FTP Datenkanal *)

TON_WAIT(IN:=step = last_step AND step &gt; 0,PT:=timeout2);
last_step := step;
activate_last := ACTIVATE;
BUSY := step &lt;&gt; 0;

IF FTP_DOWNLOAD THEN (* FILE_SERVER *)
	FS(FSD:=FSD,PT:=R_BUF2); (* Datei von FTP empfangen *)
ELSE
	FS(FSD:=FSD,PT:=S_BUF2); (* Datei an FTP senden *)
END_IF;

(* revision history
ks	05. may 2011	rev 1.3
	FileServer AutoClose entfernt

ks	11. may 2011	rev 1.2
	ip_control - remote disconnect error ausblenden, und sonderbehandlung für pcworx

ks	06. apr. 2011	rev 1.1
	list_len und list_get durch element_count und element_get ersetzt

ks	01. jan. 2011	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>7ac78714-960c-49f3-91bb-c3938c32a30a</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="GET_WAN_IP" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> IP_Control Verwaltungsstruktur </xhtml>
              </documentation>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="ACTIVATE">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="WAN_IP4">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="DONE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="NEW_IP4">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ERROR_C">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="ERROR_T">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="URL_DATA">
              <type>
                <derived name="url" />
              </type>
            </variable>
            <variable name="DNS_CLIENT">
              <type>
                <derived name="DNS_CLIENT" />
              </type>
            </variable>
            <variable name="HTTP_GET">
              <type>
                <derived name="HTTP_GET" />
              </type>
            </variable>
            <variable name="activate_last">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="wan_ip4_last">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="state">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="st_ip">
              <type>
                <string length="120" />
              </type>
            </variable>
            <variable name="i1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="p1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="p2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="p3">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE state OF

00:
	IF ACTIVATE AND NOT activate_last THEN
		state := 20;
		DONE := FALSE;
		ERROR_C := DWORD#0;
		ERROR_T := BYTE#0;
	END_IF;

20: (* URL for DNS UND HTTP-GET *)
	URL_DATA := STRING_TO_URL(STR:='checkip.dyndns.com',DEFAULT_PROTOCOL:='',DEFAULT_PATH:='');
	state := 40;

40:
	IF DNS_CLIENT.DONE THEN
		state := 60;
	ELSIF (DNS_CLIENT.ERROR &gt; DWORD#00) THEN
		(* Fehlerbehandlung *)
		ERROR_C := DNS_CLIENT.ERROR;
		ERROR_T := BYTE#01;
		state := 100;
	END_IF;

60:
	IF HTTP_GET.DONE THEN
		state := 80;
	ELSIF (HTTP_GET.ERROR &gt; DWORD#00) THEN
		(* Fehlerbehandlung *)
		ERROR_C := HTTP_GET.ERROR;
		ERROR_T := BYTE#02;
		state := 100;
	END_IF;

80:
	(* Als Antwort wird folgende HTML Seite empfangen , hier muss die IP-Adresse herauskopiert werden *)
	(* &lt;html&gt;&lt;head&gt;&lt;title&gt;Current IP Check&lt;/title&gt;&lt;/head&gt;&lt;body&gt;Current IP Address: 85.127.217.33&lt;/body&gt;&lt;/html&gt; *)
	st_ip := '';
	p1 := 0;
	FOR i1 := UINT_TO_INT(HTTP_GET.BODY_START) TO UINT_TO_INT(HTTP_GET.BODY_STOP) DO
		IF R_BUF.BUFFER[i1] = BYTE#58 THEN (* suche ':' *)
			p1 := i1 + 2;
			EXIT;
		END_IF;
	END_FOR;

	p3 := p1 + 15;
	IF p1 &gt; 0 AND p3 &lt; UINT_TO_INT(HTTP_GET.BODY_STOP) THEN
		FOR p2 := p1 TO p3 DO
			IF R_BUF.BUFFER[p2] &lt;&gt; BYTE#60 THEN (* suche '&lt;' *)
				st_ip := CONCAT(st_ip,OSCAT_BASIC.CHR_TO_STRING(C:=R_BUF.BUFFER[p2]));
			ELSE
				EXIT;
			END_IF;
		END_FOR;
	END_IF;

	WAN_IP4 := IP4_DECODE(STR:=st_ip);

	IF WAN_IP4 &lt;&gt; DWORD#0 THEN
		DONE := TRUE;
		NEW_IP4 := WAN_IP4 &lt;&gt; wan_ip4_last;
		wan_ip4_last := WAN_IP4;
	ELSE
		ERROR_C := DWORD#01; (* keine gültige IP gefunden *)
		ERROR_T := BYTE#03;
	END_IF;
	state := 100;

100:
	(* UNLOCK HTTP DATA *)
	IF (NOT HTTP_GET.DONE) THEN
		state := 0;
		DONE := ERROR_T = BYTE#0;
	END_IF;

END_CASE;

(* ---------------- DNS --------------- *)
DNS_CLIENT(	IP_C:=IP_C,
			S_BUF:=S_BUF,
			R_BUF:=R_BUF,
			DOMAIN:=URL_DATA.DOMAIN,
			IP4_DNS:=DWORD#00,
			ACTIVATE:=state=40 (* DNS Start *)
			);
(* nicht oder nicht direkt verwendete Parameter *)
(* DWORD :=DNS_CLIENT.IP4;
   BOOL  :=DNS_CLIENT.DONE;
   BYTE  :=DNS_CLIENT.ERROR; *)
(* -------------------------------------*)

(* ------------- HTTP_GET --------------- *)

HTTP_GET(	IP_C:=IP_C,
			S_BUF:=S_BUF,
			R_BUF:=R_BUF,
			IP4:=DNS_CLIENT.IP4,
			GET:=state=60,
			MODE:=BYTE#2, (* HTTP 1.1 mit persistenter Verbindung *)
			UNLOCK_BUF:=state=100,
			URL_DATA:=URL_DATA
			);

(* nicht oder nicht direkt verwendete Parameter *)
(*STRING := HTTP_GET.HTTP_STATUS;
  UINT :=HTTP_GET.HEADER_START;
  UINT :=HTTP_GET.HEADER_STOP;
  UINT :=HTTP_GET.BODY_START;
  UINT :=HTTP_GET.BODY_STOP;
  BOOL :=HTTP_GET.DONE;
  BYTE :=HTTP_GET.ERROR;
*)
(* -------------------------------------*)

activate_last := ACTIVATE;

(* revision history
ks	28. dec 2009	rev 1.1
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>776ccd27-698e-45c6-9aad-0b806f38cff7</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="HTTP_GET" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="URL_DATA">
              <type>
                <derived name="url" />
              </type>
            </variable>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> IP_Control Verwaltungsstruktur </xhtml>
              </documentation>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="IP4">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="GET">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="MODE">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="BYTE#2" />
              </initialValue>
            </variable>
            <variable name="UNLOCK_BUF">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="HTTP_STATUS">
              <type>
                <string />
              </type>
            </variable>
            <variable name="HEADER_START">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> HTTP Header (Message Header) </xhtml>
              </documentation>
            </variable>
            <variable name="HEADER_STOP">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> HTTP Header (Message Header) </xhtml>
              </documentation>
            </variable>
            <variable name="BODY_START">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Message Body </xhtml>
              </documentation>
            </variable>
            <variable name="BODY_STOP">
              <type>
                <UINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Message Body </xhtml>
              </documentation>
            </variable>
            <variable name="DONE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ERROR">
              <type>
                <DWORD />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="READ_HTTP">
              <type>
                <derived name="READ_HTTP" />
              </type>
            </variable>
            <variable name="BASE64_ENCODE_STR">
              <type>
                <derived name="BASE64_ENCODE_STR" />
              </type>
            </variable>
            <variable name="b64_str1">
              <type>
                <string length="144" />
              </type>
            </variable>
            <variable name="b64_str2">
              <type>
                <string length="192" />
              </type>
            </variable>
            <variable name="b64_done">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="b64_start">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="authentication">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="IP_FIFO">
              <type>
                <derived name="IP_FIFO" />
              </type>
            </variable>
            <variable name="ip_state">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="ip_id">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="get_last">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ip4_stored">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="state">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="i">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="http_1_1_host">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="total_size">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="text">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="delimiter2b">
              <type>
                <string length="2" />
              </type>
            </variable>
            <variable name="delimiter4b">
              <type>
                <string length="4" />
              </type>
            </variable>
            <variable name="del_end">
              <type>
                <string length="4" />
              </type>
            </variable>
            <variable name="del_pos">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="idx">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="rcv_timeout">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="con_rdce">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE state OF
00:	DONE := FALSE;
	IF GET AND NOT GET_LAST THEN (* auf positive Flanke SET warten *)
		state := 10;
		ip4_stored := IP4; (* aktuelle IP4 speichern *)
		total_size := 0;
		HEADER_START := UINT#0;
		HEADER_STOP := UINT#0;
		BODY_START := UINT#0;
		BODY_STOP := UINT#0;
		HTTP_STATUS := '';
		ERROR := DWORD#0;
		ip_state := BYTE#1; (* Anmelden *)
		authentication := FALSE;
		delimiter2b := '$0D$0A';
		delimiter4b := '$0D$0A$0D$0A';

		(* LOGIN Parameter vorhanden *)
		(* LOGIN Parameter vorhanden *)
		IF URL_DATA.USER &lt;&gt; '' AND URL_DATA.PASSWORD &lt;&gt; '' THEN
			b64_str1 := CONCAT(URL_DATA.USER,':');
			b64_str1 := CONCAT(b64_str1,URL_DATA.PASSWORD); (* USER:PASSWORD *)
			b64_start := TRUE; (* BASE64 kodierung von Username *)
			authentication := TRUE;
			state := 5;
		ELSE
			state := 10;
		END_IF;
	        	(*####################  DEBUG-MESSAGE  ###################################*)
		(*IF _debug_enable THEN
	       		LOG_CL.NEW_MSG := 'HTTP: S00 START /IP_ID ~4';
	            	LOG_CL.PRINTF[4]  := BYTE_TO_STRING(IP_ID);
	            	LOG_MSG();
	        	END_IF;*)
	        	(*########################################################################*)
	END_IF;

5:	IF b64_start AND b64_done THEN (* warten auf base64 konvertierung *)
		b64_start := FALSE;
		state := 10;
	END_IF;

10:	IF ip_state = BYTE#3 THEN (* Bei IP_Control anmelden und auf freigabe warten *)
		idx := 0;
		text := CONCAT('GET ',URL_DATA.PATH);
		OSCAT_BASIC._STRING_TO_BUFFER(STR:=text,POS:=idx,PT:=ADR(S_BUF.BUFFER),SIZE:=SIZEOF(S_BUF.BUFFER)); (* GET path in buffer kopieren *)
		idx := idx + LEN(text);

		IF LEN(URL_DATA.QUERY) &gt; 0 THEN
			S_BUF.BUFFER[idx] := 63; (* ASCII '?' *)
			idx := idx + 1;
			OSCAT_BASIC._STRING_TO_BUFFER(STR:=URL_DATA.QUERY,POS:=idx,PT:=ADR(S_BUF.BUFFER),SIZE:=SIZEOF(S_BUF.BUFFER)); (* QUERY in buffer kopieren *)
			idx := idx + LEN(URL_DATA.QUERY);
		END_IF;

		IF MODE &gt;= BYTE#2 THEN (* gewünschte HTTP Version uebergeben *)
			text := ' HTTP/1.1';
		ELSE
			text := ' HTTP/1.0';
		END_IF;
		text := CONCAT(text,delimiter2b);
		OSCAT_BASIC._STRING_TO_BUFFER(STR:=text,POS:=idx,PT:=ADR(S_BUF.BUFFER),SIZE:=SIZEOF(S_BUF.BUFFER)); (* HTTP Version in buffer kopieren *)
		idx := idx + LEN(text);

		IF MODE = BYTE#1 THEN (* HTTP/1.0 mit persistenter Verbindung gewünscht *)
			text := CONCAT('Connection: Keep-Alive',delimiter2b); (* workaround für pcworx -&gt; kein $0D$0A als Stringkonstante möglich *)
		ELSIF MODE = BYTE#3 THEN (* HTTP/1.1 ohne persistenter Verbindung gewünscht *)
			text := CONCAT('Connection: Close',delimiter2b); (* workaround für pcworx -&gt; kein $0D$0A als Stringkonstante möglich *)
		ELSE
			text := '';
		END_IF;

		(* Zusatz Parameter übernehmen *)
		text := CONCAT(text,URL_DATA.HEADER);
		OSCAT_BASIC._STRING_TO_BUFFER(STR:=text,POS:=idx,PT:=ADR(S_BUF.BUFFER),SIZE:=SIZEOF(S_BUF.BUFFER)); (* HTTP Version in buffer kopieren *)
		idx := idx + LEN(text);

		IF authentication THEN
			text := CONCAT('Authorization: Basic ',b64_str2);
			text := CONCAT(text,delimiter2b); (* workaround für pcworx -&gt; kein $0D$0A als Stringkonstante möglich *)
			OSCAT_BASIC._STRING_TO_BUFFER(STR:=text,POS:=idx,PT:=ADR(S_BUF.BUFFER),SIZE:=SIZEOF(S_BUF.BUFFER)); (* HTTP Host in buffer kopieren *)
			idx := idx + LEN(text);
		END_IF;

		text := CONCAT('Host: ',URL_DATA.DOMAIN);
		text := CONCAT(text,delimiter4b); (* workaround für pcworx -&gt; kein $0D$0A als Stringkonstante möglich *)
		OSCAT_BASIC._STRING_TO_BUFFER(STR:=text,POS:=idx,PT:=ADR(S_BUF.BUFFER),SIZE:=SIZEOF(S_BUF.BUFFER)); (* HTTP Host in buffer kopieren *)
		idx := idx + LEN(text);

		(* IP Datenverkehr einrichten *)
		IF FIND(';HTTPS;https;Https;', CONCAT(URL_DATA.PROTOCOL,';')) &gt; 1 THEN
			IP_C.C_PORT := SEL(URL_DATA.PORT = WORD#0,URL_DATA.PORT,WORD#443); (* Portnummer eintragen *)
			IP_C.MAILBOX[16] := BYTE#1; (* SSL Mode freigeben *)
		ELSE
			IP_C.C_PORT := SEL(URL_DATA.PORT = WORD#0,URL_DATA.PORT,WORD#80);  (* Portnummer eintragen *)
		END_IF;

		IP_C.C_IP := ip4_stored; (* IP eintragen *)
		IP_C.C_MODE := BYTE#0; (* Mode: TCP+AKTIV+PORT+IP *)
		IP_C.C_ENABLE := TRUE; (* Verbindungsaufbau freigeben *)
		IP_C.TIME_RESET := TRUE; (* Zeitueberwachung rücksetzen *)
		IP_C.R_OBSERVE := TRUE; (* Datenempfang ueberwachen *)
		S_BUF.SIZE := INT_TO_UINT(idx); (* Sendelänge eintragen *)
		R_BUF.SIZE := UINT#0; (* Empfangslänge rücksetzen *)

		state := 30;
	        	(*####################  DEBUG-MESSAGE  ###################################*)
	        	(*IF _debug_enable THEN
	        		LOG_CL.NEW_MSG := 'HTTP: S20 SEND /IP_ID ~4';
	            	LOG_CL.PRINTF[4]  := BYTE_TO_STRING(IP_ID);
	            	LOG_MSG();
	        	END_IF;*)
	        	(*########################################################################*)
	END_IF;

30:	rcv_timeout := (IP_C.ERROR AND DWORD#16#0000_FF00) = DWORD#16#0000_FF00;
	con_rdce :=     (IP_C.ERROR AND DWORD#16#FD00_0000) = DWORD#16#FD00_0000;

	IF S_BUF.SIZE = UINT#0 THEN
		IF total_size = 0 THEN
			IF R_BUF.SIZE &gt; UINT#15 THEN; (* länge der empfangenen Daten prüfen *)

				(* HTTP HEADER Ende suchen -&gt; durch $0D$A$0D$A erkennbar bei DEC RT-11,CP/M,MS-DOS,Windows *)
				del_end := '$0D$0A$0D$0A';
				del_pos := OSCAT_BASIC.BUFFER_SEARCH(PT:=ADR(R_BUF.BUFFER),SIZE:=R_BUF.SIZE,STR:=del_end,POS:=0,IGN:=FALSE);

				(* kein Ende gefunden ? -&gt; andere Ende-Codierung suchen *)
				IF del_pos = 0 THEN
					del_end := '$0A$0A';
					(* HTTP HEADER Ende suchen -&gt; durch $0A$0A erkennbar bei Multics, Unix-Derivate,Mac OS X *)
					del_pos := OSCAT_BASIC.BUFFER_SEARCH(PT:=ADR(R_BUF.BUFFER),SIZE:=R_BUF.SIZE,STR:=del_end,POS:=0,IGN:=FALSE);
				END_IF;

				IF del_pos &gt; 0 THEN
					HEADER_START := UINT#0;
					HEADER_STOP := INT_TO_UINT(del_pos + LEN(del_end) - 1);
					TOTAL_SIZE := -1; (* HTTP Header empfangen aber noch keine gesamtlänge bekannt *)
				END_IF;
		                	(*####################  DEBUG-MESSAGE  ###################################*)
		                	(*IF _debug_enable THEN
		                   	LOG_CL.NEW_MSG := 'HTTP: S20 HEADER_START ~1 / HEADER_STOP ~2/IP_ID ~4';
		                   	LOG_CL.PRINTF[4]  := BYTE_TO_STRING(IP_ID);
		                   	LOG_CL.PRINTF[1]  := UINT_TO_STRING(HEADER_START);
		                   	LOG_CL.PRINTF[2]  := UINT_TO_STRING(HEADER_STOP);
		                   	LOG_MSG();
		                	END_IF;*)
		                	(*########################################################################*)

				(* HTTP Statuscode auswerten: (kann 1.0 oder 1.1 sein *)
				READ_HTTP(size:=HEADER_STOP,pos:=0,SRC:='',pt:=R_BUF.BUFFER);

				i := LEN(READ_HTTP.READ_HTTP);
				IF i &gt; 7 THEN
					(* HTTP Version von HOST auswerten 1.0 oder 1.1 *)
					text:=MID(READ_HTTP.READ_HTTP,1,3);
					http_1_1_host := text = '1';

					(* Code und Meldung isolieren *)
					HTTP_STATUS := RIGHT(READ_HTTP.READ_HTTP,i-4);
				END_IF;

				(* positive HTTP Anfrage ? *)
				IF FIND(HTTP_STATUS,'200') &gt; 0 THEN

					(* 'Content-Length: Wert einlesen auswerten *)
					READ_HTTP(size:=HEADER_STOP,pos:=0,SRC:='CONTENT-LENGTH',pt:=R_BUF.BUFFER);
					text:=READ_HTTP.READ_HTTP;

					IF LEN(text) &gt;= 1 THEN
						IF OSCAT_BASIC.IS_NUM(str:=text) THEN
							(* erwartete gesamtmenge an Bytes berechnen *)
							total_size := STRING_TO_INT(text) + UINT_TO_INT(HEADER_STOP) + 1;
                           					(*####################  DEBUG-MESSAGE  ###################################*)
                           					(*IF _debug_enable THEN
                              					LOG_CL.NEW_MSG := 'HTTP: S20 HEADER ~1, BODY ~2 TOTAL ~3 /IP_ID ~4';
                             					LOG_CL.PRINTF[4]  := BYTE_TO_STRING(IP_ID);
                               					LOG_CL.PRINTF[1]  := UINT_TO_STRING(HEADER_STOP);
                               					LOG_CL.PRINTF[2]  := INT_TO_STRING(TOTAL_SIZE-UINT_TO_INT(HEADER_STOP));
                               					LOG_CL.PRINTF[3]  := INT_TO_STRING(TOTAL_SIZE);
                              					LOG_MSG();
                          					END_IF;*)
                          					(*########################################################################*)
						END_IF;
					END_IF;
				ELSE
					ERROR := DWORD#16#000000FC; (* Fehler durch HTTP-Statuscodes *)
				END_IF;
			END_IF;
		(* 1. bei bekannter Content-Length wird nach erhalt der erwartenen Daten die verbindung beendet *)
		(* 2. bei persistenter Verbindung muss bei unbekannter Datenmenge auf Receive-Timeout gewartet werden *)
		(* 3. wenn nach datenempfang die verbindung vom host unterbrochen wird *)
		ELSIF (R_BUF.SIZE &gt;= INT_TO_UINT(total_size)) OR
			(R_BUF.SIZE &gt; UINT#0 AND total_size &lt; 0 AND ((rcv_timeout OR con_rdce) OR (IP_C.C_STATE = BYTE#1))) THEN

			IF R_BUF.SIZE - 1 &gt; HEADER_STOP THEN (* BODY Daten vorhanden *)
				BODY_START := HEADER_STOP + UINT#1;
				BODY_STOP := R_BUF.SIZE - 1;
		                	(*####################  DEBUG-MESSAGE  ###################################*)
		                	(*IF _debug_enable THEN
		                   	LOG_CL.NEW_MSG := 'HTTP: S20 BODY ~1, START ~2 END ~3 /IP_ID ~4';
		                   	LOG_CL.PRINTF[4]  := BYTE_TO_STRING(IP_ID);
		                   	LOG_CL.PRINTF[1]  := UINT_TO_STRING(HEADER_STOP);
		                   	LOG_CL.PRINTF[2]  := UINT_TO_STRING(BODY_START);
		                   	LOG_CL.PRINTF[3]  := UINT_TO_STRING(BODY_STOP);
		                   	LOG_MSG();
		               	END_IF;*)
		               	(*########################################################################*)
			END_IF;

			DONE := TRUE;
			IP_C.C_ENABLE := FALSE; (* Verbindung abbauen *)
			state := 40;
            		(*####################  DEBUG-MESSAGE  ###################################*)
            		(*IF _debug_enable THEN
                			LOG_CL.NEW_MSG := 'HTTP: S30 OK /IP_ID ~4';
                			LOG_CL.PRINTF[4]  := BYTE_TO_STRING(IP_ID);
                			LOG_MSG();
            		END_IF;*)
            		(*########################################################################*)
		END_IF;
	END_IF;

	IF IP_C.ERROR &lt;&gt; DWORD#0 THEN
		(* bei unbekannter Content-size ist nicht bekannt ob bzw wieviele Telegramme noch folgen werden *)
		(* darum wird nach receive-timeout oder Remote disconnect error der fehler wieder ausgefiltert (logischer fehler) *)
		IF rcv_timeout AND DONE THEN
			IP_C.ERROR := IP_C.ERROR AND DWORD#16#FFFF_00FF; (* Fehler wieder rücksetzen *)
		ELSIF con_rdce AND DONE THEN
			IP_C.ERROR := IP_C.ERROR AND DWORD#16#00FF_FFFF; (* Fehler wieder rücksetzen *)
		ELSE
			ERROR := IP_C.ERROR;
		END_IF;
	END_IF;

	IF ERROR &gt; DWORD#0 THEN
		IP_C.C_ENABLE := FALSE; (* Verbindungsaufbau sperren *)
		state := 40;
	        	(*####################  DEBUG-MESSAGE  ###################################*)
	        	(*IF _debug_enable THEN
	            	LOG_CL.NEW_MSG := 'HTTP: S30 ERROR ~1 /IP_ID ~4';
	            	LOG_CL.PRINTF[1]  := DWORD_TO_STRING(ERROR);
	            	LOG_CL.PRINTF[4]  := BYTE_TO_STRING(IP_ID);
	            	LOG_MSG();
	        	END_IF;*)
	        	(*########################################################################*)
	END_IF;

40:	IF (UNLOCK_BUF OR NOT DONE) THEN (* Warten auf Release und Verbindung beendet -&gt; IP_ID vom Stack nehmen *)
		IP_STATE := BYTE#4; (* Abmelden *)
		DONE := FALSE;
		IP_C.MAILBOX[16] := BYTE#0; (* SSL Mode beenden *)
		state := 0;
	END_IF;
END_CASE;

get_last := GET; (* letzten Status sichern zur Flankenerkennung *)

IP_FIFO(FIFO:=IP_C.FIFO,STATE:=ip_state,ID:=ip_id); (* IP_FIFO *)

BASE64_ENCODE_STR(RUN:=b64_start,STR1:=b64_str1,STR2:=b64_str2); (* BASE64 kodierung *)
b64_done:=BASE64_ENCODE_STR.DONE;

(*####################  DEBUG-MESSAGE  ###################################*)
(*IF _debug_enable THEN
	IF state &lt;&gt; _debug_state_last THEN
		LOG_CL.NEW_MSG := 'http_get: /last ~1 /New ~2';
		LOG_CL.PRINTF[1] := INT_TO_STRING(_debug_state_last);
		LOG_CL.PRINTF[2] := INT_TO_STRING(state);
		LOG_MSG();
		_debug_state_last := state;
	END_IF;
END_IF;*)
(*########################################################################*)

(* revision history
ks	18. oct. 2008	rev 1.0
	original version

ks	20. oct. 2009	rev 1.1
	Fehler bei body-suche bei $0a$0a korrigiert,Codeoptimierung,
	new VAR del_pos , del_end (Networkbuffer und Buffer-funktionen auf Basis 0)

ks	28. oct. 2009	rev 1.2
	über url.header können zusätzliche header-infos übergeben werden

ks	12. apr. 2011	rev 1.3
	verbesserte fehlererkennung und fehlerkorrektur bei buffer_to_string

ks	31. mar. 2016	rev 1.4
	Authentication und SSL (HTTPS) hinzugefügt, DONE später zurücksetzen

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b0739b60-7f72-412d-9029-9b16eca06eac</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="IP2GEO" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> IP_Control Verwaltungsstruktur </xhtml>
              </documentation>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="GEO">
              <type>
                <derived name="IP2GEO_DATA" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="IP">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="ACTIVATE">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="BUSY">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="DONE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ERROR_C">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="ERROR_T">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="CTRL">
              <type>
                <derived name="XML_CONTROL" />
              </type>
            </variable>
            <variable name="XML_READER">
              <type>
                <derived name="XML_READER" />
              </type>
            </variable>
            <variable name="URL_DATA">
              <type>
                <derived name="url" />
              </type>
            </variable>
            <variable name="DNS_CLIENT">
              <type>
                <derived name="DNS_CLIENT" />
              </type>
            </variable>
            <variable name="HTTP_GET">
              <type>
                <derived name="HTTP_GET" />
              </type>
            </variable>
            <variable name="last_state">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="value_int">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="value_real">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="v_real">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="state">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE state OF

00:
	IF ACTIVATE AND NOT last_state THEN
		state := 20;
		DONE := FALSE;
		BUSY := TRUE;
		ERROR_C := DWORD#0;
		ERROR_T := BYTE#0;
	END_IF;

20: (* URL for DNS UND HTTP-GET *)
	(* Example: http://ipinfodb.com/ip_query.php?ip=10.10.10.10 *)
	(* Example: http://ipinfodb.com/ip_query.php?timezone=true&amp;IP=*)
	URL_DATA:=STRING_TO_URL(STR:='http://ipinfodb.com/ip_query.php?timezone=true&amp;IP=',DEFAULT_PROTOCOL:='',DEFAULT_PATH:='');

	IF IP &gt; DWORD#0 THEN
		URL_DATA.QUERY := CONCAT(URL_DATA.QUERY,IP4_TO_STRING(IP4:=IP));
	END_IF;

	state := 40;

40:
	IF DNS_CLIENT.DONE THEN
		state := 60;
	ELSIF (DNS_CLIENT.ERROR &gt; DWORD#00) THEN
		(* Fehlerbehandlung *)
		ERROR_C := DNS_CLIENT.ERROR;
		ERROR_T := BYTE#01;
		state := 100;
	END_IF;

60:
	IF HTTP_GET.DONE THEN
		state := 80;
		CTRL.START_POS := HTTP_GET.BODY_START;
		CTRL.STOP_POS := HTTP_GET.BODY_STOP;
		CTRL.COMMAND := WORD#2#10000000_00011000; (* ONLY TEXT AND ATTRIBUTE *)
		CTRL.WATCHDOG := T#1ms;

	ELSIF (HTTP_GET.ERROR &gt; DWORD#00) THEN
		(* Fehlerbehandlung *)
		ERROR_C := HTTP_GET.ERROR;
		ERROR_T := BYTE#02;
		state := 100;
	END_IF;

80:
	(* XML Daten seriell lesen *)
	XML_READER(CTRL:=CTRL,BUF:=R_BUF.BUFFER);
	IF CTRL.TYP &lt; 98 THEN (* nur auswerten wenn kein Watchdog durchlauf *)
		(* automatische konvertierung in real und int ausführen *)
		value_int := 0;
		value_real := 0.0;
		IF LEN(CTRL.VALUE) &lt;= 20 THEN
			v_real :=OSCAT_BASIC.FLOAT_TO_REAL(FLT:=CTRL.VALUE);
			IF OSCAT_BASIC.CHK_REAL(v_real) = 0 THEN (* !!! prüft auf gültigen REAL Wert, ansonsten stürzt Twincat ab !!!!  *)
				value_real := v_real;
				value_int := REAL_TO_INT(value_real);
			END_IF;
		END_IF;

		CASE UINT_TO_INT(CTRL.COUNT) OF

		07: GEO.IP4 := IP4_DECODE(STR:=CTRL.VALUE); (* IP-Adresse *)
		10: GEO.STATE := 'OK' = CTRL.VALUE; (* STATUS *)
		13: GEO.COUNTRY_CODE := CTRL.VALUE; (* Country-Code *)
		16: GEO.COUNTRY_NAME := CTRL.VALUE; (* Country-Name *)
		19: GEO.REGION_CODE := CTRL.VALUE; (* Region-Code *)
		22: GEO.REGION_NAME := CTRL.VALUE; (* Region-Name *)
		25: GEO.CITY := CTRL.VALUE; (* City *)
		31: GEO.GEO_LATITUDE := value_real; (* Latitude *)
		34: GEO.GEO_LONGITUDE := value_real; (* Longitude *)
		37: GEO.TIME_ZONE_NAME := CTRL.VALUE; (* TimeZone Name *)
		40: GEO.GMT_OFFSET := value_int; (* GMT OFFSET in Sekunden *)
		43: GEO.IS_DST := value_int &gt; 0; (* Sommerzeit aktiv *)
		END_CASE;

	ELSIF CTRL.TYP = 99 THEN (* EXIT - letztes Element gelesen *)
		DONE := TRUE;
		state := 100;
	END_IF;

100:
	(* UNLOCK HTTP DATA *)
	IF (NOT HTTP_GET.DONE) THEN
		state := 0;
		BUSY := FALSE;
		DONE := ERROR_T = BYTE#0;
	END_IF;

END_CASE;

(* ---------------- DNS --------------- *)
DNS_CLIENT(	IP_C:=IP_C,
			S_BUF:=S_BUF,
			R_BUF:=R_BUF,
			DOMAIN:=URL_DATA.DOMAIN,
			IP4_DNS:=DWORD#00,
			ACTIVATE:=state=40 (* DNS Start *)
			);

(* nicht oder nicht direkt verwendete Parameter *)
(* 	DWORD :=DNS_CLIENT.IP4;
	BOOL  :=DNS_CLIENT.DONE;
	BYTE  :=DNS_CLIENT.ERROR; *)
(* -------------------------------------*)

(* ------------- HTTP_GET --------------- *)
HTTP_GET(	IP_C:=IP_C,
			S_BUF:=S_BUF,
			R_BUF:=R_BUF,
			IP4:=DNS_CLIENT.IP4,
			GET:=state=60,
			MODE:=BYTE#2, (* HTTP 1.1 mit persistenter Verbindung *)
			UNLOCK_BUF:=state=100,
			URL_DATA:=URL_DATA
			);

(* nicht oder nicht direkt verwendete Parameter *)
(*	STRING := HTTP_GET.HTTP_STATUS;
	UINT :=HTTP_GET.HEADER_START;
	UINT :=HTTP_GET.HEADER_STOP;
	UINT :=HTTP_GET.BODY_START;
	UINT :=HTTP_GET.BODY_STOP;
	BOOL :=HTTP_GET.DONE;
	BYTE :=HTTP_GET.ERROR;
*)
(* -------------------------------------*)

last_state := ACTIVATE;

(* revision history
ks	14. aug. 2009	rev 1.0
	original version

ks	07. oct. 2010	rev 1.1
	new url , ip2geo fields , REAL_CHECK
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>1f2d6957-d125-4b2f-bd99-28b89c096907</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="MB_CLIENT" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER_SHORT" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER_SHORT" />
              </type>
            </variable>
            <variable name="DATA">
              <type>
                <array>
                  <dimension lower="0" upper="255" />
                  <baseType>
                    <WORD />
                  </baseType>
                </array>
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="DATA_SIZE">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="ENABLE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="UDP">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="FC">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="UNIT_ID">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="R_ADDR">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="R_POINTS">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="R_DATA_ADR">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="R_DATA_BITPOS">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="W_ADDR">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="W_POINTS">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="W_DATA_ADR">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="W_DATA_BITPOS">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="DELAY">
              <type>
                <TIME />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="ERROR">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="BUSY">
              <type>
                <BOOL />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="ip_state">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="ip_id">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="ip_fifo">
              <type>
                <derived name="ip_fifo" />
              </type>
            </variable>
            <variable name="mask">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="w_tmp">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="idx1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="idx2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="stop">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="i">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="bit_pos">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="w_mask">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="b_mask">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="count">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="state">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="transaction_id">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="response">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="comp">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="ton_1">
              <type>
                <derived name="TON" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE state OF

00: (* Warten auf Delay-Time *)
	TON_1(IN:=ENABLE,PT:=DELAY);

	IF TON_1.Q OR DELAY = T#0s THEN
		TON_1(IN:=FALSE);
		state := 20;
		IP_STATE := BYTE#1; (* Anmelden *)
	END_IF;

20: (* Bei IP_Control anmelden *)
	IF IP_STATE = BYTE#3 THEN
		(* IP Datenverkehr einrichten *)
		IP_C.C_PORT := WORD#0; (* Port von IP_CONTROL verwenden *)
		IP_C.C_IP := DWORD#0; (* IP von IP_CONTROL verwenden *)
		IP_C.C_MODE := BOOL_TO_BYTE(UDP); (* Mode: 0=TCP+ACTIVE+IP , 1=UDP+ACTIVE+IP *)
		IP_C.TIME_RESET := TRUE; (* Zeitueberwachung rücksetzen *)
		IP_C.C_ENABLE := TRUE; (* Verbindungsaufbau freigeben *)
		IP_C.R_OBSERVE := TRUE; (* Empfangsueberwachung *)
		ERROR := DWORD#00; (* letzten Fehler rücksetzen *)

		CASE FC OF
		(******************************************************************)
		1..2: (* 0x01 Read Coil Status , 0x02 Read Input Status *)
			IF R_POINTS &lt;= 2000 THEN
				w_tmp := INT_TO_WORD(R_ADDR);
				S_BUF.BUFFER[08] := WORD_TO_BYTE(SHR(w_tmp,8));
				S_BUF.BUFFER[09] := WORD_TO_BYTE(w_tmp);
				w_tmp := INT_TO_WORD(R_POINTS);
				S_BUF.BUFFER[10] := WORD_TO_BYTE(SHR(w_tmp,8));
				S_BUF.BUFFER[11] := WORD_TO_BYTE(w_tmp);
				S_BUF.SIZE := UINT#12;
				Response :=	WORD_TO_INT(SHR(INT_TO_WORD(R_POINTS + 7),3));
				comp := 7;
			ELSE
				ERROR := DWORD#2; (* ILLEGAL DATA ADDRESS *)
			END_IF;
		(******************************************************************)
		3..4: (* 0x03 Read Holding Registers , 0x04 Read Input Registers *)
			IF R_POINTS &lt;= 125 THEN
				w_tmp := INT_TO_WORD(R_ADDR);
				S_BUF.BUFFER[08] := WORD_TO_BYTE(SHR(w_tmp,8));
				S_BUF.BUFFER[09] := WORD_TO_BYTE(w_tmp);
				w_tmp := INT_TO_WORD(R_POINTS);
				S_BUF.BUFFER[10] := WORD_TO_BYTE(SHR(w_tmp,8));
				S_BUF.BUFFER[11] := WORD_TO_BYTE(w_tmp);
				S_BUF.SIZE := UINT#12;
				Response :=	WORD_TO_INT(SHL(w_tmp,1));
				comp := 7;
			ELSE
				ERROR := DWORD#2; (* ILLEGAL DATA ADDRESS *)
			END_IF;
		(******************************************************************)
		5:	(* 0x05 Force Single Coil *)
			IF W_DATA_ADR &lt;= DATA_SIZE THEN
				w_tmp := INT_TO_WORD(W_ADDR);
				S_BUF.BUFFER[08] := WORD_TO_BYTE(SHR(w_tmp,8));
				S_BUF.BUFFER[09] := WORD_TO_BYTE(w_tmp);
				S_BUF.BUFFER[10] := SEL((DATA[W_DATA_ADR] AND SHL(WORD#1,W_DATA_BITPOS))&gt;WORD#00,BYTE#16#00,BYTE#16#FF);
				S_BUF.BUFFER[11] := BYTE#00;
				S_BUF.SIZE := UINT#12;
				Response := 3;
				comp := 11;
			ELSE
				ERROR := DWORD#2; (* ILLEGAL DATA ADDRESS *)
			END_IF;
		(******************************************************************)
		6:	(* 0x06 Preset Single Register *)
			IF W_DATA_ADR &lt;= DATA_SIZE THEN
				w_tmp := INT_TO_WORD(W_ADDR);
				S_BUF.BUFFER[08] := WORD_TO_BYTE(SHR(w_tmp,8));
				S_BUF.BUFFER[09] := WORD_TO_BYTE(w_tmp);
				w_tmp := DATA[W_DATA_ADR];
				S_BUF.BUFFER[10] := WORD_TO_BYTE(SHR(w_tmp,8));
				S_BUF.BUFFER[11] := WORD_TO_BYTE(w_tmp);
				S_BUF.SIZE := UINT#12;
				Response := 3;
				comp := 11;
			ELSE
				ERROR := DWORD#2; (* ILLEGAL DATA ADDRESS *)
			END_IF;
		(******************************************************************)
		15:	(* 0x0F Force Multiple Coils *)
			IF (WORD_TO_INT(SHR(INT_TO_WORD(WORD_TO_INT(SHL(INT_TO_WORD(W_DATA_ADR),4)) + W_POINTS + W_DATA_BITPOS + 15),4)) &lt;= DATA_SIZE) AND W_POINTS &lt;= 1968 THEN
				w_tmp := INT_TO_WORD(W_ADDR);
				S_BUF.BUFFER[08] := WORD_TO_BYTE(SHR(w_tmp,8));
				S_BUF.BUFFER[09] := WORD_TO_BYTE(w_tmp);
				w_tmp := INT_TO_WORD(W_POINTS);
				S_BUF.BUFFER[10] := WORD_TO_BYTE(SHR(w_tmp,8));
				S_BUF.BUFFER[11] := WORD_TO_BYTE(w_tmp);
				S_BUF.BUFFER[12] := WORD_TO_BYTE(SHR(INT_TO_WORD(W_POINTS + 7),3));

				w_mask := SHL(WORD#1,W_DATA_BITPOS);
				bit_pos := 0;
				w_tmp := WORD#00;
				idx1 := 12;
				idx2 := W_DATA_ADR;
				FOR i := 1 TO W_POINTS DO
					w_tmp :=OSCAT_BASIC.BIT_LOAD_W(w_tmp,(DATA[idx2] AND w_mask) &gt; WORD#0,bit_pos);
					bit_pos := bit_pos + 1;
					IF bit_pos &gt; 7 OR i=W_POINTS THEN
						bit_pos := 0;
						idx1 := idx1 + 1;
						S_BUF.BUFFER[idx1] := WORD_TO_BYTE(w_tmp);
						w_tmp := WORD#0;
					END_IF;
					w_mask := ROL(w_mask,1);
					IF w_mask = WORD#1 THEN
						idx2 := idx2 +1;
					END_IF;
				END_FOR;
				S_BUF.SIZE := INT_TO_UINT(idx1 + 1);
				Response := 3;
				comp := 11;
			ELSE
				ERROR := DWORD#2; (* ILLEGAL DATA ADDRESS *)
			END_IF;
		(******************************************************************)
		16:	(* 0x10 Write Multiple Registers *)
			IF W_DATA_ADR + W_POINTS &lt;= DATA_SIZE AND W_POINTS &lt;= 123 THEN
				w_tmp := INT_TO_WORD(W_ADDR);
				S_BUF.BUFFER[08] := WORD_TO_BYTE(SHR(w_tmp,8));
				S_BUF.BUFFER[09] := WORD_TO_BYTE(w_tmp);
				w_tmp := INT_TO_WORD(W_POINTS);
				S_BUF.BUFFER[10] := WORD_TO_BYTE(SHR(w_tmp,8));
				S_BUF.BUFFER[11] := WORD_TO_BYTE(w_tmp);
				S_BUF.BUFFER[12] := SHL(S_BUF.BUFFER[11],1);
			
				idx1 := 11;
				count := W_DATA_ADR + W_POINTS - 1;
				FOR i := W_DATA_ADR TO count DO
					idx1 := idx1 + 2;
					idx2 := idx1 + 1; (* zweiter index für pcworx notwendig ! *)
					w_tmp := DATA[i];
					S_BUF.BUFFER[idx1] := WORD_TO_BYTE(SHR(w_tmp,8));
					S_BUF.BUFFER[idx2] := WORD_TO_BYTE(w_tmp);
				END_FOR;

				S_BUF.SIZE := INT_TO_UINT(idx2 + 1);
				Response := 3;
				comp := 11;
			ELSE
				ERROR := DWORD#2; (* ILLEGAL DATA ADDRESS *)
			END_IF;
		(******************************************************************)
		22:	(* 0x16 Mask Write Register *)
			IF W_DATA_ADR + 2 &lt;= DATA_SIZE THEN
				w_tmp := INT_TO_WORD(W_ADDR);
				S_BUF.BUFFER[08] := WORD_TO_BYTE(SHR(w_tmp,8));
				S_BUF.BUFFER[09] := WORD_TO_BYTE(w_tmp);
				idx1 := W_DATA_ADR;
				w_tmp := DATA[idx1];
				S_BUF.BUFFER[10] := WORD_TO_BYTE(SHR(w_tmp,8));
				S_BUF.BUFFER[11] := WORD_TO_BYTE(w_tmp);
				idx1 := idx1 +1;
				w_tmp := DATA[idx1];
				S_BUF.BUFFER[12] := WORD_TO_BYTE(SHR(w_tmp,8));
				S_BUF.BUFFER[13] := WORD_TO_BYTE(w_tmp);

				S_BUF.SIZE := UINT#14;
				Response := 5;
				comp := 13;
			ELSE
				ERROR := DWORD#2; (* ILLEGAL DATA ADDRESS *)
			END_IF;
		(******************************************************************)
		23:	(* 0x17 Read/Write Multible Registers *)
			IF W_DATA_ADR + W_POINTS &lt;= DATA_SIZE AND W_POINTS &lt;= 121 AND R_POINTS &lt;= 125 THEN
				idx1 := 15;
				count := W_DATA_ADR + W_POINTS - 1;
				FOR i := W_DATA_ADR TO count DO
					idx1 := idx1 + 2;
					idx2 := idx1 + 1; (* zweiter index für pcworx notwendig ! *)
					w_tmp := DATA[i];
					S_BUF.BUFFER[idx1] := WORD_TO_BYTE(SHR(w_tmp,8));
					S_BUF.BUFFER[idx2] := WORD_TO_BYTE(w_tmp);
				END_FOR;

				(* WRITE *)
				w_tmp := INT_TO_WORD(W_ADDR);
				S_BUF.BUFFER[12] := WORD_TO_BYTE(SHR(w_tmp,8));
				S_BUF.BUFFER[13] := WORD_TO_BYTE(w_tmp);
				w_tmp := INT_TO_WORD(W_POINTS);
				S_BUF.BUFFER[14] := WORD_TO_BYTE(SHR(w_tmp,8));
				S_BUF.BUFFER[15] := WORD_TO_BYTE(w_tmp);
				S_BUF.BUFFER[16] := SHL(S_BUF.BUFFER[15],1);

				(* READ *)
				w_tmp := INT_TO_WORD(R_ADDR);
				S_BUF.BUFFER[08] := WORD_TO_BYTE(SHR(w_tmp,8));
				S_BUF.BUFFER[09] := WORD_TO_BYTE(w_tmp);
				w_tmp := INT_TO_WORD(R_POINTS);
				S_BUF.BUFFER[10] := WORD_TO_BYTE(SHR(w_tmp,8));
				S_BUF.BUFFER[11] := WORD_TO_BYTE(w_tmp);

				S_BUF.SIZE := INT_TO_UINT(idx2 + 1);
				Response := WORD_TO_INT(SHL(w_tmp,1));
				comp := 7;
			ELSE
				ERROR := DWORD#2; (* ILLEGAL DATA ADDRESS *)
			END_IF;
		(******************************************************************)

		ELSE
			ERROR := DWORD#00000001; (* ILLEGAL FUNCTION *)
		END_CASE;

		(* Daten senden *)
		IF ERROR = DWORD#00 THEN
			Transaction_ID := Transaction_ID + 1;
			w_tmp := UINT_TO_WORD(S_BUF.SIZE - UINT#6);
			(* ---- H E A D E R --------------------------------------------------------------- *)
			S_BUF.BUFFER[0] := IP_ID; (* TRANSACTION-ID HI-Byte *)
			S_BUF.BUFFER[1] := INT_TO_BYTE(Transaction_ID); (* TRANSACTION-ID LO-Byte *)
			S_BUF.BUFFER[2] := BYTE#00; (* PROTOKOLL-ID HI-Byte *)
			S_BUF.BUFFER[3] := BYTE#00; (* PROTOKOLL-ID LO-Byte *)
			S_BUF.BUFFER[4] := WORD_TO_BYTE(SHR(w_tmp,8)); (* Laenge HI-Byte *)
			S_BUF.BUFFER[5] := WORD_TO_BYTE(w_tmp); (* Laenge LO-Byte *)
			S_BUF.BUFFER[6] := UNIT_ID; (* UNIT *)
			S_BUF.BUFFER[7] := INT_TO_BYTE(FC); (* FUNCTION-CODE *)
			(*----- END OF HEADER --------------------------------------------------------------*)
			R_BUF.SIZE := UINT#0; (* Empfangsbuffer löschen *)
			state := 30; (* wait for response *)
		ELSE
			IP_STATE := BYTE#4; (* Abmelden *)
			state := 00;
		END_IF;
	END_IF;

30: (* response *)
	IF IP_C.ERROR &lt;&gt; DWORD#00 THEN
		ERROR := IP_C.ERROR;
		IP_STATE := BYTE#4; (* Abmelden *)
		state := 00;
	ELSIF S_BUF.SIZE = UINT#0 AND R_BUF.SIZE &gt; UINT#0 THEN
		(* erwartete länge in sendebuffer nachträglich eintragen um vergleich zu ermöglichen *)
		w_tmp := INT_TO_WORD(Response + 3);
		S_BUF.BUFFER[4] := WORD_TO_BYTE(SHR(w_tmp,8));
		S_BUF.BUFFER[5] := WORD_TO_BYTE(w_tmp);

		FOR i := 0 TO comp DO
			IF S_BUF.BUFFER[i] &lt;&gt; R_BUF.BUFFER[i] THEN EXIT; END_IF;
		END_FOR;

		IF R_BUF.SIZE &gt;= UINT#9 AND R_BUF.BUFFER[7] &gt; BYTE#128 THEN  (* Bit 7 = Error Message *)
			ERROR := BYTE_TO_DWORD(R_BUF.BUFFER[8]);
			IP_STATE := BYTE#4; (* Abmelden *)
			state := 00;
		ELSIF R_BUF.SIZE = INT_TO_UINT(Response + 9) AND i &gt; comp THEN
			mask := SHL(DWORD#1,FC);
			(* READ_COILS, READ_INPUT_DISCRETES *)
			IF (mask AND DWORD#2#00000000_00000000_00000000_00000110) &gt; DWORD#0 THEN (* FC 1,2 *)
				IF WORD_TO_INT(SHR(INT_TO_WORD(WORD_TO_INT(SHL(INT_TO_WORD(R_DATA_ADR),4)) + R_POINTS + R_DATA_BITPOS + 15),4)) &lt;= DATA_SIZE THEN
					b_mask := BYTE#1;
					idx1 := 09;
					idx2 := R_DATA_ADR;
					bit_pos := R_DATA_BITPOS;
					FOR i := 1 TO R_POINTS DO
						DATA[idx2]:=OSCAT_BASIC.BIT_LOAD_W(DATA[idx2],(R_BUF.BUFFER[idx1] AND b_mask) &gt; BYTE#0,bit_pos);
						bit_pos := bit_pos + 1;
						IF bit_pos &gt; 15 THEN
							idx2 := idx2 + 1;
							bit_pos := 0;
						END_IF;
						b_mask := ROL(b_mask,1);
						IF b_mask = BYTE#1 THEN
							idx1 := idx1 + 1;
						END_IF;
					END_FOR;
				ELSE
					ERROR := DWORD#2; (* ILLEGAL DATA ADDRESS *)
				END_IF;

			(* READ_MULTIPLE_REGISTERS, READ_INPUT_REGISTERS, READ_WRITE_REGISTERS *)
			ELSIF (mask AND DWORD#2#00000000_10000000_00000000_00011000) &gt; DWORD#0 THEN (* FC 3,4,23 *)
				IF R_DATA_ADR + R_POINTS &lt;= DATA_SIZE THEN
					stop := R_DATA_ADR + R_POINTS -1 ;
					idx1 := 07;
					FOR i := R_DATA_ADR TO stop DO
						idx1 := idx1 + 2;
						idx2 := idx1 + 1;
						DATA[i] := OSCAT_BASIC.WORD_OF_BYTE(R_BUF.BUFFER[idx1],R_BUF.BUFFER[idx2]);
					END_FOR;
				ELSE
					ERROR := DWORD#2; (* ILLEGAL DATA ADDRESS *)
				END_IF;
			ELSIF (mask AND DWORD#2#11111111_00111110_01111111_10000001) &gt; DWORD#0 THEN (* ILLEGAL FUNCTION CODE ? *)
				ERROR := DWORD#1; (* ILLEGAL FUNCTION *)
			END_IF;
		ELSE
			ERROR := DWORD#3; (* ILLEGAL DATA VALUE *)
		END_IF;

		IP_STATE := BYTE#4; (* Abmelden *)
		state := 00;
		R_BUF.SIZE := UINT#0;

	END_IF;

END_CASE;

(* IP_FIFO *)
IP_FIFO(FIFO:=IP_C.FIFO,STATE:=IP_STATE,ID:=IP_ID);
BUSY := IP_STATE = BYTE#3;

(* revision history
ks	05. jan. 2009	rev 1.0
	original version

ks	28. jan. 2009	rev 1.1
	network_buffer_short verwendet  

ks	20. oct. 2009	rev 1.2
Networkbuffer und Buffer-funktionen auf Basis 0

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>dee3ea1b-5e26-4949-b79d-a3e182328679</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="MB_SERVER" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER_SHORT" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER_SHORT" />
              </type>
            </variable>
            <variable name="VMAP">
              <type>
                <array>
                  <dimension lower="1" upper="10" />
                  <baseType>
                    <derived name="VMAP_DATA" />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="DATA">
              <type>
                <array>
                  <dimension lower="0" upper="255" />
                  <baseType>
                    <WORD />
                  </baseType>
                </array>
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="DATA_SIZE">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="ENABLE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="UDP">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="ERROR">
              <type>
                <DWORD />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="MB_VMAP">
              <type>
                <derived name="MB_VMAP" />
              </type>
            </variable>
            <variable name="adr1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="adr2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="points">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="points2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="coils">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="mask">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="idx1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="idx2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="bit_pos">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="count">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="fc">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="i">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="state">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="ip_state">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="ip_id">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="IP_FIFO">
              <type>
                <derived name="IP_FIFO" />
              </type>
            </variable>
            <variable name="w_tmp">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="last_cycle">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="tx">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="t">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="ip_error">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* read system time *)
tx := DWORD_TO_TIME(OSCAT_BASIC.T_PLC_MS());

FOR i := 1 TO 10 DO
	IF VMAP[i].TIME_OUT &gt; T#0s THEN
		VMAP[i].TIME_OUT := VMAP[i].TIME_OUT + tx - last_cycle;
	END_IF;
END_FOR;
last_cycle := tx;
ip_error := IP_C.ERROR &gt; DWORD#0;

CASE state OF
00: (* Warten auf Freigabe *)
	IF ENABLE THEN
		state := 10;
		ip_state := BYTE#1; (* Anmelden *)
	END_IF;

10: (* Bei IP_Control anmelden und auf freigabe warten *)
	IF ip_state = BYTE#3 THEN

		(* IP Datenverkehr einrichten *)
		IP_C.C_PORT := WORD#0; (* Port von IP_CONTROL verwenden *)
		IP_C.C_IP := DWORD#0; (* IP von IP_CONTROL verwenden *)
		IP_C.C_MODE := SEL(UDP,BYTE#4,BYTE#5); (* Mode: 4=TCP+PASSIV+PORT , 5=UDP+PASSIV+PORT *)
		IP_C.TIME_RESET := TRUE; (* Zeitueberwachung rücksetzen *)
		IP_C.C_ENABLE := TRUE; (* Verbindungsaufbau freigeben *)
		IP_C.R_OBSERVE := TRUE; (* keine Empfangsueberwachung *)
		state := 20;
	END_IF;

20:	IF NOT ip_error THEN
		IF S_BUF.SIZE = UINT#0 AND R_BUF.SIZE &gt; UINT#6 THEN	(* Datensenden nicht aktiv und Daten wurden empfangen *)
			IF  R_BUF.SIZE = WORD_TO_UINT(OSCAT_BASIC.WORD_OF_BYTE(R_BUF.BUFFER[4],R_BUF.BUFFER[5])) + UINT#6 THEN (* gültige Datenlänge *)
				ERROR := DWORD#00; (* Error löschen *)

				(* Header kopieren *)
				FOR i := 0 TO 13 DO
					S_BUF.BUFFER[i] := R_BUF.BUFFER[i];
				END_FOR;
				fc := BYTE_TO_INT(R_BUF.BUFFER[7]);
				adr1 := WORD_TO_INT(OSCAT_BASIC.WORD_OF_BYTE(R_BUF.BUFFER[8],R_BUF.BUFFER[9]));
				points := WORD_TO_INT(OSCAT_BASIC.WORD_OF_BYTE(R_BUF.BUFFER[10],R_BUF.BUFFER[11]));

				(* Virtual Address *)
				MB_VMAP(VMAP:=VMAP,FC:=fc,V_ADR:=adr1,V_CNT:=points,SIZE:=DATA_SIZE);
				adr1:=MB_VMAP.P_ADR;
				bit_pos:=MB_VMAP.P_BIT;
				ERROR:=BYTE_TO_DWORD(MB_VMAP.ERROR);

				IF ERROR = DWORD#0 THEN
					CASE fc OF
					(*---------------------------------------------*)
					1..2 : (* Read Coil Status / Read Input Status *)
						count := 9; (* erstes Datenbyte *)
						coils := BYTE#0;
						mask := BYTE#1;
						FOR i := 1 TO points DO
							IF mask = BYTE#0 THEN
								mask := BYTE#1;
								S_BUF.BUFFER[count] := coils;
								coils := BYTE#0;
								count := count + 1;
							END_IF;
							IF (DATA[adr1] AND SHL(WORD#1,bit_pos)) &gt; WORD#0 THEN
								coils := coils OR mask;
							END_IF;
	
							bit_Pos := bit_Pos + 1;
							IF bit_pos &gt; 15 THEN
								ADR1 := ADR1 + 1;
								bit_pos := 0;
							END_IF;
	
							mask := SHL(mask,1);
						END_FOR;
						S_BUF.BUFFER[Count] := coils;
	
						S_BUF.BUFFER[8] := INT_TO_BYTE(count - 8); (* Bytecount *)
						S_BUF.SIZE := INT_TO_UINT(count + 1);
	
					(*--------------------------------------------------*)
					3..4 : (* Read Holding Registers / Read Input Registers *)
						idx1 := 07;
						count := adr1 + points - 1;
						FOR i := adr1 TO count DO
							idx1 := idx1 + 2;
							idx2 := idx1 + 1; (* zweiter index für pcworx notwendig ! *)
							w_tmp := DATA[i];
							S_BUF.BUFFER[idx1] := WORD_TO_BYTE(SHR(w_tmp,8));
							S_BUF.BUFFER[idx2] := WORD_TO_BYTE(w_tmp);
						END_FOR;
						S_BUF.BUFFER[8] := SHL(INT_TO_BYTE(points),1); (* Anzahl Register in Bytes *)
						S_BUF.SIZE := INT_TO_UINT(idx2 + 1);
					(*--------------------------------------------------*)
					5 : (* Force Single Coil *)
						DATA[adr1]:=OSCAT_BASIC.BIT_LOAD_W(DATA[adr1],R_BUF.BUFFER[10] &gt; BYTE#0,bit_pos);
						S_BUF.SIZE := UINT#12;
					(*--------------------------------------------------*)
					6 : (* Preset Single Register *)
						DATA[adr1] := OSCAT_BASIC.WORD_OF_BYTE(R_BUF.BUFFER[10],R_BUF.BUFFER[11]);
						S_BUF.SIZE := UINT#12;
					(*--------------------------------------------------*)
					15 : (* Force Multible Coils *)
						mask := BYTE#1;
						idx1 := 13;
						FOR i := 1 TO points DO
							DATA[adr1]:=OSCAT_BASIC.BIT_LOAD_W(DATA[adr1],(R_BUF.BUFFER[idx1] AND mask) &gt; BYTE#0,bit_pos);
							bit_pos := bit_pos + 1;
							IF bit_pos &gt; 15 THEN
								adr1:= adr1 + 1;
								bit_pos := 0;
							END_IF;
							mask := ROL(mask,1);
							IF mask = BYTE#1 THEN
								idx1 := idx1 +1;
							END_IF;
						END_FOR;
						S_BUF.SIZE := UINT#12;
					(*--------------------------------------------------*)
					16 : (* Preset Multiple Registers	*)
						idx1 := 11;
						count := adr1 + points - 1;
						FOR i := adr1 TO Count DO
							idx1 := idx1 + 2;
	 						idx2 := idx1 + 1;
							Data[i] := OSCAT_BASIC.WORD_OF_BYTE(R_BUF.BUFFER[idx1],R_BUF.BUFFER[idx2]);
						END_FOR;
						S_BUF.SIZE := UINT#12;
					(*--------------------------------------------------*)
					22 : (* Mask Write Register *)
						w_tmp := OSCAT_BASIC.WORD_OF_BYTE(R_BUF.BUFFER[10],R_BUF.BUFFER[11]); (* and mask *)
						DATA[adr1] := (DATA[adr1] AND w_tmp) OR (OSCAT_BASIC.WORD_OF_BYTE(R_BUF.BUFFER[12],R_BUF.BUFFER[13]) AND (NOT w_tmp));
						S_BUF.SIZE := UINT#14;
					(*--------------------------------------------------*)
					23 : (* Read / Write Registers	*)
						(*--- Write-Register -----------------------------------*)
						adr2 := WORD_TO_INT(OSCAT_BASIC.WORD_OF_BYTE(R_BUF.BUFFER[12],R_BUF.BUFFER[13]));
						points2 := WORD_TO_INT(OSCAT_BASIC.WORD_OF_BYTE(R_BUF.BUFFER[14],R_BUF.BUFFER[15]));

						(* Virtual Address Write Register *)
						MB_VMAP(VMAP:=VMAP,FC:=16,V_ADR:=adr2,V_CNT:=points2,SIZE:=DATA_SIZE);
						adr2:=MB_VMAP.P_ADR;
						ERROR:=BYTE_TO_DWORD(MB_VMAP.ERROR);
	
						IF ERROR = DWORD#0 THEN
							idx1 := 15;
							count := adr2 + points2 - 1;
							FOR i := adr2 TO count DO
								idx1 := idx1 + 2;
	 							idx2 := idx1 + 1; (* zweiter index für pcworx notwendig ! *)
								Data[i] := OSCAT_BASIC.WORD_OF_BYTE(R_BUF.BUFFER[idx1],R_BUF.BUFFER[idx2]);
							END_FOR;
	
							(*--- Read-Register -----------------------------------*)
							idx1 := 07;
							count := adr1 + points - 1;
							FOR i := adr1 TO count DO
								idx1 := idx1 + 2;
								idx2 := idx1 + 1; (* zweiter index für pcworx notwendig ! *)
								w_tmp := DATA[i];
								S_BUF.BUFFER[idx1] := WORD_TO_BYTE(SHR(w_tmp,8));
								S_BUF.BUFFER[idx2] := WORD_TO_BYTE(w_tmp);
							END_FOR;
							S_BUF.BUFFER[8] := SHL(INT_TO_BYTE(points),1); (* Anzahl Register in Bytes *)
							S_BUF.SIZE := INT_TO_UINT(idx2 + 1);
	
						END_IF;
	
					(*--------------------------------------------------*)
					ELSE
						ERROR := DWORD#01; (* ILLEGAL FUNCTION *)
					END_CASE;
				END_IF;
			END_IF;
	
			IF ERROR &gt; DWORD#0 THEN
				S_BUF.BUFFER[7] := S_BUF.BUFFER[7] OR BYTE#2#1000_0000; (* Fehlerbit setzen *)
				S_BUF.BUFFER[8] := DWORD_TO_BYTE(ERROR);
				S_BUF.SIZE := UINT#9;
			END_IF;
	
			S_BUF.BUFFER[4] := BYTE#0; (* high Byte *)
			S_BUF.BUFFER[5] := UINT_TO_BYTE(S_BUF.SIZE - UINT#6); (* Längenfeld eintragen - nur low byte *)
	
		END_IF;
	ELSE
		ERROR := IP_C.ERROR;
	END_IF;

	t(IN:= ip_error, PT:=T#2s);
	IF t.Q THEN
		IP_C.TIME_RESET := TRUE; (* Error Reset *)
	END_IF;

	R_BUF.SIZE := UINT#0; (* Empfangsdaten zerstören *)

	IF ENABLE = FALSE OR t.Q THEN
	    ip_state := BYTE#4; (* Abmelden *)
		state := 00;
		IP_C.C_ENABLE := FALSE;
	END_IF;
END_CASE;

(* IP_FIFO *)
IP_FIFO(FIFO:=IP_C.FIFO,STATE:=ip_state,ID:=ip_id);

(* revision history
ks	05. jan. 2009	rev 1.0
	original version

ks	28. jan. 2009	rev 1.1
	network_buffer_short verwendet  

ks	20. oct. 2009	rev 1.2
	change lokal-var adr to adr1,Networkbuffer und Buffer-funktionen auf Basis 0

ks	17. may. 2011	rev 1.3
	automatischer re-connect

ks	05. may. 2012	rev 1.4
	timeoutüberwachung für re-connect
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>4971e79e-00f2-4522-87a7-526b207e214e</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="MB_SERVER_1" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER_SHORT" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER_SHORT" />
              </type>
            </variable>
            <variable name="VMAP">
              <type>
                <array>
                  <dimension lower="1" upper="10" />
                  <baseType>
                    <derived name="VMAP_DATA" />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="DATA">
              <type>
                <array>
                  <dimension lower="0" upper="255" />
                  <baseType>
                    <WORD />
                  </baseType>
                </array>
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="DATA_SIZE">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="ENABLE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="UDP">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="ERROR">
              <type>
                <DWORD />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="MB_VMAP">
              <type>
                <derived name="MB_VMAP" />
              </type>
            </variable>
            <variable name="adr1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="adr2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="points">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="points2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="coils">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="mask">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="idx1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="idx2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="bit_pos">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="count">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="fc">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="i">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="state">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="ip_state">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="ip_id">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="IP_FIFO">
              <type>
                <derived name="IP_FIFO" />
              </type>
            </variable>
            <variable name="w_tmp">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="last_cycle">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="tx">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="t">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="ip_error">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* read system time *)
tx := DWORD_TO_TIME(OSCAT_BASIC.T_PLC_MS());

FOR i := 1 TO 10 DO
	IF VMAP[i].TIME_OUT &gt; T#0s THEN
		VMAP[i].TIME_OUT := VMAP[i].TIME_OUT + tx - last_cycle;
	END_IF;
END_FOR;
last_cycle := tx;
ip_error := IP_C.ERROR &gt; DWORD#0;

CASE state OF
00: (* Warten auf Freigabe *)
	IF ENABLE THEN
		state := 10;
		ip_state := BYTE#1; (* Anmelden *)
	END_IF;

10: (* Bei IP_Control anmelden und auf freigabe warten *)
	IF ip_state = BYTE#3 THEN

		(* IP Datenverkehr einrichten *)
		IP_C.C_PORT := WORD#0; (* Port von IP_CONTROL verwenden *)
		IP_C.C_IP := DWORD#0; (* IP von IP_CONTROL verwenden *)
		IP_C.C_MODE := SEL(UDP,BYTE#4,BYTE#5); (* Mode: 4=TCP+PASSIV+PORT , 5=UDP+PASSIV+PORT *)
		IP_C.TIME_RESET := TRUE; (* Zeitueberwachung rücksetzen *)
		IP_C.C_ENABLE := TRUE; (* Verbindungsaufbau freigeben *)
		IP_C.R_OBSERVE := FALSE; (* keine Empfangsueberwachung *)
		state := 20;
	END_IF;

20:	IF NOT ip_error THEN
		IF S_BUF.SIZE = UINT#0 AND R_BUF.SIZE &gt; UINT#6 THEN	(* Datensenden nicht aktiv und Daten wurden empfangen *)
			IF  R_BUF.SIZE = WORD_TO_UINT(OSCAT_BASIC.WORD_OF_BYTE(R_BUF.BUFFER[4],R_BUF.BUFFER[5])) + UINT#6 THEN (* gültige Datenlänge *)
				ERROR := DWORD#00; (* Error löschen *)
	
				(* Header kopieren *)
				FOR i := 0 TO 13 DO
					S_BUF.BUFFER[i] := R_BUF.BUFFER[i];
				END_FOR;
				fc := BYTE_TO_INT(R_BUF.BUFFER[7]);
				adr1 := WORD_TO_INT(OSCAT_BASIC.WORD_OF_BYTE(R_BUF.BUFFER[8],R_BUF.BUFFER[9]));
				points := WORD_TO_INT(OSCAT_BASIC.WORD_OF_BYTE(R_BUF.BUFFER[10],R_BUF.BUFFER[11]));
	
				(* Virtual Address *)
				MB_VMAP(VMAP:=VMAP,FC:=fc,V_ADR:=adr1,V_CNT:=points,SIZE:=DATA_SIZE);
				adr1:=MB_VMAP.P_ADR;
				bit_pos:=MB_VMAP.P_BIT;
				ERROR:=BYTE_TO_DWORD(MB_VMAP.ERROR);
	
				IF ERROR = DWORD#0 THEN
					CASE fc OF
					(*---------------------------------------------*)
					1..2 : (* Read Coil Status / Read Input Status *)
						count := 9; (* erstes Datenbyte *)
						coils := BYTE#0;
						mask := BYTE#1;
						FOR i := 1 TO points DO
							IF mask = BYTE#0 THEN
								mask := BYTE#1;
								S_BUF.BUFFER[count] := coils;
								coils := BYTE#0;
								count := count + 1;
							END_IF;
							IF (DATA[adr1] AND SHL(WORD#1,bit_pos)) &gt; WORD#0 THEN
								coils := coils OR mask;
							END_IF;
	
							bit_Pos := bit_Pos + 1;
							IF bit_pos &gt; 15 THEN
								ADR1 := ADR1 + 1;
								bit_pos := 0;
							END_IF;
	
							mask := SHL(mask,1);
						END_FOR;
						S_BUF.BUFFER[Count] := coils;
	
						S_BUF.BUFFER[8] := INT_TO_BYTE(count - 8); (* Bytecount *)
						S_BUF.SIZE := INT_TO_UINT(count + 1);
	
					(*--------------------------------------------------*)
					3..4 : (* Read Holding Registers / Read Input Registers *)
						idx1 := 07;
						count := adr1 + points - 1;
						FOR i := adr1 TO count DO
							idx1 := idx1 + 2;
							idx2 := idx1 + 1; (* zweiter index für pcworx notwendig ! *)
							w_tmp := DATA[i];
							S_BUF.BUFFER[idx1] := WORD_TO_BYTE(SHR(w_tmp,8));
							S_BUF.BUFFER[idx2] := WORD_TO_BYTE(w_tmp);
						END_FOR;
						S_BUF.BUFFER[8] := SHL(INT_TO_BYTE(points),1); (* Anzahl Register in Bytes *)
						S_BUF.SIZE := INT_TO_UINT(idx2 + 1);
					(*--------------------------------------------------*)
					5 : (* Force Single Coil *)
						DATA[adr1]:=OSCAT_BASIC.BIT_LOAD_W(DATA[adr1],R_BUF.BUFFER[10] &gt; BYTE#0,bit_pos);
						S_BUF.SIZE := UINT#12;
					(*--------------------------------------------------*)
					6 : (* Preset Single Register *)
						DATA[adr1] := OSCAT_BASIC.WORD_OF_BYTE(R_BUF.BUFFER[10],R_BUF.BUFFER[11]);
						S_BUF.SIZE := UINT#12;
					(*--------------------------------------------------*)
					15 : (* Force Multible Coils *)
						mask := BYTE#1;
						idx1 := 13;
						FOR i := 1 TO points DO
							DATA[adr1]:=OSCAT_BASIC.BIT_LOAD_W(DATA[adr1],(R_BUF.BUFFER[idx1] AND mask) &gt; BYTE#0,bit_pos);
							bit_pos := bit_pos + 1;
							IF bit_pos &gt; 15 THEN
								adr1:= adr1 + 1;
								bit_pos := 0;
							END_IF;
							mask := ROL(mask,1);
							IF mask = BYTE#1 THEN
								idx1 := idx1 +1;
							END_IF;
						END_FOR;
						S_BUF.SIZE := UINT#12;
					(*--------------------------------------------------*)
					16 : (* Preset Multiple Registers	*)
						idx1 := 11;
						count := adr1 + points - 1;
						FOR i := adr1 TO Count DO
							idx1 := idx1 + 2;
	 						idx2 := idx1 + 1;
							Data[i] := OSCAT_BASIC.WORD_OF_BYTE(R_BUF.BUFFER[idx1],R_BUF.BUFFER[idx2]);
						END_FOR;
						S_BUF.SIZE := UINT#12;
					(*--------------------------------------------------*)
					22 : (* Mask Write Register *)
						w_tmp := OSCAT_BASIC.WORD_OF_BYTE(R_BUF.BUFFER[10],R_BUF.BUFFER[11]); (* and mask *)
						DATA[adr1] := (DATA[adr1] AND w_tmp) OR (OSCAT_BASIC.WORD_OF_BYTE(R_BUF.BUFFER[12],R_BUF.BUFFER[13]) AND (NOT w_tmp));
						S_BUF.SIZE := UINT#14;
					(*--------------------------------------------------*)
					23 : (* Read / Write Registers	*)
						(*--- Write-Register -----------------------------------*)
						adr2 := WORD_TO_INT(OSCAT_BASIC.WORD_OF_BYTE(R_BUF.BUFFER[12],R_BUF.BUFFER[13]));
						points2 := WORD_TO_INT(OSCAT_BASIC.WORD_OF_BYTE(R_BUF.BUFFER[14],R_BUF.BUFFER[15]));
	
						(* Virtual Address Write Register *)
						MB_VMAP(VMAP:=VMAP,FC:=16,V_ADR:=adr2,V_CNT:=points2,SIZE:=DATA_SIZE);
						adr2:=MB_VMAP.P_ADR;
						ERROR:=BYTE_TO_DWORD(MB_VMAP.ERROR);
	
						IF ERROR = DWORD#0 THEN
							idx1 := 15;
							count := adr2 + points2 - 1;
							FOR i := adr2 TO count DO
								idx1 := idx1 + 2;
	 							idx2 := idx1 + 1; (* zweiter index für pcworx notwendig ! *)
								Data[i] := OSCAT_BASIC.WORD_OF_BYTE(R_BUF.BUFFER[idx1],R_BUF.BUFFER[idx2]);
							END_FOR;
	
							(*--- Read-Register -----------------------------------*)
							idx1 := 07;
							count := adr1 + points - 1;
							FOR i := adr1 TO count DO
								idx1 := idx1 + 2;
								idx2 := idx1 + 1; (* zweiter index für pcworx notwendig ! *)
								w_tmp := DATA[i];
								S_BUF.BUFFER[idx1] := WORD_TO_BYTE(SHR(w_tmp,8));
								S_BUF.BUFFER[idx2] := WORD_TO_BYTE(w_tmp);
							END_FOR;
							S_BUF.BUFFER[8] := SHL(INT_TO_BYTE(points),1); (* Anzahl Register in Bytes *)
							S_BUF.SIZE := INT_TO_UINT(idx2 + 1);
	
						END_IF;
	
					(*--------------------------------------------------*)
					ELSE
						ERROR := DWORD#01; (* ILLEGAL FUNCTION *)
					END_CASE;
				END_IF;
			END_IF;
	
			IF ERROR &gt; DWORD#0 THEN
				S_BUF.BUFFER[7] := S_BUF.BUFFER[7] OR BYTE#2#1000_0000; (* Fehlerbit setzen *)
				S_BUF.BUFFER[8] := DWORD_TO_BYTE(ERROR);
				S_BUF.SIZE := UINT#9;
			END_IF;
	
			S_BUF.BUFFER[4] := BYTE#0; (* high Byte *)
			S_BUF.BUFFER[5] := UINT_TO_BYTE(S_BUF.SIZE - UINT#6); (* Längenfeld eintragen - nur low byte *)
	
		END_IF;
	ELSE
		ERROR := IP_C.ERROR;
	END_IF;

	t(IN:= ip_error, PT:=T#5s);
	IF t.Q THEN
		IP_C.TIME_RESET := TRUE; (* Error Reset *)
	END_IF;

	R_BUF.SIZE := UINT#0; (* Empfangsdaten zerstören *)

	IF ENABLE = FALSE THEN
	    ip_state := BYTE#4; (* Abmelden *)
		state := 00;
	END_IF;
END_CASE;

(* IP_FIFO *)
IP_FIFO(FIFO:=IP_C.FIFO,STATE:=ip_state,ID:=ip_id);

(* revision history
ks	05. jan. 2009	rev 1.0
	original version

ks	28. jan. 2009	rev 1.1
	network_buffer_short verwendet  

ks	20. oct. 2009	rev 1.2
	change lokal-var adr to adr1,Networkbuffer und Buffer-funktionen auf Basis 0

ks	17. may. 2011	rev 1.3
	automatischer re-connect
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>09c4c576-a6cb-40d0-97e1-e7e67f1aaa2c</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="MB_VMAP" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="VMAP">
              <type>
                <array>
                  <dimension lower="1" upper="10" />
                  <baseType>
                    <derived name="VMAP_DATA" />
                  </baseType>
                </array>
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="FC">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="V_ADR">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="V_CNT">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="SIZE">
              <type>
                <INT />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="P_ADR">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="P_BIT">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="ERROR">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="i">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="vopt">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="vadr">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="padr">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="mask">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="vsize">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="w_tmp">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="i_tmp">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="init">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF init = FALSE THEN
	init := TRUE;
	IF VMAP[1].FC = DWORD#0 THEN
		VMAP[1].FC := DWORD#16#FFFF_FFFF;
		VMAP[1].V_ADR := 0;
		VMAP[1].V_SIZE := 256;
		VMAP[1].P_ADR := 0;
	END_IF;
END_IF;

ERROR := BYTE#02; (* ILLEGAL DATA ADDRESS *)
mask := SHL(DWORD#1,FC);

IF (mask AND DWORD#2#00000000_01000000_00000000_01100000) &lt;&gt; DWORD#0 THEN (* FC 5,6,22 *)
	V_CNT := 1;
ELSIF V_CNT = 0 THEN
	RETURN;
END_IF;

FOR i := 1 TO 10 DO
	vopt := VMAP[i].FC; 
	IF (vopt AND mask) &lt;&gt; DWORD#0 THEN
		vadr := VMAP[i].V_ADR;
		vsize := VMAP[i].V_SIZE;
		padr := VMAP[i].P_ADR;

		IF (mask AND DWORD#2#00000000_00000000_10000000_00100110) &lt;&gt; DWORD#0 THEN (* FC 1,2,5,15 für Bit-Access *)
			i_tmp := WORD_TO_INT(SHR(INT_TO_WORD(V_ADR + V_CNT -1),4))+1;
			IF i_tmp &lt;= SIZE AND i_tmp &lt;= vsize THEN
				w_tmp := INT_TO_WORD(V_ADR);
				P_ADR := WORD_TO_INT(SHR(w_tmp,4)) + padr; 
				P_BIT := WORD_TO_INT(w_tmp AND WORD#16#000F);
				ERROR := BYTE#0;
				EXIT;
			END_IF;
		ELSIF (mask AND DWORD#2#00000000_11000001_00000000_01011000) &lt;&gt; DWORD#0 THEN (* FC 3,4,6,16,22,23 für Register-Access *)
			IF V_ADR &gt;= vadr AND V_ADR + V_CNT &lt;= vadr + vsize THEN (* gültiger virtueller bereich *)
				P_ADR := V_ADR - vadr + padr; (* reale Adresse berechnen *)
				IF P_ADR + V_CNT &lt;= SIZE THEN (* bereichsueberschreitung ? *)
					ERROR := BYTE#0;
					EXIT;
				END_IF;
			END_IF;
		ELSE
			ERROR := BYTE#01; (* ILLEGAL FUNCTION *)
			RETURN;
		END_IF;
	END_IF;
END_FOR;

IF ERROR = BYTE#0 THEN
	IF (mask AND DWORD#2#00000000_11000001_10000000_01100000) &lt;&gt; DWORD#0 THEN (* FC 5,6,15,16,22,23 Schreib-zugriff *)
		VMAP[i].TIME_OUT := T#1ms;
	END_IF;
END_IF;

(* revision history
ks	05. jan. 2009	rev 1.0
	original version

ks	20. oct. 2009	rev 1.1
	fehlerkorrektur in bitmaske

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>16e90dbc-5284-45a4-94d8-a5562ddb620f</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="READ_HTTP" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="SIZE">
              <type>
                <UINT />
              </type>
            </variable>
            <variable name="POS">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="SRC">
              <type>
                <string />
              </type>
            </variable>
          </inputVars>
          <inOutVars>
            <variable name="PT">
              <type>
                <derived name="NW_BUF_LONG" />
              </type>
            </variable>
          </inOutVars>
          <outputVars>
            <variable name="READ_HTTP">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="index">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="s1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="e1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="stop">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">stop := UINT_TO_INT(SIZE) - 1;

IF LEN(SRC) = 0 THEN
	(* wenn kein Suchbegriff vorhanden ist, dann den HTTP-STATUS auswerten *)
	SRC := 'HTTP/'; (* neuer Suchbegriff *)
ELSE
	(* gesuchten Parametertext ergänzen *)
	SRC := CONCAT(SRC,': ');
END_IF;

s1 := OSCAT_BASIC.BUFFER_SEARCH(pt:=ADR(PT),SIZE:=SIZE,STR:=SRC,POS:=POS,IGN:=TRUE);

IF s1 &gt;= 0 THEN (* Text found *)
	e1 := s1;

	(* search start of line *)
	index := s1 - 1;
	WHILE (index &gt; 0) DO
		IF pt[index] &lt; BYTE#32 THEN EXIT; END_IF;
		s1 := s1 - 1;
		index := index - 1;
	END_WHILE;

	(* search end of line *)
	index := e1 + 1;
	WHILE (index &lt;= stop) DO
		IF pt[index] &lt; BYTE#32 THEN EXIT; END_IF;
		e1 := e1 + 1;
		index := index + 1;
	END_WHILE;

	s1 := s1 + LEN(SRC); (* 'suchbegriff: ' nicht mitkopieren *)

	(* copy string *)
	READ_HTTP := OSCAT_BASIC.BUFFER_TO_STRING(PT:=ADR(PT),SIZE:=SIZE,START:=s1,STOP:=e1);
ELSE
	READ_HTTP := '';
END_IF;

(* revision history

ks	18. oct. 2008	rev 1.0
	original version

ks	20. oct. 2009	rev 1.1
	Networkbuffer und Buffer-funktionen auf Basis 0

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>39cf59c6-886d-42b3-bcee-3dc047ce3a41</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="SMTP_CLIENT" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="ACTIVATE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="TIMEOUT">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="DTI">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="DTI_OFFSET">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="DNS_IP4">
              <type>
                <DWORD />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="DONE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="BUSY">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ERROR_C">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="ERROR_T">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <inOutVars>
            <variable name="SERVER">
              <type>
                <string />
              </type>
            </variable>
            <variable name="MAILFROM">
              <type>
                <string />
              </type>
            </variable>
            <variable name="MAILTO">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="SUBJECT">
              <type>
                <string />
              </type>
            </variable>
            <variable name="BODY">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="FILES">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
          </inOutVars>
          <localVars>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> IP_Control Verwaltungsstruktur </xhtml>
              </documentation>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="F_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="URL_DATA">
              <type>
                <derived name="url" />
              </type>
            </variable>
            <variable name="DNS_CLIENT">
              <type>
                <derived name="DNS_CLIENT" />
              </type>
            </variable>
            <variable name="IPC">
              <type>
                <derived name="IP_CONTROL" />
              </type>
            </variable>
            <variable name="FS">
              <type>
                <derived name="FILE_SERVER" />
              </type>
            </variable>
            <variable name="FSD">
              <type>
                <derived name="FILE_SERVER_DATA" />
              </type>
            </variable>
            <variable name="BASE64_ENCODE_STR">
              <type>
                <derived name="BASE64_ENCODE_STR" />
              </type>
            </variable>
            <variable name="BASE64_ENCODE_STREAM">
              <type>
                <derived name="BASE64_ENCODE_STREAM" />
              </type>
            </variable>
            <variable name="fpd">
              <type>
                <derived name="FILE_PATH_DATA" />
              </type>
            </variable>
            <variable name="MD5_CRAM_AUTH">
              <type>
                <derived name="MD5_CRAM_AUTH" />
              </type>
            </variable>
            <variable name="MD5_RUN">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="activate_last">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="step">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="snd_step">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="str1">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="str2">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="str3">
              <type>
                <string />
              </type>
            </variable>
            <variable name="snd_text">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="snd_lf_cnt">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="rcv_text">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="rcv_s">
              <type>
                <string length="3" />
              </type>
            </variable>
            <variable name="rcv_state">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="auth_names">
              <type>
                <string />
              </type>
              <initialValue>
                <simpleValue value="' PLAIN; LOGIN; CRAM-MD5'" />
              </initialValue>
            </variable>
            <variable name="auth_names_tls">
              <type>
                <string />
              </type>
              <initialValue>
                <simpleValue value="' PLAIN; LOGIN; CRAM-MD5;STARTTLS'" />
              </initialValue>
            </variable>
            <variable name="auth_state">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="TON_WAIT">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="last_step">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="next_step">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="timeout2">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="timeout3">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="last_block">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="file_delete">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="esmtp">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="cnt1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="cnt2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="cnt3">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="cnt4">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="idx1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="idx2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="idx3">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="snd_idx">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="snd_enable">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="i1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="b64_done">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="b64_start">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="b64_max">
              <type>
                <UINT />
              </type>
              <initialValue>
                <simpleValue value="2880" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> short = 960 / long = 2880 </xhtml>
              </documentation>
            </variable>
            <variable name="b64_buf1">
              <type>
                <array>
                  <dimension lower="0" upper="47" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="b64_buf2">
              <type>
                <array>
                  <dimension lower="0" upper="63" />
                  <baseType>
                    <BYTE />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="b64_size1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="b64_size2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="b64_lf">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="b64_str1">
              <type>
                <string length="144" />
              </type>
            </variable>
            <variable name="b64_str2">
              <type>
                <string length="192" />
              </type>
            </variable>
            <variable name="md5_user">
              <type>
                <string length="64" />
              </type>
            </variable>
            <variable name="md5_password">
              <type>
                <string length="64" />
              </type>
            </variable>
            <variable name="md5_b64_ts">
              <type>
                <string length="64" />
              </type>
            </variable>
            <variable name="md5_auth_key">
              <type>
                <string length="192" />
              </type>
            </variable>
            <variable name="ip_c_red_disable">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> IP_CONTROL - Remote Disconnect Error unterdrücken </xhtml>
              </documentation>
            </variable>
            <variable name="ssl_mode">
              <type>
                <BYTE />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">SSL/TLS Mode -   0 = off / 1 = SSL / 2 = TLS</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE step OF

00:
	IF ACTIVATE AND NOT activate_last THEN
		TIMEOUT := MAX(T#10s,TIMEOUT);
		timeout2 := TIMEOUT + T#1s;
		timeout3 := TIMEOUT / 2;
		DONE := FALSE;
		ip_c_red_disable := FALSE;
		ERROR_C := DWORD#0;
		ERROR_T := BYTE#0;
		FSD.ERROR := BYTE#0;
		file_delete := FALSE;
		URL_DATA := STRING_TO_URL(STR:=SERVER,DEFAULT_PROTOCOL:='',DEFAULT_PATH:='/');
		idx1 := FIND(URL_DATA.USER,'%'); (* % Zeichen auf @ ändern *)
		IF idx1 &gt; 0 THEN
			URL_DATA.USER := REPLACE(URL_DATA.USER,'@',1,idx1);
		END_IF;
		esmtp := LEN(URL_DATA.PASSWORD) &gt; 0; (* SMTP oder ExtendedSMTP *)
		step := 10;
	END_IF;

10:
	IF DNS_CLIENT.DONE THEN
		step := 20;
	ELSIF DNS_CLIENT.ERROR &lt;&gt; DWORD#0 THEN
		ERROR_C := DNS_CLIENT.ERROR;
		ERROR_T := BYTE#1;
		step := 980;
	END_IF;

20:	(* SMTP Kommunikation einrichten *)
	IF FIND(';SSL;ssl;Ssl', URL_DATA.PROTOCOL) &gt; 1 THEN
		ssl_mode := BYTE#1;
		IP_C.C_PORT := SEL(URL_DATA.PORT = WORD#0,URL_DATA.PORT,WORD#465); (* Portnummer eintragen *)
		IP_C.MAILBOX[16] := BYTE#1; (* SSL Mode freigeben *)
	ELSIF FIND(';TLS;tls;Tls', URL_DATA.PROTOCOL) &gt; 1 THEN
		ssl_mode := BYTE#2;
		IP_C.C_PORT := SEL(URL_DATA.PORT = WORD#0,URL_DATA.PORT,WORD#587); (* Portnummer eintragen *)
		IP_C.MAILBOX[16] := BYTE#0; (* noch kein SSL Mode*)
	ELSE
		ssl_mode := BYTE#0;
		IP_C.C_PORT := SEL(URL_DATA.PORT = WORD#0,URL_DATA.PORT,WORD#25); (* Portnummer eintragen *)
		IP_C.MAILBOX[16] := BYTE#0; (* kein SSL Mode*)
	END_IF;

  	IP_C.C_IP := DNS_CLIENT.IP4; (* IP eintragen *)
  	IP_C.C_MODE := BYTE#0; (* Mode: TCP+ACTIV+PORT *)
  	IP_C.TIME_RESET := TRUE; (* Zeitueberwachung rücksetzen *)
  	IP_C.C_ENABLE := TRUE; (* Verbindungsaufbau freigeben *)
  	IP_C.R_OBSERVE := TRUE; (* Empfangsueberwachung *)
	IP_C.MAILBOX[3] := BYTE#0; (* IP Empfang wieder freigeben *)
	R_BUF.SIZE := UINT#0;
	snd_enable := TRUE; (* sofortiges senden erlauben *)
	snd_idx := 0;
	step := 30;

30:	
	IF rcv_state = 220 THEN (* 220 = Service ready *)
		IF esmtp THEN
			snd_text := 'EHLO OSCAT'; (* ExtendedSMTP *)

			str1:= SEL(ssl_mode = BYTE#2,auth_names,auth_names_tls);
			auth_state := BYTE#0;
			idx2 := 1900;

			next_step := 40;
		ELSE
			snd_text := 'HELO OSCAT'; (* SMTP *)
			next_step := 90;
		END_IF;
		snd_lf_cnt := 1;
	END_IF;

40:	
	IF rcv_state = 250 THEN
		(* 250 = Requested mail action okay, complete
			1. bei manchen Providern wird bei SSL kein AUTH verfahren ausgeben.
			2. Da die 250 xxx Meldungen vom manchen SMTP-Servern mit mehr als einem Telegramme versendet
		       werden muss alternativ über Zeitüberwachung eine SSL Sonderbehandlung durchgeführt werden *)
		IF ssl_mode &gt;= BYTE#1 AND TON_WAIT.ET &gt; T#1s THEN
			rcv_text := '250-AUTH LOGIN'; (* AUTH vortäuschen *)

        	(*####################  DEBUG-MESSAGE  ###################################*)
			(*IF _debug_enable THEN
				LOG_CL.NEW_MSG := 'SMTP: PROBLEM /rcv_text ~1';
				LOG_CL.PRINTF[1] := rcv_text;
				LOG_MSG();
			END_IF;*)
			(*########################################################################*)

		END_IF;

		IF FIND(rcv_text,'AUTH') &gt; 0 THEN (* BUGFIX  !*)
			IP_C.MAILBOX[3] := BYTE#1; (* IP Empfang blockieren bis Daten überprüft wurden *)
			idx1 := 0;
			step := 50;
		END_IF;

	END_IF;

50:
	str2 := ELEMENT_GET(59, idx1, str1); (* Trennzeichen &gt;;&lt; *)

	(*####################  DEBUG-MESSAGE  ###################################*)
	(*IF _debug_enable THEN
		LOG_CL.NEW_MSG := 'ST s1&gt;~1&lt; s2&gt;~2&lt; i1&gt;~2&lt; ~3';
		LOG_CL.PRINTF[1] := str1;
		LOG_CL.PRINTF[2] := str2;
		LOG_CL.PRINTF[3] := INT_TO_STRING(idx1);
		LOG_CL.PRINTF[4] := rcv_text;
		LOG_MSG();
	END_IF;*)
	(*########################################################################*)

	IF LEN(str2) &gt; 0 THEN
		IF FIND(rcv_text,str2) &gt; 0 THEN
			auth_state := OSCAT_BASIC.BIT_LOAD_B(auth_state, TRUE, idx1);
			str3 := str2; (* aktuellen AUTH-Type Namen sichern *)
			idx2 := 1000 + (idx1 * 100); (* Schritt berechnen *)
		END_IF;
		idx1 := idx1 + 1;
	ELSE
		IF auth_state &lt;&gt; BYTE#0 THEN (* AUTH-Type gefunden *)
			IP_C.MAILBOX[3] := BYTE#0; (* IP Empfang wieder freigeben *)
			(* mit den jeweiligen Authentifizierung Schritten fortfahren:
			   1000 = PLAIN / 1100 = LOGIN / 1200 = CRAM-MD5 / 1300 TLS *)
			step := idx2;
		ELSE
			idx1 := 0;
			rcv_text := '';
			IP_C.MAILBOX[3] := BYTE#0; (* IP Empfang wieder freigeben *)
			step := 40; (* warten auf nächste 250 auth meldung *)
		END_IF;
	END_IF;

	(*####################  DEBUG-MESSAGE  ###################################*)
	(*IF _debug_enable THEN
		LOG_CL.NEW_MSG := 'SMTP: /auth ~1 /idx1 ~2 /idx2 ~3 /str3 ~4 /LEN ~5 /step ~6 /str1 ~7';
		LOG_CL.PRINTF[1] := BYTE_TO_STRING(auth_state);
		LOG_CL.PRINTF[2] := INT_TO_STRING(idx1);
		LOG_CL.PRINTF[3] := INT_TO_STRING(idx2);
		LOG_CL.PRINTF[4] := str3;
		LOG_CL.PRINTF[5] := INT_TO_STRING(LEN(str2));
		LOG_CL.PRINTF[6] := INT_TO_STRING(step);
		LOG_CL.PRINTF[7] := str1;
		LOG_MSG();
	END_IF;*)
	(*########################################################################*)

 (* ++++++++++++++++++++++++++++++++++++++++++++++++++++++*)

90:
	IF rcv_state = 235 OR rcv_state = 250 THEN (* 235 = Authentication successful / 250 Requested mail action okay *)
		str2 := MAILFROM;
		str1 := ELEMENT_GET(59, 0, str2);(* MAILFROM lesen , Trennzeichen &gt;;&lt; *)
		snd_text := INSERT('MAIL FROM: &lt;&gt;', str1, 12);
		str3 := REPLACE(snd_text, 'From', 9, 1); (* 'MAIL FROM' durch "From" ersetzen und zwischenspeichern *)
		next_step := 95;
		cnt1 := ELEMENT_COUNT(35, MAILTO); (* Trennzeichen &gt;#&lt; , Anzahl der Blöcke bestimmen *)
		cnt2 := 0;
	END_IF;

95:	
	IF rcv_state = 250 THEN (* 250 = Requested mail action okay *)
		IF cnt2 &lt; cnt1 THEN
			str1 := ELEMENT_GET(35, cnt2, MAILTO);(* Trennzeichen &gt;#&lt; *)
			cnt3 := ELEMENT_COUNT(59, str1); (* Trennzeichen &gt;;&lt; , Anzahl der Sub-Blöcke bestimmen *)
			cnt4 := 0;
			cnt2 := cnt2 + 1;
			step := 100; (* Blockinhalt auswerten *)
		ELSE
			step := 110; (* alle Blöcke bearbeitet *)
		END_IF;
	END_IF;

100:
	IF rcv_state = 250 THEN (* 250 = Requested mail action okay *)
		IF cnt4 &lt; cnt3 THEN
			str2 := ELEMENT_GET(59, cnt4, str1); (* Trennzeichen &gt;;&lt; *)
			snd_text := INSERT('RCPT TO: &lt;&gt;', str2, 10);
			cnt4 := cnt4 + 1;
			next_step := 100;
		ELSE
			step := 95;
		END_IF;
	END_IF;

110:
	IF rcv_state = 250 THEN (* 250 = Requested mail action okay *)
		snd_text := 'DATA';
		next_step := 120;
	END_IF;

120:
	IF rcv_state = 354 THEN (* 354 = Start mail input; end with. *)
		snd_enable := FALSE;
		str2 := MAILFROM;
		str1 := ELEMENT_GET(59, 1, str2);(* Angezeigter Name lesen , Trennzeichen &gt;;&lt; *)
		IF LEN(str1) &gt; 0 THEN
			str2 := INSERT('"" ', str1, 1);
			snd_text := INSERT(str3, str2, 6);
		ELSE
			snd_text := str3;
		END_IF;
		cnt2 := 0;
		cnt1 := MIN(2,cnt1); (* BlindCopy Block ausblenden *)
		step := 200;
	END_IF;

200:
	IF snd_step = 0 THEN
		IF cnt2 &lt; cnt1 THEN
			str1 := ELEMENT_GET(35, cnt2, MAILTO);(* Trennzeichen &gt;#&lt; *)
			cnt3 := ELEMENT_COUNT(59, str1); (* Trennzeichen &gt;;&lt; , Anzahl der Sub-Blöcke bestimmen *)
			cnt4 := 0;
			cnt2 := cnt2 + 1;
			str3 := SEL(cnt2 = 1,'Cc: &lt;&gt;','To: &lt;&gt;');
			step := 205; (* Blockinhalt auswerten *)
		ELSE
			step := 210; (* alle Blöcke bearbeitet *)
		END_IF;
	END_IF;

205:
	IF snd_step = 0 THEN
		IF cnt4 &lt; cnt3 THEN
			str2 := ELEMENT_GET(59, cnt4, str1); (* Trennzeichen &gt;;&lt; *)
			snd_text := INSERT(str3, str2, 5);
			cnt4 := cnt4 + 1;
		ELSE
			step := 200;
		END_IF;
	END_IF;

210:
	IF snd_step = 0 THEN
		snd_text := CONCAT('Subject: ',SUBJECT);
		step := 220;
	END_IF;

220:
	IF snd_step = 0 THEN
		DTI := UDINT_TO_DT(DT_TO_UDINT(DTI) + INT_TO_UDINT(- DTI_OFFSET * 60)); (* Minuten-Offset auf Sekunden umrechnen und addieren *)
		IF esmtp THEN (* ESMTP Format &gt;Date: Thu, 21 May 1998 05:33:29 -0700&lt; *)
			str2 := ';Mon;Tue;Wed;Thu;Fri;Sat;Sun';
			str1 := ELEMENT_GET(59, OSCAT_BASIC.DAY_OF_WEEK(DT_TO_DATE(DTI)), str2);
			snd_text := CONCAT('Date: ',str1);
			str1 := OSCAT_BASIC.DT_TO_STRF(DTI, 0, ', #H #E #A #N:#R:#T +0000', 1);
			snd_text := CONCAT(snd_text,str1);
		ELSE (* SMTP Format &gt;Date: 21 May 98 05:33:29&lt; *)
			snd_text := OSCAT_BASIC.DT_TO_STRF(DTI, 0, 'Date: #G #E #B #N:#R:#T', 1);
		END_IF;
		step := 230;
	END_IF;

230:
	IF snd_step = 0 THEN
		snd_text := 'MIME-Version: 1.0';
		step := 250;
	END_IF;

250:
	IF snd_step = 0 THEN
		snd_text := 'Content-Type: multipart/mixed;boundary="x"';
		snd_lf_cnt := 2;
		step := 260;
	END_IF;

260:
	IF snd_step = 0 THEN
		snd_enable := TRUE;
		snd_text := 'This is a multi-part message in MIME format.';
		step := 270;
	END_IF;

270:
	IF snd_step = 0 THEN
		snd_enable := FALSE;
		snd_text := '--x';
		snd_lf_cnt := 1;
		step := 280;
	END_IF;

280:
	IF snd_step = 0 THEN
		snd_text := 'Content-Type: text/plain; format=flowed; charset="iso-8859-1";';
		snd_text := CONCAT(snd_text,' reply-type=original'); (* PCWORX kann nur konstanten mit max 80 zeichen *)
		step := 290;
	END_IF;

290:
	IF snd_step = 0 THEN
		snd_text := 'Content-Transfer-Encoding: 8bit';
		snd_lf_cnt := 2;
		step := 300;
	END_IF;

300:
	IF snd_step = 0 THEN
		snd_enable := TRUE;
		snd_text := BODY;
		snd_lf_cnt := 2;
		step := 310;
	END_IF;

310:
	IF snd_step = 0 THEN
		cnt1 := ELEMENT_COUNT(59, FILES) - 1; (* Anzahl der Dateien *)
		step := 400;
	END_IF;

(* +++++++++++++ File-Attachment ++++++++++++ *)
400:
	IF cnt1 &gt;= 0 THEN
		str1 := ELEMENT_GET(59, cnt1, FILES);
		FILE_PATH_SPLIT(FILENAME:=str1,X:=fpd); (* Datei-Path zerlegen *)
		IF fpd.FILENAME = '#DEL#' THEN
			file_delete := TRUE;
		ELSE
			step := 410;
		END_IF;
		cnt1 := cnt1 - 1;
	ELSE
		step := 800;
	END_IF;

410:
	IF snd_step = 0 THEN
		snd_enable := FALSE;
		snd_text := '--x';
		snd_lf_cnt := 1;
		step := 420;
	END_IF;

420:
	IF snd_step = 0 THEN
		snd_text := 'Content-Transfer-Encoding: BASE64';
		str2 := CONCAT(fpd.FILENAME,'"');
		step := 430;
	END_IF;

430:
	IF snd_step = 0 THEN
		snd_text := CONCAT('Content-Type: application/octet-stream; name="',str2);
		step := 440;
	END_IF;

440:
	IF snd_step = 0 THEN
		snd_enable := TRUE;
		snd_text := CONCAT('Content-Disposition: attachment; filename="',str2);
		snd_lf_cnt := 2;
		step := 450;
	END_IF;

450:
	IF snd_step = 0 THEN
		FSD.FILENAME := str1; (* Dateiname *)
		FSD.OFFSET := UDINT#0; (* Start bei Dateianfang *)
		step := 460;
	END_IF;

460:
	FSD.MODE := BYTE#1; (* vorhandene Datei zum lesen öffnen *)
	F_BUF.SIZE := b64_max; (* maximale länge einlesen *)
	idx1 := 0;
	idx2 := 0;
	step := 470;

470:
	IF FSD.MODE = BYTE#0 AND FSD.ERROR = BYTE#0 THEN
		last_block := FSD.FILE_SIZE = FSD.OFFSET;
		b64_size1 := MIN(48,UINT_TO_INT(F_BUF.SIZE) - idx1);
		IF b64_size1 &gt; 0 THEN
			idx3 := b64_size1 - 1;
			FOR i1 := 0 TO idx3 DO (* daten in BASE64 buffer kopieren *)
				b64_buf1[i1] := F_BUF.BUFFER[idx1];
				idx1 := idx1 + 1;
			END_FOR;
			BASE64_ENCODE_STREAM( SIZE1:= b64_size1, BUF1:= b64_buf1, BUF2:= b64_buf2, SIZE2=&gt; b64_size2); (* BASE64 Kodierung *)
			idx3 := b64_size2 - 1;
			FOR i1 := 0 TO idx3 DO (* Daten aus BASE64 buffer kopieren *)
				S_BUF.BUFFER[idx2] := b64_buf2[i1];
				idx2 := idx2 + 1;
			END_FOR;
			b64_lf := TRUE;
			(*####################  DEBUG-MESSAGE  ###################################*)
			(*IF _debug_enable THEN
				LOG_CL.NEW_MSG := 'B64: FILE ~1 /SIZE ~2 /OFF ~3 /BSIZE ~4 /idx1 ~5 /idx2 ~6';
				LOG_CL.PRINTF[1] := FSD.FILENAME;
				LOG_CL.PRINTF[2] := UDINT_TO_STRING(FSD.FILE_SIZE);
				LOG_CL.PRINTF[3] := UDINT_TO_STRING(FSD.OFFSET);
				LOG_CL.PRINTF[4] := INT_TO_STRING(b64_size1);
				LOG_CL.PRINTF[5] := INT_TO_STRING(idx1);
				LOG_CL.PRINTF[6] := INT_TO_STRING(idx2);
				LOG_MSG();
			END_IF;*)
			(*########################################################################*)
		ELSE
			b64_lf := last_block;
			step := 480; (* block beendet  *)
		END_IF;
		IF b64_lf THEN
			S_BUF.BUFFER[idx2] := BYTE#16#0D;
			idx2 := idx2 + 1;
			S_BUF.BUFFER[idx2] := BYTE#16#0A;
			idx2 := idx2 + 1;
		END_IF;
		(*####################  DEBUG-MESSAGE  ###################################*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'B64: exit ~1 /SIZE ~2 /OFF ~3 /eof ~4 /lf_cnt ~5';
			LOG_CL.PRINTF[1] := FSD.FILENAME;
			LOG_CL.PRINTF[2] := UDINT_TO_STRING(FSD.FILE_SIZE);
			LOG_CL.PRINTF[3] := UDINT_TO_STRING(FSD.OFFSET);
			LOG_CL.PRINTF[4] := BOOL_TO_STRING(last_block);
			LOG_CL.PRINTF[5] := INT_TO_STRING(snd_lf_cnt);
			LOG_MSG();
		END_IF;*)
		(*########################################################################*)
	END_IF;

480:
	S_BUF.SIZE := INT_TO_UINT(idx2); (* Daten senden *)
	(*####################  DEBUG-MESSAGE  ###################################*)
	(*IF _debug_enable THEN
		LOG_CL.NEW_MSG := 'B64: tcp_send ~1';
		LOG_CL.PRINTF[1] := INT_TO_STRING(idx2);
		LOG_MSG();
	END_IF;*)
	(*########################################################################*)
	step := 490;

490:
	IF S_BUF.SIZE = UINT#0 THEN (* warten bis alle daten gesendet sind *)
		step := SEL(last_block ,460,400);
	END_IF;

(* ++++++++++++++++++++++++++++++++++++++++ *)

800:
	IF snd_step = 0 THEN
		snd_enable := FALSE;
		snd_text := '--x--';
		snd_lf_cnt := 2;
		step := 810;
	END_IF;

810:
	IF snd_step = 0 THEN
		snd_enable := TRUE;
		snd_text := '.';
		snd_lf_cnt := 1;
		step := 820;
	END_IF;

820:
	IF rcv_state = 250 THEN (* 250 = Requested mail action okay *)
		snd_text := 'QUIT';
		ip_c_red_disable := TRUE;
		next_step := 830;
	END_IF;

830:
	IF rcv_state = 221  OR TON_WAIT.ET &gt; timeout3 THEN (* 221 = Service closing transmission channel *)
		step := 900;
	END_IF;

(* ================================================== *)

900:
	IF FILE_DELETE THEN (* Dateien nach transfer löschen *)
		cnt1 := ELEMENT_COUNT(59, FILES) - 1; (* Trennzeichen &gt;;&lt; , Anzahl der Dateien *)
		step := 910;
	ELSE
		step := 950;
	END_IF;

910:
	IF FSD.MODE = BYTE#0 AND FSD.ERROR = BYTE#0 THEN
		IF cnt1 &gt;= 0 THEN
			str1 := ELEMENT_GET(59, cnt1, FILES); (* Trennzeichen &gt;;&lt; *)
			IF str1 &lt;&gt; '#DEL#' THEN
				FSD.FILENAME := str1;
				FSD.MODE := BYTE#4; (* File Remove *)
			END_IF;
			cnt1 := cnt1 - 1;
		ELSE
			step := 950;
		END_IF;
	END_IF;

950:
	DONE := TRUE;
	step := 980;

980:
	IP_C.C_ENABLE := FALSE; (* SMTP Steuerkanal schliessen *)
	S_BUF.SIZE := UINT#0;
	R_BUF.SIZE := UINT#0;
	IP_C.MAILBOX[3] := BYTE#0; (* IP Empfang wieder freigeben *)
	snd_step := 0;
	next_step := 0;
	FSD.MODE := BYTE#5; (* Datei schliessen *)
	step := 990;

990:
	IF IP_C.C_STATE = BYTE#0 AND FSD.FILE_OPEN = FALSE THEN
		step := 0;
	END_IF;

(*  +++++++++++++++++ Authentifizierung +++++++++++++++++ *)

(* PLAIN ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *)

1000:
	snd_text := CONCAT('AUTH',str3);
	snd_lf_cnt := 1;
 	step := 1010;

1010:
	IF rcv_state = 334 THEN (* 334 = Authentifizierung  *)
		cnt1 := LEN(URL_DATA.USER);
		cnt2 := LEN(URL_DATA.PASSWORD);
		IF cnt1 + cnt2 &lt;= 46 THEN (* USER + PASSWORD dürfen zusammen maximal 46 Zeichen haben *)
			b64_buf1[0] := BYTE#0;
			FOR i1 := 1 TO cnt1 DO
				b64_buf1[i1] := OSCAT_BASIC.CODE(URL_DATA.USER, i1);
			END_FOR;
			b64_size1 := cnt1 + 1;
			b64_buf1[b64_size1] := BYTE#0;
			b64_size1 := b64_size1 + 1;
			FOR i1 := 1 TO cnt2 DO
				b64_buf1[b64_size1] := OSCAT_BASIC.CODE(URL_DATA.PASSWORD, i1);
				b64_size1 := b64_size1 + 1;
			END_FOR;
			BASE64_ENCODE_STREAM( SIZE1:= b64_size1, BUF1:= b64_buf1, BUF2:= b64_buf2, SIZE2=&gt; b64_size2); (* BASE64 Kodierung *)
			idx1 := b64_size2 - 1;
			FOR i1 := 0 TO idx1 DO
				S_BUF.BUFFER[i1] := b64_buf2[i1];
			END_FOR;
			S_BUF.BUFFER[b64_size2] := BYTE#16#0D;
			b64_size2 := b64_size2 + 1;
			S_BUF.BUFFER[b64_size2] := BYTE#16#0A;
			b64_size2 := b64_size2 + 1;
			S_BUF.SIZE := INT_TO_UINT(b64_size2);
			rcv_state := 0;
		END_IF;
		step := 90;
	END_IF;

(* LOGIN ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *)

1100:
	snd_text := CONCAT('AUTH',str3);
	snd_lf_cnt := 1;
 	step := 1110;

1110:
	IF rcv_state = 334 THEN (* 334 = Authentifizierung  *)
		b64_str1 := URL_DATA.USER;
		b64_start := TRUE; (* BASE64 kodierung von Username *)
		step := 1120;
	END_IF;

1120:
	IF b64_start AND b64_done THEN
		b64_start := FALSE;
		snd_text := b64_str2;
		next_step := 1130;
	END_IF;

1130:
	IF rcv_state = 334 THEN (* 334 = Password:  *)
		b64_str1 := URL_DATA.PASSWORD;
		b64_start := TRUE; (* BASE64 kodierung von Password *)
		step := 1140;
	END_IF;

1140:
	IF b64_start AND b64_done THEN
		b64_start := FALSE;
		snd_text := b64_str2;
		next_step := 90;
	END_IF;

(* CRAM-MD5  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
(Challenge-Response Authentication Mechanism, Message Digest 5) Authentifizierung auf Basis von MD5-HMAC-Algorithmus. *)

1200:
	snd_text := CONCAT('AUTH',str3);
	snd_lf_cnt := 1;
 	step := 1210;

1210:
	IF rcv_state = 334 THEN (* 334 = Authentifizierung  *)
		md5_b64_ts := RIGHT(rcv_text,LEN(rcv_text) - 4);
		md5_user := URL_DATA.USER;
		md5_password := URL_DATA.PASSWORD;
		MD5_RUN := TRUE;
		step := 1220;
	END_IF;

1220:
	MD5_CRAM_AUTH(RUN:=MD5_RUN,USERNAME:=md5_user,PASSWORD:=md5_password,B64_TS:=md5_b64_ts,AUTH_KEY:=md5_auth_key);
	IF NOT MD5_RUN THEN
		snd_text := md5_auth_key;
		step := 90;
	END_IF;

(* STARTTLS  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *)

1300:
	snd_text := 'STARTTLS';
	snd_lf_cnt := 1;
 	step := 1310;

1310:
	IF rcv_state = 220 THEN (* 220 = Service ready - Ready to start TLS *)
		IP_C.MAILBOX[16] := BYTE#1; (* SSL/TLS aktivieren *)
		step := 1320;
	END_IF;

1320:
	IF IP_C.MAILBOX[16] = BYTE#2 THEN (* warten bis SSL/TLS aktiviert wurde *)
		step := 30; (* ganzer Ablauf von vorne beginnen *)
	END_IF;

(* keine Authentifizierung gefunden +++++++++++++++++++++++++++++++ *)
1900: ; (* Auf Laufzeitfehler warten *)

END_CASE;
(* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *)
IF step &gt;= 30 THEN
	IF R_BUF.SIZE &gt; UINT#0 THEN (* Daten wurden empfangen ? *)
		idx1 := UINT_TO_INT(R_BUF.SIZE);
		REPEAT (* zeilenterminierung erkennen und echtes TEXT-Ende bestimmen *)
			idx1 := idx1 - 1;
		UNTIL idx1 = 0 OR R_BUF.BUFFER[idx1] &gt;= BYTE#32 (* TRUE = EXIT *)
		END_REPEAT;
		FOR i1 := 0 TO idx1 DO (* bei multiline alle CRLF durch &gt;^&lt; ersetzen *)
			IF R_BUF.BUFFER[i1] &lt; BYTE#32 THEN
				R_BUF.BUFFER[i1] := BYTE#94; (* &gt;^&lt; *)
			END_IF;
		END_FOR;
		rcv_text := OSCAT_BASIC.BUFFER_TO_STRING(PT:=ADR(R_BUF.BUFFER),SIZE:=idx1+1,START:=0,STOP:=OSCAT_BASIC.STRING_LENGTH-1);
		IF LEN(rcv_text) &gt;= 3 THEN (* Statuscode prüfen und auswerten *)
			rcv_s := LEFT(rcv_text,3);
			IF OSCAT_BASIC.IS_NUM(STR:=rcv_s) THEN (* enthält nur Zahlen ? *)
				rcv_state := STRING_TO_INT(rcv_s);
			END_IF;
			IP_C.R_OBSERVE := FALSE;
		END_IF;
		R_BUF.SIZE := UINT#0; (* daten löschen *)

		(*####################  DEBUG-MESSAGE  ###################################*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'RCV: &gt;~1&lt;';
			LOG_CL.PRINTF[1] := rcv_text;
			LOG_MSG();
		END_IF;*)
		(*########################################################################*)

	END_IF;
END_IF;

(* automatisches Datensenden *)

CASE snd_step OF

00:
	IF LEN(snd_text) &gt; 0 THEN

		(*####################  DEBUG-MESSAGE  ###################################*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'SND: &gt;~1&lt; /lf ~2';
			LOG_CL.PRINTF[1] := snd_text;
			LOG_CL.PRINTF[2] := INT_TO_STRING(snd_lf_cnt);
			LOG_MSG();
		END_IF;*)
		(*########################################################################*)

		OSCAT_BASIC._STRING_TO_BUFFER(str:=snd_text,pos:=snd_idx,pt:=ADR(S_BUF.BUFFER),size:=SIZEOF(S_BUF.BUFFER)); (* String in puffer kopieren *)
		snd_idx := snd_idx + LEN(snd_text);
		FOR i1 := 1 TO snd_lf_cnt DO
			S_BUF.BUFFER[snd_idx] := BYTE#16#0D;
			snd_idx := snd_idx + 1;
			S_BUF.BUFFER[snd_idx] := BYTE#16#0A;
			snd_idx := snd_idx + 1;
		END_FOR;
		snd_text := '';
		rcv_state := 9999; (* letzen SMTP Status löschen *)

		IF snd_enable THEN
			S_BUF.SIZE := INT_TO_UINT(snd_idx); (* Sendelänge eintragen *)
			R_BUF.SIZE := UINT#0; (* Empfangsbuffer rücksetzen *)
			IP_C.R_OBSERVE := step &lt;= 120 OR step &gt;= 820;
			snd_idx := 0;
			snd_step := 10;
		END_IF;
	END_IF;

10:
	IF S_BUF.SIZE = UINT#0 THEN (* warten bis alle daten gesendet sind *)
		IF next_step &lt;&gt; 0 THEN
			step := next_step;
			next_step := 0;
		END_IF;
		snd_step := 0;
	END_IF;

END_CASE;

(* Globale Fehlerbehandlung für Haupt-Routine *)
IF ERROR_T = BYTE#0 AND step &gt; 20 THEN (* noch kein Fehler gespeichert und Hauptroutine aktiv *)

	IF IP_C.ERROR &gt; DWORD#0 AND IP_C.C_ENABLE AND NOT IP_C.TIME_RESET THEN  (* IP Control 1 *)
		IF ip_c_red_disable = FALSE OR IP_C.ERROR &lt;&gt; DWORD#16#FD000000 THEN
			ERROR_C := IP_C.ERROR;
			ERROR_T := BYTE#2;
			step := 980;
		END_IF;
	END_IF;

	IF FSD.MODE = BYTE#0 THEN
		IF FSD.ERROR &gt; BYTE#0 THEN
			ERROR_C := BYTE_TO_DWORD(FSD.ERROR);
			ERROR_T := BYTE#4; (* Dateizugriff *)
			step := 980;
		END_IF;
	END_IF;
END_IF;

IF TON_WAIT.Q THEN (* Ablaufstörung - Schrittkette *)
	ERROR_C := SHL(INT_TO_DWORD(step),16) OR INT_TO_DWORD(rcv_state); (* aktuellen Schritt und letzten SMTP Status eintragen *)
	ERROR_T := BYTE#5;
	step := 980;
END_IF;

(* ######################################################## *)

DNS_CLIENT(IP_C:=IP_C, S_BUF:=S_BUF, R_BUF:=R_BUF, DOMAIN:=URL_DATA.DOMAIN, IP4_DNS:= DNS_IP4, ACTIVATE:=step=10); (* DNS-Client *)
IPC(IP:= DWORD#0, PORT:= WORD#0 , TIME_OUT:= TIMEOUT, IP_C:= IP_C, S_BUF:= S_BUF, R_BUF:= R_BUF); (* SMTP Steuerkanal *)
FS(FSD:=FSD,PT:=F_BUF); (* FILE_SERVER *)
BASE64_ENCODE_STR(RUN:= b64_start, STR1:= b64_str1, STR2:= b64_str2, DONE=&gt; b64_done); (* BASE64 kodierung *)

TON_WAIT(IN:=step = last_step AND step &gt; 0,PT:=timeout2);
last_step := step;
activate_last := ACTIVATE;
BUSY := step &lt;&gt; 0;

(* revision history
ks	01. jan. 2011	rev 1.0
	original version
ks	06. apr. 2011	rev 1.1
	list_len und list_get durch element_count und element_get ersetzt
ks	11. may 2011	rev 1.2
	ip_control - remote disconnect error ausblenden, und sonderbehandlung für pcworx
ks	30. may 2011	rev 1.3
	fehler bei receive-timeout
ks	05. may. 2012	rev 1.4
	FileServer AutoClose entfernt und Fehler im Alias Name korrigiert
ks	06. apr. 2013	rev 1.5
	Fehler bei Authorisierungsabfrage bei 1&amp;1 Provider behoben
ks	22. feb. 2016	rev 1.6
	integration SSL/TLS
ks	11. aug. 2016	rev 1.7
	bugfix: Find SSL/TLS String in URL_DATA.PROTOCOL
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>a9d368e5-be56-41e3-8d60-77c208c402be</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="SNTP_CLIENT" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> IP_Control Verwaltungsstruktur </xhtml>
              </documentation>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="IP4">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="ACTIVATE">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="ERROR">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="DONE_P">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="UDT">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="XMS">
              <type>
                <INT />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="IP_FIFO">
              <type>
                <derived name="IP_FIFO" />
              </type>
            </variable>
            <variable name="ip_state">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="ip_id">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="i">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="last">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="state">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="tx">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="activate_last">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ip4_stored">
              <type>
                <DWORD />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Domain Name System (query) *)
tx := OSCAT_BASIC.T_PLC_MS(); (* read system time *)

CASE state OF
00: (* auf positive Flanke SET warten *)
	DONE_P := FALSE;
	IF ACTIVATE AND NOT activate_last THEN
		ip4_stored := IP4; (* aktuelle IP4 speichern *)
		state := 10;
		ERROR := DWORD#0;
		ip_state := BYTE#1; (* Anmelden *)
		(*####################  DEBUG-MESSAGE  ###################################*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'SNTP: S00 START';
			LOG_MSG();
		END_IF;*)
		(*########################################################################*)
	END_IF;

10: (* Bei IP_Control anmelden und auf freigabe warten *)
	IF ip_state = BYTE#3 THEN

		S_BUF.BUFFER[00] := BYTE#16#1B;
		FOR i := 1 TO 47 DO
			S_BUF.BUFFER[i] := BYTE#16#00;
		END_FOR;

		last := tx; (* aktuellen time wert sichern *)
		state := 30;

		(* IP Datenverkehr einrichten *)
		IP_C.C_PORT := WORD#123; (* Portnummer eintragen *)
		IP_C.C_IP := ip4_stored; (* IP eintragen *)
		IP_C.C_MODE := BYTE#1; (* Mode: UDP+AKTIV+PORT+IP *)
		IP_C.C_ENABLE := TRUE; (* Verbindungsaufbau freigeben *)
		IP_C.TIME_RESET := TRUE; (* Zeitueberwachung rücksetzen *)
		IP_C.R_OBSERVE := TRUE; (* Datenempfang ueberwachen *)
		S_BUF.SIZE := UINT#48; (* Sendelänge eintragen *)
		R_BUF.SIZE := UINT#0; (* Empfangslänge rücksetzen *)
    		(*####################  DEBUG-MESSAGE  ###################################*)
    		(*IF _debug_enable THEN
      			LOG_CL.NEW_MSG := 'SNTP: S10 SEND';
      			LOG_MSG();
    		END_IF;*)
    		(*########################################################################*)
	END_IF;

30:
	IF IP_C.ERROR &lt;&gt; DWORD#00 THEN
		ERROR := IP_C.ERROR;
		S_BUF.SIZE := UINT#0;
		R_BUF.SIZE := UINT#0;
		state := 0;
    		(*####################  DEBUG-MESSAGE  ###################################*)
    		(*IF _debug_enable THEN
      			LOG_CL.NEW_MSG := 'SNTP: S30 ERROR ~1';
      			LOG_CL.PRINTF[1] := DWORD_TO_STRING(ERROR);
      			LOG_MSG();
    		END_IF;*)
    		(*########################################################################*)

	ELSIF S_BUF.SIZE = UINT#0 AND R_BUF.SIZE &gt;= UINT#48 THEN (* länge der empfangenen Daten prüfen *)

		(* Umrechnung SNTP Timestamp Base 1900-01-01 -&gt; Unix 1970-01-01 = +2208988800 sekunden*)
		UDT := DWORD_TO_DT(OSCAT_BASIC.DWORD_OF_BYTE(R_BUF.BUFFER[40],R_BUF.BUFFER[41],R_BUF.BUFFER[42],R_BUF.BUFFER[43]) - DWORD#2208988800);

		(* Original-Sekundenanteile sind als 32 Bit Fractal dargestellt *)
		(* ms nur mit veringerte Auflösung berechnen 1/65535 -&gt; Highword verwenden *)
		XMS := DWORD_TO_INT(SHR(DINT_TO_DWORD(WORD_TO_DINT(OSCAT_BASIC.WORD_OF_BYTE(R_BUF.BUFFER[44],R_BUF.BUFFER[45])) * DINT#1000),16));
		(* Zeitdifferenz (Laufzeitfehler) zwischen Send und Receive /2 teilen und addieren *)
		XMS := XMS + DWORD_TO_INT(SHR(tx - last,1));

		UDT := DWORD_TO_DT(DT_TO_DWORD(UDT) + (XMS / 1000)); (* sekundenanteile der Zeitdifferenz zu UDT aufrechnen *)
		XMS := XMS MOD 1000;  (* ms übernehmen *)
		state := 0;
		DONE_P := TRUE;
    		(*####################  DEBUG-MESSAGE  ###################################*)
    		(*IF _debug_enable THEN
        			LOG_CL.NEW_MSG := 'SNTP: S30 OK';
        			LOG_MSG();
    		END_IF;*)
    		(*########################################################################*)

	END_IF;

	IF state = 0 THEN
		IP_C.R_OBSERVE := FALSE; (* Datenempfang ueberwachen *)
		ip_state := BYTE#4;
	END_IF;

END_CASE;

activate_last := ACTIVATE; (* letzten Status sichern zur Flankenerkennung *)

(* IP_FIFO *)
IP_FIFO(FIFO:=IP_C.FIFO,STATE:=ip_state,ID:=ip_id);

(* revision history
ks	18. oct. 2008	rev 1.0
	original version

ks	20. oct. 2009	rev 1.1
	Networkbuffer und Buffer-funktionen auf Basis 0

*)

(***************************************************************************************)
(*               SNTP Datenstruktur
                                  1                   2                   3   
              0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 
             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Byte: 01-04  |LI | VN  |Mode |    Stratum    |     Poll      |   Precision   |
             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Byte: 05-08  |                          Root  Delay (32 Bit)                 |
             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Byte: 09-12  |                       Root  Dispersion (32 Bit)               |
             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Byte: 13-16  |                     Reference Identifier (32 Bit)             |
             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Byte: 17-24  |                    Reference Timestamp (64 Bit)               |
             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Byte: 25-32  |                    Originate Timestamp (64 Bit)               |
             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Byte: 33-40  |                     Receive Timestamp (64 Bit)                |
             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Byte: 41-48  |                     Transmit Timestamp (64 Bit)               |
             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Byte: 49-52  |                 Key Identifier (optional) (32 Bit)            |
             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Byte: 53-68  |                 Message Digest (optional) (128 Bit)           |
             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

*)

(*
Worldwide NTP-Server


NIST-Zeitserver
• time-a.nist.gov
129.6.15.28 
NIST, Gaithersburg, Maryland 
• time-a.nist.gov
129.6.15.28 
NIST, Gaithersburg, Maryland 
• time-a.timefreq.bldrdoc.gov
132.163.4.101 (Stand: 1. Dezember 1999)
NIST, Boulder, Colorado 
• time-b.timefreq.bldrdoc.gov
132.163.4.102 (Stand: 1. Dezember 1999)
NIST, Boulder, Colorado 
• time-c.timefreq.bldrdoc.gov
132.163.4.103 (Stand: 1. Dezember 1999)
NIST, Boulder, Colorado 
• utcnist.colorado.edu
128.138.140.44
University of Colorado, Boulder 
• time.nist.gov
192.43.244.18
NCAR, Boulder, Colorado 
• time-nw.nist.gov
131.107.1.10
Microsoft, Redmond, Washington 
• nist1.dc.certifiedtime.com
216.200.93.8
Abovnet, North Virginia 
• nist1.datum.com
209.0.72.7
Datum, San Jose, Kalifornien 
• nist1.nyc.certifiedtime.com
208.184.49.129 
Abovnet, New York City 
• nist1.sjc.certifiedtime.com
207.126.103.202
Abovnet, San Jose, Kalifornien 

Zeitserver der ersten Ebene
Sortiert nach Standort: 
Nordamerika
• Palo Alto, Kalifornien: Systems Research Center, Compaq Computer Corp.
204.123.2.72: usno.pa-x.dec.com; CNAME: navobs1.pa-x.dec.com
Servicebereich: US-Zeitzonen PST (Pacific Standard Time) und MST (Mountain Standard Time) 
• Marina del Rey, Kalifornien: USC Information Sciences Institute
128.9.176.30: timekeeper.isi.edu
Servicebereich: CalRen2- und Los Nettos-Bereich  
• Washington, DC: U.S. Naval Observatory
192.5.41.41: tock.usno.navy.mil 
192.5.41.40: tick.usno.navy.mil
Servicebereich: NSFNET 
• Ottawa, Ontario, Kanada: National Research Council of Canada
time.chu.nrc.ca
Servicebereich: Kanada 
• Raleigh, North Carolina: North Carolina State University
152.1.58.124: terrapin.csc.ncsu.edu
Servicebereich: Südosten der USA 
• Cambridge, Massachusetts: MIT Information Systems
18.72.0.3: bitsy.mit.edu 
Servicebereich: NSFNET- und NEARnet-Bereich 
• Cambridge, Massachusetts: MIT
18.26.4.105: bonehed.lcs.mit.edu
Servicebereich: Osten der USA 
• Palo Alto, Kalifornien: Internet Software Consortium
192.5.5.250: clock.isc.org
Servicebereich: BARRnet, Alternet-West und CIX-West 
• Cambridge, Massachusetts: Open Software Foundation
130.105.4.59: clock.osf.org
Servicebereich: NSFNET- und NEARnet-Bereich 
• Palo Alto, Kalifornien: ViaNet Communications
209.81.9.7: clock.via.net 
• Cleveland, Ohio: Lewis Research Center (NASA)
128.156.1.43: lerc-dns.lerc.nasa.gov
Servicebereich: NSFNET und OARNET 
• Colorado Springs, Colorado: Schriever AFB
204.34.198.40: navobs1.usnogps.navy.mil; CNAME: tick.usnogps.navy.mil 
204.34.198.41: navobs1.usnogps.navy.mil; CNAME: tock.usnogps.navy.mil 
Servicebereich: US-Zeitzonen PST (Pacific Standard Time) und MST (Mountain Standard Time) 
• St. Louis, Missouri: Washington University
128.252.19.1: navobs1.usnogps.navy.mil; CNAME: tick.wustl.edu 
Servicebereich: US-Zeitzone CST (Central Standard Time) 
• Research Triangle Park, North Carolina: MCNC
192.101.21.1: ncnoc.ncren.net
Servicebereich: NC-REN-Bereich (North Carolina Research and Education Network) 
• Cupertino, Kalifornien: HP
192.6.38.127: ntp-cup.external.hp.com
Servicebereich: USA Westküste 
• Newark, Delaware: Conectiv Communications
138.39.7.20: ntp1.delmarva.com
Servicebereich: Cable &amp; Wireless Network (früher MCInet) 
• University Park, Pennsylvania: Penn State University
128.118.46.3: otc1.psu.edu
Servicebereich: NSFNET, PREPNET und JvNCnet  

Europa
• Borowiec, Polen: Astrogeodynamical Observatory, Space Research Centre
150.254.183.15: vega.cbk.poznan.pl
Servicebereich: Polen und Europa 
• Stockholm, Schweden: Stupi AB
192.36.143.151: Time2.Stupi.SE
Servicebereich: Europa 
• Turin, Italien: IEN Galileo Ferraris
193.204.114.1: time.ien.it
Servicebereich: Italien und Europa 
• Zürich, Schweiz: Integrated Systems Laboratory , Eidgenössischen Technischen Hochschule Zürich 
129.132.2.21: swisstime.ethz.ch
Servicebereich: Schweiz und Europa 
• Turin, Italien: CSTV of National Research Council
150.145.33.1: tempo.cstv.to.cnr.it
Servicebereich: Italien und Europa 
• Erlangen, Deutschland: Universität Erlangen-Nürnberg
ntp0.fau.de; ntp1.fau.de; ntp2.fau.de; 
ntps1-0.uni-erlangen.de; ntps1-1.uni-erlangen.de; ntps1-2.uni-erlangen.de
Servicebereich: Deutschland und Europa 
• Berlin, Deutschland: Technische Universität Berlin
130.149.17.21: ntps1-0.cs.tu-berlin.de
130.149.17.8: ntps1-1.cs.tu-berlin.de
Servicebereich: Deutschland und Europa 
• Deutschland
131.173.17.7: ntps1-1.rz.Uni-Osnabrueck.DE
Servicebereich: Deutschland und Europa 
• Schweden
192.36.143.150: Time1.Stupi.SE
Servicebereich: SUnet und NORDUnet Schweden 

Fernost und pazifische Randgebiete
• Hong Kong: Chinesische Universität von Hong Kong. 
137.189.6.18: clock.cuhk.edu.hk
Servicebereich: Hong Kong (China) und Südostasien  
• Fukuoka, Japan: Universität Fukuoka
133.100.9.2: clock.nc.fukuoka-u.ac.jp
133.100.11.8: clock.tl.fukuoka-u.ac.jp
Servicebereich: Japan und pazifischer Raum  

Australien
• Melbourne, Australien: University of Melbourne
128.250.36.2: ntp.cs.mu.OZ.AU
Servicebereich: Australien und Neuseeland  

Zeitserver der zweiten Ebene
Nach geographischem Standort sortiert: 
Nordamerika
NTP-Zeitserver: • Quebec, Kanada: Canadian Meteorological Center
ntp1.cmc.ec.gc.ca; ntp2.cmc.ec.gc.ca 
Servicebereich: Ostkanada  
• Ontario, Kanada: National Research Council of Canada
time.chu.nrc.ca; time.nrc.ca
Servicebereich: Kanada 
• Saskatchewan, Kanada: University of Regina 
142.3.100.15: timelord.uregina.ca
Servicebereich: Kanada 
• Ontario, Kanada: University of Toronto
tick.utoronto.ca; tock.utoronto.ca
Servicebereich: Ostkanada  
• Mexiko: Audiotel-Büro 
ntp2a.audiotel.com.mx; ntp2c.audiotel.com.mx; ntp2b.audiotel.com.mx
Servicebereich: Avantel, MCINet und Mexiko 
• Santa Cruz, Kalifornien: Scruz-net, inc.
165.227.1.1: ns.scruz.net
Servicebereich: Westen der USA 
• San Diego, Kalifornien: UCSD Academic Computing Services/Network Operations
132.239.254.49: ntp.ucsd.edu
Servicebereich: CERFNET; NSFNET, SDSC-Bereich, und nahegelegene Bereiche 
• Quincy, Kalifornien 
ntp1.mainecoon.com; ntp2.mainecoon.com 
Servicebereich: Nordamerika 
• Newark, Delaware: University of Delaware
128.175.1.3: louie.udel.edu
Servicebereich: CAIRN, Abilene und vBNS  
• Atlanta, Georgia: CNSG
ntp.shorty.com
Servicebereich: Südwesten der USA  
• Kennesaw, Georgia: PeachNet 
rolex.peachnet.edu; timex.peachnet.edu
Servicebereich: PeachNet (Georgia) und Südwesten der USA  
• Urbana-Champaign, Illinois: University of Illinois
ntp-0.cso.uiuc.edu; ntp-1.cso.uiuc.edu; ntp-2.cso.uiuc.edu
Servicebereich: CICNET, Mittlerer Westen und NCSA-Bereich  
• Chicago, Illinois: Argonne National Laboratory 
ntp-1.mcs.anl.gov; ntp-2.mcs.anl.gov
Servicebereich: NSF/ANSNet, CICNet, NetIllinois und ESNet  
• West Lafayette, Indiana: Purdue University
gilbreth.ecn.purdue.edu; harbor.ecn.purdue.edu; molecule.ecn.purdue.edu 
Servicebereich: NSFNET- und CICNET-Bereich  
• Manhattan, Kansas: KansasNet OnLine Services
199.240.130.1: ntp1.kansas.net
199.240.130.12: ntp2.kansas.net
Servicebereich: Zentral-USA und Great Plains  
• Boston, Massachusetts: UMass-Boston CS dept.
158.121.104.4: timeserver.cs.umb.edu
Servicebereich: Neuengland  
• Minneapolis/St Paul, Minnesota: University of Minnesota
ns.nts.umn.edu; nss.nts.umn.edu
Servicebereich: CICNET-Bereich  
• Columbia, Missouri: University of Missouri-Columbia
128.206.206.12: everest.cclabs.missouri.edu
Servicebereich: MOREnet  
• Omaha, Nebraska: Radiks Internet Access
205.138.126.83: allison.radiks.net
Servicebereich: Mittlerer Westen, USA  
• Las Vegas, Nevada: University of Nevada System Computing Services
131.216.1.101: cuckoo.nevada.edu 
Servicebereich: NevadaNet, NSFNET und SDSC-Bereich  
• Las Vegas, Nevada: UNLV College of Engineering
tick.cs.unlv.edu; tock.cs.unlv.edu
Servicebereich: Sprintnet  
• New York City, New York: Columbia University
ntp.ctr.columbia.edu 
Servicebereich: Sprintlink und NYSERnet  
• Ithaca, New York: Cornell University 
192.35.82.50: ntp0.cornell.edu
Servicebereich: NSFNET und NYSER-Bereich  
• New York, New York: Morningside Campus, Columbia University
sundial.columbia.edu
Servicebereich: NYSERnet  
• New York City, New York: Columbia University Computer Science Department
timex.cs.columbia.edu 
Servicebereich: PSINET; NSFNET, und NYSER-Bereich  
• Norman, Oklahoma: University of Oklahoma
129.15.22.8: constellation.ecn.uoknor.edu 
Servicebereich: Midnet  
• Coos Bay, Oregon: Koala Computers
207.48.109.6: tick.koalas.com
Servicebereich: Nordwesten der USA  
• University Park, Pennsylvania: Penn State University
128.118.25.3: clock.psu.edu
Servicebereich: Internet2, vBNS, CERFnet(AT&amp;T IP Services), PSC/NCNE und CASC 
• Pittsburgh, Pennsylvania: Pittsburgh Supercomputing Center
128.182.58.100: fuzz.psc.edu
Servicebereich: NSFNET und PSC-Bereich  
• Pittsburgh, Pennsylvania: Carnegie Mellon Electrical and Computer Engineering 
ntp-1.ece.cmu.edu; ntp-2.ece.cmu.edu 
Servicebereich: PREPNET und PSC-Bereich  
• Dallas, Texas: Cox School of Business, Southern Methodist University
129.119.80.126: ntp.cox.smu.edu 
Servicebereich: NSFNET und SESQUI-Bereich  
• Hughes Springs, Texas: First National Bank
209.144.20.76: ntp.fnbhs.com
Servicebereich: Nordosten Texas  
• Houston, Texas: Baylor College of Medicine
128.249.1.10: ntp.tmc.edu 
Servicebereich: NSFNET und SESQUI-Bereich  
• College Station, Texas: Texas A&amp;M University
165.91.52.110: ntp5.tamu.edu
Servicebereich: NSFNET, SESQUI-Bereich, THEnet und TAMUSDSN 
• Plano, Texas: Greyware Automation Products
tick.greyware.com; tock.greyware.com
Servicebereich: Südzentral-USA  
• Blacksburg, Virginia: Virginia Tech Computing Center
ntp-1.vt.edu; ntp-2.vt.edu
Servicebereich: Südwesten der USA  
• Arlington, Virginia: Center for Seismic Studies
140.162.1.3: ntp.cmr.gov
Servicebereich: NSFNET und SURA-Bereich  
• Richland, Washington: Washington State University 
192.31.216.30: clock.tricity.wsu.edu
Servicebereich: NSFNET und NorthWestNet  
• Washington, USA: Mill Creek
time.ultimeth.net
Servicebereich: Nordwesten der USA  
• Wisconsin, USA: Computer Science Department, University of Wisconsin-Madison
ntp1.cs.wisc.edu; ntp2.cs.wisc.edu; ntp3.cs.wisc.edu
Servicebereich: USA und jeder andere  

Südamerika
• Buenos Aires, Argentinien: Network Access Point
200.49.40.1: CNAME: tick.nap.com.ar
200.49.32.1: CNAME: tock.nap.com.ar
Servicebereich: Argentinien 
• Buenos Aires, Argentinien: Sinectis S.A.
time.sinectis.com.ar 
Servicebereich: Argentinien 
• Brasilien: Brazilian Research Network
200.144.121.33: ntp.cais.rnp.br 
Servicebereich: Brasilien 
• Venezuela: VELUG, Grupo de Usuarios Linux de Venezuela
150.185.192.250: ntp.linux.org.ve
Servicebereich: Arica  

Europa
• Zürich, Schweiz: Eidgenössischen Technischen Hochschule Zürich
129.132.98.11: bernina.ethz.ch
Servicebereich: Schweiz und Europa  
• Standort: Kopenhagen, Dänemark, Europa 
clock.netcetera.dk; clock2.netcetera.dk 
Servicebereich: Dänemark, Skandinavien und Nordeuropa  
• Spanien: Altea 
slug.ctv.es
Servicebereich: Spanien  
• Pieksamaki, Finnland: Keski-Savon Oppimiskeskus
tick.keso.fi; tock.keso.fi
Servicebereich: Finnland  
• Meudon, Frankreich: Observatoire de Paris-Meudon 
ntp.obspm.fr 
Servicebereich: Frankreich und Europa  
• Lyon, Frankreich: CISM 
ntp.univ-lyon1.fr 
Servicebereich: Frankreich, Schweiz, Italien und Europa  
• Paris, Frankreich: VIA, Ecole Centrale
138.195.130.70: ntp.via.ecp.fr
Servicebereich: Frankreich und Europa  
• Budapest, Ungarn: KFKI Research Institute for Particle and Nuclear Physics
148.6.0.1: time.kfki.hu
Servicebereich: HUNGARNET  
• Italien: Net4u Srl, Vercelli, Italien
195.32.52.129: ntps.net4u.it
Servicebereich: Italien  
• Oslo, Norwegen: Universität Oslo
129.240.64.3: fartein.ifi.uio.no 
Servicebereich: NORDUnet  
• Oslo, Norwegen: Alcanet International
time.alcanet.no
Servicebereich: Europa 
• Krakau, Polen: Academic Computer Centre 
149.156.4.11: info.cyf-kr.edu.pl
Servicebereich: Polen und Europa  
• Lund, Schweden: Lund Institute of Technology
130.235.20.3: ntp.lth.se 
Servicebereich: Schweden und NORDUnet 
• Ljubljana, Slowenien: Institute of Biophysics, University of Ljubljana
biofiz.mf.uni-lj.si 193.2.69.11
Servicebereich: Slowenien und Europa  
• Ljubljana, Slowenien: Hydrometeorological Institute of Slovenia
hmljhp.rzs-hm.si
Servicebereich: Slowenien und Europa  
• Ljubljana, Slowenien: Academic and Research Network of Slovenia
ntp1.arnes.si; ntp2.arnes.si
Servicebereich: Slowenien und Europa  
• Ljubljana, Slowenien: J. Stefan Institute
time.ijs.si
Servicebereich: Slowenien und Europa  

Britische Inseln
• Dublin, Irland: School of Mathematics, Trinity College 
ntp.cs.tcd.ie; ntp.maths.tcd.ie; ntp.tcd.ie
Servicebereich: Irland und Großbritannien 
• Glasgow, Schottland: Strathclyde University 
ntp.cs.strath.ac.uk 
Servicebereich: Großbritannien, Europa und andere 
• Cambridge, Großbritannien
ntp0.uk.uu.net; ntp1.uk.uu.net; 
ntp2.uk.uu.net 
Servicebereich: UUNET (in Großbritannien früher auch als PIPEX bekannt) und Großbritannien.  
• Manchester, England: University of Manchester
ntp2a.mcc.ac.uk; ntp2b.mcc.ac.uk;
ntp2c.mcc.ac.uk; ntp2d.mcc.ac.uk 
Servicebereich: Großbritannien  
• Buckinghamshire, Großbritannien: Wibble U.K., Aylesbury
tick.tanac.net
Servicebereich: Großbritannien  

Asien
• Moskau, Russland: Landau Institute for Theoretical Physics
193.233.9.7: ntp.landau.ac.ru
Servicebereich: Russland  
• Russland: Pushchino (bei Moskau)
194.149.67.130: ntp.psn.ru
Servicebereich: Russland 
• Chernogolovka, Russland: Chernogolovka Scientific Center (bei Moskau)
193.233.46.10: sign.chg.ru
Servicebereich: Russland  

Fernost und pazifische Randgebiete
• Tokyo, Japan: Cyber Fleet, Inc.
203.139.30.195: ntp.cyber-fleet.net
Servicebereich: Japan und Ostasien  
• Seoul, Korea: Inet, Inc.
time.nuri.net
Servicebereich: Korea, Japan, Hong Kong und Ostasien  
• Hamilton, Neuseeland: Universität Waikato
truechimer.waikato.ac.nz; truechimer1.waikato.ac.nz; 
truechimer2.waikato.ac.nz; truechimer3.waikato.ac.nz
Servicebereich: Neuseeland  
• Singapur und Philippinen: 
ntp.shim.org 
Servicebereich: Singapur  

Afrika
• Lagos, Nigeria: Supernet300
ntp.supernet300.com
Servicebereich: Westafrika (hauptsächlich nigerischer NITEL-Backbone)  
• Pietermaritzburg, Südafrika: Natal University
143.128.82.200: ntp.cs.unp.ac.za
Servicebereich: Südafrika  

Australien
• Adelaide, Südaustralien: University of Adelaide
129.127.28.4: augean.eleceng.adelaide.edu.au
129.127.40.3: ntp.adelaide.edu.au
203.21.37.18: ntp.saard.net
Servicebereich: AARNet  
• Carlton, Victoria, Australien: eSec Limited
203.21.84.4: time.esec.com.au  

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b377231c-0c67-47af-85a7-120af76a3c87</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="SNTP_SERVER" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> IP_Control Verwaltungsstruktur </xhtml>
              </documentation>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="ENABLE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="STRATUM">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="BYTE#1" />
              </initialValue>
            </variable>
            <variable name="UDT">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="XMS">
              <type>
                <INT />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="IP_FIFO">
              <type>
                <derived name="IP_FIFO" />
              </type>
            </variable>
            <variable name="ip_state">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="ip_id">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="i2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="i">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="timestamp_int">
              <type>
                <DWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Timestamp integer part </xhtml>
              </documentation>
            </variable>
            <variable name="timestamp_sek">
              <type>
                <DWORD />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Timestamp fraction part (HIGH_WORD) </xhtml>
              </documentation>
            </variable>
            <variable name="ts_b">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="state">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="tx">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="t">
              <type>
                <derived name="TON" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Domain Name System (query) *)
tx := OSCAT_BASIC.T_PLC_MS(); (* read system time *)

CASE state OF

00: (* Warten auf Freigabe *)
	IF ENABLE THEN
		state := 10;
		ip_state := BYTE#1; (* Anmelden *)
    		(*####################  DEBUG-MESSAGE  ###################################*)
    		(*IF _debug_enable THEN
      			LOG_CL.NEW_MSG := 'SNTP_SERVER: S00 START';
      			LOG_MSG();
    		END_IF;*)
    		(*########################################################################*)
	END_IF;

10: (* Bei IP_Control anmelden und auf freigabe warten *)
	IF ip_state = BYTE#3 THEN
		(* IP Datenverkehr einrichten *)
		IP_C.C_PORT := WORD#123; (* Portnummer eintragen *)
		IP_C.C_IP := DWORD#00; (* IP eintragen *)
		IP_C.C_MODE := BYTE#5; (* Mode: UDP+PASSIV+PORT *)
		IP_C.C_ENABLE := TRUE; (* Verbindungsaufbau freigeben *)
		IP_C.TIME_RESET := TRUE; (* Zeitueberwachung rücksetzen *)
		IP_C.R_OBSERVE := FALSE; (* Datenempfang ueberwachen *)
		S_BUF.SIZE := UINT#0; (* Sendelänge eintragen *)
		R_BUF.SIZE := UINT#0; (* Empfangslänge rücksetzen *)
		state := 20;
    		(*####################  DEBUG-MESSAGE  ###################################*)
    		(*IF _debug_enable THEN
      			LOG_CL.NEW_MSG := 'SNTP_SERVER: S10 INIT';
      			LOG_MSG();
    		END_IF;*)
    		(*########################################################################*)
	END_IF;
20:
	IF R_BUF.SIZE &gt; UINT#0 THEN
		state := 20;
    		(*####################  DEBUG-MESSAGE  ###################################*)
    		(*IF _debug_enable THEN
      			LOG_CL.NEW_MSG := 'SNTP_SERVER: S20 REQUEST - Size: ~1';
      			LOG_CL.PRINTF[1] := UINT_TO_STRING(R_BUF.SIZE);
      			LOG_MSG();
    		END_IF;*)
    		(*########################################################################*)
		(* empfangenes Telegramm mit 00 auffüllen , wenn zu kurz ! und Sendebuffer mit 00 vorbelegen *)
		FOR i := 0 TO 47 DO
			IF INT_TO_UINT(i) &gt; R_BUF.SIZE - 1 THEN
				R_BUF.BUFFER[i] := BYTE#00;
			END_IF;
			S_BUF.BUFFER[i] := BYTE#00;
		END_FOR;

		R_BUF.SIZE := UINT#0;

		(* Sendedaten aufbereiten *)
		S_BUF.BUFFER[0] := BYTE#2#11100; (* Flags: NO WARNING, NTP VERSION 3 , SERVER *)
		S_BUF.BUFFER[1] := STRATUM; (* Peer Clock Stratum: *)
		S_BUF.BUFFER[2] := BYTE#10; (* Peer Polling Intervall 2 hoch 10 = 1024 sek. *)
		S_BUF.BUFFER[3] := BYTE#16#FB; (* Peer Clock Precision: -5 = -31,25ms *)

		(* Umrechnung SNTP Timestamp Base 1900-01-01 = Unix 1970-01-01 + 2208988800 sekunden *)
		timestamp_int := DT_TO_DWORD(UDT) + DWORD#2208988800;

		(* Sekundenanteile sind als 32 Bit Fractal dargestellt *)
		(* nur mit veringerte Auflösung berechnen 1/65535 -&gt; Highword verwenden *)
		(* Berechnung des Sekundenanteils: xms * 65535 / 1000 *)
		timestamp_sek := DINT_TO_DWORD(DWORD_TO_DINT(SHL(INT_TO_DWORD(XMS),16))/DINT#1000);

		ts_b := OSCAT_BASIC.BYTE_OF_DWORD(timestamp_int,3); (* Timestamp Byte 3 *)
		S_BUF.BUFFER[16] := ts_b; (* Reference Timestamp *)
		S_BUF.BUFFER[32] := ts_b; (* Receive   Timestamp *)
		S_BUF.BUFFER[40] := ts_b; (* Transmit  Timestamp *)

		ts_b := OSCAT_BASIC.BYTE_OF_DWORD(TIMESTAMP_INT,2); (* Timestamp Byte 2 *)
		S_BUF.BUFFER[17] := ts_b; (* Reference Timestamp *)
		S_BUF.BUFFER[33] := ts_b; (* Receive   Timestamp *)
		S_BUF.BUFFER[41] := ts_b; (* Transmit  Timestamp *)

		ts_b := OSCAT_BASIC.BYTE_OF_DWORD(TIMESTAMP_INT,1); (* Timestamp Byte 1 *)
		S_BUF.BUFFER[18] := ts_b; (* Reference Timestamp *)
		S_BUF.BUFFER[34] := ts_b; (* Receive   Timestamp *)
		S_BUF.BUFFER[42] := ts_b; (* Transmit  Timestamp *)

		ts_b := OSCAT_BASIC.BYTE_OF_DWORD(TIMESTAMP_INT,0); (* Timestamp Byte 0 *)
		S_BUF.BUFFER[19] := ts_b; (* Reference Timestamp *)
		S_BUF.BUFFER[35] := ts_b; (* Receive   Timestamp *)
		S_BUF.BUFFER[43] := ts_b; (* Transmit  Timestamp *)

		ts_b := OSCAT_BASIC.BYTE_OF_DWORD(TIMESTAMP_SEK,1); (* Timestamp Byte 1 *)
		S_BUF.BUFFER[20] := ts_b; (* Reference Timestamp *)
		S_BUF.BUFFER[36] := ts_b; (* Receive   Timestamp *)
		S_BUF.BUFFER[44] := ts_b; (* Transmit  Timestamp *)

		ts_b := OSCAT_BASIC.BYTE_OF_DWORD(timestamp_sek,0);	(* Timestamp Byte 0 *)
		S_BUF.BUFFER[21] := ts_b; (* Reference Timestamp *)
		S_BUF.BUFFER[37] := ts_b; (* Receive   Timestamp *)
		S_BUF.BUFFER[45] := ts_b; (* Transmit  Timestamp *)

		(* Byte 1-8 von Transmit-Time auf Originate-Time umkopieren *)
		i2 := 40;
		FOR i := 24 TO 31 DO
			S_BUF.BUFFER[i] := R_BUF.BUFFER[i2];
			i2 := i2 +1;
		END_FOR;

		S_BUF.SIZE := UINT#48; (* Daten senden *)

	ELSIF NOT ENABLE AND S_BUF.SIZE = UINT#0 THEN
		ip_state := BYTE#4; (* Abmelden *)
		state := 0;
	END_IF;

END_CASE;

t(IN:= IP_C.ERROR &gt; DWORD#0, PT:=T#5s);
IF t.Q THEN
  IP_C.TIME_RESET := TRUE; (* Error Reset *)
END_IF;

(* IP_FIFO *)
IP_FIFO(FIFO:=IP_C.FIFO,STATE:=ip_state,ID:=ip_id);

(* revision history
ks	18. oct. 2008	rev 1.0
	original version

ks	20. oct. 2009	rev 1.1
	Networkbuffer und Buffer-funktionen auf Basis 0

ks	17. may. 2011	rev 1.2
	automatischer re-connect
*)


(*               SNTP(NTP) Datenstruktur
                                  1                   2                   3
              0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Byte: 01-04  |LI | VN  |Mode |    Stratum    |     Poll      |   Precision   |
             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Byte: 05-08  |                          Root  Delay (32 Bit)                 |
             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Byte: 09-12  |                       Root  Dispersion (32 Bit)               |
             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Byte: 13-16  |                     Reference Identifier (32 Bit)             |
             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Byte: 17-24  |                    Reference Timestamp (64 Bit)               |
             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Byte: 25-32  |                    Originate Timestamp (64 Bit)               |
             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Byte: 33-40  |                     Receive Timestamp (64 Bit)                |
             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Byte: 41-48  |                     Transmit Timestamp (64 Bit)               |
             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Byte: 49-52  |                 Key Identifier (optional) (32 Bit)            |
             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Byte: 53-68  |                 Message Digest (optional) (128 Bit)           |
             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>30bb07df-46ec-496f-8113-7d2a5de044d1</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="SPIDER_ACCESS" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">IP_Control Verwaltungsstruktur</xhtml>
              </documentation>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="VALUE">
              <type>
                <string />
              </type>
            </variable>
            <variable name="VAR_NAME">
              <type>
                <string length="40" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="MODE">
              <type>
                <BYTE />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="ERROR">
              <type>
                <DWORD />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="state">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="st_tmp">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="URL_DATA">
              <type>
                <derived name="url" />
              </type>
            </variable>
            <variable name="HTTP_GET">
              <type>
                <derived name="HTTP_GET" />
              </type>
            </variable>
            <variable name="value_len">
              <type>
                <UINT />
              </type>
            </variable>
            <variable name="body_len">
              <type>
                <UINT />
              </type>
            </variable>
            <variable name="mode_save">
              <type>
                <BYTE />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE state OF

00:
	IF MODE &gt; BYTE#0 AND MODE &lt; BYTE#3 THEN
		MODE_SAVE := MODE; (* Modus speichern *)
		(* wenn kein '.' in Name dann ist es eine globale variable *)
		IF FIND(VAR_NAME,'.') = 0 THEN
			st_tmp := CONCAT('%40GV.',VAR_NAME);
		ELSE
			st_tmp := VAR_NAME;
		END_IF;

		IF MODE_SAVE = BYTE#2 THEN (* 2 = Write *)
			VALUE_LEN := INT_TO_UINT(LEN(VALUE));
			st_tmp := CONCAT(st_tmp,'+');
			st_tmp := CONCAT(st_tmp,VALUE);
			URL_DATA:=STRING_TO_URL(STR:= CONCAT('http://x/dir/cgi-bin/writeVal.exe?',st_tmp),DEFAULT_PROTOCOL:='',DEFAULT_PATH:='');
		ELSE
			URL_DATA:=STRING_TO_URL(STR:= CONCAT('http://x/dir/cgi-bin/readVal.exe?',st_tmp),DEFAULT_PROTOCOL:='',DEFAULT_PATH:='');
		END_IF;

		state := 60;
	END_IF;
60:
	IF HTTP_GET.DONE THEN
		IF MODE_SAVE = BYTE#2 THEN (* Write *)
			BODY_LEN := HTTP_GET.BODY_STOP - HTTP_GET.BODY_START + BOOL_TO_UINT(HTTP_GET.BODY_STOP &gt; UINT#0);
			ERROR := BOOL_TO_DWORD(BODY_LEN &lt;&gt; VALUE_LEN);
		ELSE (* Read *)
			IF HTTP_GET.BODY_START &gt; 0 THEN
				VALUE := OSCAT_BASIC.BUFFER_TO_STRING(PT:=ADR(R_BUF.BUFFER),SIZE:=R_BUF.SIZE,START:=UINT_TO_INT(HTTP_GET.BODY_START),STOP:=UINT_TO_INT(HTTP_GET.BODY_STOP));
			ELSE
				VALUE := '';
			END_IF;
		END_IF;
		STATE   := 100;

	ELSIF (HTTP_GET.ERROR &gt; DWORD#00) THEN
		ERROR := HTTP_GET.ERROR;
		STATE   := 100;
	END_IF;

100:
	(* UNLOCK HTTP DATA *)
	IF HTTP_GET.DONE = FALSE THEN
		STATE := 0;
	END_IF;

END_CASE;

(* HTTP_GET *)
HTTP_GET(	IP_C:=IP_C,
			S_BUF:=S_BUF,
			R_BUF:=R_BUF,
			IP4:=DWORD#00,
			GET:=state=60,
			MODE:=BYTE#0,
			UNLOCK_BUF:=state=100,
			URL_DATA:=URL_DATA
			);

(* revision history
ks	18. mar. 2009	rev 1.0
	original version

ks	12. apr. 2011	rev 1.1
	fehlerkorrektur bei buffer_to_string
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>8fb6ac25-5cd1-485c-a97b-c6190d4a2534</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="SYS_LOG" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> IP_Control Verwaltungsstruktur </xhtml>
              </documentation>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="ACTIVATE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="LOC_DT">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="SERVER_IP4">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="PORT">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="FACILITY">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="SEVERITY">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="TAG">
              <type>
                <string length="32" />
              </type>
            </variable>
            <variable name="HOSTNAME">
              <type>
                <string />
              </type>
            </variable>
            <variable name="MESSAGE">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="OPTION">
              <type>
                <BYTE />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="DONE_P">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ERROR">
              <type>
                <DWORD />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="ip_state">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="ip_id">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="IP_FIFO">
              <type>
                <derived name="IP_FIFO" />
              </type>
            </variable>
            <variable name="activate_last">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="state">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="s1">
              <type>
                <string length="20" />
              </type>
            </variable>
            <variable name="i">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE state OF
00: (* auf positive Flanke SET warten *)
	IF ACTIVATE AND NOT ACTIVATE_LAST THEN
		state := 10;
		ERROR := DWORD#0;
		IP_STATE := BYTE#1; (* Anmelden *)
    		(*####################  DEBUG-MESSAGE  ###################################*)
    		(*IF _debug_enable THEN
      			LOG_CL.NEW_MSG := 'SYS_LOG: S00 START /IP_ID ~4';
      			LOG_CL.PRINTF[4]  := BYTE_TO_STRING(IP_ID);
      			LOG_MSG();
    		END_IF;*)
    		(*########################################################################*)
	END_IF;
	DONE_P := FALSE;

10: (* Bei IP_Control anmelden und auf freigabe warten *)
	IF IP_STATE = BYTE#3 THEN
		(* Sendedaten aufbereiten *)
		i := 0;
		IF (OPTION AND BYTE#0000_0001) = BYTE#00 THEN (* Option: no priority Code *)
			(* Priority:  '&lt;xx&gt;' als dezimalwert *)
			(* BYTE: xxxx x...  = Facility *)
			(*       .... .xxx  = Level *)
			s1 := REPLACE('&lt;P&gt;',BYTE_TO_STRING(SHL(FACILITY,3) OR (SEVERITY AND BYTE#0000_0111)),1,2);
		ELSE
			s1 := '';
		END_IF;

		IF (OPTION AND BYTE#0000_0010) = BYTE#00 THEN (* Option: No Use Syslog RFC Header *)
			(* 'month day hh:mm:ss ' *)
			s1 := CONCAT(s1,OSCAT_BASIC.DT_TO_STRF(DTI:=LOC_DT,MS:=0,FMT:='#E #W #N:#R:#T ',LANG:=1));
			OSCAT_BASIC._STRING_TO_BUFFER(STR:=s1,POS:=i,PT:=ADR(S_BUF.BUFFER),SIZE:=UINT#1024);
			i := i + LEN(s1);
			(* ' sourcename eintragen *)
			OSCAT_BASIC._STRING_TO_BUFFER(STR:=HOSTNAME,POS:=i,PT:=ADR(S_BUF.BUFFER),SIZE:=UINT#1024);
			i := i + LEN(HOSTNAME);
			S_BUF.BUFFER[i] := BYTE#32; (* leerzeichen einfuegen *)
			i := i + 1;
			(* ' tag eintragen *)
			OSCAT_BASIC._STRING_TO_BUFFER(STR:=TAG,POS:=i,PT:=ADR(S_BUF.BUFFER),SIZE:=UINT#1024);
			i := i + LEN(TAG);
			S_BUF.BUFFER[i] := BYTE#32; (* leerzeichen einfuegen *)
			i := i + 1;
		END_IF;

		(* ' message eintragen *)
		OSCAT_BASIC._STRING_TO_BUFFER(STR:=MESSAGE,POS:=i,PT:=ADR(S_BUF.BUFFER),SIZE:=UINT#1024);
		i := i + LEN(MESSAGE);

		IF (OPTION AND BYTE#0000_0100) &gt; BYTE#00 THEN (* Option: Add a CR &amp; LF to end of message *)
			S_BUF.BUFFER[i] := BYTE#13; (* Carriage Return einfuegen *)
			i := i + 1;
			S_BUF.BUFFER[i] := BYTE#10; (* Linefeed einfuegen *)
			i := i + 1;
		END_IF;

		state := 30;

		(* IP Datenverkehr einrichten *)
		IF (OPTION AND BYTE#2#0000_1000) &gt; BYTE#00 THEN (* Option: TCP Mode *)
			IP_C.C_MODE := BYTE#0; (* Mode: TCP/AKTIV *)
		ELSE
			IP_C.C_MODE := BYTE#1; (* Mode: UDP/AKTIV *)
		END_IF;

		IF PORT = WORD#0 THEN (* keine Portnummer vorgegeben ? *)
			IF IP_C.C_MODE = BYTE#0 THEN (* Modus bestimmen  TCP oder UDP ? *)
				IP_C.C_PORT := WORD#1468; (* Standard Portnummer für Syslog over TCP *)
			ELSE
				IP_C.C_PORT := WORD#514; (* Standard Portnummer für Syslog over UDP *)
			END_IF;
		ELSE
			IP_C.C_PORT := PORT; (* uebergebene Portnummer eintragen *)
		END_IF;

		IP_C.C_IP := SERVER_IP4; (* IP eintragen *)
		IP_C.C_ENABLE := TRUE; (* Verbindungsaufbau freigeben *)
		IP_C.TIME_RESET := TRUE; (* Zeitueberwachung rücksetzen *)
		IP_C.R_OBSERVE := FALSE; (* Datenempfang ueberwachen *)
		S_BUF.SIZE := INT_TO_UINT(i); (* Sendelänge eintragen *)
		R_BUF.SIZE := UINT#0; (* Empfangslänge rücksetzen *)
    		(*####################  DEBUG-MESSAGE  ###################################*)
    		(*IF _debug_enable THEN
      			LOG_CL.NEW_MSG := 'SYS_LOG: S20 SEND /IP_ID ~4';
      			LOG_CL.PRINTF[4]  := BYTE_TO_STRING(IP_ID);
      			LOG_MSG();
    		END_IF;*)
    		(*########################################################################*)
	END_IF;

30:
	IF IP_C.ERROR &lt;&gt; DWORD#00 THEN
		ERROR := IP_C.ERROR;
		state := 0;
    		(*####################  DEBUG-MESSAGE  ###################################*)
    		(*IF _debug_enable THEN
      			LOG_CL.NEW_MSG := 'SYS_LOG: S30 ERROR ~1 IP_ID ~4';
      			LOG_CL.PRINTF[1]  := DWORD_TO_STRING(ERROR);
      			LOG_CL.PRINTF[4]  := BYTE_TO_STRING(IP_ID);
      			LOG_MSG();
    		END_IF;*)
    		(*########################################################################*)
	ELSIF S_BUF.SIZE = UINT#0 THEN (* warten bis alle daten gesendet sind *)
		DONE_P := TRUE;
		state := 0;
    		(*####################  DEBUG-MESSAGE  ###################################*)
    		(*IF _debug_enable THEN
      			LOG_CL.NEW_MSG := 'SYS_LOG: S30 OK /IP_ID ~4';
      			LOG_CL.PRINTF[4]  := BYTE_TO_STRING(IP_ID);
      			LOG_MSG();
    		END_IF;*)
    		(*########################################################################*)
	END_IF;

	IF state = 0 THEN (* Verbindung freigeben *)
		IP_STATE := BYTE#4;
	END_IF;

END_CASE;

ACTIVATE_LAST := ACTIVATE; (* letzten Status sichern zur Flankenerkennung *)

(* IP_FIFO *)
IP_FIFO(FIFO:=IP_C.FIFO,STATE:=ip_state,ID:=IP_ID);

(* revision history
ks	18. oct. 2008	rev 1.0
	original version

ks	20. jun. 2009	rev 1.1
	Networkbuffer und Buffer-funktionen auf Basis 0

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>390ffb03-2b43-4439-ad55-17d6fa973bff</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TELNET_LOG" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="LOG_CL">
              <type>
                <derived name="LOG_CONTROL" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="ENABLE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="OPTION">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="BYTE#16#8C" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> no flush buffer (7) , CR&amp;LF (3), Colors (2), AUTOWRAP (1), Screen-Init (0) </xhtml>
              </documentation>
            </variable>
            <variable name="PORT">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="23" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Port Nummer </xhtml>
              </documentation>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="READY">
              <type>
                <BOOL />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="TELNET_PRINT">
              <type>
                <derived name="TELNET_PRINT" />
              </type>
            </variable>
            <variable name="done">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="init">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="watchdog">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="ci">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="pi">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="pi_last">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="send">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF NOT init THEN
	init := TRUE;
	IF OPTION &gt; 0 THEN
		TELNET_PRINT.OPTION := OPTION;
	END_IF;
	IF PORT &gt; 0 THEN (* bei portvorgabe wird der standardport überschrieben *)
		TELNET_PRINT.PORT := PORT;
	END_IF;
  	WATCHDOG.PT := T#1ms;
END_IF;

WATCHDOG(IN:=FALSE); (* Timer stoppen *)

ci := LOG_CL.IDX;

(* CONNECT_OFF Flanke auswerten *)
IF IP_C.C_STATE = BYTE#1 THEN
	pi := 0;
	init := FALSE;
END_IF;

REPEAT
	IF pi &lt;&gt; ci AND IP_C.C_STATE &gt; BYTE#127 THEN
		IF pi = 0 AND LOG_CL.RING_MODE THEN pi := ci; END_IF;
		pi_last := pi;
		pi := pi + 1;
		IF pi &gt; LOG_CL.SIZE THEN pi := 1; END_IF;
		SEND := TRUE;
	ELSE
		SEND := FALSE;
	END_IF;

	TELNET_PRINT(	IP_C := IP_C,
					S_BUF := S_BUF,
					ENABLE := ENABLE,
					SEND := SEND,
					TEXT := LOG_CL.MSG[pi],
					BACK_COLOR := DWORD_TO_BYTE(SHL(LOG_CL.MSG_OPTION[pi],8)),
					FRONT_COLOR := DWORD_TO_BYTE(LOG_CL.MSG_OPTION[pi] ));
	READY := TELNET_PRINT.READY;
	done := TELNET_PRINT.DONE;

	IF SEND AND NOT done THEN
		pi := pi_last;
	END_IF;

	WATCHDOG(IN:=TRUE);

UNTIL (WATCHDOG.Q OR NOT done )
END_REPEAT;

(* revision history
ks	14. aug. 2009	rev 1.0
	original version

ks	03. dec. 2011	rev 1.1
	neue parameter und initialisierung optimiert

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ed103a0b-9af6-44d8-81e3-a1ea17c99cb6</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TELNET_PRINT" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="TEXT">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="ENABLE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="SEND">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="OPTION">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="BYTE#16#8C" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> no flush buffer (7) , CR&amp;LF (3), Colors (2), AUTOWRAP (1), Screen-Init (0) </xhtml>
              </documentation>
            </variable>
            <variable name="BACK_COLOR">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="FRONT_COLOR">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="X_POS">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="Y_POS">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="PORT">
              <type>
                <WORD />
              </type>
              <initialValue>
                <simpleValue value="23" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Port Nummer </xhtml>
              </documentation>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="READY">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="DONE">
              <type>
                <BOOL />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="last_fc">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="state">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="x">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="-1" />
              </initialValue>
            </variable>
            <variable name="ip_state">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="ip_id">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="IP_FIFO">
              <type>
                <derived name="IP_FIFO" />
              </type>
            </variable>
            <variable name="init">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="b0_screen_clear">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="b1_autowrap">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="b2_color">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="b3_cr_lr">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="b7_no_flush">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">READY := IP_C.C_STATE &gt; BYTE#127;
DONE := FALSE;

CASE state OF

00: (* Warten auf Freigabe *)
	IF ENABLE THEN
		state := 10;
		ip_state := BYTE#1; (* Anmelden *)
	END_IF;

10: (* Bei IP_Control anmelden und auf freigabe warten *)
	IF ip_state = BYTE#3 THEN

		(* IP Datenverkehr einrichten *)
		IP_C.C_PORT := PORT; (* Portnummer eintragen *)
		IP_C.C_IP := DWORD#00; (* IP eintragen *)
		IP_C.C_MODE := BYTE#4; (* Mode: TCP+PASSIV+PORT *)
		IP_C.TIME_RESET := TRUE; (* Zeitueberwachung rücksetzen *)
		IP_C.C_ENABLE := TRUE; (* Verbindungsaufbau freigeben *)
		IP_C.R_OBSERVE := FALSE; (* keine Empfangsueberwachung *)
		state := 20;
	END_IF;

20:	IF IP_C.ERROR &gt; DWORD#0 THEN
		IP_C.TIME_RESET := TRUE; (* Fehler rücksetzen *)
	END_IF;
	IF S_BUF.SIZE = UINT#0 THEN (* Datensenden nicht aktiv *)
		IF NOT ENABLE THEN
			ip_state := BYTE#4; (* Verbindung abbauen - Ressource freigeben *)
			IP_C.C_ENABLE := FALSE; (* Verbindungsabbau *)
			state := 0;
		END_IF;
		IF IP_C.C_STATE = BYTE#1 THEN (* positive Flanke Connect off *)
			init := FALSE;
		ELSIF READY THEN (* Verbindung vorhanden *)
			IF IP_C.C_STATE = BYTE#254 AND NOT INIT THEN (* positive Flanke Connect on *)
				(* Var Init ist notwendig, damit der Baustein im selben zyklus mehrmals ausgerufen werden kann *)
				init := TRUE;
				b0_screen_clear := (OPTION AND BYTE#2#0000_0001) &gt; BYTE#0;
				b1_autowrap := (OPTION AND BYTE#2#0000_0010) &gt; BYTE#0;
				b2_color := (OPTION AND BYTE#2#0000_0100) &gt; BYTE#0;
				b3_cr_lr := (OPTION AND BYTE#2#0000_1000) &gt; BYTE#0;
				b7_no_flush := (OPTION AND BYTE#2#1000_0000) &gt; BYTE#0;

				last_fc := NOT FRONT_COLOR; (* aktualisierung der Farben erzwingen !*)
				x := 0;

				(* AUTOWRAP OFF/ON *)
				S_BUF.BUFFER[x] := BYTE#16#1B; (* ESC *)
				x := x +1;
				S_BUF.BUFFER[x] := BYTE#16#5B; (* [ *)
				x := x +1;
				S_BUF.BUFFER[x] := BYTE#16#3F; (* ? *)
				x := x +1;
				S_BUF.BUFFER[x] := BYTE#16#37; (* 7 *)
				x := x +1;
				S_BUF.BUFFER[x] := SEL(b1_autowrap, BYTE#16#6C (* l *),BYTE#16#68 (* h *));

				IF b0_screen_clear THEN
					IF b2_color THEN
						x := x +1;
						S_BUF.BUFFER[x] := BYTE#16#1B; (* ESC *)
						x := x +1;
						S_BUF.BUFFER[x] := BYTE#16#5B; (* [ *)
						x := x +1;
						S_BUF.BUFFER[x] := BYTE#16#30; (* 0 *)
						x := x +1;
						S_BUF.BUFFER[x] := BYTE#16#3B; (* ; *)
						x := x +1;
						S_BUF.BUFFER[x] := BYTE#16#33; (* 3 *)
						x := x +1;
						S_BUF.BUFFER[x] := (FRONT_COLOR AND BYTE#2#00000111) OR BYTE#16#30; (* Einerstelle Farbe Foreground ausgeben *)
						x := x +1;
						S_BUF.BUFFER[x] := BYTE#16#3B; (* ; *)
						x := x +1;
						S_BUF.BUFFER[x] := BYTE#16#34; (* 4 *)
						x := x +1;
						S_BUF.BUFFER[x] := (BACK_COLOR AND BYTE#2#00000111) OR BYTE#16#30; (* Einerstelle Farbe Background ausgeben *)
						x := x +1;
						S_BUF.BUFFER[x] := BYTE#16#6D; (* m *)
					END_IF;
					(* Screen Clear *)
					x := x +1;
					S_BUF.BUFFER[x] := BYTE#16#1B; (* ESC *)
					x := x +1;
					S_BUF.BUFFER[x] := BYTE#16#5B; (* [ *)
					x := x +1;
					S_BUF.BUFFER[x] := BYTE#16#32; (* 2 *)
					x := x +1;
					S_BUF.BUFFER[x] := BYTE#16#4A; (* J *)
				ELSE
					x := x +1;
					S_BUF.BUFFER[x] := BYTE#16#0A; (* neue Zeile *)
				END_IF;
			END_IF;

			(* buffer voll , oder Daten sind vorhanden und kein weiterer Sendewunsch *)
			IF (INT_TO_UINT(x + LEN(TEXT) + 21) &gt; SIZEOF(S_BUF.BUFFER)) OR (x &gt;= 0 AND NOT SEND) THEN
				S_BUF.SIZE := INT_TO_UINT(x + 1); (* Länge eintragen -&gt; Datensenden starten *)
				x := -1;
			ELSIF SEND THEN

				(* aktuelle Farbe bestimmen  *)
				IF b2_color AND FRONT_COLOR &lt;&gt; last_FC THEN
					(* Farbeinstellung: ANSI-Sequenz ESC[X;Y;Zm ausgeben *)
					x := x + 1;
					S_BUF.BUFFER[x] := BYTE#16#1B; (* ESC *)
					x := x + 1;
					S_BUF.BUFFER[x] := BYTE#16#5B; (* [ *)
					(* Farbeinstellung: dunkel oder Hell und blinken bestimmen *)
					IF ((FRONT_COLOR AND BYTE#2#0001_1000) XOR (last_FC AND BYTE#2#0001_1000)) &lt;&gt; BYTE#00 OR TRUE THEN
						x := x + 1;
						S_BUF.BUFFER[x] := BYTE#16#30; (* 0  *)
						x := x + 1;
						S_BUF.BUFFER[x] := BYTE#16#3B; (* ; *)
						(* keine dunklen Farben gewünscht -&gt; dann Bold &amp; Bright *)
						IF (FRONT_COLOR AND BYTE#2#00001000) = BYTE#0 THEN
							(* auf Bold &amp; Bright Farben umstellen *)
							x := x + 1;
							S_BUF.BUFFER[x] := BYTE#16#31; (* 1 *)
							x := x + 1;
							S_BUF.BUFFER[x] := BYTE#16#3B; (* ; *)
						END_IF;
						(* blinkenden Farben gewünscht *)
						IF (FRONT_COLOR AND BYTE#2#00010000) &gt; BYTE#0 THEN
							(* auf Blinkenden Farbe umstellen *)
							x := x + 1;
							S_BUF.BUFFER[x] := BYTE#16#35; (* 5 *)
							x := x + 1;
							S_BUF.BUFFER[x] := BYTE#16#3B; (* ; *)
						END_IF;
					END_IF;
					(* Zehnerstelle Farbe Foreground ausgeben *)
					x := x + 1;
					S_BUF.BUFFER[x] := BYTE#16#33; (* 3 *)
					(* Einerstelle Farbe Foreground ausgeben *)
					x := x + 1;
					S_BUF.BUFFER[x] := (FRONT_COLOR AND BYTE#2#00000111) OR BYTE#16#30;
					x := x + 1;
					S_BUF.BUFFER[x] := BYTE#16#6D; (* m *)
					(* neue Farbe als letzt verwendete speichern *)
					last_FC := FRONT_COLOR;
				END_IF;

				(* Cursor positionieren *)
				IF X_POS &gt; BYTE#0 AND Y_POS &gt; BYTE#0 THEN
					x := x + 1;
					S_BUF.BUFFER[x] := BYTE#16#1B; (* ESC *)
					x := x + 1;
					S_BUF.BUFFER[x] := BYTE#16#5B; (* [ *)
					(* Zehnerstelle Y_POS ausgeben *)
					x := x + 1;
					S_BUF.BUFFER[x] := SHR(OSCAT_BASIC.INT_TO_BCDC(BYTE_TO_INT(Y_POS)),4) OR BYTE#16#30;
					(* Einerstelle Y_POS ausgeben *)
					x := x + 1;
					S_BUF.BUFFER[x] := (OSCAT_BASIC.INT_TO_BCDC(BYTE_TO_INT(Y_POS)) AND BYTE#16#0F) OR BYTE#16#30;
					x := x + 1;
					S_BUF.BUFFER[x] := BYTE#16#3B; (* ; *)
					(* Zehnerstelle X_POS ausgeben *)
					x := x + 1;
					S_BUF.BUFFER[x] := SHR(OSCAT_BASIC.INT_TO_BCDC(BYTE_TO_INT(X_POS)),4) OR BYTE#16#30;
					(* Einerstelle X_POS ausgeben *)
					x := x + 1;
					S_BUF.BUFFER[x] := (OSCAT_BASIC.INT_TO_BCDC(BYTE_TO_INT(X_POS)) AND BYTE#16#0F) OR BYTE#16#30;
					x := x + 1;
					S_BUF.BUFFER[x] := BYTE#16#48; (* H *)
				END_IF;

				(* text ausgeben *)
				IF LEN(TEXT) &gt; 0 THEN
					OSCAT_BASIC._STRING_TO_BUFFER(str:=TEXT,pos:=x + 1,pt :=ADR(S_BUF.BUFFER), size:=SIZEOF(S_BUF.BUFFER));
					x := x + LEN(TEXT);
				END_IF;

				IF b3_cr_lr THEN (* Option: CR,LF ausgeben *)
					x := x + 1;
					S_BUF.BUFFER[x] := BYTE#16#0D;
					x := x + 1;
					S_BUF.BUFFER[x] := BYTE#16#0A;
				END_IF;

				DONE := TRUE; (* Fertig in Buffer eingetragen *)

				IF b7_no_flush THEN (* Option: no buffer flush *)
					(* buffer sofort senden - aktuellen Schreibindex speichern -&gt; Senden anstossen *)
					S_BUF.SIZE := INT_TO_UINT(x + 1);
					x := -1;
				END_IF;
			END_IF;
		END_IF;
	END_IF;
END_CASE;

(* IP_FIFO *)
IP_FIFO(FIFO:=IP_C.FIFO,STATE:=ip_state,ID:=ip_id);

(* revision history
ks	05. jan. 2009	rev 1.0
	original version

ks	20. oct. 2009	rev 1.1
	Networkbuffer und Buffer-funktionen auf Basis 0

ks	20. oct. 2009	rev 1.2
	STRING(OSCAT_BASIC.STRING_LENGTH)

ks	17. may. 2011	rev 1.3
	automatischer re-connect

ks	03. dec. 2011	rev 1.4
	initialisierung verbessert, Port Nummer als Parmeter

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>4cc03d50-c26f-4521-b58e-eafbbb90d6bb</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="ELEMENT_COUNT" pouType="function">
        <interface>
          <returnType>
            <INT />
          </returnType>
          <inputVars>
            <variable name="SEP">
              <type>
                <BYTE />
              </type>
            </variable>
          </inputVars>
          <inOutVars>
            <variable name="ELEMENT">
              <type>
                <string length="ELEMENT_LENGTH" />
              </type>
            </variable>
          </inOutVars>
          <localVars>
            <variable name="pt">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="1" upper="ELEMENT_LENGTH" />
                      <baseType>
                        <BYTE />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="l">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="pos">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF ELEMENT = '' THEN
	ELEMENT_COUNT := 0;
ELSE
	PT := ADR(ELEMENT);
	ELEMENT_COUNT := 1;
	l := LEN(ELEMENT);
	FOR pos := 1 TO l DO
		IF pt^[pos] = SEP THEN ELEMENT_COUNT := ELEMENT_COUNT + 1; END_IF;
	END_FOR;
END_IF;

(* revision histroy
ks	5. apr. 2011	rev 1.0
	original release

*)	</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>836f170f-aa87-40ac-8f57-0ea771ed6a97</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="ELEMENT_GET" pouType="function">
        <interface>
          <returnType>
            <string length="ELEMENT_LENGTH" />
          </returnType>
          <inputVars>
            <variable name="SEP">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="POS">
              <type>
                <INT />
              </type>
            </variable>
          </inputVars>
          <inOutVars>
            <variable name="ELEMENT">
              <type>
                <string length="ELEMENT_LENGTH" />
              </type>
            </variable>
          </inOutVars>
          <localVars>
            <variable name="i">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
            <variable name="o">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
            <variable name="pt">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="1" upper="ELEMENT_LENGTH" />
                      <baseType>
                        <BYTE />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="po">
              <type>
                <pointer>
                  <baseType>
                    <array>
                      <dimension lower="1" upper="ELEMENT_LENGTH" />
                      <baseType>
                        <BYTE />
                      </baseType>
                    </array>
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="cnt">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="c">
              <type>
                <BYTE />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* load pointers *)
pt := ADR(ELEMENT);
po := ADR(ELEMENT_GET);

(* search for the n-th occurence of a separation character and store position in i *)
WHILE (cnt &lt; pos) AND (i &lt; ELEMENT_LENGTH) AND (pt^[i] &gt; 0) DO
	IF pt^[i] = sep THEN cnt := cnt + 1; END_IF;
	i := i + 1;
END_WHILE;

(* copy the list element to output *)
IF i &lt; ELEMENT_LENGTH THEN c := pt^[i]; END_IF;
WHILE (c &lt;&gt; sep) AND (c &gt; 0) AND (o &lt; ELEMENT_LENGTH) AND (i &lt; ELEMENT_LENGTH) DO
	po^[o] :=pt^[i];
	o := o + 1;
	i := i + 1;
	c := pt^[i];
END_WHILE;

(* terminate the output string *)
po^[o] := 0;

(* revision histroy
ks 05. apr. 2011	rev 1.0
	original release

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>5cb438ad-1f3d-4bb1-a20e-3afe1cfdf478</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="IP_FIFO" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="FIFO">
              <type>
                <derived name="IP_FIFO_DATA" />
              </type>
            </variable>
            <variable name="ID">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="STATE">
              <type>
                <BYTE />
              </type>
            </variable>
          </inOutVars>
          <localVars>
            <variable name="tmp">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF NOT FIFO.INIT THEN
	FIFO.INIT := TRUE;
	FIFO.NW := 1;
	FIFO.NR := 1;
	FIFO.EMPTY := TRUE;
	FIFO.FULL := FALSE;
	FIFO.TOP := 128; (* Arraygroesse 1 bis x *)
	FIFO.MAX_ID := BYTE#1; (* maximale anzahl von Anmeldungen einer ID *)
END_IF;

(* wenn keine ID vorhanden dann die naechste freie ID zuteilen *)
IF ID = BYTE#00 THEN
	IF FIFO.ID &lt; INT_TO_BYTE(FIFO.TOP) THEN
		ID := USINT_TO_BYTE(BYTE_TO_USINT(FIFO.ID) + USINT#1); (* ID +1 *)
		FIFO.ID := ID; (* ID eintragen *)
	    	(*####################  DEBUG-MESSAGE  ###################################*)
	    	(*IF _debug_enable THEN
	      		LOG_CL.NEW_MSG := 'FIFO: NEW ID:~1';
	      		LOG_CL.PRINTF[1]  := BYTE_TO_STRING(ID);
	      		LOG_MSG();
	    	END_IF;*)
	    	(*########################################################################*)
	ELSIF STATE &lt; BYTE#200 THEN
		(*####################  DEBUG-MESSAGE  ###################################*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'FIFO: OVERFLOW ADD ID';
			LOG_MSG();
		END_IF;*)
		(*########################################################################*)

		(* sollte nie passieren ! -&gt; es sind zuviele teilnehmer angemeldet *)
		(* es wird keine Nummer vergeben und alle anfragen werden negativ beantwortet *)
		STATE := BYTE#255;
		RETURN;
	END_IF;
END_IF;

IF STATE = BYTE#1 AND NOT FIFO.FULL THEN (* Anmelden *)
	(* nur eintragen wenn maximale anzahl nicht ueberschritten wurde *)
	tmp := BYTE_TO_INT(ID);
	IF FIFO.Y[tmp] &lt; FIFO.MAX_ID THEN
		FIFO.Y[tmp] := USINT_TO_BYTE(BYTE_TO_USINT(FIFO.Y[tmp]) + USINT#1); (* IP_ID Zähler +1 *)
		tmp := FIFO.NW; (* geht bei mir leider nicht anders *)
		FIFO.X[tmp] := ID;
		IF FIFO.NW = FIFO.TOP THEN FIFO.NW := 1; ELSE FIFO.NW := FIFO.NW + 1; END_IF;
		FIFO.FULL := FIFO.NW = FIFO.NR;
		FIFO.EMPTY := FALSE;
		STATE := BYTE#2; (* weiterschalten auf "Warten auf Freigabe" *)
		(*####################  DEBUG-MESSAGE  ###################################*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'FIFO: ADD ID:~1';
			LOG_CL.PRINTF[1]  := BYTE_TO_STRING(ID);
			LOG_MSG();
		END_IF;*)
		(*########################################################################*)

	END_IF;
END_IF;

IF STATE = BYTE#2 AND NOT FIFO.EMPTY THEN (* check current stack element *)
	tmp := FIFO.NR; (* geht bei mir leider nicht anders *)
	IF ID = FIFO.X[tmp] THEN
	STATE := BYTE#3; (* weiterschalten auf "Zugriffsfreigabe" *)
	END_IF;
END_IF;

IF STATE = BYTE#4 AND NOT FIFO.EMPTY THEN (* remove from stack *)
	tmp := FIFO.NR; (* geht bei mir leider nicht anders *)
	IF ID = FIFO.X[tmp] THEN
		tmp := BYTE_TO_INT(ID); (* geht bei mir leider nicht anders *)
		FIFO.Y[tmp] := USINT_TO_BYTE(BYTE_TO_USINT(FIFO.Y[tmp]) - USINT#1); (* ID Zähler -1 *)
		IF FIFO.NR = FIFO.TOP THEN FIFO.NR := 1; ELSE FIFO.NR := FIFO.NR + 1; END_IF;
		FIFO.EMPTY := FIFO.NR = FIFO.NW;
		FIFO.FULL := FALSE;
		(*####################  DEBUG-MESSAGE  ###################################*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'FIFO: REMOVE ID:~1';
			LOG_CL.PRINTF[1]  := BYTE_TO_STRING(ID);
			LOG_MSG();
		END_IF;*)
		(*########################################################################*)
	END_IF;
	STATE := BYTE#5; (* "Remove done" *)
END_IF;

(* revision history
ks	18. oct. 2008	rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d192f485-bd67-4fc1-adb5-d6997ea23629</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="LOG_MSG" pouType="functionBlock">
        <interface>
          <localVars>
            <variable name="FB_PRINT_SF">
              <type>
                <derived name="PRINT_SF" />
              </type>
            </variable>
            <variable name="idX">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF DWORD_TO_BYTE(SHL(LOG_CL.NEW_MSG_OPTION,16)) &gt; LOG_CL.LEVEL THEN RETURN; END_IF; (* Logging freigegeben ?*)

FB_PRINT_SF(PRINTF_DATA := LOG_CL.PRINTF,STR := LOG_CL.NEW_MSG);

IF LOG_CL.RESET THEN (* Logeinträge löschen *)
	LOG_CL.RESET := FALSE;
	LOG_CL.RING_MODE := FALSE;
	LOG_CL.IDX := 0;
	LOG_CL.UPDATE_COUNT := LOG_CL.UPDATE_COUNT + UINT#1; (* UpdateCount erhöhen *)
END_IF;

IF LOG_CL.SIZE &gt; 0 THEN (* size wert ist eingetragen *)
	IF LEN(LOG_CL.NEW_MSG) &gt; 0 THEN (* Meldung in Puffer eintragen *)
		IF (LOG_CL.IDX &gt;= LOG_CL.SIZE) THEN
			LOG_CL.RING_MODE := TRUE; (* bei Überlauf = Ringbuffermodus *)
			LOG_CL.IDX := 0; (* wieder auf arrayanfang positionieren *)
		END_IF;

		LOG_CL.UPDATE_COUNT := LOG_CL.UPDATE_COUNT + UINT#1; (* UpdateCount erhöhen *)
		LOG_CL.IDX := LOG_CL.IDX + INT#1; (* nächste freie Position *)
		idx := LOG_CL.IDX; (* lade aktuelle Log-Puffer Positition *)
		LOG_CL.MSG[idx] := LOG_CL.NEW_MSG; (* neuen Log-String in puffer ablegen  *)
		LOG_CL.MSG_OPTION[idx] := LOG_CL.NEW_MSG_OPTION; (* neue Log-String Option in puffer ablegen  *)
		LOG_CL.NEW_MSG := ''; (* letzten Log-String löschen *)
	END_IF;
END_IF;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>103cd3cd-aa09-4585-b506-af38e4fbdde9</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="LOG_VIEWPORT" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="LC">
              <type>
                <derived name="LOG_CONTROL" />
              </type>
            </variable>
            <variable name="LV">
              <type>
                <derived name="us_LOG_VIEWPORT" />
              </type>
            </variable>
          </inOutVars>
          <localVars>
            <variable name="pos">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="count">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="idx">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="base">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="update_pos">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Scroll Button verarbeiten *)
IF LV.MOVE_TO_X &lt;&gt; 0 THEN
	CASE LV.MOVE_TO_X OF
	30000: pos := 1 ; (* älteste Meldung anzeigen *)
	30001: pos := LC.SIZE; (* neueste Meldung anzeigen *)
	30002: pos := pos + LV.COUNT; (* eine Seite nach unten blättern -&gt; Richtung neuere Nachrichten *)
	30003: pos := pos - LV.COUNT; (* eine Seite nach oben blättern -&gt; Richtung ältere Nachrichten *)
	ELSE
		pos := pos + LV.MOVE_TO_X;
	END_CASE;
	update_pos := TRUE;
	LV.MOVE_TO_X := 0;
END_IF;

IF (LV.UPDATE_COUNT &lt;&gt; LC.UPDATE_COUNT) OR update_pos THEN (* Aktualisierung überwachen *)
	LV.UPDATE := TRUE;
	LV.UPDATE_COUNT := LC.UPDATE_COUNT;
	update_pos := FALSE;

	(* pos prüfen und übernehmen *)
	IF LC.RING_MODE THEN
		pos := LIMIT(1,pos,LC.SIZE - LV.COUNT + 1);
	ELSE
		IF LC.IDX &gt; LV.COUNT THEN
			pos := LIMIT(1,pos,LC.IDX - LV.COUNT + 1);
		ELSE
			pos := 1;
		END_IF;
	END_IF;

	(* idxBasis berechnen *)
	base := LC.IDX - pos - LV.COUNT + 1;
	IF LC.RING_MODE THEN 
		(* Anzeige im Ringpuffermodus *)
		FOR count:= 1 TO LV.COUNT DO
			idx := base + count;
			IF idx &lt; 1 THEN
				idx := idx + LC.SIZE;
			END_IF;
			LV.LINE_ARRAY[count] := idx;
		END_FOR;
	ELSE
		(* Anzeige im Normalmodus *)
		FOR count:= 1 TO LV.COUNT DO
			idx := base + count;
			IF idx &lt; 1 THEN
				(* Leere Zeile ausgeben *)
				LV.LINE_ARRAY[count] := 0;
			ELSE
				LV.LINE_ARRAY[count] := idx;
			END_IF;
		END_FOR;
	END_IF;
END_IF;

(* revision history
ks	01. mai 2010	rev 1.0
	original version

ks	05. mai 2012	rev 1.1
	Fehler im Ringmodus

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>075ae7f8-c55d-4ede-84e3-b43599d1f24d</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="NETWORK_VERSION" pouType="function">
        <interface>
          <returnType>
            <DWORD />
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF in THEN
	NETWORK_VERSION := DATE_TO_DWORD(D#2016-07-01);
ELSE
	NETWORK_VERSION := 135;
END_IF;

(* revision history
ks	2. feb 2011	rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>dd044474-260d-4204-9a2e-18d2aceae059</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="PRINT_SF" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="PRINTF_DATA">
              <type>
                <derived name="PRINTF_DATA" />
              </type>
            </variable>
            <variable name="STR">
              <type>
                <string length="LOG_SIZE" />
              </type>
            </variable>
          </inOutVars>
          <localVars>
            <variable name="pos">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="c">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="src">
              <type>
                <string length="1" />
              </type>
              <initialValue>
                <simpleValue value="'~'" />
              </initialValue>
            </variable>
            <variable name="run">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF LEN(STR) &gt; 0 THEN
	run := TRUE;

	WHILE (run) DO
		pos := FIND(STR,src);
		PRINTF_DATA[10] := '';

		IF pos = 0 THEN
			run:= FALSE;
		ELSE
			c := OSCAT_BASIC.CODE(STR:=STR,POS:=pos + 1);
			IF OSCAT_BASIC.ISC_NUM(INT_TO_BYTE(c)) THEN
				c := c - 48; (* notwendig weil innerhalb einer indexangabe nur eine var stehen darf *)
				PRINTF_DATA[10] := PRINTF_DATA[c]; (* Kommando 1-9 ergibt Parameterindex 1-9 *)
				(* Parameter gegen Text tauschen *)
			END_IF;
			IF LEN(PRINTF_DATA[10]) + LEN(STR) &gt; LOG_SIZE THEN
				PRINTF_DATA[10] := '..';
			END_IF;
			(* pcworx: aus und eingangsstring muss verschieden sein *)
			PRINTF_DATA[11] := STR;
			STR := REPLACE(PRINTF_DATA[11],PRINTF_DATA[10],2,pos);
		END_IF;
	END_WHILE;
END_IF;

(* revision history

ks	14. aug. 2009	rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>7a0bfa01-0e75-42c8-b720-98b771208bd7</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="UNI_CIRCULAR_BUFFER" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="DATA">
              <type>
                <derived name="UNI_CIRCULAR_BUFFER_DATA" />
              </type>
            </variable>
          </inOutVars>
          <tempVars>
            <variable name="tmp_dw">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="pTmp">
              <type>
                <pointer>
                  <baseType>
                    <BYTE />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="n">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="n1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="n2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="x">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="buf_totalsize">
              <type>
                <UINT />
              </type>
            </variable>
          </tempVars>
          <localVars constant="true">
            <variable name="HeaderSize">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="4" />
              </initialValue>
            </variable>
          </localVars>
          <localVars>
            <variable name="cnt">
              <type>
                <UINT />
              </type>
            </variable>
            <variable name="mode_last">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE DATA.D_MODE OF

01:	x := WORD_TO_BYTE(DATA.D_HEAD); (* nur rechtes byte auswerten *)
	CASE x OF
	01:	cnt := LEN(DATA.D_STRING); (* String verarbeiten *)
		pTmp := ADR(DATA.D_STRING);
	02:	cnt := 4; (* Real verarbeiten *)
		pTmp := ADR(DATA.D_REAL);
	03:	cnt := 4; (* DWORD verarbeiten *)
		pTmp := ADR(DATA.D_DWORD);
	ELSE
		cnt := 0;
	END_CASE;

	DATA.BUF_DATA_CNT := DATA.BUF_DATA_CNT + UDINT#1;

	(* ------ Daten in buffer eintragen ------ *)
	buf_totalsize := SIZEOF(DATA.BUF);

	IF (cnt + HeaderSize) &gt; (buf_totalsize - DATA.BUF_SIZE) THEN (* genug Speicher frei ? *)
		DATA.BUF_DATA_LOST := DATA.BUF_DATA_LOST + UDINT#1;
		RETURN;
	END_IF;

	DATA.D_SIZE := cnt;

	mode_last := DATA.D_MODE;
	tmp_dw := SHL(WORD_TO_DWORD(DATA.D_HEAD),16) OR UINT_TO_DWORD(cnt);

	(* Header in Buffer eintragen *)
	n1 := 0;
	REPEAT
		n2 := MIN(HeaderSize - n1, buf_totalsize - DATA._Last);
		FOR n := 1 TO n2 DO
			tmp_dw := ROL(tmp_dw,8);
			data.BUF[DATA._Last] := DWORD_TO_BYTE(tmp_dw);
			DATA._Last := DATA._Last + 1;
		END_FOR;
		IF DATA._Last &gt;= buf_totalsize THEN
			DATA._Last := 0;
		END_IF
		n1 := n1 + n2;
	UNTIL n1 &gt;= HeaderSize
	END_REPEAT;

	(* Daten in Buffer eintragen *)
	n1 := 0;
	REPEAT
		n2 := MIN(cnt - n1, buf_totalsize - DATA._Last);
		FOR n := 1 TO n2 DO
			data.BUF[DATA._Last] := pTmp^;
			pTmp := pTmp + 1;
			DATA._Last := DATA._Last + 1;
		END_FOR;
		IF DATA._Last &gt;= buf_totalsize THEN
			DATA._Last := 0;
		END_IF
		n1 := n1 + n2;
	UNTIL n1 &gt;= cnt
	END_REPEAT;

	DATA.BUF_SIZE := DATA.BUF_SIZE + cnt + HeaderSize;
	DATA.BUF_COUNT := DATA.BUF_COUNT + 1;
	DATA.BUF_USED := UINT_TO_USINT(100 * DATA.BUF_SIZE / buf_totalsize); (* benützer Speicher in % *)
	DATA.D_MODE := 0;

	(*####################  DEBUG-MESSAGE  ###################################*)
	(*IF _debug_enable THEN
		LOG_CL.NEW_MSG := 'RP: ADD /HEAD ~1 / SIZE ~2 / CNT ~3 / &gt;~4&lt;';
		LOG_CL.PRINTF[1] := DWORD_TO_STRH(DATA.D_HEAD);
		LOG_CL.PRINTF[2] := UINT_TO_STRING(cnt);
		LOG_CL.PRINTF[3] := UINT_TO_STRING(DATA.BUF_COUNT);
		CASE x OF
		01:	LOG_CL.PRINTF[4] := DATA.D_STRING;
		02:	LOG_CL.PRINTF[4] := REAL_TO_STRING(DATA.D_REAL);
		03:	LOG_CL.PRINTF[4] := DWORD_TO_STRH(DATA.D_DWORD);
		ELSE
			LOG_CL.PRINTF[4] := '';
		END_CASE;
		LOG_MSG();
	END_IF;*)
	(*########################################################################*)

10..12:	(* ------ Daten aus buffer auslesen und optional löschen ------ *)
		(* 10 = nur lesen / 11 = löschen nach lesen / 12 = lesen und löschen *)
	IF DATA.D_MODE &lt;&gt; 11 THEN
		IF DATA.BUF_COUNT = 0 THEN RETURN; END_IF;
		buf_totalsize := SIZEOF(DATA.BUF);
		DATA._GetEnd := DATA._First;(* index des ältesten eintrags merken *)
		mode_last := DATA.D_MODE;
	
		(* Header aus Buffer lesen *)
		n1 := 0;
		tmp_dw := 0;
		REPEAT
			n2 := MIN(HeaderSize - n1, buf_totalsize - DATA._GetEnd);
			FOR n := 1 TO n2 DO
				tmp_dw := ROL(tmp_dw,8) OR BYTE_TO_DWORD(data.BUF[DATA._GetEnd]);
				DATA._GetEnd := DATA._GetEnd + 1;
			END_FOR;
			IF DATA._GetEnd &gt;= buf_totalsize THEN
				DATA._GetEnd := 0;
			END_IF
			n1 := n1 + n2;
		UNTIL n1 &gt;= HeaderSize
		END_REPEAT;
	
		DATA._GetStart := DATA._GetEnd;
		cnt := DWORD_TO_UINT(tmp_dw AND 16#0000_FFFF);
		DATA.D_SIZE := cnt;
		DATA.D_HEAD := DWORD_TO_WORD(SHR(tmp_dw,16));
	
		x := WORD_TO_BYTE(DATA.D_HEAD); (* nur rechtes byte auswerten *)
		CASE x OF
		01:	pTmp := ADR(DATA.D_STRING); (* String verarbeiten *)
		02:	pTmp := ADR(DATA.D_REAL); (* Real verarbeiten *)
		03:	pTmp := ADR(DATA.D_DWORD); (* DWORD verarbeiten *)
		END_CASE;
	
		(* Daten aus Buffer lesen *)
		n1 := 0;
		REPEAT
			n2 := MIN(cnt - n1, buf_totalsize - DATA._GetEnd);
			FOR n := 1 TO n2 DO
				pTmp^ := data.BUF[DATA._GetEnd];
				pTmp := pTmp + 1;
				DATA._GetEnd := DATA._GetEnd + 1;
			END_FOR;
			IF DATA._GetEnd &gt;= buf_totalsize THEN
				DATA._GetEnd := 0;
			END_IF
			n1 := n1 + n2;
		UNTIL n1 &gt;= cnt
		END_REPEAT;
		IF x = 1 THEN
			pTmp^ := 0; (* String terminieren *)
		END_IF;
		DATA.D_MODE := 0;
	
		(*####################  DEBUG-MESSAGE  ###################################*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'RP: READ /HEAD ~1 / SIZE ~2 / CNT ~3 / &gt;~4&lt;';
			LOG_CL.PRINTF[1] := DWORD_TO_STRH(DATA.D_HEAD);
			LOG_CL.PRINTF[2] := UINT_TO_STRING(cnt);
			LOG_CL.PRINTF[3] := UINT_TO_STRING(DATA.BUF_COUNT);
			CASE x OF
			01:	LOG_CL.PRINTF[4] := DATA.D_STRING;
			02:	LOG_CL.PRINTF[4] := REAL_TO_STRING(DATA.D_REAL);
			03:	LOG_CL.PRINTF[4] := DWORD_TO_STRH(DATA.D_DWORD);
			ELSE
				LOG_CL.PRINTF[4] := '';
			END_CASE;
			LOG_MSG();
		END_IF;*)
		(*########################################################################*)
	END_IF;

	IF (mode_last = 10 AND DATA.D_MODE = 11) OR (mode_last = 12 AND DATA.D_MODE = 0) THEN (* löschen nur direkt nach lesen möglich *)
		mode_last := DATA.D_MODE;
		DATA.BUF_SIZE := DATA.BUF_SIZE - cnt - HeaderSize;
		DATA.BUF_COUNT := DATA.BUF_COUNT - 1;
		DATA._First := DATA._GetEnd;
		DATA.BUF_USED := UINT_TO_USINT(100 * DATA.BUF_SIZE / SIZEOF(DATA.BUF)); (* benützer Speicher in % *)
		DATA.D_MODE := 0;

		(*####################  DEBUG-MESSAGE  ###################################*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'RP: DEL /HEAD ~1 / SIZE ~2 / CNT ~3 / &gt;~4&lt;';
			LOG_CL.PRINTF[1] := DWORD_TO_STRH(DATA.D_HEAD);
			LOG_CL.PRINTF[2] := UINT_TO_STRING(cnt);
			LOG_CL.PRINTF[3] := UINT_TO_STRING(DATA.BUF_COUNT);
			CASE x OF
			01:	LOG_CL.PRINTF[4] := DATA.D_STRING;
			02:	LOG_CL.PRINTF[4] := REAL_TO_STRING(DATA.D_REAL);
			03:	LOG_CL.PRINTF[4] := DWORD_TO_STRH(DATA.D_DWORD);
			ELSE
				LOG_CL.PRINTF[4] := '';
			END_CASE;
			LOG_MSG();
		END_IF;*)
		(*########################################################################*)
	END_IF;

99:	(* Buffer reset - alles löschen *)
	DATA._First := 0;
	DATA._Last := 0;
	DATA._GetStart := 0;
	DATA._GetEnd := 0;
	DATA.BUF_COUNT := 0;
	DATA.BUF_SIZE := 0;
	DATA.BUF_USED := 0;
	DATA.D_STRING := '';
	DATA.D_DWORD := 0;
	DATA.D_REAL := 0.0;
	DATA.D_HEAD := 0;
	DATA.D_MODE := 0;
	DATA.D_SIZE := 0;
	mode_last := 0;
END_CASE;

(* höchsten Auslastungswert speichern *)
IF DATA.BUF_USED &gt; DATA.BUF_USED_MAX THEN
	DATA.BUF_USED_MAX := DATA.BUF_USED;
END_IF;

(* revision history
ks	01. jan. 2011	rev 1.0
	original version
ks	25. jul. 2011	rev 1.1
	neuen MODE 12 hinzugefügt
ks	03. Sep. 2015	rev 1.2
	Auslastungsüberwachung hinzugefügt
ks	21. mar. 2016	rev 1.3
	D_SIZE info hinzugefügt
	Buffer size auf 8192 vergroessert
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>7fabe930-5034-4a17-93c1-d2837a51259e</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="XML_READER" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="CTRL">
              <type>
                <derived name="XML_CONTROL" />
              </type>
            </variable>
            <variable name="BUF">
              <type>
                <derived name="NW_BUF_LONG" />
              </type>
            </variable>
          </inOutVars>
          <localVars>
            <variable name="index">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="index2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="stop">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="mode">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="command">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="c">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="s1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="e1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="path_overflow">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="empty_tag">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="s_code">
              <type>
                <string length="10" />
              </type>
            </variable>
            <variable name="e_code">
              <type>
                <string length="10" />
              </type>
            </variable>
            <variable name="watchdog">
              <type>
                <derived name="TON" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*

TYP
00 = UNBEKANNT
01 = ELEMENT (STANDARD)
02 = CLOSE ELEMENT 
03 = TEXT
04 = ATTRIBUTE
05 = ELEMENT (PROCESSING INSTRUCTION) 

12 = !CDATA
13 = !COMMENT
14 = !DTD ELEMENT (Document Type Declarations )

98 = WATCHDOG
99 = ENDE

Bei Typ 02 werden keine Blockdaten ausgegeben !

*)

(* ---------- Init -------------- *)
IF OSCAT_BASIC.BIT_OF_DWORD(WORD_TO_DWORD(CTRL.COMMAND),15) THEN
	COMMAND := CTRL.COMMAND;
	CTRL.COMMAND := WORD#0;

	index := UINT_TO_INT(CTRL.START_POS);
	stop := UINT_TO_INT(CTRL.STOP_POS);
	mode := 100;
	path_overflow := FALSE;

	CTRL.TYP := 0;
	CTRL.COUNT := UINT#00;
	CTRL.LEVEL := UINT#00;
	CTRL.ATTRIBUTE := '';
	CTRL.ELEMENT := '';
	CTRL.PATH := '';
	CTRL.VALUE := '';

	WATCHDOG.PT := CTRL.WATCHDOG;
END_IF;

(*----------------------------------------------- *)

IF index &lt; 0 THEN RETURN;END_IF;

CTRL.BLOCK1_START := UINT#0;
CTRL.BLOCK1_STOP := UINT#0;
CTRL.BLOCK2_START := UINT#0;
CTRL.BLOCK2_STOP := UINT#0;

WATCHDOG(IN:=FALSE); (* Timer stoppen *)

WHILE (TRUE) DO

	(* -------------- WATCHDOG ------------------ *)
	WATCHDOG(IN:=CTRL.WATCHDOG &gt; T#0s);
	IF WATCHDOG.Q THEN
		CTRL.TYP := 98;
    		(*####################  DEBUG-MESSAGE  ###################################*)
    		(*IF _debug_enable THEN
      			LOG_CL.NEW_MSG := 'WATCHDOG:';
      			LOG_MSG();
    		END_IF;*)
    		(*########################################################################*)
		RETURN;
	END_IF;

	(* -------------- PARSING END ------------------ *)
	IF index &gt; stop THEN
		CTRL.COUNT := CTRL.COUNT + UINT#1;
		CTRL.TYP := 99;
    		(*####################  DEBUG-MESSAGE  ###################################*)
    		(*IF _debug_enable THEN
      			LOG_CL.NEW_MSG := 'EX: #T:~1 #C:~2 #P:~6 #L:~7';
      			LOG_CL.PRINTF[1] := INT_TO_STRING(CTRL.TYP);
      			LOG_CL.PRINTF[2] := UINT_TO_STRING(CTRL.COUNT);
      			LOG_CL.PRINTF[6] := CTRL.PATH;
      			LOG_CL.PRINTF[7] := UINT_TO_STRING(CTRL.LEVEL);
      			LOG_MSG();
    		END_IF;*)
    		(*########################################################################*)
		mode  := 0; (* Schritt ruecksetzen *)
		index := 0; (* Abarbeitung stoppen *)
		RETURN;
	END_IF;

	CASE mode OF

	100: (* ---------- ELEMENT SECTION ------------------ *)
		(* search begin of element *)
		s1 := 0;
		e1 := 0;
		WHILE (index &lt;= stop) DO
			IF BUF[INDEX]=BYTE#60 THEN (* '&lt;' TagBegin *)
				index := index + 1;
				C := BUF[index];
				IF C = BYTE#47 THEN (* '/' TagTerm *)
					mode := 300; (* End Element Section *)
				ELSIF C = BYTE#33 THEN (* '!' for Special Section *)
					index := index + 1;
					mode := 500;
				ELSE
					s1 := index;
				END_IF;
				EXIT;
			END_IF;
			index := index + 1;
		END_WHILE;

		(* analyse element *)
		CTRL.TYP := 0; (* TYP löschen *)
		IF s1 &gt; 0 THEN
			WHILE (index &lt;= stop AND e1 = 0) DO
				c := BUF[index];
				(* whitespace zeichen = Element with Attributes *)
				IF c &lt;= BYTE#32 THEN
					(* suche nächstes druckbares zeichen *)
					index2 := index;
					WHILE (index2 &lt;= stop) AND (BUF[index2] &lt;= BYTE#32) DO
						index2 := index2 + 1;
					END_WHILE;
					IF BUF[index2] = BYTE#47 THEN (* pruefe auf leeres Element '/' *)
						index := index2;
						e1 := index - 2;
						CTRL.TYP := 1; (* struktur-element *)
						mode := 300;   (* Close Element *)
						EXIT;
					END_IF;

					e1 := index - 1;
					CTRL.TYP := 1; (* Element mit Attribute *)
					mode := 400;

				ELSIF c = BYTE#62 THEN (* '&gt;' TagEnd *)

					(* pruefe auf leeres Element &lt;xx/&gt; *)
					index2 := index - 1;
					IF BUF[index2] = BYTE#47 THEN (* TagTerm '/' *)
						e1 := index2 - 1;
						CTRL.TYP := 1;
						EMPTY_TAG := TRUE; (* EMPTY TAG Mode *)
						mode := 200; (* TEXT Element *)
						EXIT;
					END_IF;

					e1 := index - 1;
					index2 := index + 1;

					(* untersuche nachfolgendes Element *)
					WHILE (index2 &lt;= stop) DO
						c := BUF[index2];
						IF c = BYTE#60 THEN (* '&lt;' TagBegin *)

							index2 := index2 + 1; (* geht bei PCWORX leider nicht anders !*)
							c := BUF[index2];
							index2 := index2 - 1;
							IF c = BYTE#47 THEN (* TagTerm '/' *)
								empty_tag := TRUE;
								mode := 200; (* TEXT Element *)
							ELSE
								mode := 100; (* Element *)
							END_IF;
							CTRL.TYP := 1; (* struktur-element *)
							EXIT;
						ELSIF c &gt; BYTE#32  THEN (* Printable-Character *)
							CTRL.TYP := 1; (* element with text *)
							mode := 200;
							EXIT;
						END_IF;
						index2 := index2 + 1;
					END_WHILE;
				END_IF;
				index := index + 1;
			END_WHILE;
		END_IF;

		(* Neues Element gefunden*)
		IF CTRL.TYP &gt; 0 THEN

			(* Sonderprüfung auf Processing Instruction (PI) *)
			IF BUF[s1] = BYTE#63 THEN (* '?' for Processing Instruction *)
				s1 := s1 + 1; (* führendes '?' auslassen *)
				CTRL.TYP := 5;
			END_IF;
			CTRL.BLOCK1_START := INT_TO_UINT(s1);
			CTRL.BLOCK1_STOP  := INT_TO_UINT(e1);
			CTRL.ELEMENT := OSCAT_BASIC.BUFFER_TO_STRING(PT:=ADR(BUF),SIZE:=INT_TO_UINT(stop + 1),START:=CTRL.BLOCK1_START,STOP:=CTRL.BLOCK1_STOP);
			CTRL.COUNT := CTRL.COUNT + UINT#1;
			CTRL.LEVEL := CTRL.LEVEL + UINT#1;

			IF path_overflow = FALSE THEN
				(* Stringlänge überwachen *)
				IF LEN(CTRL.PATH) + LEN(CTRL.ELEMENT) + 1 &gt; 250 THEN
					path_overflow := TRUE;
					CTRL.PATH := 'OVERFLOW';
				ELSE
					CTRL.PATH := CONCAT(CTRL.PATH,'/');
					CTRL.PATH  := CONCAT(CTRL.PATH,CTRL.ELEMENT);
				END_IF;
			END_IF;

			IF OSCAT_BASIC.BIT_OF_DWORD(WORD_TO_DWORD(COMMAND),CTRL.TYP) THEN
        				(*####################  DEBUG-MESSAGE  ###################################*)
        				(*IF _debug_enable THEN
          				LOG_CL.NEW_MSG := 'EL: #T:~1 #C:~2 #E:~3 #P:~6 #L:~7';
          				LOG_CL.PRINTF[1] := INT_TO_STRING(CTRL.TYP);
          				LOG_CL.PRINTF[2] := UINT_TO_STRING(CTRL.COUNT);
          				LOG_CL.PRINTF[3] := CTRL.ELEMENT;
          				LOG_CL.PRINTF[6] := CTRL.PATH;
          				LOG_CL.PRINTF[7] := UINT_TO_STRING(CTRL.LEVEL);
          				LOG_MSG();
        				END_IF;*)
        				(*########################################################################*)
				RETURN;
			END_IF;
		END_IF;

	200: (* ---------- TEXT SECTION ------------------ *)
		CTRL.VALUE := '';
		IF empty_tag = FALSE THEN
			s1 := index;
			(* suche '&lt;' EndTag*)
			WHILE (index &lt;= stop) AND (BUF[index] &lt;&gt; BYTE#60) DO
				index := index + 1;
			END_WHILE;

			E1 := index - 1;
			CTRL.BLOCK1_START := INT_TO_UINT(s1);
			CTRL.BLOCK1_STOP  := INT_TO_UINT(e1);
			CTRL.VALUE := OSCAT_BASIC.BUFFER_TO_STRING(PT:=ADR(BUF),SIZE:=INT_TO_UINT(stop + 1),START:=CTRL.BLOCK1_START,STOP:=CTRL.BLOCK1_STOP);
		END_IF;

		empty_tag := FALSE;
		mode := 300; (* -&gt; NEXT-JOB: END ELEMENT *)
		CTRL.COUNT := CTRL.COUNT + UINT#1;
		CTRL.TYP := 3;

		IF OSCAT_BASIC.BIT_OF_DWORD(WORD_TO_DWORD(command),CTRL.TYP) THEN
      			(*####################  DEBUG-MESSAGE  ###################################*)
      			(*IF _debug_enable THEN
        				LOG_CL.NEW_MSG := 'TE: #T:~1 #C:~2 #E:~3 #V:~4 #P:~6 #L:~7';
        				LOG_CL.PRINTF[1] := INT_TO_STRING(CTRL.TYP);
        				LOG_CL.PRINTF[2] := UINT_TO_STRING(CTRL.COUNT);
        				LOG_CL.PRINTF[3] := CTRL.ELEMENT;
        				LOG_CL.PRINTF[4] := CTRL.VALUE;
        				LOG_CL.PRINTF[6] := CTRL.PATH;
        				LOG_CL.PRINTF[7] := UINT_TO_STRING(CTRL.LEVEL);
        				LOG_MSG();
      			END_IF;*)
      			(*########################################################################*)
			RETURN;
		END_IF;

	300: (* ---------- END ELEMENT SECTION ------------------ *)
		WHILE (index &lt;= stop) DO
			c := BUF[index];
			IF c = BYTE#62 THEN (* '&gt;' TagEnd *)
				index := index + 1;
				s1 := OSCAT_BASIC.FINDB(str1:=CTRL.PATH,str2:='/');
				IF path_overflow = FALSE THEN
					IF s1 &gt; 1 THEN
						CTRL.ELEMENT := RIGHT(CTRL.PATH,LEN(CTRL.PATH) - s1);
						CTRL.PATH := LEFT(CTRL.PATH,s1 - 1);
					ELSE
						CTRL.ELEMENT := RIGHT(CTRL.PATH,LEN(CTRL.PATH) - 1);
						CTRL.PATH :='';
					END_IF;
				END_IF;

				CTRL.LEVEL := CTRL.LEVEL - UINT#1;
				CTRL.COUNT := CTRL.COUNT + UINT#1;
				CTRL.TYP := 2;
				mode := 100;

				IF OSCAT_BASIC.BIT_OF_DWORD(WORD_TO_DWORD(COMMAND),CTRL.TYP) THEN
         	 				(*####################  DEBUG-MESSAGE  ###################################*)
          				(*IF _debug_enable THEN
            					LOG_CL.NEW_MSG := 'CE: #T:~1 #C:~2 #E:~3 #P:~6 #L:~7';
            					LOG_CL.PRINTF[1] := INT_TO_STRING(CTRL.TYP);
            					LOG_CL.PRINTF[2] := UINT_TO_STRING(CTRL.COUNT);
            					LOG_CL.PRINTF[3] := CTRL.ELEMENT;
            					LOG_CL.PRINTF[6] := CTRL.PATH;
            					LOG_CL.PRINTF[7] := UINT_TO_STRING(CTRL.LEVEL);
            					LOG_MSG();
          				END_IF;*)
          				(*########################################################################*)
					RETURN;
				ELSE
					EXIT;
				END_IF;
			END_IF;
			index := index + 1;
		END_WHILE;

	400: (* ---------- ATTRIBUTE SECTION ------------------ *)
		(* search first normal charakter *)
		WHILE (index &lt;= stop AND BUF[index] &lt;= BYTE#32) DO
			index := index + 1;
		END_WHILE;

		(* begin Attribe name *)
		e1 := 0;
		s1 := index;
		(* search end of Attrib Name '=' *)
		WHILE (index &lt;= stop) DO
			IF BUF[index] = BYTE#61 THEN (* '=' Equals *)
				e1 := index - 1;
				EXIT;
			END_IF;
			index := index + 1;
		END_WHILE;

		IF e1 &gt; 0 THEN
			(* Attribute Name *)
			CTRL.BLOCK1_START := INT_TO_UINT(s1);
			CTRL.BLOCK1_STOP  := INT_TO_UINT(e1);
			CTRL.ATTRIBUTE := OSCAT_BASIC.BUFFER_TO_STRING(PT:=ADR(BUF),SIZE:=INT_TO_UINT(STOP + 1),START:=CTRL.BLOCK1_START,STOP:=CTRL.BLOCK1_STOP);
			(* search end of Attrib Value '=' *)
			index := index + 2;
			e1 := 0;
			s1 := INDEX;
			WHILE (index &lt;= stop AND e1 = 0) DO
				c := BUF[index];
				IF c = BYTE#34 OR c = BYTE#39 THEN (* " OR ' Equals *)
					e1 := index - 1;
				END_IF;
				index := index + 1;
			END_WHILE;

			IF e1 &gt; 0 THEN
				(* Value *)
				CTRL.BLOCK2_START := INT_TO_UINT(s1);
				CTRL.BLOCK2_STOP  := INT_TO_UINT(e1);

				(* bei leeren "" ist start groesser als stop und wird somit zum leerstring *)
				CTRL.VALUE := OSCAT_BASIC.BUFFER_TO_STRING(PT:=ADR(BUF),SIZE:=INT_TO_UINT(stop + 1),START:=CTRL.BLOCK2_START,STOP:=CTRL.BLOCK2_STOP);
				(* search next non white space charakter *)
				WHILE (index &lt;= stop AND BUF[index] &lt;= BYTE#32) DO
					index := index + 1;
				END_WHILE;

					c := BUF[index];
					(* TagEnd '&gt;' *)
					IF c = BYTE#62 THEN
						index := index + 1;
						index2 := index;

					(* search next non white space charakter *)
					WHILE (index &lt;= stop AND BUF[index] &lt;= BYTE#32) DO
						index := index + 1;
					END_WHILE;

					IF BUF[index] = BYTE#60 THEN (* TagBegin '&lt;' *)
						mode := 100; (* -&gt; NEXT-JOB: ELEMENT-SECTION *)
					ELSE
						index := index2;
						mode := 200; (* -&gt; NEXT-JOB: TEXT-SECTION *)
					END_IF;

				ELSIF c = BYTE#47 OR c = BYTE#63 THEN (* TagTerm '/' OR '?' end Processing Instruction *)
					mode := 300; (* -&gt; NEXT-JOB: END ELEMENT *)
				ELSE
					mode := 400; (* -&gt; NEXT-JOB: ATTRIBUTE-SECTION *)
				END_IF;

				CTRL.COUNT := CTRL.COUNT + UINT#1;
				CTRL.TYP := 4;
				IF OSCAT_BASIC.BIT_OF_DWORD(WORD_TO_DWORD(command),CTRL.TYP) THEN
          				(*####################  DEBUG-MESSAGE  ###################################*)
          				(*IF _debug_enable THEN
            					LOG_CL.NEW_MSG := 'AT: #T:~1 #C:~2 #E:~3 #A:~4 #V:~5 #P:~6 #L:~7';
            					LOG_CL.PRINTF[1] := INT_TO_STRING(CTRL.TYP);
            					LOG_CL.PRINTF[2] := UINT_TO_STRING(CTRL.COUNT);
            					LOG_CL.PRINTF[3] := CTRL.ELEMENT;
            					LOG_CL.PRINTF[4] := CTRL.ATTRIBUTE;
            					LOG_CL.PRINTF[5] := CTRL.VALUE;
            					LOG_CL.PRINTF[6] := CTRL.PATH;
            					LOG_CL.PRINTF[7] := UINT_TO_STRING(CTRL.LEVEL);
            					LOG_MSG();
          				END_IF;*)
          				(*########################################################################*)
					RETURN;
				END_IF;
			END_IF;
		END_IF;

	500: (* ---------- SPECIAL DATA SECTION (Document Type Declarations) ---------- *)

		CTRL.TYP := 0;
		s1 := 0;
		index2 := 11;

		WHILE (s1 = 0) DO
			index2 := index2 + 1;
			CTRL.TYP := index2;

			CASE index2 OF
			12: (* CDATA *)
				s_code := '[CDATA[';
				e_code := ']]&gt;';
			13: (* COMMENT *)
				s_code := '--';
				e_code := '--&gt;';
			14: (* ANY DTD *)
				e_code := '';
				s1 := index;
				EXIT;
			END_CASE;

			e1 := LEN(s_code);
			IF OSCAT_BASIC.BUFFER_SEARCH(PT:=ADR(BUF),SIZE:=INT_TO_UINT(index + e1),STR:=S_CODE,POS:=index,IGN:=FALSE) = INDEX THEN
				s1 := index + e1;
			END_IF;
		END_WHILE;

		CTRL.BLOCK1_START := INT_TO_UINT(s1);
		IF LEN(e_code) &gt; 0 THEN
			(* Ende Kennung suchen *)
			e1 := OSCAT_BASIC.BUFFER_SEARCH(PT:=ADR(BUF),SIZE:=INT_TO_UINT(stop + 1),STR:=e_code,POS:=index,IGN:=FALSE);
			CTRL.BLOCK1_STOP := INT_TO_UINT(e1 - 1);
			index := e1 + LEN(e_code); (* naechstes element *)
		ELSE
			(* suche '&gt;' EndTag*)
			index2 := 1; (* &lt;&gt; Paar zähler *)
			WHILE (index &lt;= stop AND index2 &gt; 0) DO
				c := BUF[index];
				IF c = BYTE#60 THEN (* '&lt;' TagBegin *)
					index2 := index2 + 1;
				ELSIF c = BYTE#62 THEN (* '&gt;' TagEnd   *)
					index2 := index2 - 1;
				ELSIF c = BYTE#34 OR c = BYTE#39 THEN (* " Double Quote OR ' Single Quote *)
					index := index + 1;
					WHILE (index &lt;= stop) DO
						c := BUF[index];
						IF c = BYTE#34 OR c = BYTE#39 THEN (* " Double Quote OR ' Single Quote *)
							EXIT;
						END_IF;
						index := index + 1;
					END_WHILE;
				END_IF;
				index := index + 1;
			END_WHILE;
			CTRL.BLOCK1_STOP := INT_TO_UINT(index - 2);
		END_IF;

		CTRL.VALUE := OSCAT_BASIC.BUFFER_TO_STRING(PT:=ADR(BUF),SIZE:=INT_TO_UINT(stop + 1),START:=CTRL.BLOCK1_START,STOP:=CTRL.BLOCK1_STOP);
		CTRL.COUNT := CTRL.COUNT + UINT#1;
		mode := 100; (* -&gt; NEXT-JOB: ELEMENT *)

		IF OSCAT_BASIC.BIT_OF_DWORD(WORD_TO_DWORD(command),CTRL.TYP) THEN
      			(*####################  DEBUG-MESSAGE  ###################################*)
      			(*IF _debug_enable THEN
        				LOG_CL.NEW_MSG := 'DTD: #T:~1 #C:~2 #S:~3 #E:~4 #V:~5 #P:~6 #L:~7';
        				LOG_CL.PRINTF[1] := INT_TO_STRING(CTRL.TYP);
        				LOG_CL.PRINTF[2] := UINT_TO_STRING(CTRL.COUNT);
        				LOG_CL.PRINTF[3] := UINT_TO_STRING(CTRL.BLOCK1_START);
        				LOG_CL.PRINTF[4] := UINT_TO_STRING(CTRL.BLOCK1_STOP);
        				LOG_CL.PRINTF[5] := CTRL.VALUE;
        				LOG_CL.PRINTF[6] := CTRL.PATH;
        				LOG_CL.PRINTF[7] := UINT_TO_STRING(CTRL.LEVEL);
        				LOG_MSG();
      			END_IF;*)
      			(*########################################################################*)
			RETURN;
		END_IF;

	END_CASE;
END_WHILE;


(* revision history
ks	18. oct. 2008	rev 1.0
	original version

ks	20. oct. 2009	rev 1.1
	Networkbuffer und Buffer-funktionen auf Basis 0

ks	10. mai. 2010	rev 1.2
	stringlänge maximal 250 zeichen

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>12dd8c94-a9f8-4d1f-b129-6dcb31193b60</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TN_FRAMEWORK" pouType="functionBlock">
        <interface>
          <localVars>
            <variable name="FB_IP_CONTROL">
              <type>
                <derived name="IP_CONTROL" />
              </type>
            </variable>
            <variable name="FB_TN_INPUT_CONTROL">
              <type>
                <derived name="TN_INPUT_CONTROL" />
              </type>
            </variable>
            <variable name="FB_TN_INPUT_MENU_BAR">
              <type>
                <derived name="TN_INPUT_MENU_BAR" />
              </type>
            </variable>
            <variable name="FB_TN_RECEIVE">
              <type>
                <derived name="TN_RECEIVE" />
              </type>
            </variable>
            <variable name="FB_TN_SEND_ROWS">
              <type>
                <derived name="TN_SEND_ROWS" />
              </type>
            </variable>
            <variable name="t">
              <type>
                <derived name="TON" />
              </type>
            </variable>
          </localVars>
          <inOutVars>
            <variable name="us_TN_INPUT_CONTROL">
              <type>
                <derived name="us_TN_INPUT_CONTROL" />
              </type>
            </variable>
            <variable name="us_TN_SCREEN">
              <type>
                <derived name="us_TN_SCREEN" />
              </type>
            </variable>
            <variable name="us_TN_MENU">
              <type>
                <derived name="us_TN_MENU" />
              </type>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="PORT">
              <type>
                <WORD />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Initialisierung / Freigeben der Verbindung *)
IF (NOT IP_C.C_ENABLE) THEN

	(* IP Datenverkehr einrichten *)
	IP_C.C_PORT := SEL(PORT=BYTE#0,PORT,WORD#23); (* Portnummer eintragen *)
	IP_C.C_IP := DWORD#00; (* IP eintragen *)
	IP_C.C_MODE := BYTE#4; (* Mode: TCP+PASSIV+PORT *)
	IP_C.TIME_RESET := TRUE; (* Zeitueberwachung rücksetzen *)
	IP_C.C_ENABLE := TRUE; (* Verbindungsaufbau freigeben *)
	IP_C.R_OBSERVE := FALSE; (* keine Empfangsueberwachung *)

END_IF;

t(IN:= IP_C.ERROR &gt; DWORD#0, PT:=T#5s);
IF t.Q THEN
	IP_C.TIME_RESET := TRUE; (* Error Reset *)
END_IF;

(* Telnet-Menu-Bar *)
FB_TN_INPUT_MENU_BAR(
	Xus_TN_MENU := us_TN_MENU,
	Xus_TN_SCREEN := us_TN_SCREEN);

(* Telnet-Input-Control *)
FB_TN_INPUT_CONTROL(
	Xus_TN_SCREEN := us_TN_SCREEN,
	Xus_TN_INPUT_CONTROL := us_TN_INPUT_CONTROL);

(* Telnet-Data-Send Line-Updates *)
FB_TN_SEND_ROWS(
	IP_C :=IP_C,
	S_BUF :=S_BUF,
	Xus_TN_SCREEN :=us_TN_SCREEN,
	S_BUF_SIZE :=SIZEOF(S_BUF.BUFFER));

(* Telnet-Server *)
FB_IP_CONTROL(
	IP_C :=IP_C,
	S_BUF :=S_BUF,
	R_BUF :=R_BUF,
	IP :=DWORD#00,
	PORT :=WORD#00,
	TIME_OUT :=T#2s);

(* Telnet-Data-Receive *)
FB_TN_RECEIVE(
	R_BUF := R_BUF,
	Xus_TN_SCREEN := us_TN_SCREEN);

(* revision history
ks	10. mai. 2010	rev 1.0
	original version

ks	17. may. 2011	rev 1.1
	automatischer re-connect

ks	05. may. 2012	rev 1.2
	neue parameter PORT
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>409ffed1-46c0-4080-a6db-5aacbd887a6f</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TN_INPUT_CONTROL" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="Xus_TN_SCREEN">
              <type>
                <derived name="us_TN_SCREEN" />
              </type>
            </variable>
            <variable name="Xus_TN_INPUT_CONTROL">
              <type>
                <derived name="us_TN_INPUT_CONTROL" />
              </type>
            </variable>
          </inOutVars>
          <localVars>
            <variable name="FB_TN_INPUT_SELECT_POPUP">
              <type>
                <derived name="TN_INPUT_SELECT_POPUP" />
              </type>
            </variable>
            <variable name="FB_TN_INPUT_SELECT_TEXT">
              <type>
                <derived name="TN_INPUT_SELECT_TEXT" />
              </type>
            </variable>
            <variable name="FB_TN_SC_WRITE_C">
              <type>
                <derived name="TN_SC_WRITE_C" />
              </type>
            </variable>
            <variable name="FB_TN_INPUT_EDIT_LINE">
              <type>
                <derived name="TN_INPUT_EDIT_LINE" />
              </type>
            </variable>
            <variable name="in_index">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_Scroll_Offset">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_Focus_new">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_Focus_alt">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="bo_Tool_Tip_Update">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Bearbeitung freigegeben ? *)
IF (Xus_TN_INPUT_CONTROL.bo_Enable = FALSE) OR (Xus_TN_SCREEN.bo_Menue_Bar_Dialog = TRUE) THEN
	RETURN;
END_IF;

(* Fokus Reset durchführen *)
IF (Xus_TN_INPUT_CONTROL.bo_Reset_Fokus = TRUE) THEN
	Xus_TN_INPUT_CONTROL.bo_Reset_Fokus := FALSE;

	FOR in_index := INT#01 TO Xus_TN_INPUT_CONTROL.in_Count DO
		Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[in_index].bo_Focus := FALSE;
	END_FOR;

	IF (Xus_TN_INPUT_CONTROL.in_Count &gt;= INT#01) THEN
		Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[1].bo_Focus := TRUE;
		Xus_TN_INPUT_CONTROL.in_Focus_at := INT#01;
	END_IF;

	Xus_TN_INPUT_CONTROL.bo_Update_all := TRUE;
END_IF;

IF (Xus_TN_SCREEN.bo_Modal_Dialog = FALSE) THEN
	(* TAB-Taste für Control-element wechsel auswerten *)
	IF (Xus_TN_SCREEN.by_Input_Exten_Code = BYTE#09) THEN

		in_Scroll_Offset := INT#01;

		(* Cursor-Oben Taste *)
	ELSIF (Xus_TN_SCREEN.by_Input_Exten_Code = BYTE#65) THEN

		in_Scroll_Offset := -1;

		(* Cursor-unten Taste *)
	ELSIF (Xus_TN_SCREEN.by_Input_Exten_Code = BYTE#66) THEN

		in_Scroll_Offset := INT#01;

	END_IF;
END_IF;

IF (in_Scroll_Offset &lt;&gt; INT#00) THEN  
	(* Grenzwerte überprüfen                                            *)

	Xus_TN_INPUT_CONTROL.in_Focus_at:=LIMIT(INT#01,Xus_TN_INPUT_CONTROL.in_Focus_at,Xus_TN_INPUT_CONTROL.in_Count);

	in_Focus_new := Xus_TN_INPUT_CONTROL.in_Focus_at + in_Scroll_Offset;

	IF (in_Focus_new &gt; Xus_TN_INPUT_CONTROL.in_Count) THEN
		in_Focus_new := INT#1;
	END_IF;

	IF (in_Focus_new &lt; INT#01) THEN
		in_Focus_new := Xus_TN_INPUT_CONTROL.in_Count;
	END_IF;

	in_Focus_alt := Xus_TN_INPUT_CONTROL.in_Focus_at;

	(* aktuellen Element den Fokus entziehen *)
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[in_Focus_alt].bo_Focus := FALSE;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[in_Focus_alt].bo_Update_Input := TRUE;

	(* neuem Element den Fokus geben *)
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[in_Focus_new].bo_Focus  := TRUE;
	Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[in_Focus_new].bo_Update_Input := TRUE;

	Xus_TN_INPUT_CONTROL.in_Focus_at := in_Focus_new;

	bo_Tool_Tip_Update := TRUE;
	in_Scroll_Offset := INT#00;

END_IF;

(* Alle Elemente updaten ? *)
IF (Xus_TN_INPUT_CONTROL.bo_Update_all = TRUE) THEN
	FOR in_index := 1 TO Xus_TN_INPUT_CONTROL.in_Count DO
		Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[in_index].bo_Update_All := TRUE;
	END_FOR;
	Xus_TN_INPUT_CONTROL.bo_Update_all := FALSE;
	bo_Tool_Tip_Update := TRUE;
END_IF;

FOR in_index := 1 TO Xus_TN_INPUT_CONTROL.in_Count DO

	IF (Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[in_index].in_Type &gt; INT#00) THEN

		IF (Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[in_index].bo_Focus = TRUE) THEN

			Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[in_index].by_Input_ASCII_Code  := Xus_TN_SCREEN.by_Input_ASCII_Code;
			Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[in_index].by_Input_Exten_Code  := Xus_TN_SCREEN.by_Input_Exten_Code;
			Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[in_index].bo_Input_ASCII_IsNum := Xus_TN_SCREEN.bo_Input_ASCII_IsNum;

			(* Tool-Tip Text ausgeben *)
			IF (bo_Tool_Tip_Update = TRUE) THEN

				FB_TN_SC_WRITE_C(	Iin_Y := Xus_TN_INPUT_CONTROL.in_ToolTip_Y,
									Iin_X := Xus_TN_INPUT_CONTROL.in_ToolTip_X,
									Iby_ATTR := Xus_TN_INPUT_CONTROL.by_ToolTip_Attr,
									Iin_OPTION := INT#02, (* Center-String *)
									Iin_LENGTH := Xus_TN_INPUT_CONTROL.in_ToolTip_Size,
									Ist_STRING := Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[in_index].st_Input_ToolTip,
									Xus_TN_SCREEN := Xus_TN_SCREEN);

				(* Flag rücksetzen *)
				bo_Tool_Tip_Update := FALSE;
			END_IF;
		END_IF;

		CASE Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[in_index].in_Type OF
		1:
			(* Edit-Line bearbeiten *)
			FB_TN_INPUT_EDIT_LINE(	Xus_TN_INPUT_CONTROL_DATA := Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[in_index],
									Xus_TN_SCREEN := Xus_TN_SCREEN);
		2:
			(* Select-Text bearbeiten *)
			FB_TN_INPUT_SELECT_TEXT(	Xus_TN_INPUT_CONTROL_DATA := Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[in_index],
										Xus_TN_SCREEN := Xus_TN_SCREEN);
		3:
			(* Select-Popup bearbeiten *)
			FB_TN_INPUT_SELECT_POPUP(	Xus_TN_INPUT_CONTROL_DATA := Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[in_index],
										Xus_TN_SCREEN := Xus_TN_SCREEN);
		END_CASE;

		IF (Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[in_index].bo_Focus = TRUE) THEN

			(* Cursor position von Element auf Screen übertragen *)
			Xus_TN_SCREEN.in_Cursor_X := Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[in_index].in_Cursor_X;
			Xus_TN_SCREEN.in_Cursor_Y := Xus_TN_INPUT_CONTROL.usa_TN_INPUT_CONTROL_DATA[in_index].in_Cursor_Y;

		END_IF;
	END_IF;
END_FOR;

(* revision history
ks	10. mai. 2010	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b21d4819-5ec8-4c9d-80a4-28c3c3a0a085</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TN_INPUT_EDIT_LINE" pouType="functionBlock">
        <interface>
          <localVars>
            <variable name="in_count">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_Count_End">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_CursorOffset">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="by_Attr">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="st_String">
              <type>
                <string />
              </type>
            </variable>
            <variable name="bo_Pos_Found">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="st_CHAR">
              <type>
                <string length="1" />
              </type>
            </variable>
            <variable name="in_old_charpos">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="FB_TN_SC_WRITE">
              <type>
                <derived name="TN_SC_WRITE" />
              </type>
            </variable>
          </localVars>
          <inOutVars>
            <variable name="Xus_TN_SCREEN">
              <type>
                <derived name="us_TN_SCREEN" />
              </type>
            </variable>
            <variable name="Xus_TN_INPUT_CONTROL_DATA">
              <type>
                <derived name="us_TN_INPUT_CONTROL_DATA" />
              </type>
            </variable>
          </inOutVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Cursorsteuerung rücksetzen *)
in_CursorOffset := INT#0;

IF Xus_TN_INPUT_CONTROL_DATA.bo_Focus = TRUE THEN

	(* Texteingabe erkannt ? *)
	IF Xus_TN_INPUT_CONTROL_DATA.by_Input_ASCII_Code &gt; BYTE#0 THEN

		IF (Xus_TN_INPUT_CONTROL_DATA.bo_Input_Only_Num = TRUE AND Xus_TN_INPUT_CONTROL_DATA.bo_Input_ASCII_IsNum = TRUE)
			OR (Xus_TN_INPUT_CONTROL_DATA.bo_Input_Only_Num = FALSE) THEN

			(* ASCII Wert in einen String wandeln *)
			st_CHAR := OSCAT_BASIC.CHR_TO_STRING(C:=Xus_TN_INPUT_CONTROL_DATA.by_Input_ASCII_Code);

			(* Eingabe übernehmen *)
			Xus_TN_INPUT_CONTROL_DATA.st_Input_Data := REPLACE(Xus_TN_INPUT_CONTROL_DATA.st_Input_Data,
			st_CHAR,INT#1,Xus_TN_INPUT_CONTROL_DATA.in_Cursor_Pos);

			in_CursorOffset := INT#1;
			Xus_TN_INPUT_CONTROL_DATA.bo_Update_Input := TRUE;
		END_IF;
	END_IF;

	CASE BYTE_TO_INT(Xus_TN_INPUT_CONTROL_DATA.by_Input_Exten_Code) OF

	67: (* Cursor rechts gedrückt *)
		in_CursorOffset := INT#1;

	68: (* Cursor links gedrückt *)
		in_CursorOffset := -1;

	08: (* Backspace gedrückt *)
		Xus_TN_INPUT_CONTROL_DATA.st_Input_Data := REPLACE(Xus_TN_INPUT_CONTROL_DATA.st_Input_Data, ' ', 1,Xus_TN_INPUT_CONTROL_DATA.in_Cursor_Pos);
		Xus_TN_INPUT_CONTROL_DATA.bo_Update_Input := TRUE;
		in_CursorOffset := -1;

	13: (* Enter-Taste gedrückt *)
		IF LEN(Xus_TN_INPUT_CONTROL_DATA.st_Input_Mask) &gt; INT#00 THEN
			(* Eingabestring übernehmen *)
			Xus_TN_INPUT_CONTROL_DATA.st_Input_String := Xus_TN_INPUT_CONTROL_DATA.st_Input_Data;

			(* Eingabestring -&gt; links und rechts Leerzeichen entfernen *)
			Xus_TN_INPUT_CONTROL_DATA.st_Input_String := OSCAT_BASIC.TRIME(str:=Xus_TN_INPUT_CONTROL_DATA.st_Input_String);
			Xus_TN_INPUT_CONTROL_DATA.bo_Input_Entered := TRUE;

			(* neue Eingabe vorbereiten *)
			Xus_TN_INPUT_CONTROL_DATA.st_Input_Data := Xus_TN_INPUT_CONTROL_DATA.st_Input_Mask;

			Xus_TN_INPUT_CONTROL_DATA.in_Cursor_Pos := INT#1;
			Xus_TN_INPUT_CONTROL_DATA.bo_Update_Input := TRUE;

			(* suche erstes Position in Eingabemaske *)
			st_CHAR := MID(Xus_TN_INPUT_CONTROL_DATA.st_Input_Mask,1,Xus_TN_INPUT_CONTROL_DATA.in_Cursor_Pos);
			IF st_CHAR &lt;&gt; ' ' THEN
				(* nächsten Eingabeposition suchen *)
				in_CursorOffset := INT#1;
			END_IF;
		END_IF;
	END_CASE;
END_IF;

(* Cursor richtung rechts bewegen                                   *)
IF (in_CursorOffset &gt; INT#0) OR (Xus_TN_INPUT_CONTROL_DATA.in_Cursor_Pos = INT#0) THEN
	bo_Pos_Found := FALSE;

	in_Count := Xus_TN_INPUT_CONTROL_DATA.in_Cursor_Pos + INT#1;
	in_Count_End := LEN(Xus_TN_INPUT_CONTROL_DATA.st_Input_Mask);

	WHILE (in_count &lt;= in_Count_End) AND (bo_Pos_Found = FALSE) DO

		st_CHAR := MID(Xus_TN_INPUT_CONTROL_DATA.st_Input_Mask,1,in_count);
		IF st_CHAR = ' ' THEN
			Xus_TN_INPUT_CONTROL_DATA.in_Cursor_Pos := in_count;
			Xus_TN_INPUT_CONTROL_DATA.bo_Update_Input := TRUE;
			bo_Pos_Found := TRUE;
		END_IF;

		in_count := in_count + INT#1;

	END_WHILE;
END_IF;

(* Cursor richtung links bewegen *)
IF in_CursorOffset &lt; INT#0 THEN
	bo_Pos_Found := FALSE;

	in_Count     := Xus_TN_INPUT_CONTROL_DATA.in_Cursor_Pos - INT#01;
	in_Count_End := INT#1;

	WHILE (in_count &gt;= in_Count_End) AND (bo_Pos_Found = FALSE) DO

		st_CHAR := MID(Xus_TN_INPUT_CONTROL_DATA.st_Input_Mask,1,in_count);
		IF st_CHAR = ' ' THEN
			Xus_TN_INPUT_CONTROL_DATA.in_Cursor_Pos := in_count;
			Xus_TN_INPUT_CONTROL_DATA.bo_Update_Input := TRUE;
			bo_Pos_Found := TRUE;
		END_IF;

		in_count := in_count - INT#1;
	END_WHILE;
END_IF;

(* maximale Cursorposition ? *)
IF Xus_TN_INPUT_CONTROL_DATA.in_Cursor_Pos &gt; LEN(Xus_TN_INPUT_CONTROL_DATA.st_Input_Data) THEN
	Xus_TN_INPUT_CONTROL_DATA.in_Cursor_Pos := LEN(Xus_TN_INPUT_CONTROL_DATA.st_Input_Data);
	Xus_TN_INPUT_CONTROL_DATA.bo_Update_Input := TRUE;
END_IF;

(* minimale Cursorposition ? *)
IF Xus_TN_INPUT_CONTROL_DATA.in_Cursor_Pos &lt; INT#1 THEN
	Xus_TN_INPUT_CONTROL_DATA.in_Cursor_Pos := INT#1;
	Xus_TN_INPUT_CONTROL_DATA.bo_Update_Input := TRUE;
END_IF;

(* Aktualisierung der Anzeige *)
IF (Xus_TN_INPUT_CONTROL_DATA.bo_Update_Input = TRUE) OR (Xus_TN_INPUT_CONTROL_DATA.bo_Update_All = TRUE) THEN

	(* Title-Text ausgeben *)
	IF (Xus_TN_INPUT_CONTROL_DATA.bo_Update_All = TRUE) THEN

		IF (Xus_TN_INPUT_CONTROL_DATA.in_Title_X_Offset = INT#00) AND (Xus_TN_INPUT_CONTROL_DATA.in_Title_Y_Offset = INT#00) THEN
			(* wenn Offset X,Y =0 dann Titlestring links vom Element positionieren *)
			FB_TN_SC_WRITE.Iin_Y := Xus_TN_INPUT_CONTROL_DATA.in_Y;
			FB_TN_SC_WRITE.Iin_X := Xus_TN_INPUT_CONTROL_DATA.in_X - LEN(Xus_TN_INPUT_CONTROL_DATA.st_Title_String);
		ELSE
			(* Title-Text durch Row, Color-Offset ausgeben *)
			FB_TN_SC_WRITE.Iin_Y := Xus_TN_INPUT_CONTROL_DATA.in_Y + Xus_TN_INPUT_CONTROL_DATA.in_Title_Y_Offset;
			FB_TN_SC_WRITE.Iin_X := Xus_TN_INPUT_CONTROL_DATA.in_X + Xus_TN_INPUT_CONTROL_DATA.in_Title_X_Offset;
		END_IF;

		(* Title-Text durch Row, Color-Offset ausgeben *)
		FB_TN_SC_WRITE(	Iby_ATTR := Xus_TN_INPUT_CONTROL_DATA.by_Title_Attr,
						Ist_STRING := Xus_TN_INPUT_CONTROL_DATA.st_Title_String,
						Xus_TN_SCREEN := Xus_TN_SCREEN);
	END_IF;

	(* Eingabetext ausgeben *)
	IF (Xus_TN_INPUT_CONTROL_DATA.bo_Input_Hidden = TRUE) THEN

		st_String := '';

		IF LEN(Xus_TN_INPUT_CONTROL_DATA.st_Input_Data) = LEN(Xus_TN_INPUT_CONTROL_DATA.st_Input_Mask) THEN
			(* Eingabemodus: HIDDEN *)
			FOR in_count := 1 TO LEN(Xus_TN_INPUT_CONTROL_DATA.st_Input_Data) DO

				(* Zeichen aus Eingabemaske lesen *)
				st_CHAR := MID(Xus_TN_INPUT_CONTROL_DATA.st_Input_Mask,1,in_count);

				(* Eingabe oder Maskenzeichen ausgeben *)
				IF st_CHAR = ' ' THEN

					(* Zeichen aus Eingabedata lesen *)
					st_CHAR := MID(Xus_TN_INPUT_CONTROL_DATA.st_Input_Data,1,in_count);

					IF st_CHAR = ' ' THEN
						(* Leerzeichen ausgeben *)
						st_String := CONCAT(st_String, ' ');

					ELSE
						(* verdecktes Zeichen ausgeben *)
						st_String := CONCAT(st_String, '*');

					END_IF;

				ELSE
					(* Zeichen aus Eingabemaske übernehmen *)
					st_CHAR := MID(Xus_TN_INPUT_CONTROL_DATA.st_Input_Data,1,in_count);
					st_String := CONCAT(st_String,st_CHAR);

				END_IF;
			END_FOR;
		END_IF;
	ELSE

		(* Eingabemodus: NORMAL *)
		st_String := Xus_TN_INPUT_CONTROL_DATA.st_Input_Data;

	END_IF;

	(* String ausgeben *)

	IF Xus_TN_INPUT_CONTROL_DATA.bo_Focus = TRUE THEN
		by_Attr := Xus_TN_INPUT_CONTROL_DATA.by_Attr_mF;
	ELSE
		by_Attr := Xus_TN_INPUT_CONTROL_DATA.by_Attr_oF;
	END_IF;

	FB_TN_SC_WRITE(	Iin_Y := Xus_TN_INPUT_CONTROL_DATA.in_Y,
					Iin_X := Xus_TN_INPUT_CONTROL_DATA.in_X,
					Iby_ATTR := by_Attr,
					Ist_STRING := st_String,
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Cursor auf aktuelle Position setzen *)
	Xus_TN_INPUT_CONTROL_DATA.in_Cursor_Y := Xus_TN_INPUT_CONTROL_DATA.in_Y;
	Xus_TN_INPUT_CONTROL_DATA.in_Cursor_X := Xus_TN_INPUT_CONTROL_DATA.in_X + Xus_TN_INPUT_CONTROL_DATA.in_Cursor_Pos - INT#1;

	in_old_charpos := INT#0;

	(* Update-Flag's rücksetzen *)
	Xus_TN_INPUT_CONTROL_DATA.bo_Update_All := FALSE;
	Xus_TN_INPUT_CONTROL_DATA.bo_Update_Input := FALSE;
END_IF;

(* revision history
ks	10. mai. 2010	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>528c3056-c707-4cce-a66a-25b73d5eb389</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TN_INPUT_MENU_BAR" pouType="functionBlock">
        <interface>
          <localVars>
            <variable name="FB_TN_INPUT_MENU_POPUP">
              <type>
                <derived name="TN_INPUT_MENU_POPUP" />
              </type>
            </variable>
            <variable name="us_TN_MENU_POPUP">
              <type>
                <derived name="us_TN_MENU_POPUP" />
              </type>
            </variable>
            <variable name="FB_TN_SC_WRITE_C">
              <type>
                <derived name="TN_SC_WRITE_C" />
              </type>
            </variable>
            <variable name="in_ROW">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_COL">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_TITLE_Length">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="st_MENU_BAR">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="st_MENU_TITLE">
              <type>
                <string />
              </type>
            </variable>
            <variable name="in_Count">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_Index">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="by_New_KeyCode">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="in_Scroll_Offset">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="by_ATTR">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="bo_Reset_Position">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
          <inOutVars>
            <variable name="Xus_TN_MENU">
              <type>
                <derived name="us_TN_MENU" />
              </type>
            </variable>
            <variable name="Xus_TN_SCREEN">
              <type>
                <derived name="us_TN_SCREEN" />
              </type>
            </variable>
          </inOutVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* sicherstellen das rechteck immer innerhalb screen positioniert wird *)

IF (Xus_TN_MENU.in_State = INT#00) AND (Xus_TN_MENU.bo_Create = TRUE) THEN
	Xus_TN_MENU.in_State := INT#01;
	Xus_TN_MENU.bo_Create := FALSE;
	Xus_TN_MENU.in_Menu_Selected := INT#00;
	Xus_TN_MENU.bo_Update := TRUE;
	bo_Reset_Position := TRUE;

	(* Menu-Bar - Hauptmenue *)
	st_MENU_BAR := ELEMENT_GET(SEP:=BYTE#37,POS:=0,ELEMENT:=Xus_TN_MENU.st_MENU_TEXT);

	(* Menu-Bar - Anzahl der Elemente bestimmen *)
	Xus_TN_MENU.in_Menu_E_Count := ELEMENT_COUNT(SEP:=BYTE#35,ELEMENT:=st_MENU_BAR);

END_IF;

(* Keycode ablegen *)
by_New_KeyCode := Xus_TN_SCREEN.by_Input_Exten_Code;

(* Popup-Menu Tastensteuerung (nur Cursor oben + unten zulassen *)
IF (by_New_KeyCode = BYTE#65) OR (by_New_KeyCode = BYTE#66) THEN
	us_TN_MENU_POPUP.by_Input_Exten_Code := by_New_KeyCode;
ELSE
	us_TN_MENU_POPUP.by_Input_Exten_Code := BYTE#00;
END_IF;

(* Escape *)
IF (by_New_KeyCode = BYTE#27) THEN
	(* Menu war inaktiv -&gt; Escape -&gt; Menu aktivieren *)
	IF (Xus_TN_MENU.in_State = INT#01) AND (Xus_TN_SCREEN.bo_Modal_Dialog = FALSE) THEN
		Xus_TN_MENU.in_State := INT#02;
		Xus_TN_MENU.bo_Update := TRUE;
		Xus_TN_MENU.in_Menu_Selected := INT#00;

		Xus_TN_SCREEN.bo_Menue_Bar_Dialog := TRUE;

		(* Menu war aktiv -&gt; Escape -&gt; Menu deaktivieren *)
	ELSIF (Xus_TN_MENU.in_State = INT#02) THEN
		us_TN_MENU_POPUP.bo_Destroy := TRUE;
		Xus_TN_MENU.bo_Update := TRUE;
		Xus_TN_MENU.in_State := INT#01;
		bo_Reset_Position := TRUE;

		Xus_TN_SCREEN.bo_Menue_Bar_Dialog := FALSE;
	END_IF;
END_IF;

(* Menu aktiv *)
IF (Xus_TN_MENU.in_State = INT#02) THEN

	(* Return *)
	IF (by_New_KeyCode = BYTE#13)  THEN
		us_TN_MENU_POPUP.bo_Destroy := TRUE;
		Xus_TN_MENU.bo_Update := TRUE;
		Xus_TN_MENU.in_State := INT#01;
		bo_Reset_Position := TRUE;
		Xus_TN_MENU.in_Menu_Selected := (Xus_TN_MENU.in_Cur_Menu_Item * INT#10) + Xus_TN_MENU.in_Cur_Sub_Item;
		Xus_TN_SCREEN.by_Input_Exten_Code := BYTE#00;

		Xus_TN_SCREEN.bo_Menue_Bar_Dialog := FALSE;

		(* Destroy-Befehl -&gt; Popup-Menu beenden *)
	ELSIF (Xus_TN_MENU.bo_Destroy = TRUE) THEN
		us_TN_MENU_POPUP.bo_Destroy := TRUE;
		Xus_TN_MENU.bo_Update := TRUE;
		Xus_TN_MENU.in_State := INT#01;
		bo_Reset_Position := TRUE;
		Xus_TN_MENU.in_Menu_Selected := INT#00;
		Xus_TN_SCREEN.by_Input_Exten_Code := BYTE#00;

		Xus_TN_SCREEN.bo_Menue_Bar_Dialog := FALSE;

	END_IF;

	IF (by_New_KeyCode = BYTE#67) THEN (* Cursor rechts *)
		in_Scroll_Offset := INT#1;
		Xus_TN_MENU.bo_Update := TRUE;
		Xus_TN_SCREEN.by_Input_Exten_Code := BYTE#00;

	ELSIF (by_New_KeyCode = BYTE#68) THEN (* Cursor links *)
		in_Scroll_Offset := -1;
		Xus_TN_MENU.bo_Update := TRUE;
		Xus_TN_SCREEN.by_Input_Exten_Code := BYTE#00;
	END_IF;
END_IF;

IF bo_Reset_Position = TRUE THEN
	bo_Reset_Position := FALSE;
	Xus_TN_MENU.in_X_SM_old := -1;
	Xus_TN_MENU.in_Y_SM_old := -1;
	Xus_TN_MENU.in_X_SM_new := -1;
	Xus_TN_MENU.in_Y_SM_new := -1;
END_IF;

(* POPUP-Menu updaten *)
IF (Xus_TN_MENU.in_State &gt; INT#00) AND (Xus_TN_MENU.bo_Update = TRUE) THEN

	Xus_TN_MENU.bo_Update := FALSE; 

	in_ROW := Xus_TN_MENU.in_Y;
	in_COL := Xus_TN_MENU.in_X;

	(* Scrolloffset *)
	IF in_Scroll_Offset &lt;&gt; INT#00 THEN
		Xus_TN_MENU.in_Cur_Menu_Item := OSCAT_BASIC.INC2(Xus_TN_MENU.in_Cur_Menu_Item,in_Scroll_Offset,1,Xus_TN_MENU.in_Menu_E_Count);
		in_Scroll_Offset := INT#00;
	ELSE
		(* Item = 0 und kein Scrolloffset *)
		IF (Xus_TN_MENU.in_Cur_Menu_Item = INT#00) THEN
			Xus_TN_MENU.in_Cur_Menu_Item := INT#01;
		END_IF;
	END_IF;

	(* alle Menutext zeichnen *)
	FOR in_Count := INT#01 TO Xus_TN_MENU.in_Menu_E_Count DO;

		(* Zeichenfarbe bestimmen *)
		IF (in_Count = Xus_TN_MENU.in_Cur_Menu_Item) AND (Xus_TN_MENU.in_State &gt; INT#01 ) THEN
			by_ATTR := Xus_TN_MENU.by_Attr_mF;

			Xus_TN_MENU.in_Y_SM_new := in_ROW + INT#01;
			Xus_TN_MENU.in_X_SM_new := in_COL;

		ELSE
			by_ATTR := Xus_TN_MENU.by_Attr_oF;
		END_IF;

		st_MENU_TITLE := ELEMENT_GET(SEP:=BYTE#35,POS:=in_Count - 1,ELEMENT:=st_MENU_BAR);

		in_TITLE_Length := LEN(st_MENU_TITLE) + INT#02;

		FB_TN_SC_WRITE_C(	Iin_Y := in_ROW,
							Iin_X := in_COL,
							Iby_ATTR := by_ATTR,
							Iin_LENGTH := in_TITLE_Length,
							Iin_OPTION := INT#02,
							Ist_STRING := st_MENU_TITLE,
							Xus_TN_SCREEN := Xus_TN_SCREEN);

		in_COL := in_COL + in_TITLE_Length;

	END_FOR;
END_IF;

IF Xus_TN_MENU.in_X_SM_new &lt;&gt; Xus_TN_MENU.in_X_SM_old THEN

	(* SubMenu ist aktiv -&gt; beenden                                     *)
	IF us_TN_MENU_POPUP.bo_Activ = TRUE THEN
		us_TN_MENU_POPUP.bo_Destroy := TRUE;

		(* Sub-Menu bearbeiten *)
		FB_TN_INPUT_MENU_POPUP(	Xus_TN_MENU_POPUP := us_TN_MENU_POPUP,
								Xus_TN_SCREEN := Xus_TN_SCREEN);
	END_IF;

	IF us_TN_MENU_POPUP.bo_Activ = FALSE THEN
		(* Popup-Menu zu aktuellen Menu parametrieren und ausführen         *)
		in_Index := Xus_TN_MENU.in_Cur_Menu_Item;

		us_TN_MENU_POPUP.in_Y := Xus_TN_MENU.in_Y_SM_new;
		us_TN_MENU_POPUP.in_X := Xus_TN_MENU.in_X_SM_new;
		us_TN_MENU_POPUP.by_Attr_mF := Xus_TN_MENU.by_Attr_mF;
		us_TN_MENU_POPUP.by_Attr_oF := Xus_TN_MENU.by_Attr_oF;
		us_TN_MENU_POPUP.st_Menu_Text := ELEMENT_GET(SEP:=BYTE#37,POS:=in_Index,ELEMENT:=Xus_TN_MENU.st_MENU_TEXT);
		us_TN_MENU_POPUP.bo_Create := TRUE;

		Xus_TN_MENU.in_X_SM_old := Xus_TN_MENU.in_X_SM_new;
		Xus_TN_MENU.in_Y_SM_old := Xus_TN_MENU.in_Y_SM_new;

	END_IF;
END_IF;

(* Popup-Menu zyklisch aufrufen *)
FB_TN_INPUT_MENU_POPUP(	Xus_TN_MENU_POPUP := us_TN_MENU_POPUP,
						Xus_TN_SCREEN := Xus_TN_SCREEN);

(* aktuelles Item vom Popup-Menu kopieren *)
Xus_TN_MENU.in_Cur_Sub_Item := us_TN_MENU_POPUP.in_Cur_Item;

(* Destroy-Befehl *)
IF (Xus_TN_MENU.in_State = INT#01) THEN
	IF (Xus_TN_MENU.bo_Destroy = TRUE) THEN
		Xus_TN_MENU.in_State := INT#00;
		Xus_TN_MENU.bo_Destroy := FALSE;
		Xus_TN_MENU.in_Cur_Menu_Item := INT#00;
		Xus_TN_MENU.in_Cur_Sub_Item := INT#00;
	END_IF;
END_IF;

(* revision history
ks	06. apr. 2011	rev 1.1
	list_len und list_get durch element_count und element_get ersetzt

ks	10. mai. 2010	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>a89b213e-6141-4d99-a8b8-a436f0757c51</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TN_INPUT_MENU_POPUP" pouType="functionBlock">
        <interface>
          <localVars>
            <variable name="FB_TN_SC_AREA_SAVE">
              <type>
                <derived name="TN_SC_AREA_SAVE" />
              </type>
            </variable>
            <variable name="FB_TN_SC_AREA_RESTORE">
              <type>
                <derived name="TN_SC_AREA_RESTORE" />
              </type>
            </variable>
            <variable name="FB_TN_SC_LINE">
              <type>
                <derived name="TN_SC_LINE" />
              </type>
            </variable>
            <variable name="FB_TN_SC_ADD_SHADOW">
              <type>
                <derived name="TN_SC_ADD_SHADOW" />
              </type>
            </variable>
            <variable name="FB_TN_SC_BOX">
              <type>
                <derived name="TN_SC_BOX" />
              </type>
            </variable>
            <variable name="FB_TN_SC_WRITE_C">
              <type>
                <derived name="TN_SC_WRITE_C" />
              </type>
            </variable>
            <variable name="in_ROW">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_ROWS">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_COL">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_COLS">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_index">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_Count">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_Scroll_Offset">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="by_ATTR">
              <type>
                <BYTE />
              </type>
            </variable>
          </localVars>
          <inOutVars>
            <variable name="Xus_TN_MENU_POPUP">
              <type>
                <derived name="us_TN_MENU_POPUP" />
              </type>
            </variable>
            <variable name="Xus_TN_SCREEN">
              <type>
                <derived name="us_TN_SCREEN" />
              </type>
            </variable>
          </inOutVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* sicherstellen das rechteck immer innerhalb screen positioniert wird *)

IF (Xus_TN_MENU_POPUP.bo_Activ = FALSE) AND (Xus_TN_MENU_POPUP.bo_Create = TRUE) THEN
	Xus_TN_MENU_POPUP.bo_Activ := TRUE;
	Xus_TN_MENU_POPUP.bo_Create := FALSE;
	Xus_TN_MENU_POPUP.bo_Destroy := FALSE;
	Xus_TN_MENU_POPUP.bo_Update := TRUE;

  (* Sub-Menu-Texte *)

	Xus_TN_MENU_POPUP.in_Menu_E_Count := ELEMENT_COUNT(SEP:=BYTE#35,ELEMENT:=Xus_TN_MENU_POPUP.st_Menu_Text);

	(* Anzahl Zeilen (Sub-Menu-Texte) bestimmen *)
	Xus_TN_MENU_POPUP.in_Rows := Xus_TN_MENU_POPUP.in_Menu_E_Count;

	(* längsten Sub-Menu-Text suchen *)
	Xus_TN_MENU_POPUP.in_Cols := INT#00;

	FOR in_Count := INT#01 TO Xus_TN_MENU_POPUP.in_Rows DO;
		Xus_TN_MENU_POPUP.in_Cols:=MAX(LEN(ELEMENT_GET(SEP:=BYTE#35,POS:=in_Count - 1,ELEMENT:=Xus_TN_MENU_POPUP.st_Menu_Text)),Xus_TN_MENU_POPUP.in_Cols);
	END_FOR;

	(* Horizontale Position überprüfen und korrigieren *)
	IF (Xus_TN_MENU_POPUP.in_X + Xus_TN_MENU_POPUP.in_Cols) &gt; INT#75 THEN
		Xus_TN_MENU_POPUP.in_X := INT#79 - Xus_TN_MENU_POPUP.in_Cols - INT#04;
	END_IF;

  (* Vertikale Position überprüfen und korrigieren *)
	IF (Xus_TN_MENU_POPUP.in_Y + Xus_TN_MENU_POPUP.in_ROWS) &gt; INT#21 THEN
		Xus_TN_MENU_POPUP.in_Y := INT#23 - Xus_TN_MENU_POPUP.in_ROWS - INT#2;
	END_IF;

	Xus_TN_SCREEN.bo_Modal_Dialog := TRUE;

	(* Hintergrund sichern *)
	FB_TN_SC_AREA_SAVE(	Iin_X1 := Xus_TN_MENU_POPUP.in_X,
									Iin_Y1 := Xus_TN_MENU_POPUP.in_Y,
									Iin_X2 := Xus_TN_MENU_POPUP.in_X + Xus_TN_MENU_POPUP.in_Cols + INT#04,
									Iin_Y2 := Xus_TN_MENU_POPUP.in_Y + Xus_TN_MENU_POPUP.in_Rows + INT#02,
									Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Rahmen für Submenu zeichnen *)
	FB_TN_SC_BOX(	Iin_X1 := Xus_TN_MENU_POPUP.in_X,
					Iin_Y1 := Xus_TN_MENU_POPUP.in_Y,
					Iin_X2 := Xus_TN_MENU_POPUP.in_X + Xus_TN_MENU_POPUP.in_Cols + INT#03,
					Iin_Y2 := Xus_TN_MENU_POPUP.in_Y + Xus_TN_MENU_POPUP.in_Rows + INT#01,
					Iby_FILL := BYTE#32, (* Füllung *)
					Iin_BORDER := INT#01, (* Single-Line Border *)
					Iby_ATTR := Xus_TN_MENU_POPUP.by_Attr_oF,
					Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Shadow für Submenu zeichnen *)
	FB_TN_SC_ADD_SHADOW(Iin_X1 := Xus_TN_MENU_POPUP.in_X + INT#1,
						Iin_Y1 := Xus_TN_MENU_POPUP.in_Y + INT#1,
						Iin_X2 := Xus_TN_MENU_POPUP.in_X + Xus_TN_MENU_POPUP.in_Cols + INT#04,
						Iin_Y2 := Xus_TN_MENU_POPUP.in_Y + Xus_TN_MENU_POPUP.in_Rows + INT#02,
						Iin_OPTION := INT#00,
						Xus_TN_SCREEN := Xus_TN_SCREEN);

	(* Parameter laden *)
	in_COL := Xus_TN_MENU_POPUP.in_X;
	in_ROW := Xus_TN_MENU_POPUP.in_Y;
	in_ROWS := Xus_TN_MENU_POPUP.in_Rows;
	in_COLS := Xus_TN_MENU_POPUP.in_Cols;

	(* Trennlinien zeichnen *)
	in_COLS := in_COLS + INT#02; (* Text um 2 Zeichen verlängern *)

	FOR in_Count := INT#01 TO Xus_TN_MENU_POPUP.in_Menu_E_Count DO;
		in_ROW := in_ROW + INT#01;

		IF ELEMENT_GET(SEP:=BYTE#35,POS:=in_Count - 1,ELEMENT:=Xus_TN_MENU_POPUP.st_Menu_Text) = '-' THEN

			FB_TN_SC_LINE(	Iin_Y1 := in_ROW,
							Iin_X1 := in_COL,
							Iin_Y2 := in_ROW,
							Iin_X2 := in_COL + in_COLS + INT#01,
							Iby_ATTR := Xus_TN_MENU_POPUP.by_Attr_oF,
							Iby_BORDER := BYTE#01,
							Xus_TN_SCREEN := Xus_TN_SCREEN);
		END_IF;
	END_FOR;
END_IF;

IF (Xus_TN_MENU_POPUP.bo_Activ = TRUE) THEN

	CASE BYTE_TO_INT(Xus_TN_MENU_POPUP.by_Input_Exten_Code) OF

	65: (* Cursor oben *)
		in_Scroll_Offset := -1;
		Xus_TN_MENU_POPUP.bo_Update := TRUE;

	66: (* Cursor unten *)
		in_Scroll_Offset := 1;
		Xus_TN_MENU_POPUP.bo_Update := TRUE;

	13:  (* Enter *)
		Xus_TN_MENU_POPUP.bo_Destroy := TRUE;

	27:  (* Escape*)
		Xus_TN_MENU_POPUP.bo_Destroy := TRUE;
		Xus_TN_MENU_POPUP.in_Cur_Item := INT#00;

	67..68: (* Cursor links oder rechts *)
		Xus_TN_MENU_POPUP.bo_Destroy := TRUE;
		Xus_TN_MENU_POPUP.in_Cur_Item := INT#00;

	END_CASE;
END_IF;

(* POPUP-Menu updaten *)
IF (Xus_TN_MENU_POPUP.bo_Activ = TRUE) AND (Xus_TN_MENU_POPUP.bo_Update = TRUE) THEN

	Xus_TN_MENU_POPUP.bo_Update := FALSE;

	(* überprüfung + nächstes anwählbares Sub-Menu suchen *)
	in_index := Xus_TN_MENU_POPUP.in_Cur_Item;

	IF (in_index &lt; INT#01) OR (in_index &gt; Xus_TN_MENU_POPUP.in_Menu_E_Count) THEN
		in_Scroll_Offset := INT#01;
		in_index := Xus_TN_MENU_POPUP.in_Menu_E_Count;
	END_IF;

	(* aktueller Index steht auf Trennzeichen -&gt; ändern *)
	IF ELEMENT_GET(SEP:=BYTE#35,POS:=in_index-1,ELEMENT:=Xus_TN_MENU_POPUP.st_Menu_Text) = '-' THEN
		in_Scroll_Offset := INT#01;
	END_IF;

	(* Scroll-Offset *)
	IF in_Scroll_Offset &lt;&gt; INT#00 THEN

		FOR in_Count := INT#01 TO Xus_TN_MENU_POPUP.in_Menu_E_Count DO;

			in_index:=OSCAT_BASIC.INC2(in_index,in_Scroll_Offset,1,Xus_TN_MENU_POPUP.in_Menu_E_Count);

			IF ELEMENT_GET(SEP:=BYTE#35,POS:=in_index - 1,ELEMENT:=Xus_TN_MENU_POPUP.st_Menu_Text) &lt;&gt; '-' THEN
				EXIT;
			END_IF;

		END_FOR;
	END_IF;

	Xus_TN_MENU_POPUP.in_Cur_Item := in_index;
	in_Scroll_Offset := INT#00;

	(* Parameter laden *)
	in_COL  := Xus_TN_MENU_POPUP.in_X;
	in_ROW  := Xus_TN_MENU_POPUP.in_Y;
	in_ROWS := Xus_TN_MENU_POPUP.in_Rows;
	in_COLS := Xus_TN_MENU_POPUP.in_Cols;

	(* SUB-MENU-Titel ausgeben *)
	in_COLS := in_COLS + INT#02; (* Text um 2 Zeichen verlängern *)

	FOR in_Count := INT#01 TO Xus_TN_MENU_POPUP.in_Menu_E_Count DO;

		in_ROW := in_ROW + INT#01;

		(* Zeichenfarbe bestimmen *)
		IF in_Count = Xus_TN_MENU_POPUP.in_Cur_Item THEN
			by_ATTR := Xus_TN_MENU_POPUP.by_Attr_mF;
		ELSE
			by_ATTR := Xus_TN_MENU_POPUP.by_Attr_oF;
		END_IF;

		FB_TN_SC_WRITE_C.Ist_STRING := ELEMENT_GET(SEP:=BYTE#35,POS:=in_Count - 1,ELEMENT:=Xus_TN_MENU_POPUP.st_Menu_Text);

		IF FB_TN_SC_WRITE_C.Ist_STRING &lt;&gt; '-' THEN

			FB_TN_SC_WRITE_C(	Iin_Y := in_ROW,
								Iin_X := in_COL + INT#01,
								Iby_ATTR := by_ATTR,
								Iin_LENGTH := in_COLS,
								Iin_OPTION := INT#02, (* Center *)
								Xus_TN_SCREEN := Xus_TN_SCREEN);
		END_IF;
	END_FOR;
END_IF;

(* POPUP-Menu entfernen (Destroy) *)
IF (Xus_TN_MENU_POPUP.bo_Activ = TRUE) AND (Xus_TN_MENU_POPUP.bo_Destroy = TRUE) THEN

	Xus_TN_MENU_POPUP.bo_Destroy := FALSE;
	Xus_TN_MENU_POPUP.bo_Activ := FALSE;

	(* alten Hintergrund aus Speicher wiederherstellen *)
	FB_TN_SC_AREA_RESTORE(Xus_TN_SCREEN := Xus_TN_SCREEN);

	Xus_TN_SCREEN.bo_Modal_Dialog := FALSE;
END_IF;

(* revision history

ks	06. apr. 2011	rev 1.1
	list_len und list_get durch element_count und element_get ersetzt

ks	10. mai. 2010	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b4a47a0b-d9e8-489e-8d81-5be9409fc615</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TN_INPUT_SELECT_POPUP" pouType="functionBlock">
        <interface>
          <localVars>
            <variable name="in_index">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_Element_Count">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="by_Cur_Key">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="by_Attr">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="st_String">
              <type>
                <string />
              </type>
            </variable>
            <variable name="us_TN_MENU_POPUP">
              <type>
                <derived name="us_TN_MENU_POPUP" />
              </type>
            </variable>
            <variable name="FB_TN_INPUT_MENU_POPUP">
              <type>
                <derived name="TN_INPUT_MENU_POPUP" />
              </type>
            </variable>
            <variable name="FB_TN_SC_WRITE">
              <type>
                <derived name="TN_SC_WRITE" />
              </type>
            </variable>
          </localVars>
          <inOutVars>
            <variable name="Xus_TN_SCREEN">
              <type>
                <derived name="us_TN_SCREEN" />
              </type>
            </variable>
            <variable name="Xus_TN_INPUT_CONTROL_DATA">
              <type>
                <derived name="us_TN_INPUT_CONTROL_DATA" />
              </type>
            </variable>
          </inOutVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Benutzereingabe auswerten -&gt; Selektion Text n *)
IF (Xus_TN_INPUT_CONTROL_DATA.bo_Focus = TRUE) THEN

	by_Cur_Key := Xus_TN_INPUT_CONTROL_DATA.by_Input_Exten_Code;

	IF (us_TN_MENU_POPUP.bo_Activ = FALSE) THEN
		us_TN_MENU_POPUP.by_Input_Exten_Code := BYTE#00;

		(* Return-Taste auswerten *)
		IF (by_Cur_Key = BYTE#13) THEN
			(* Popup-Menu parameter übergeben *)
			us_TN_MENU_POPUP.in_Y := Xus_TN_INPUT_CONTROL_DATA.in_Y;
			us_TN_MENU_POPUP.in_X := Xus_TN_INPUT_CONTROL_DATA.in_X;
			us_TN_MENU_POPUP.by_Attr_mF := Xus_TN_INPUT_CONTROL_DATA.by_Attr_mF;
			us_TN_MENU_POPUP.by_Attr_oF := Xus_TN_INPUT_CONTROL_DATA.by_Attr_oF;
			us_TN_MENU_POPUP.st_Menu_Text := Xus_TN_INPUT_CONTROL_DATA.st_Input_Data;
			us_TN_MENU_POPUP.bo_Create := TRUE;
			us_TN_MENU_POPUP.in_Cur_Item := INT#00;
		END_IF;

		IF (us_TN_MENU_POPUP.in_Cur_Item &gt; INT#00) THEN
			Xus_TN_INPUT_CONTROL_DATA.in_selected := us_TN_MENU_POPUP.in_Cur_Item;
			Xus_TN_INPUT_CONTROL_DATA.bo_Input_Entered := TRUE;
			Xus_TN_INPUT_CONTROL_DATA.bo_Update_Input := TRUE;
			us_TN_MENU_POPUP.in_Cur_Item := INT#00;
		END_IF;

	ELSE
		us_TN_MENU_POPUP.by_Input_Exten_Code := by_Cur_Key;
	END_IF;

	(* Popup-Menu zyklisch aufrufen *)
	FB_TN_INPUT_MENU_POPUP(Xus_TN_MENU_POPUP := us_TN_MENU_POPUP, Xus_TN_SCREEN := Xus_TN_SCREEN);

END_IF;

(* Aktualisierung der Anzeige *)
IF (Xus_TN_INPUT_CONTROL_DATA.bo_Update_Input = TRUE) OR (Xus_TN_INPUT_CONTROL_DATA.bo_Update_All = TRUE) THEN

	(* Title-Text ausgeben *)
	IF Xus_TN_INPUT_CONTROL_DATA.bo_Update_All = TRUE THEN

		IF (Xus_TN_INPUT_CONTROL_DATA.in_Title_X_Offset = INT#00) AND (Xus_TN_INPUT_CONTROL_DATA.in_Title_Y_Offset = INT#00) THEN
			(* wenn Offset X,Y =0 dann Titlestring links vom Element positionieren *)
			FB_TN_SC_WRITE.Iin_Y := Xus_TN_INPUT_CONTROL_DATA.in_Y;
			FB_TN_SC_WRITE.Iin_X := Xus_TN_INPUT_CONTROL_DATA.in_X - LEN(Xus_TN_INPUT_CONTROL_DATA.st_Title_String);

		ELSE
			(* Title-Text durch Row, Color-Offset ausgeben *)
			FB_TN_SC_WRITE.Iin_Y := Xus_TN_INPUT_CONTROL_DATA.in_Y + Xus_TN_INPUT_CONTROL_DATA.in_Title_Y_Offset;
			FB_TN_SC_WRITE.Iin_X := Xus_TN_INPUT_CONTROL_DATA.in_X + Xus_TN_INPUT_CONTROL_DATA.in_Title_X_Offset;
		END_IF;

		(* Title-Text durch Row, Color-Offset ausgeben *)
		FB_TN_SC_WRITE(	Iby_ATTR := Xus_TN_INPUT_CONTROL_DATA.by_Title_Attr,
						Ist_STRING := Xus_TN_INPUT_CONTROL_DATA.st_Title_String,
						Xus_TN_SCREEN := Xus_TN_SCREEN);
	END_IF;

	in_Element_Count := ELEMENT_COUNT(SEP:=BYTE#35,ELEMENT:=Xus_TN_INPUT_CONTROL_DATA.st_Input_Data);

	IF in_Element_Count &gt; INT#00 THEN

		Xus_TN_INPUT_CONTROL_DATA.in_selected:=LIMIT(1,Xus_TN_INPUT_CONTROL_DATA.in_selected,in_Element_Count);

		in_index := Xus_TN_INPUT_CONTROL_DATA.in_selected;

		st_String := ELEMENT_GET(SEP:=BYTE#35,POS:=in_index - 1,ELEMENT:=Xus_TN_INPUT_CONTROL_DATA.st_Input_Data);

		st_String:= OSCAT_BASIC.FIX(str:=st_String,
						L:=LEN(Xus_TN_INPUT_CONTROL_DATA.st_Input_Mask),
						C:=BYTE#32,
						M:=Xus_TN_INPUT_CONTROL_DATA.in_Input_Option);


		Xus_TN_INPUT_CONTROL_DATA.st_Input_String := st_String;

		IF Xus_TN_INPUT_CONTROL_DATA.bo_Focus = TRUE THEN
			by_Attr := Xus_TN_INPUT_CONTROL_DATA.by_Attr_mF;
		ELSE
			by_Attr := Xus_TN_INPUT_CONTROL_DATA.by_Attr_oF;
		END_IF;

		FB_TN_SC_WRITE(	Iin_X := Xus_TN_INPUT_CONTROL_DATA.in_X,
								Iin_Y := Xus_TN_INPUT_CONTROL_DATA.in_Y,
								Iby_ATTR := by_Attr,
								Ist_STRING := st_String,
								Xus_TN_SCREEN := Xus_TN_SCREEN );
	END_IF;

	(* Cursor auf aktuelle Position setzen *)
	Xus_TN_INPUT_CONTROL_DATA.in_Cursor_X := Xus_TN_INPUT_CONTROL_DATA.in_X;
	Xus_TN_INPUT_CONTROL_DATA.in_Cursor_Y := Xus_TN_INPUT_CONTROL_DATA.in_Y;

	(* Update-Flag's rücksetzen *)
	Xus_TN_INPUT_CONTROL_DATA.bo_Update_All   := FALSE;
	Xus_TN_INPUT_CONTROL_DATA.bo_Update_Input := FALSE;

END_IF;

(* revision history

ks	06. apr. 2011	rev 1.1
	list_len und list_get durch element_count und element_get ersetzt

ks	10. mai. 2010	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>a4b18b70-f39e-4cad-ad60-7ca19b064676</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TN_INPUT_SELECT_TEXT" pouType="functionBlock">
        <interface>
          <localVars>
            <variable name="in_count">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="by_Attr">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="st_String">
              <type>
                <string />
              </type>
            </variable>
            <variable name="FB_TN_SC_WRITE">
              <type>
                <derived name="TN_SC_WRITE" />
              </type>
            </variable>
          </localVars>
          <inOutVars>
            <variable name="Xus_TN_SCREEN">
              <type>
                <derived name="us_TN_SCREEN" />
              </type>
            </variable>
            <variable name="Xus_TN_INPUT_CONTROL_DATA">
              <type>
                <derived name="us_TN_INPUT_CONTROL_DATA" />
              </type>
            </variable>
          </inOutVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Benutzereingabe auswerten -&gt; Selektion Text n *)
IF Xus_TN_INPUT_CONTROL_DATA.bo_Focus = TRUE THEN

(* Leertaste-Taste auswerten *)
	IF Xus_TN_INPUT_CONTROL_DATA.by_Input_ASCII_Code = BYTE#32 THEN
		Xus_TN_INPUT_CONTROL_DATA.in_selected := Xus_TN_INPUT_CONTROL_DATA.in_selected + INT#01; 
		Xus_TN_INPUT_CONTROL_DATA.bo_Update_Input := TRUE;
	END_IF;
 
	(* Return-Taste auswerten *)
	IF Xus_TN_INPUT_CONTROL_DATA.by_Input_Exten_Code = BYTE#13 THEN
		Xus_TN_INPUT_CONTROL_DATA.bo_Input_Entered := TRUE;
	END_IF;

END_IF;

(* Aktualisierung der Anzeige *)
IF (Xus_TN_INPUT_CONTROL_DATA.bo_Update_Input = TRUE) OR (Xus_TN_INPUT_CONTROL_DATA.bo_Update_All = TRUE) THEN

	(* Title-Text ausgeben *)
	IF Xus_TN_INPUT_CONTROL_DATA.bo_Update_All = TRUE THEN

		IF (Xus_TN_INPUT_CONTROL_DATA.in_Title_X_Offset = INT#00) AND (Xus_TN_INPUT_CONTROL_DATA.in_Title_Y_Offset = INT#00) THEN
			(* wenn Offset X,Y =0 dann Titlestring links vom Element positionieren *)
			FB_TN_SC_WRITE.Iin_Y := Xus_TN_INPUT_CONTROL_DATA.in_Y;
			FB_TN_SC_WRITE.Iin_X := Xus_TN_INPUT_CONTROL_DATA.in_X - LEN(Xus_TN_INPUT_CONTROL_DATA.st_Title_String);

		ELSE
			(* Title-Text durch Row, Color-Offset ausgeben *)
			FB_TN_SC_WRITE.Iin_Y := Xus_TN_INPUT_CONTROL_DATA.in_Y + Xus_TN_INPUT_CONTROL_DATA.in_Title_Y_Offset;
			FB_TN_SC_WRITE.Iin_X := Xus_TN_INPUT_CONTROL_DATA.in_X + Xus_TN_INPUT_CONTROL_DATA.in_Title_X_Offset;
		END_IF;

		(* Title-Text durch Row, Color-Offset ausgeben *)
		FB_TN_SC_WRITE(	Iby_ATTR := Xus_TN_INPUT_CONTROL_DATA.by_Title_Attr,
						Ist_STRING := Xus_TN_INPUT_CONTROL_DATA.st_Title_String,
						Xus_TN_SCREEN := Xus_TN_SCREEN);

	END_IF;

	(* Eingabezeile verarbeiten *)

	(* Anzahl der Elemente bestimmen *)
	in_count := ELEMENT_COUNT(SEP:=BYTE#35,ELEMENT:=Xus_TN_INPUT_CONTROL_DATA.st_Input_Data);

	IF in_Count &gt; INT#00 THEN

		IF Xus_TN_INPUT_CONTROL_DATA.in_selected &lt; INT#1 THEN
			Xus_TN_INPUT_CONTROL_DATA.in_selected := INT#01;
		END_IF;

		IF Xus_TN_INPUT_CONTROL_DATA.in_selected &gt; in_count THEN
			Xus_TN_INPUT_CONTROL_DATA.in_selected := INT#01;
		END_IF;

		st_String := ELEMENT_GET(SEP:=BYTE#35,POS:=Xus_TN_INPUT_CONTROL_DATA.in_selected - 1,ELEMENT:=Xus_TN_INPUT_CONTROL_DATA.st_Input_Data);

		st_String := OSCAT_BASIC.FIX(	str:=st_String,
							L:=LEN(Xus_TN_INPUT_CONTROL_DATA.st_Input_Mask),
							C:=BYTE#32,
							M:=Xus_TN_INPUT_CONTROL_DATA.in_Input_Option);

		Xus_TN_INPUT_CONTROL_DATA.st_Input_String := st_String;

		IF Xus_TN_INPUT_CONTROL_DATA.bo_Focus = TRUE THEN
			by_Attr := Xus_TN_INPUT_CONTROL_DATA.by_Attr_mF;
		ELSE
			by_Attr := Xus_TN_INPUT_CONTROL_DATA.by_Attr_oF;
		END_IF;

		FB_TN_SC_WRITE(	Iin_Y := Xus_TN_INPUT_CONTROL_DATA.in_Y,
						Iin_X := Xus_TN_INPUT_CONTROL_DATA.in_X,
						Iby_ATTR := by_Attr,
						Ist_STRING := st_String,
						Xus_TN_SCREEN := Xus_TN_SCREEN);
	END_IF;

	(* Cursor auf aktuelle Position setzen *)
	Xus_TN_INPUT_CONTROL_DATA.in_Cursor_Y := Xus_TN_INPUT_CONTROL_DATA.in_Y;
	Xus_TN_INPUT_CONTROL_DATA.in_Cursor_X := Xus_TN_INPUT_CONTROL_DATA.in_X;

	(* Update-Flag's rücksetzen *)
	Xus_TN_INPUT_CONTROL_DATA.bo_Update_All := FALSE;
	Xus_TN_INPUT_CONTROL_DATA.bo_Update_Input := FALSE;

END_IF;

(* revision history

ks	06. apr. 2011	rev 1.1
	list_len und list_get durch element_count und element_get ersetzt

ks	10. mai. 2010	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>a002647c-be78-4ae0-8e61-533d91a817b1</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TN_RECEIVE" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="Xus_TN_SCREEN">
              <type>
                <derived name="us_TN_SCREEN" />
              </type>
            </variable>
          </inOutVars>
          <localVars>
            <variable name="REQ_Size">
              <type>
                <UINT />
              </type>
            </variable>
            <variable name="REQ1">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="REQ2">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="REQ3">
              <type>
                <BYTE />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Datenempfang auswertung *)
Xus_TN_SCREEN.by_Input_ASCII_Code := BYTE#00;
Xus_TN_SCREEN.by_Input_Exten_Code := BYTE#00;

IF R_BUF.SIZE &gt; UINT#0 THEN
	(* empfangene Daten auswerten *)
	REQ_Size := R_BUF.SIZE;
	REQ1 := R_BUF.BUFFER[0];
	REQ2 := R_BUF.BUFFER[1];
	REQ3 := R_BUF.BUFFER[2];

	IF REQ1 = BYTE#27 AND REQ_Size &gt;= UINT#3 THEN (* Escape *)
		IF REQ2 = BYTE#91 THEN (* Cursor code *)
			IF (REQ3 &gt;= BYTE#65 AND REQ3 &lt;= BYTE#68) OR (REQ3 = BYTE#72) OR (REQ3 = BYTE#75) THEN (* 65..68 = Cursor o,u,r,l / 72 = POS1 / 75 = ENDE *)
				Xus_TN_SCREEN.by_Input_Exten_Code := REQ3;
			END_IF;
		ELSIF REQ2 = BYTE#79 THEN (* Sondertasten F1/F2/F3/F4 *)
			IF REQ3 &gt;= BYTE#80 AND REQ3 &lt;= BYTE#83 THEN
				Xus_TN_SCREEN.by_Input_Exten_Code := REQ3;
			END_IF;
		END_IF;
	ELSIF REQ1 &gt;= BYTE#32 AND REQ1 &lt;= BYTE#126 THEN
		Xus_TN_SCREEN.by_Input_ASCII_Code := REQ1;
		Xus_TN_SCREEN.bo_Input_ASCII_IsNum := OSCAT_BASIC.ISC_NUM(REQ1); (* Auswertung auf Zahleneingabe *)
	ELSIF REQ1 = BYTE#8 OR REQ1 = BYTE#9 OR REQ1 = BYTE#13 OR REQ1 = BYTE#27 THEN (* prüfe auf Steuerzeichen 8=Backspace / 9=Tabulator / 13=Return / 27=Escape *)
		Xus_TN_SCREEN.by_Input_Exten_Code := REQ1;
	END_IF;

	(* Empfangsbuffer Datenlänge null eintragen (Telegramm zerstören *)
	R_BUF.SIZE := UINT#00;
END_IF;

(* revision history
ks	10. mai. 2010	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>213cc3d8-1805-47ff-b906-2e7964310324</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TN_SC_ADD_SHADOW" pouType="functionBlock">
        <interface>
          <localVars>
            <variable name="in_Offset">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_X">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_Y">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
          <inputVars>
            <variable name="Iin_Y1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Iin_X1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Iin_Y2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Iin_X2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Iin_OPTION">
              <type>
                <INT />
              </type>
            </variable>
          </inputVars>
          <inOutVars>
            <variable name="Xus_TN_SCREEN">
              <type>
                <derived name="us_TN_SCREEN" />
              </type>
            </variable>
          </inOutVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF TN_SC_XY2_ERROR(Iin_X1,Iin_Y1,Iin_X2,Iin_Y2) THEN RETURN; END_IF;

IF Iin_Y1 &lt; 0 OR Iin_X1 &lt; 0 OR Iin_Y2 &lt; 0 OR Iin_X2 &lt; 0 THEN RETURN; END_IF; (* min werte prüfen *)
IF Iin_Y1 &gt; 23 OR Iin_X1 &gt; 79 OR Iin_Y2 &gt; 23 OR Iin_X2 &gt; 79 THEN RETURN; END_IF; (* max werte prüfen *)

in_Offset := (Iin_Y1 * 80) + Iin_X2;

IF Iin_OPTION = INT#00 THEN
	(* Schatten durch Farbanpassung erzeugen *)
	FOR in_Y := Iin_Y1 TO Iin_Y2 DO
		Xus_TN_SCREEN.bya_COLOR[in_Offset] := TN_SC_SHADOW_ATTR(Xus_TN_SCREEN.bya_COLOR[in_Offset]);
		in_Offset := in_Offset + 80;
		Xus_TN_SCREEN.bya_Line_Update[in_Y] := TRUE; (* Zeile für Update eintragen *)
	END_FOR;
ELSE
	(* Schatten durch Farbe Schwarz und Leerzeichen erzeugen *)
	FOR in_Y := Iin_Y1 TO Iin_Y2 DO
		Xus_TN_SCREEN.bya_COLOR[in_Offset] := BYTE#00;
		Xus_TN_SCREEN.bya_CHAR[in_Offset] := BYTE#32;
		in_Offset := in_Offset + 80;
		Xus_TN_SCREEN.bya_Line_Update[in_Y] := TRUE; (* Zeile für Update eintragen *)
	END_FOR;
END_IF;

in_Offset := (Iin_Y2 * 80) + Iin_X1;

IF Iin_OPTION = INT#00 THEN
	(* Schatten durch Farbanpassung erzeugen *)
	FOR in_X  := Iin_X1 TO Iin_X2 DO
		Xus_TN_SCREEN.bya_COLOR[in_Offset] := TN_SC_SHADOW_ATTR(Xus_TN_SCREEN.bya_COLOR[in_Offset]);
		in_Offset := in_Offset + 1;
	END_FOR;
ELSE
	(* Schatten durch Farbe Schwarz und Leerzeichen erzeugen *)
	FOR in_X  := Iin_X1 TO Iin_X2 DO
		Xus_TN_SCREEN.bya_COLOR[in_Offset] := BYTE#00;
		Xus_TN_SCREEN.bya_CHAR[in_Offset] := BYTE#32;
		in_Offset := in_Offset + 1;
	END_FOR;
END_IF;

(* revision history
ks	10. mai. 2010	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>0c138d71-e305-4445-9842-a08e05bca8cb</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TN_SC_AREA_RESTORE" pouType="functionBlock">
        <interface>
          <localVars>
            <variable name="in_Offset_1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_Offset_2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_Y">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_X">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_Y1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_X1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_Y2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_X2">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
          <inOutVars>
            <variable name="Xus_TN_SCREEN">
              <type>
                <derived name="us_TN_SCREEN" />
              </type>
            </variable>
          </inOutVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF Xus_TN_SCREEN.bya_BACKUP[0] &gt; BYTE#00 THEN

	(* Parameter auslesen *)
	in_X1 := BYTE_TO_INT(Xus_TN_SCREEN.bya_BACKUP[1]);
	in_Y1 := BYTE_TO_INT(Xus_TN_SCREEN.bya_BACKUP[2]);
	in_X2 := BYTE_TO_INT(Xus_TN_SCREEN.bya_BACKUP[3]);
	in_Y2 := BYTE_TO_INT(Xus_TN_SCREEN.bya_BACKUP[4]);

	IF TN_SC_XY2_ERROR(in_X1,in_Y1,in_X2,in_Y2) THEN RETURN; END_IF;
	in_Offset_2 := 5;

	(* CHAR und COLOR von BUFFER wiederherstellen *)
	FOR in_Y := in_Y1 TO in_Y2 DO

		Xus_TN_SCREEN.bya_Line_Update[in_Y] := TRUE; (* Zeile zum Updaten freigeben *)
		in_Offset_1 := (in_Y * 80) + in_X1;

		FOR in_X := in_X1 TO in_X2 DO

			Xus_TN_SCREEN.bya_CHAR[in_Offset_1] := Xus_TN_SCREEN.bya_BACKUP[in_Offset_2];
			in_Offset_2 := in_Offset_2 + INT#01;

			Xus_TN_SCREEN.bya_COLOR[in_Offset_1] := Xus_TN_SCREEN.bya_BACKUP[in_Offset_2];
			in_Offset_2 := in_Offset_2 + INT#01;
			in_Offset_1 := in_Offset_1 + INT#01;

		END_FOR;
	END_FOR;

	(* Daten als ungültig markieren *)
	Xus_TN_SCREEN.bya_BACKUP[0] := BYTE#00;
END_IF;

(* revision history
ks	10. mai. 2010	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>db237dfd-3dab-4854-b9b3-34e2017e1993</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TN_SC_AREA_SAVE" pouType="functionBlock">
        <interface>
          <localVars>
            <variable name="in_Offset_1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_Offset_2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_Y">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_X">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
          <inputVars>
            <variable name="Iin_Y1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Iin_X1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Iin_Y2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Iin_X2">
              <type>
                <INT />
              </type>
            </variable>
          </inputVars>
          <inOutVars>
            <variable name="Xus_TN_SCREEN">
              <type>
                <derived name="us_TN_SCREEN" />
              </type>
            </variable>
          </inOutVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF TN_SC_XY2_ERROR(Iin_X1,Iin_Y1,Iin_X2,Iin_Y2) THEN RETURN; END_IF;

(* Parameter ablegen *)
Xus_TN_SCREEN.bya_BACKUP[0] := BYTE#1;
Xus_TN_SCREEN.bya_BACKUP[1] := INT_TO_BYTE(Iin_X1);
Xus_TN_SCREEN.bya_BACKUP[2] := INT_TO_BYTE(Iin_Y1); 
Xus_TN_SCREEN.bya_BACKUP[3] := INT_TO_BYTE(Iin_X2);
Xus_TN_SCREEN.bya_BACKUP[4] := INT_TO_BYTE(Iin_Y2);

in_Offset_2 := 5;
(* CHAR und COLOR in BUFFER sichern *)
FOR in_Y := Iin_Y1 TO Iin_Y2 DO

	in_Offset_1 := (in_Y * 80) + Iin_X1;
	FOR in_X := Iin_X1 TO Iin_X2 DO
		Xus_TN_SCREEN.bya_BACKUP[in_Offset_2] := Xus_TN_SCREEN.bya_CHAR[in_Offset_1];
		in_Offset_2 := in_Offset_2 + INT#01;
		Xus_TN_SCREEN.bya_BACKUP[in_Offset_2] := Xus_TN_SCREEN.bya_COLOR[in_Offset_1];
		in_Offset_2 := in_Offset_2 + INT#01;
		in_Offset_1 := in_Offset_1 + INT#01;
	END_FOR;
END_FOR;

(* revision history
ks	10. mai. 2010	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e4443f82-8bc6-4003-9f6e-cf66bfe27c46</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TN_SC_BOX" pouType="functionBlock">
        <interface>
          <localVars>
            <variable name="FB_TN_SC_FILL">
              <type>
                <derived name="TN_SC_FILL" />
              </type>
            </variable>
            <variable name="by_BorderChar_L_T">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="by_BorderChar_T">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="by_BorderChar_B">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="by_BorderChar_R_T">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="by_BorderChar_L">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="by_BorderChar_R">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="by_BorderChar_L_B">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="by_BorderChar_R_B">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="in_Y">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_X">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_Border_Offset">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_Offset_1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_Offset_2">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
          <inputVars>
            <variable name="Iin_Y1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Iin_X1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Iin_Y2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Iin_X2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Iby_FILL">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="Iby_ATTR">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="Iin_BORDER">
              <type>
                <INT />
              </type>
            </variable>
          </inputVars>
          <inOutVars>
            <variable name="Xus_TN_SCREEN">
              <type>
                <derived name="us_TN_SCREEN" />
              </type>
            </variable>
          </inOutVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF TN_SC_XY2_ERROR(Iin_X1,Iin_Y1,Iin_X2,Iin_Y2) THEN RETURN; END_IF;

(* Bordertype bestimmen *)
CASE Iin_Border OF
0:
	in_Border_Offset := 0;
1:
	by_BorderChar_L_T := BYTE#218; (* links oben *)
	by_BorderChar_T := BYTE#196; (* oben *)
	by_BorderChar_R_T := BYTE#191; (* rechts oben *)
	by_BorderChar_L := BYTE#179; (* links *)
	by_BorderChar_R := BYTE#179; (* rechts *)
	by_BorderChar_B := BYTE#196; (* unten *)
	by_BorderChar_L_B := BYTE#217; (* links unten *)
	by_BorderChar_R_B := BYTE#192; (* rechts unten *)
	in_Border_Offset := 1;
 2:
	by_BorderChar_L_T := BYTE#201;
	by_BorderChar_T := BYTE#205;
	by_BorderChar_R_T := BYTE#187;
	by_BorderChar_L := BYTE#186;
	by_BorderChar_R := BYTE#186;
	by_BorderChar_B := BYTE#205;
	by_BorderChar_L_B := BYTE#188;
	by_BorderChar_R_B := BYTE#200;
	in_Border_Offset := 1;
ELSE
	by_BorderChar_L_T := BYTE#32;
	by_BorderChar_T := BYTE#32;
	by_BorderChar_R_T := BYTE#32;
	by_BorderChar_L := BYTE#32;
	by_BorderChar_R := BYTE#32;
	by_BorderChar_B := BYTE#32;
	by_BorderChar_L_B := BYTE#32;
	by_BorderChar_R_B := BYTE#32;
	in_Border_Offset := 1;

END_CASE;

IF Iby_FILL &gt; BYTE#0 THEN (* FILL Zeichen vorhanden ? -&gt; Box zeichnen *)

	(* Fill-Function um eine Zeichenreihe kleiner zeichnen *)
	FB_TN_SC_FILL(	Iin_Y1 := Iin_Y1 + in_Border_Offset,
					Iin_X1 := Iin_X1 + in_Border_Offset,
					Iin_Y2 := Iin_Y2 - in_Border_Offset,
					Iin_X2 := Iin_X2 - in_Border_Offset,
					Iby_CHAR := Iby_FILL,
					Iby_Attr := Iby_ATTR,
					Xus_TN_SCREEN := Xus_TN_SCREEN);
END_IF;

IF Iin_BORDER = 0 THEN RETURN; END_IF;

(* linken und rechten Rand ausgeben *)

in_Offset_1 := (Iin_Y1 * 80) + Iin_X1;
in_Offset_2 := (Iin_Y1 * 80) + Iin_X2;

FOR in_Y := Iin_Y1 TO Iin_Y2 DO

	(* Zeile zum Updaten freigeben *)
	Xus_TN_SCREEN.bya_Line_Update[in_Y] := TRUE;

	Xus_TN_SCREEN.bya_CHAR[in_Offset_1] := by_BorderChar_L;
	Xus_TN_SCREEN.bya_COLOR[in_Offset_1] := Iby_Attr;

	Xus_TN_SCREEN.bya_CHAR[in_Offset_2] := by_BorderChar_R;
	Xus_TN_SCREEN.bya_COLOR[in_Offset_2] := Iby_Attr;

	in_Offset_1 := in_Offset_1 + 80;
	in_Offset_2 := in_Offset_2 + 80;

END_FOR;

(* unteren und oberen Rand ausgeben *)
in_Offset_1 := (Iin_Y1 * 80) + Iin_X1;
in_Offset_2 := (Iin_Y2 * 80) + Iin_X1;

FOR in_X := Iin_X1 TO Iin_X2 DO

	Xus_TN_SCREEN.bya_CHAR[in_Offset_1] := by_BorderChar_T;
	Xus_TN_SCREEN.bya_COLOR[in_Offset_1] := Iby_Attr;

	Xus_TN_SCREEN.bya_CHAR[in_Offset_2] := by_BorderChar_B;
	Xus_TN_SCREEN.bya_COLOR[in_Offset_2] := Iby_Attr;

	in_Offset_1 := in_Offset_1 + INT#1;
	in_Offset_2 := in_Offset_2 + INT#1;

END_FOR;

(* linke obere Ecke ausgeben *)
in_Offset_1 := (Iin_Y1 * 80) + Iin_X1;
Xus_TN_SCREEN.bya_CHAR[in_Offset_1] := by_BorderChar_L_T;
Xus_TN_SCREEN.bya_COLOR[in_Offset_1] := Iby_Attr;

(* rechte obere Ecke ausgeben *)
in_Offset_1 := (Iin_Y1 * 80) + Iin_X2;
Xus_TN_SCREEN.bya_CHAR[in_Offset_1] := by_BorderChar_R_T;
Xus_TN_SCREEN.bya_COLOR[in_Offset_1] := Iby_Attr;

(* linke untere Ecke ausgeben *)
in_Offset_1 := (Iin_Y2 * 80) + Iin_X1;
Xus_TN_SCREEN.bya_CHAR[in_Offset_1] := by_BorderChar_R_B;
Xus_TN_SCREEN.bya_COLOR[in_Offset_1] := Iby_Attr;

(* rechte untere Ecke ausgeben *)
in_Offset_1 := (Iin_Y2 * 80) + Iin_X2;
Xus_TN_SCREEN.bya_CHAR[in_Offset_1] := by_BorderChar_L_B;
Xus_TN_SCREEN.bya_COLOR[in_Offset_1] := Iby_Attr;

(* revision history
ks	10. mai. 2010	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>fa8c3aed-df1e-42a2-a3fe-5daffd67cf90</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TN_SC_FILL" pouType="functionBlock">
        <interface>
          <localVars>
            <variable name="in_X">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_Y">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_Offset">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
          <inputVars>
            <variable name="Iin_Y1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Iin_X1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Iin_Y2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Iin_X2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Iby_CHAR">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="Iby_Attr">
              <type>
                <BYTE />
              </type>
            </variable>
          </inputVars>
          <inOutVars>
            <variable name="Xus_TN_SCREEN">
              <type>
                <derived name="us_TN_SCREEN" />
              </type>
            </variable>
          </inOutVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF TN_SC_XY2_ERROR(Iin_X1,Iin_Y1,Iin_X2,Iin_Y2) THEN RETURN; END_IF;

FOR in_Y := Iin_Y1 TO Iin_Y2 DO
	Xus_TN_SCREEN.bya_Line_Update[in_Y] := TRUE; (* Zeile zum Updaten freigeben *)
	in_Offset := (in_Y * 80) + Iin_X1;
	FOR in_X := Iin_X1 TO Iin_X2 DO
		Xus_TN_SCREEN.bya_CHAR[in_Offset]  := Iby_CHAR; (* Zeichen eintragen *)
		Xus_TN_SCREEN.bya_COLOR[in_Offset] := Iby_Attr; (* Farbe eintragen *)
		in_Offset := in_Offset + 1;
	END_FOR;
END_FOR;

(* revision history
ks	10. mai. 2010	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>02537fc9-dd8e-45b1-9896-af11cea55dd7</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TN_SC_LINE" pouType="functionBlock">
        <interface>
          <localVars>
            <variable name="by_Connect_Left_Char">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="by_Connect_Right_Char">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="by_Connect_Top_Char">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="by_Connect_Bottom_Char">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="by_Connect_Cruz_Char">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="by_Vertikal_Line_Char">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="by_Horzontal_Line_Char">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="by_old_Char">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="in_Offset_1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_ROW_Index">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_COL_Index">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="by_Char">
              <type>
                <BYTE />
              </type>
            </variable>
          </localVars>
          <inputVars>
            <variable name="Iin_X1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Iin_Y1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Iin_X2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Iin_Y2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Iby_ATTR">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="Iby_BORDER">
              <type>
                <BYTE />
              </type>
            </variable>
          </inputVars>
          <inOutVars>
            <variable name="Xus_TN_SCREEN">
              <type>
                <derived name="us_TN_SCREEN" />
              </type>
            </variable>
          </inOutVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF TN_SC_XY2_ERROR(Iin_X1,Iin_Y1,Iin_X2,Iin_Y2) THEN RETURN; END_IF;

(* Bordertype bestimmen *)
IF Iby_Border = BYTE#01 THEN (* Single Line *)
	by_Connect_Top_Char := BYTE#16#C2;
	by_Connect_Bottom_Char := BYTE#16#C1;
	by_Connect_Left_Char := BYTE#16#C3;
	by_Connect_Right_Char := BYTE#16#B4;
	by_Horzontal_Line_Char := BYTE#16#C4;
	by_Vertikal_Line_Char := BYTE#16#B3;
	by_Connect_Cruz_Char := BYTE#16#C5;
ELSIF Iby_Border = BYTE#02 THEN	(* Double Linie *)
	by_Connect_Top_Char := BYTE#16#CB;
	by_Connect_Bottom_Char := BYTE#16#CA;
	by_Connect_Left_Char := BYTE#16#CC;
	by_Connect_Right_Char := BYTE#16#B9;
	by_Horzontal_Line_Char := BYTE#16#CD;
	by_Vertikal_Line_Char := BYTE#16#BA;
	by_Connect_Cruz_Char := BYTE#16#CE;
ELSE (* Full Linie *)
	by_Connect_Top_Char := Iby_Border;
	by_Connect_Bottom_Char := Iby_Border;
	by_Connect_Left_Char := Iby_Border;
	by_Connect_Right_Char := Iby_Border;
	by_Horzontal_Line_Char := Iby_Border;
	by_Vertikal_Line_Char := Iby_Border;
	by_Connect_Cruz_Char := Iby_Border;
END_IF;

(* Vertikale Linie zeichnen *)
IF Iin_X1 = Iin_X2 THEN
	in_Offset_1 := (Iin_Y1 * 80) + Iin_X1;
	FOR in_ROW_Index := Iin_Y1 TO Iin_Y2 DO
		by_old_Char := Xus_TN_SCREEN.bya_CHAR[in_Offset_1]; (* bestehendes Zeichen auslesen *)
		by_Char := by_Vertikal_Line_Char; (* Standardzeichen vorbelegen *)
		IF by_old_Char = by_Horzontal_Line_Char THEN (* Schnittpunkt erkannt *)
			IF in_ROW_Index = Iin_Y1 THEN (* Anfang der Linie behandeln *)
				by_Char := by_Connect_Top_Char;
			ELSIF in_ROW_Index = Iin_Y2 THEN (* Ende der Linie behandeln *)
				by_Char := by_Connect_Bottom_Char;
			ELSE (* Kreuzungspunkt behandeln *)
				by_Char := by_Connect_Cruz_Char;
			END_IF;
		END_IF;
		Xus_TN_SCREEN.bya_Line_Update[in_ROW_Index] := TRUE; (* Zeile zum Updaten freigeben *)
		Xus_TN_SCREEN.bya_CHAR[in_Offset_1] := by_Char;
		Xus_TN_SCREEN.bya_COLOR[in_Offset_1] := Iby_Attr;
		in_Offset_1 := in_Offset_1 + 80;
	END_FOR;

ELSIF Iin_Y1 = Iin_Y2 THEN (* Horzontale Linie zeichnen *)
	Xus_TN_SCREEN.bya_Line_Update[Iin_Y1] := TRUE; (* Zeile zum Updaten freigeben *)
	in_Offset_1 := (Iin_Y1 * 80) + Iin_X1;
	FOR in_COL_Index := Iin_X1 TO Iin_X2 DO
		by_old_Char := Xus_TN_SCREEN.bya_CHAR[in_Offset_1]; (* bestehendes Zeichen auslesen *)
		by_Char := by_Horzontal_Line_Char; (* Standardzeichen vorbelegen *)
		IF by_old_Char = by_Vertikal_Line_Char THEN (* Schnittpunkt erkannt *)
			IF in_COL_Index = Iin_X1 THEN (* Anfang der Linie behandeln *)
				by_Char := by_Connect_Left_Char;
			ELSIF in_COL_Index = Iin_X2 THEN (* Ende der Linie behandeln *)
				by_Char := by_Connect_Right_Char;
			ELSE (* Kreuzungspunkt behandeln *)
				by_Char := by_Connect_Cruz_Char;
			END_IF;
		END_IF;
		Xus_TN_SCREEN.bya_CHAR[in_Offset_1] := by_Char;
		Xus_TN_SCREEN.bya_COLOR[in_Offset_1] := Iby_Attr;
		in_Offset_1 := in_Offset_1 + 1;
	END_FOR;
END_IF;

(* revision history
ks	10. mai. 2010	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>1604848f-4934-40c7-a9a2-9ff404106245</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TN_SC_READ_ATTR" pouType="functionBlock">
        <interface>
          <localVars>
            <variable name="in_Offset">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
          <inputVars>
            <variable name="Iin_Y">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Iin_X">
              <type>
                <INT />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Oby_ATTR">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <inOutVars>
            <variable name="Xus_TN_SCREEN">
              <type>
                <derived name="us_TN_SCREEN" />
              </type>
            </variable>
          </inOutVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF TN_SC_XY_ERROR(Iin_X,Iin_Y) THEN RETURN; END_IF;
in_Offset := (Iin_Y * 80) + Iin_X;
Oby_ATTR := Xus_TN_SCREEN.bya_COLOR[in_Offset]; (* Attribute auslesen *)

(* revision history
ks	10. mai. 2010	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>881d65fe-72ac-4aef-82de-5ee8608f54ea</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TN_SC_READ_CHAR" pouType="functionBlock">
        <interface>
          <localVars>
            <variable name="in_Offset">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
          <inputVars>
            <variable name="Iin_Y">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Iin_X">
              <type>
                <INT />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Oby_CHAR">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <inOutVars>
            <variable name="Xus_TN_SCREEN">
              <type>
                <derived name="us_TN_SCREEN" />
              </type>
            </variable>
          </inOutVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF TN_SC_XY_ERROR(Iin_X,Iin_Y) THEN RETURN; END_IF;
in_Offset := (Iin_Y * 80) + Iin_X;
Oby_CHAR := Xus_TN_SCREEN.bya_CHAR[in_Offset]; (* Charakter auslesen *)

(* revision history
ks	10. mai. 2010	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>5f7fe902-4d5b-40c6-bb3a-7d92a5b64f26</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TN_SC_SHADOW_ATTR" pouType="function">
        <interface>
          <returnType>
            <BYTE />
          </returnType>
          <inputVars>
            <variable name="Iby_ATTR">
              <type>
                <BYTE />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Background Farbe auf Schwarz ändern      *)
(* und dunkle Fordergrundfarben einschalten *)  
TN_SC_SHADOW_ATTR := ((Iby_ATTR AND BYTE#2#11110000) OR BYTE#2#00001000);

(* revision history
ks	10. mai. 2010	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>0dbe9882-dbe4-457b-9b48-48f12d1ac6aa</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TN_SC_VIEWPORT" pouType="functionBlock">
        <interface>
          <localVars>
            <variable name="FB_TN_SC_WRITE">
              <type>
                <derived name="TN_SC_WRITE" />
              </type>
            </variable>
            <variable name="FB_TON">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="in_index">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_Color">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="by_Attr">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="in_count">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
          <inOutVars>
            <variable name="Xus_LOG_VIEWPORT">
              <type>
                <derived name="us_LOG_VIEWPORT" />
              </type>
            </variable>
            <variable name="Xus_LOG_CONTROL">
              <type>
                <derived name="LOG_CONTROL" />
              </type>
            </variable>
            <variable name="Xus_TN_SCREEN">
              <type>
                <derived name="us_TN_SCREEN" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="Iin_X">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Iin_Y">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Iin_Width">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Idw_ATTR_1">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="Idw_ATTR_2">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="Iti_TIME">
              <type>
                <TIME />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* LOG-Messages ausgeben *)

IF Xus_LOG_VIEWPORT.UPDATE AND FB_TON.Q THEN (* Update gewünscht und Verzögerungszeit abgelaufen *)
	Xus_LOG_VIEWPORT.UPDATE := FALSE;
	FOR in_count := 1 TO Xus_LOG_VIEWPORT.COUNT DO (* Alle Viewport-Zeilen abarbeiten *)
		in_index := Xus_LOG_VIEWPORT.LINE_ARRAY[in_count];
		(* Farbe aus den Option-Parameter auslesen &gt;0,Level,Back,Front&lt; *)
		in_Color := DWORD_TO_INT(Xus_LOG_CONTROL.MSG_OPTION[in_index] AND DWORD#2#1111);

		CASE in_Color OF
		0..3: by_Attr := OSCAT_BASIC.BYTE_OF_DWORD(Idw_ATTR_1,INT_TO_BYTE(in_Color));
		4..7: by_Attr := OSCAT_BASIC.BYTE_OF_DWORD(Idw_ATTR_2,INT_TO_BYTE(in_Color));
		ELSE
			by_Attr := OSCAT_BASIC.BYTE_OF_DWORD(Idw_ATTR_1,BYTE#0);
		END_CASE;

		(* Message (Text + Farbe) ausgeben *)
		FB_TN_SC_WRITE(	Iin_Y := Iin_Y + in_count - INT#01,
						Iin_X := Iin_X,
						Iby_ATTR := by_Attr,
						Ist_STRING := OSCAT_BASIC.FIX(str := Xus_LOG_CONTROL.MSG[in_index], L := Iin_Width, C := BYTE#32, M := INT#00), (* String rechts ergänzen bzw. kürzen *)
						Xus_TN_SCREEN := Xus_TN_SCREEN);

	END_FOR;

	(* Timer stoppen/rücksetzen *)
	FB_TON.IN := FALSE;
	FB_TON.PT := Iti_TIME;
	FB_TON();

END_IF;

(* Update-Zeitverzoegerung *)
FB_TON.IN := TRUE;
FB_TON.PT := Iti_TIME;
FB_TON();

(* revision history
ks	10. mai. 2010	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>bd040a1d-8d33-41f2-9e29-866f93f49513</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TN_SC_WRITE" pouType="functionBlock">
        <interface>
          <localVars>
            <variable name="bo_Color">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="in_Offset">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_Char_Index">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_String_Length">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
          <inputVars>
            <variable name="Iin_Y">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Iin_X">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Iby_ATTR">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="Ist_STRING">
              <type>
                <string />
              </type>
            </variable>
          </inputVars>
          <inOutVars>
            <variable name="Xus_TN_SCREEN">
              <type>
                <derived name="us_TN_SCREEN" />
              </type>
            </variable>
          </inOutVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">in_String_Length := LEN(Ist_STRING);
IF TN_SC_XY_ERROR(Iin_X + in_String_Length - 1,Iin_Y) THEN RETURN; END_IF;
Xus_TN_SCREEN.bya_Line_Update[Iin_Y] := TRUE; (* Zeile zum Updaten freigeben *)
in_Offset := (Iin_Y * 80) + Iin_X; (* Offset des ersten Zeichen berechnen *)
bo_Color := Iby_ATTR &lt;&gt; BYTE#00;

(* Zeichen und Attribute des String kopieren *)
FOR in_Char_Index := 1 TO in_String_Length DO
	IF bo_Color THEN Xus_TN_SCREEN.bya_COLOR[in_Offset] := Iby_ATTR; END_IF;
	Xus_TN_SCREEN.bya_CHAR[in_Offset] := OSCAT_BASIC.CODE(STR:=Ist_STRING,POS:=in_Char_Index);
	in_Offset := in_Offset + INT#1;
END_FOR;

Xus_TN_SCREEN.in_EOS_Offset := in_Offset; (* End of String Offset sichern *)

(* revision history
ks	10. mai. 2010	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>45c551c6-5493-48c7-84ff-5bb9da6f84e9</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TN_SC_WRITE_ATTR" pouType="functionBlock">
        <interface>
          <localVars>
            <variable name="in_Offset">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
          <inputVars>
            <variable name="Iin_Y">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Iin_X">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Iby_ATTR">
              <type>
                <BYTE />
              </type>
            </variable>
          </inputVars>
          <inOutVars>
            <variable name="Xus_TN_SCREEN">
              <type>
                <derived name="us_TN_SCREEN" />
              </type>
            </variable>
          </inOutVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF TN_SC_XY_ERROR(Iin_X,Iin_Y) THEN RETURN; END_IF;
in_Offset := (Iin_Y * 80) + Iin_X;
Xus_TN_SCREEN.bya_COLOR[in_Offset] := Iby_ATTR; (* Attribute schreiben *)

(* revision history
ks	10. mai. 2010	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>813fe865-e24e-460f-9d72-3956d08ce8c6</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TN_SC_WRITE_C" pouType="functionBlock">
        <interface>
          <localVars>
            <variable name="FB_TN_SC_WRITE">
              <type>
                <derived name="TN_SC_WRITE" />
              </type>
            </variable>
          </localVars>
          <inputVars>
            <variable name="Iin_Y">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Iin_X">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Iby_ATTR">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="Ist_STRING">
              <type>
                <string />
              </type>
            </variable>
            <variable name="Iin_LENGTH">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Iin_OPTION">
              <type>
                <INT />
              </type>
            </variable>
          </inputVars>
          <inOutVars>
            <variable name="Xus_TN_SCREEN">
              <type>
                <derived name="us_TN_SCREEN" />
              </type>
            </variable>
          </inOutVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Text ausgeben *)
FB_TN_SC_WRITE( Iin_Y := Iin_Y,
				Iin_X := Iin_X,
				Iby_ATTR := Iby_ATTR,
				Ist_STRING := OSCAT_BASIC.FIX(str:=Ist_STRING,L:=Iin_LENGTH,C:=BYTE#32,M:=Iin_OPTION),
				Xus_TN_SCREEN := Xus_TN_SCREEN);

(* revision history
ks	10. mai. 2010	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>a9bed4c9-2344-4b8d-94b0-cd4bb898d949</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TN_SC_WRITE_CHAR" pouType="functionBlock">
        <interface>
          <localVars>
            <variable name="in_Offset">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
          <inputVars>
            <variable name="Iin_Y">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Iin_X">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Iby_CHAR">
              <type>
                <BYTE />
              </type>
            </variable>
          </inputVars>
          <inOutVars>
            <variable name="Xus_TN_SCREEN">
              <type>
                <derived name="us_TN_SCREEN" />
              </type>
            </variable>
          </inOutVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF TN_SC_XY_ERROR(Iin_X,Iin_Y) THEN RETURN; END_IF;
in_Offset := (Iin_Y * 80) + Iin_X;
Xus_TN_SCREEN.bya_CHAR[in_Offset] := Iby_CHAR; (* Charakter schreiben *)

(* revision history
ks	10. mai. 2010	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>9fb011b9-82b5-4c2f-9ef4-9f39180013b9</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TN_SC_WRITE_EOS" pouType="functionBlock">
        <interface>
          <localVars>
            <variable name="TN_SC_WRITE">
              <type>
                <derived name="TN_SC_WRITE" />
              </type>
            </variable>
          </localVars>
          <inputVars>
            <variable name="Iby_ATTR">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="Ist_STRING">
              <type>
                <string />
              </type>
            </variable>
          </inputVars>
          <inOutVars>
            <variable name="Xus_TN_SCREEN">
              <type>
                <derived name="us_TN_SCREEN" />
              </type>
            </variable>
          </inOutVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">TN_SC_WRITE(Iin_Y := Xus_TN_SCREEN.in_EOS_Offset / 80, (* aktuelle Zeile ausrechnen *)
			Iin_X := Xus_TN_SCREEN.in_EOS_Offset MOD 80, (* aktuelle Spalte ausrechnen *)
			Iby_ATTR := Iby_ATTR,
			Ist_STRING := Ist_STRING,
			Xus_TN_SCREEN := Xus_TN_SCREEN);

(* revision history
ks	10. mai. 2010	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>4ee3509a-acb4-40a8-90bb-3afbe0c96ec2</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TN_SC_XY_ERROR" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Y">
              <type>
                <INT />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* min und max werte prüfen *)
TN_SC_XY_ERROR := Y &lt; 0 OR X &lt; 0 OR Y &gt; 23 OR X &gt; 79;

(* revision history
ks	10. mai. 2010	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>443c2cb1-338f-4915-b6f8-f2aa6bee5443</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TN_SC_XY2_ERROR" pouType="function">
        <interface>
          <returnType>
            <BOOL />
          </returnType>
          <inputVars>
            <variable name="X1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Y1">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="X2">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Y2">
              <type>
                <INT />
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* min und max werte prüfen *)
TN_SC_XY2_ERROR := Y1 &lt; 0 OR X1 &lt; 0 OR Y2 &lt; 0 OR X2 &lt; 0 OR Y1 &gt; 23 OR X1 &gt; 79 OR Y2 &gt; 23 OR X2 &gt; 79;

(* revision history
ks	10. mai. 2010	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>8d155ffd-b916-46b7-880a-664ec495d8a6</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TN_SEND_ROWS" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="Xus_TN_SCREEN">
              <type>
                <derived name="us_TN_SCREEN" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="S_BUF_SIZE">
              <type>
                <INT />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="in_Line_Count">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Zähler um max alle 24 Zeilen zu durchlaufen</xhtml>
              </documentation>
            </variable>
            <variable name="in_Col_Count">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_Last_Row_Index">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="bo_Break_Loop">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="in_Row_Count">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_Offset">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_Write_Index">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="in_Write_Index_Backup">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="by_Cur_Color">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="by_last_Color">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="in_Write_Stop">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Verbindung vorhanden und kein Datensenden aktiv *)
IF (IP_C.C_STATE &lt; BYTE#127 OR S_BUF.SIZE &gt; UINT#0) THEN
	RETURN; (* nein -&gt; Baustein beenden *)
END_IF;

(* aktuellen Schreibindex laden *)
in_Write_Index := UINT_TO_INT(S_BUF.SIZE) - 1;

(* aktuellen Schreibindex zwischenspeichern *)
in_Write_Index_Backup := in_Write_Index;

(* positive Flanke Connect on *)
IF (IP_C.C_STATE = BYTE#254) OR (Xus_TN_SCREEN.bo_Clear_Screen) THEN

	(* Clear-Screen Meldung rücksetzen *)
	Xus_TN_SCREEN.bo_Clear_Screen := FALSE;

	(* alle Zeilen für Update markieren *)
	FOR in_Line_Count := INT#00 TO INT#23 DO
		Xus_TN_SCREEN.bya_Line_Update[in_Line_Count] := TRUE;
	END_FOR;

	(* ESC [0;30,40m  Reset Attributes + Black,Black *)
	in_Write_Index := in_Write_Index + INT#1;
	S_BUF.BUFFER[in_Write_Index] := BYTE#16#1B; (* ESC *)
	in_Write_Index := in_Write_Index + INT#1;
	S_BUF.BUFFER[in_Write_Index] := BYTE#16#5B; (* [ *)
	in_Write_Index := in_Write_Index + INT#1;
	S_BUF.BUFFER[in_Write_Index] := BYTE#16#30; (* 0 *)
	in_Write_Index := in_Write_Index + INT#1;
	S_BUF.BUFFER[in_Write_Index] := BYTE#16#3B; (* ; *)
	in_Write_Index := in_Write_Index + INT#1;
	S_BUF.BUFFER[in_Write_Index] := BYTE#16#33; (* 3 *)

	(* Einerstelle Farbe Foreground ausgeben *)
	in_Write_Index := in_Write_Index + INT#1;
	S_BUF.BUFFER[in_Write_Index] := (SHR(Xus_TN_SCREEN.by_Clear_Screen_Attr,4) OR BYTE#16#30);

	in_Write_Index := in_Write_Index + INT#1;
	S_BUF.BUFFER[in_Write_Index] := BYTE#16#3B; (* ; *)
	in_Write_Index := in_Write_Index + INT#1;
	S_BUF.BUFFER[in_Write_Index] := BYTE#16#34; (* 4 *)

	(* Einerstelle Farbe Background ausgeben *)
	in_Write_Index := in_Write_Index + INT#1;
	S_BUF.BUFFER[in_Write_Index] := ((Xus_TN_SCREEN.by_Clear_Screen_Attr AND BYTE#16#07) OR BYTE#16#30);

	in_Write_Index := in_Write_Index + INT#1;
	S_BUF.BUFFER[in_Write_Index] := BYTE#16#6D; (* m *)

	(* ESC[2J Clear screen and home cursor *)
	in_Write_Index := in_Write_Index + INT#1;
	S_BUF.BUFFER[in_Write_Index] := BYTE#16#1B; (* ESC *)
	in_Write_Index := in_Write_Index + INT#1;
	S_BUF.BUFFER[in_Write_Index] := BYTE#16#5B; (* [ *)
	in_Write_Index := in_Write_Index + INT#1;
	S_BUF.BUFFER[in_Write_Index] := BYTE#16#32; (* 2 *)
	in_Write_Index := in_Write_Index + INT#1;
	S_BUF.BUFFER[in_Write_Index] := BYTE#16#4A; (* J *)

	(* ESC [?7l Off *)
	in_Write_Index := in_Write_Index + INT#1;
	S_BUF.BUFFER[in_Write_Index] := BYTE#16#1B; (* ESC *)
	in_Write_Index := in_Write_Index + INT#1;
	S_BUF.BUFFER[in_Write_Index] := BYTE#16#5B; (* [ *)
	in_Write_Index := in_Write_Index + INT#1;
	S_BUF.BUFFER[in_Write_Index] := BYTE#16#3F; (* ? *)
	in_Write_Index := in_Write_Index + INT#1;
	S_BUF.BUFFER[in_Write_Index] := BYTE#16#37; (* 7 *)
	in_Write_Index := in_Write_Index + INT#1;
	S_BUF.BUFFER[in_Write_Index] := BYTE#16#6C; (* l *)

END_IF;

in_Last_Row_Index := INT#0;
bo_Break_Loop := FALSE;
in_Write_Stop := S_BUF_SIZE - 20;

(* alle Zeilen durchlaufen *)
FOR in_Line_Count := 0 TO 23 DO

	in_Offset := in_Row_Count * INT#80;

	(* prüfen ob Update einer Zeile notwendig ist bzw. nach Reconnect *)
	IF (Xus_TN_SCREEN.bya_Line_Update[in_Row_Count] = TRUE) THEN

		(* Schreib-Cursor positionieren *)
		in_Write_Index := in_Write_Index + INT#1;
		S_BUF.BUFFER[in_Write_Index] := BYTE#16#1B; (* ESC *)
		in_Write_Index := in_Write_Index + INT#1;
		S_BUF.BUFFER[in_Write_Index] := BYTE#16#5B; (* [ *)

		(* Zehnerstelle Zeilennummer ausgeben *)
		in_Write_Index := in_Write_Index + INT#1;
		S_BUF.BUFFER[in_Write_Index] :=
		SHR(OSCAT_BASIC.INT_TO_BCDC(in_Row_Count + INT#1),INT#4) OR BYTE#16#30;

		(* Einerstelle Zeilennummer ausgeben *)
		in_Write_Index := in_Write_Index + INT#1;
		S_BUF.BUFFER[in_Write_Index] :=
		(OSCAT_BASIC.INT_TO_BCDC(in_Row_Count + INT#1) AND BYTE#16#0F) OR BYTE#16#30;

		in_Write_Index := in_Write_Index + INT#1;
		S_BUF.BUFFER[in_Write_Index] := BYTE#16#3B; (* ; *)
		in_Write_Index := in_Write_Index + INT#1;
		S_BUF.BUFFER[in_Write_Index] := BYTE#16#31; (* 1 *)
		in_Write_Index := in_Write_Index + INT#1;
		S_BUF.BUFFER[in_Write_Index] := BYTE#16#48; (* H *)

		(* alle Spalten einer Zeile durchlaufen *)
		FOR in_Col_Count := 0 TO 79 DO

			(* aktuelle Farbe bestimmen *)
			by_Cur_Color := Xus_TN_SCREEN.bya_COLOR[in_Offset];
			IF (by_Cur_Color &lt;&gt; by_last_Color) OR (in_Col_Count = INT#00) THEN

				(* Farbeinstellung: ANSI-Sequenz ESC[X;Y;Zm ausgeben *)
				in_Write_Index := in_Write_Index + INT#1;
				S_BUF.BUFFER[in_Write_Index] := BYTE#16#1B; (* ESC *)

				in_Write_Index := in_Write_Index + INT#1;
				S_BUF.BUFFER[in_Write_Index] := BYTE#16#5B; (* [ *)

				(* Farbeinstellung: dunkel oder Hell und blinken bestimmen *)

					IF (((by_Cur_Color AND BYTE#2#10001000) XOR (by_last_Color AND BYTE#2#10001000)) &lt;&gt; BYTE#00) OR (in_Col_Count = 0) THEN

						in_Write_Index := in_Write_Index + INT#1;
						S_BUF.BUFFER[in_Write_Index] := BYTE#16#30; (* 0 *)
						in_Write_Index := in_Write_Index + INT#1;
						S_BUF.BUFFER[in_Write_Index] := BYTE#16#3B; (* ; *)

						(* keine dunklen Farben gewünscht -&gt; dann Bold &amp; Bright *)
						IF (by_Cur_Color AND BYTE#2#00001000) = BYTE#2#00000000 THEN

							(* auf Bold &amp; Btight Farben umstellen *)
							in_Write_Index := in_Write_Index + INT#1;
							S_BUF.BUFFER[in_Write_Index] := BYTE#16#31; (* 1 *) 
							in_Write_Index := in_Write_Index + INT#1;
							S_BUF.BUFFER[in_Write_Index] := BYTE#16#3B; (* ; *)

						END_IF;

						(* blinkenden Farben gewünscht *)
						IF (by_Cur_Color AND BYTE#2#10000000) = BYTE#2#10000000 THEN 

							(* auf Bold &amp; Bright Farben umstellen *)
							in_Write_Index := in_Write_Index + INT#1;
							S_BUF.BUFFER[in_Write_Index] := BYTE#16#35; (* 5 *) 
							in_Write_Index := in_Write_Index + INT#1;
							S_BUF.BUFFER[in_Write_Index] := BYTE#16#3B; (* ; *)

						END_IF;

					END_IF;

					(* Zehnerstelle Farbe Foreground ausgeben *)
					in_Write_Index := in_Write_Index + INT#1;
					S_BUF.BUFFER[in_Write_Index] := BYTE#16#33; (* 3 *)

					(* Einerstelle Farbe Foreground ausgeben *)
					in_Write_Index := in_Write_Index + INT#1;
					S_BUF.BUFFER[in_Write_Index] := ((SHR(by_Cur_Color,4) AND BYTE#2#00000111) OR BYTE#16#30);

					in_Write_Index := in_Write_Index + INT#1;
					S_BUF.BUFFER[in_Write_Index] := BYTE#16#3B; (* ; *)

					(* Zehnerstelle Farbe Background ausgeben *)
					in_Write_Index := in_Write_Index + INT#1;
					S_BUF.BUFFER[in_Write_Index] := BYTE#16#34; (* 4 *)

					(* Einerstelle Farbe Background ausgeben *)
					in_Write_Index := in_Write_Index + INT#1;
					S_BUF.BUFFER[in_Write_Index] := ((by_Cur_Color AND BYTE#2#00000111) OR BYTE#16#30); 

					in_Write_Index := in_Write_Index + INT#1;
					S_BUF.BUFFER[in_Write_Index] := BYTE#16#6D; (* m *)

					(* neue Farbe als letzt verwendete speichern *)
					by_last_Color := by_Cur_Color;

				END_IF;

				(* Buffer Ende vorzeitig erreicht -&gt; Ende *)
				IF (in_Write_Index &gt; in_Write_Stop) THEN

					bo_Break_Loop := TRUE;
					EXIT;

				END_IF;

				(* ein TEXT-Zeichen von Screenbuffer in den Sendebuffer übertragen *)
				in_Write_Index := in_Write_Index + INT#1;
				S_BUF.BUFFER[in_Write_Index] := Xus_TN_SCREEN.bya_CHAR[in_Offset];

				(* nächste Spalte anwählen *)
				in_Offset := in_Offset + INT#01;
			END_FOR;

			IF (bo_Break_Loop = TRUE) THEN;

				(* Buffer Ende vorzeitig erreicht -&gt; nur bis zur letzten kompletten Zeile uebertragen *)
				in_Write_Index := in_Last_Row_Index;

				EXIT;
			END_IF;

			(* Buffer ist noch nicht voll -&gt; neue Zeile ubernehmen *)
			in_Last_Row_Index := in_Write_Index;
			Xus_TN_SCREEN.bya_Line_Update[in_Row_Count] := FALSE;

		END_IF;

		(* naechste Zeile adressieren *)
		in_Row_Count := in_Row_Count + INT#01;

		(* ab letzter Zeile wieder von vorne beginnen *)
		IF (in_Row_Count &gt; INT#23) THEN
			in_Row_Count := INT#00;
		END_IF;
		(*-----------------------------------------------*)


	END_FOR;

	(* wenn in einen Update-Zyklus alle Zeilen auf einmal geschafft wurden *)
	(* wird der Row_Count auf ersten Zeile gestellt *)
	(* soll das hässliche Grafikflackern verhindern *)
	(* ansonsten wird bei der letzen Zeile weitergemacht *)
	IF (bo_Break_Loop = FALSE) THEN
		in_Row_Count := INT#00;
	END_IF;

	(* Edit-Cursor positionieren *)
	IF (in_Write_Index &lt;&gt; in_Write_Index_Backup) THEN

		in_Write_Index := in_Write_Index + INT#1;
		S_BUF.BUFFER[in_Write_Index] := BYTE#16#1B; (* ESC *)
		in_Write_Index := in_Write_Index + INT#1;
		S_BUF.BUFFER[in_Write_Index] := BYTE#16#5B; (* [ *)

		(* Zehnerstelle Zeilennummer ausgeben *)
		in_Write_Index := in_Write_Index + INT#1;
		S_BUF.BUFFER[in_Write_Index] := SHR(OSCAT_BASIC.INT_TO_BCDC(Xus_TN_SCREEN.in_Cursor_Y + 1),INT#4) OR BYTE#16#30;

		(* Einerstelle Zeilennummer ausgeben *)
		in_Write_Index := in_Write_Index + INT#1;
		S_BUF.BUFFER[in_Write_Index] := (OSCAT_BASIC.INT_TO_BCDC(Xus_TN_SCREEN.in_Cursor_Y + 1) AND BYTE#16#0F) OR BYTE#16#30;

		in_Write_Index := in_Write_Index + INT#1;
		S_BUF.BUFFER[in_Write_Index] := BYTE#16#3B; (* ; *)

		(* Zehnerstelle Spaltenummer ausgeben *)
		in_Write_Index := in_Write_Index + INT#1;
		S_BUF.BUFFER[in_Write_Index] := SHR(OSCAT_BASIC.INT_TO_BCDC(Xus_TN_SCREEN.in_Cursor_X + 1),INT#4) OR BYTE#16#30;

		(* Einerstelle Spaltennummer ausgeben *)
		in_Write_Index := in_Write_Index + INT#1;
		S_BUF.BUFFER[in_Write_Index] := (OSCAT_BASIC.INT_TO_BCDC(Xus_TN_SCREEN.in_Cursor_X + 1) AND BYTE#16#0F) OR BYTE#16#30;

		in_Write_Index := in_Write_Index + INT#1;
		S_BUF.BUFFER[in_Write_Index] := BYTE#16#48; (* H *)

END_IF;

(* aktuellen Schreibindex speichern -&gt; Senden anstossen *)
S_BUF.SIZE := INT_TO_UINT(in_Write_Index + 1);

(* revision history
ks	10. mai. 2010	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ea8560bc-67f7-47c8-b77a-c2a09f03b048</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="MOON_PHASE" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="XDT">
              <type>
                <DT />
              </type>
            </variable>
            <variable name="SCALE">
              <type>
                <BYTE />
              </type>
              <initialValue>
                <simpleValue value="12" />
              </initialValue>
            </variable>
            <variable name="UPDATE">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#60m0s0ms" />
              </initialValue>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="PHASE">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="x">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="last_dt">
              <type>
                <DT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF XDT - last_dt &gt; UPDATE THEN
	x := (DT_TO_UDINT(XDT) - 603240) MOD 2551392;
	PHASE := UDINT_TO_BYTE(SCALE * x / 2551392) ;
	last_dt := XDT;
END_IF;

(* revision history
ks	15.may. 2011	rev 1.0
	original version

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>41f2544f-13b3-4ca7-9409-dccbe9943906</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="WORLD_WEATHER" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> IP_Control Verwaltungsstruktur </xhtml>
              </documentation>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="WW">
              <type>
                <derived name="WORLD_WEATHER_DATA" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="ACTIVATE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="LATITUDE">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="LONGITUDE">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="KEY">
              <type>
                <string length="30" />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="BUSY">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="DONE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ERROR_C">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="ERROR_T">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="URL_DATA">
              <type>
                <derived name="url" />
              </type>
            </variable>
            <variable name="DNS_CLIENT">
              <type>
                <derived name="DNS_CLIENT" />
              </type>
            </variable>
            <variable name="HTTP_GET">
              <type>
                <derived name="HTTP_GET" />
              </type>
            </variable>
            <variable name="CPB">
              <type>
                <derived name="CSV_PARSER_BUF" />
              </type>
            </variable>
            <variable name="last_state">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="value_int">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="value_real">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="v_real">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="state">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="url_str">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="offset">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="size">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="sep">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="cnt">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="day">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="idx">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="run">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="result">
              <type>
                <BYTE />
              </type>
            </variable>
            <variable name="value">
              <type>
                <string length="OSCAT_BASIC.STRING_LENGTH" />
              </type>
            </variable>
            <variable name="pos">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE state OF

00:
	IF ACTIVATE AND NOT last_state THEN
		state := 20;
		DONE := FALSE;
		BUSY := TRUE;
		ERROR_C := DWORD#0;
		ERROR_T := BYTE#0;
	END_IF;

20: (* URL for DNS UND HTTP-GET *)
	(* Example: http://api.worldweatheronline.com/free/v1/weather.ashx?q=48.21,16.37&amp;format=csv&amp;num_of_days=5&amp;key=xxxxxxxxxxxxxxxxxxxxxx *)
	url_str := CONCAT('http://api.worldweatheronline.com/free/v1/weather.ashx?q=',OSCAT_BASIC.REAL_TO_STRF(LATITUDE,6,D:='.'));
	url_str := CONCAT(url_str,',');
	url_str := CONCAT(url_str,OSCAT_BASIC.REAL_TO_STRF(LONGITUDE,6,D:='.'));
	url_str := CONCAT(url_str,'&amp;format=csv&amp;num_of_days=5&amp;key=');
	url_str := CONCAT(url_str,key);

	URL_DATA:=STRING_TO_URL(STR:=url_str, DEFAULT_PROTOCOL:='', DEFAULT_PATH:='' );
	state := 40;

40:
	IF DNS_CLIENT.DONE THEN
		state := 60;
	ELSIF (DNS_CLIENT.ERROR &gt; DWORD#00) THEN
		(* Fehlerbehandlung *)
		ERROR_C := DNS_CLIENT.ERROR;
	ERROR_T := BYTE#01;
		state   := 100;
	END_IF;

60:
	IF HTTP_GET.DONE THEN
		sep := 0;
		idx := 0;
		day := 0;
		cnt := 0;
		OFFSET := HTTP_GET.BODY_START; (* Start Offset vorgeben *)
		size := HTTP_GET.BODY_STOP; (* End Position *)
		run := 1; (* Element suchen *)
		state := 80;

	ELSIF (HTTP_GET.ERROR &gt; DWORD#00) THEN
		(* Fehlerbehandlung *)
		ERROR_C := HTTP_GET.ERROR;
		ERROR_T := BYTE#02;
		state := 100;
	END_IF;

80:	IF run = 0 THEN (* kein Befehl mehr aktiv ? *)
		run := 1; (*  nächstes Element suchen  *)
		IF result = 1 OR result = 2 THEN
			value_int := 0;
			value_real := 0.0;
			(* automatische konvertierung in real und int ausführen *)
			IF LEN(value) &lt;= 20 THEN
				v_real:=OSCAT_BASIC.FLOAT_TO_REAL(FLT:=value);
				IF OSCAT_BASIC.CHK_REAL(v_real) = 0 THEN (* !!! prüft auf gültigen REAL Wert, ansonsten stürzt Twincat ab !!!!  *)
					value_real := v_real;
					value_int := REAL_TO_INT(value_real);
				END_IF;
			END_IF;
			cnt := cnt + 1;


			IF cnt = 1 AND LEFT(value,1) &lt;&gt; '#' THEN
				cnt := 0;
			END_IF;

			IF cnt &gt;=8 AND cnt &lt;= 87 THEN
				IF cnt &gt; 22 THEN
					CASE idx OF
					00:	WW.DAY[day].DATE_OF_DAY := value;
					01:	WW.DAY[day].TEMP_MAX_C := value_int;
					02:	WW.DAY[day].TEMP_MAX_F := value_int;
					03:	WW.DAY[day].TEMP_MIN_C := value_int;
					04:	WW.DAY[day].TEMP_MIN_F := value_int;
					05:	WW.DAY[day].WIND_SPEED_MILES := value_int;
					06:	WW.DAY[day].WIND_SPEED_KMPH := value_int;
					07:	WW.DAY[day].WIND_DIR_DEGREE := value_int;
					08:	WW.DAY[day].WIND_DIR16POINT := value;
					09:	WW.DAY[day].WEATHER_CODE := value_int;
					10:	pos := FIND(value, '/wsymbol_');
						WW.DAY[day].WEATHER_ICON := OSCAT_BASIC.DEC_TO_INT(MID(value,4,pos+9));
					11:	WW.DAY[day].WEATHER_DESC := value;
					12:	WW.DAY[day].PRECIPMM := value_real;
					END_CASE;
					idx := idx + 1;
					IF idx &gt; 12 THEN
						idx := 0;
						day := day + 1;
					END_IF;
				ELSE
					CASE cnt OF
					08:	sep :=44; (* ab jetzt mit Trennzeichen arbeiten, *)
					09:	WW.CUR.OBSERVATION_TIME := value;
					10:	WW.CUR.TEMP_C := value_int;
					11:	WW.CUR.WEATHER_CODE := value_int;
					12:	pos := FIND(value, '/wsymbol_');
						WW.CUR.WEATHER_ICON := OSCAT_BASIC.DEC_TO_INT(MID(value,4,pos+9));
					13:	WW.CUR.WEATHER_DESC := value;
					14:	WW.CUR.WIND_SPEED_MILES := value_int;
					15:	WW.CUR.WIND_SPEED_KMPH := value_int;
					16:	WW.CUR.WIND_DIR_DEGREE := value_int;
					17:	WW.CUR.WIND_DIR16POINT := value;
					18:	WW.CUR.PRECIPMM := value_real;
					19:	WW.CUR.HUMIDITY := value_int;
					20:	WW.CUR.VISIBILITY := value_int;
					21:	WW.CUR.PRESSURE := value_int;
					22:	WW.CUR.CLOUDOVER := value_int;
					END_CASE;
				END_IF;
			END_IF;
		ELSIF result = 10 THEN (* nichts mehr gefunden *)
			DONE  := TRUE;
			run := 0; (* Auswertung beenden *)
			state := 100;
		END_IF;
	END_IF;

100:
	(* UNLOCK HTTP DATA *)
	IF (NOT HTTP_GET.DONE) THEN
		state := 0;
		BUSY := FALSE;
		DONE := ERROR_T = BYTE#0;
	END_IF;

END_CASE;

(* ---------------- DNS --------------- *)
DNS_CLIENT(	IP_C:=IP_C,
			S_BUF:=S_BUF,
			R_BUF:=R_BUF,
			DOMAIN:=URL_DATA.DOMAIN,
			IP4_DNS:=DWORD#00,
			ACTIVATE:=state=40 (* DNS Start *)
			);
(* nicht oder nicht direkt verwendete Parameter *)
(*	DWORD :=DNS_CLIENT.IP4;
	BOOL  :=DNS_CLIENT.DONE;
	BYTE  :=DNS_CLIENT.ERROR; *)
(* -------------------------------------*)

(* ------------- HTTP_GET --------------- *)
HTTP_GET(	IP_C:=IP_C,
			S_BUF:=S_BUF,
			R_BUF:=R_BUF,
			IP4:=DNS_CLIENT.IP4,
			GET:=state=60,
			MODE:=BYTE#2, (* HTTP 1.1 mit persistenter Verbindung *)
			UNLOCK_BUF:=state=100,
			URL_DATA:=URL_DATA
			);

(* nicht oder nicht direkt verwendete Parameter *)
(*	STRING := HTTP_GET.HTTP_STATUS;
	UINT :=HTTP_GET.HEADER_START;
	UINT :=HTTP_GET.HEADER_STOP;
	UINT :=HTTP_GET.BODY_START;
	UINT :=HTTP_GET.BODY_STOP;
	BOOL :=HTTP_GET.DONE;
	BYTE :=HTTP_GET.ERROR;
*)
(* -------------------------------------*)
CPB(SEP:=sep,RUN:=run,OFFSET:=OFFSET,VALUE:=value,PT:=R_BUF,RESULT=&gt;result); (* CSV PARAMETER BUF *)

last_state := ACTIVATE;

(* revision history
ks	01.oct. 2010	rev 1.0
	original version

ks	01.feb. 2011	rev 1.1
	rücksetzen von cnt 

ks	07.apr. 2011	rev 1.2
	neue Domain "free.worldweatheronline.com" (Ab 30.04.2011 notwendig)

ks	05.jan. 2012	rev 1.3
	neues datenelement "icon" integriert, REAL_TO_STRF parameter D

ks	05.oct. 2012	rev 1.4
	workaround für chunked html data

ks	11.may. 2013	rev 1.5
	New worldwaether url and api key required (new API-Services)
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>8d4edeb2-f634-44eb-bd18-6f086ff517cd</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="WORLD_WEATHER_DESC_GE" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="WW">
              <type>
                <derived name="WORLD_WEATHER_DATA" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="ACTIVATE">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="act_last">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="x">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="y">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="str">
              <type>
                <string length="60" />
              </type>
            </variable>
            <variable name="i">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF ACTIVATE AND act_last = FALSE THEN
	i := 0;
	FOR y := 1 TO 12 DO
		CASE y OF
		1,3,5,7,9:		x :=  WW.DAY[i].WEATHER_CODE;
		2,4,6,8,10:	WW.DAY[i].WEATHER_DESC := str;
					i := i + 1;
		11:			x :=  WW.CUR.WEATHER_CODE;
		12:			WW.CUR.WEATHER_DESC := str;
		END_CASE;

		CASE x OF
			113	:	str := 'heiter/sonnig';
			116	:	str := 'stellenweise wolkig';
			119	:	str := 'wolkig';
			122	:	str := 'bewölkt';
			143	:	str := 'Nebel';
			176	:	str := 'stellenweise nahegelegener Regen';
			179	:	str := 'stellenweise nahegelegener Schneefall';
			182	:	str := 'stellenweise nahegelegener Eisregen';
			185	:	str := 'stellenweise gefrierender Niesel';
			200	:	str := 'nahegelegene Sturm';
			227	:	str := 'Schneetreiben';
			230	:	str := 'Schneesturm';
			248	:	str := 'Nebel';
			260	:	str := 'gefrierender Nebel';
			263	:	str := 'stellenweise leichter Nieselregen';
			266	:	str := 'leichter Niesel';
			281	:	str := 'gefrierender Nieselregen';
			284	:	str := 'stark gefrierender Nieselregen';
			293	:	str := 'stellenweise leichter Regen';
			296	:	str := 'leichter Regen';
			299	:	str := 'zeitweise etwas Regen';
			302	:	str := 'mäßiger Regen';
			305	:	str := 'zeitweise etwas starker Regen';
			308	:	str := 'starker Regen';
			311	:	str := 'leichter gefrierender Regen';
			314	:	str := 'mäßiger oder starker Eisregen';
			317	:	str := 'leichter Eisregen';
			320	:	str := 'mäßiger oder starker Eisregen';
			323	:	str := 'stellenweise leichter Schneefall';
			326	:	str := 'leichter Scheefall';
			329	:	str := 'stellenweise moderater Schneefall';
			332	:	str := 'mäßiger Schnee';
			335	:	str := 'stellenweise starker Scheefall';
			338	:	str := 'starker Schneefall';
			350	:	str := 'Hagel';
			353	:	str := 'leichte Regenfälle';
			356	:	str := 'mäßiger oder starker Regenfall';
			359	:	str := 'sintflutartige Regenfälle';
			362	:	str := 'leichter Eisregen';
			365	:	str := 'mäßiger oder starker Eisregen';
			368	:	str := 'leichte Schneeschauer';
			371	:	str := 'mäßiger oder starker Schneefall';
			374	:	str := 'leichter Hagel';
			377	:	str := 'mäßiger oder starker Hagel';
			386	:	str := 'stellenweise leichter Regen in Gewittergebiet';
			389	:	str := 'mäßiger oder starker Regen in Gewittergebiet';
			392	:	str := 'stellenweise leichter Schneefall in Gewittergebiet';
			395	:	str := 'mäßiger oder starker Schnee in Gewittergebiet';
		ELSE
			str := 	'nicht verfügbar';
		END_CASE;
	END_FOR;
END_IF;
act_last := ACTIVATE;

(* revision history
ks	04. may. 2011	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>fce07cf3-86a5-4377-8fca-e81139cc184c</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="WORLD_WEATHER_ICON_OSCAT" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="WW">
              <type>
                <derived name="WORLD_WEATHER_DATA" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="ACTIVATE">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="dat">
              <type>
                <array>
                  <dimension lower="0" upper="41" />
                  <baseType>
                    <INT />
                  </baseType>
                </array>
              </type>
              <initialValue>
                <arrayValue>
                  <value>
                    <simpleValue value="0" />
                  </value>
                  <value>
                    <simpleValue value="14" />
                  </value>
                  <value>
                    <simpleValue value="12" />
                  </value>
                  <value>
                    <simpleValue value="9" />
                  </value>
                  <value>
                    <simpleValue value="9" />
                  </value>
                  <value>
                    <simpleValue value="0" />
                  </value>
                  <value>
                    <simpleValue value="7" />
                  </value>
                  <value>
                    <simpleValue value="7" />
                  </value>
                  <value>
                    <simpleValue value="0" />
                  </value>
                  <value>
                    <simpleValue value="2" />
                  </value>
                  <value>
                    <simpleValue value="2" />
                  </value>
                  <value>
                    <simpleValue value="3" />
                  </value>
                  <value>
                    <simpleValue value="3" />
                  </value>
                  <value>
                    <simpleValue value="1" />
                  </value>
                  <value>
                    <simpleValue value="0" />
                  </value>
                  <value>
                    <simpleValue value="0" />
                  </value>
                  <value>
                    <simpleValue value="17" />
                  </value>
                  <value>
                    <simpleValue value="4" />
                  </value>
                  <value>
                    <simpleValue value="4" />
                  </value>
                  <value>
                    <simpleValue value="3" />
                  </value>
                  <value>
                    <simpleValue value="3" />
                  </value>
                  <value>
                    <simpleValue value="1" />
                  </value>
                  <value>
                    <simpleValue value="0" />
                  </value>
                  <value>
                    <simpleValue value="0" />
                  </value>
                  <value>
                    <simpleValue value="17" />
                  </value>
                  <value>
                    <simpleValue value="2" />
                  </value>
                  <value>
                    <simpleValue value="2" />
                  </value>
                  <value>
                    <simpleValue value="3" />
                  </value>
                  <value>
                    <simpleValue value="3" />
                  </value>
                  <value>
                    <simpleValue value="1" />
                  </value>
                  <value>
                    <simpleValue value="0" />
                  </value>
                  <value>
                    <simpleValue value="0" />
                  </value>
                  <value>
                    <simpleValue value="17" />
                  </value>
                  <value>
                    <simpleValue value="2" />
                  </value>
                  <value>
                    <simpleValue value="4" />
                  </value>
                  <value>
                    <simpleValue value="3" />
                  </value>
                  <value>
                    <simpleValue value="3" />
                  </value>
                  <value>
                    <simpleValue value="1" />
                  </value>
                  <value>
                    <simpleValue value="0" />
                  </value>
                  <value>
                    <simpleValue value="0" />
                  </value>
                  <value>
                    <simpleValue value="17" />
                  </value>
                  <value>
                    <simpleValue value="0" />
                  </value>
                </arrayValue>
              </initialValue>
            </variable>
            <variable name="act_last">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="x">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="i">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF ACTIVATE AND act_last = FALSE THEN
	x := LIMIT(0,WW.CUR.WEATHER_ICON,41);
	WW.CUR.WEATHER_ICON := dat[x];
	FOR i := 0 TO 4 DO
		x := LIMIT(0,WW.DAY[i].WEATHER_ICON,41);
		WW.DAY[i].WEATHER_ICON := dat[x];
	END_FOR;
END_IF;
act_last := ACTIVATE;

(* revision history
ks	04. may. 2011	rev 1.0
	original version
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>5f73a630-ce41-459c-b9e7-2281827a227e</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="YAHOO_WEATHER" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="IP_C">
              <type>
                <derived name="IP_C" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> IP_Control Verwaltungsstruktur </xhtml>
              </documentation>
            </variable>
            <variable name="S_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="R_BUF">
              <type>
                <derived name="NETWORK_BUFFER" />
              </type>
            </variable>
            <variable name="YW">
              <type>
                <derived name="YAHOO_WEATHER_DATA" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="ACTIVATE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="UNITS">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="LOCATION">
              <type>
                <string length="20" />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="BUSY">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="DONE">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ERROR_C">
              <type>
                <DWORD />
              </type>
            </variable>
            <variable name="ERROR_T">
              <type>
                <BYTE />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="CTRL">
              <type>
                <derived name="XML_CONTROL" />
              </type>
            </variable>
            <variable name="XML_READER">
              <type>
                <derived name="XML_READER" />
              </type>
            </variable>
            <variable name="URL_DATA">
              <type>
                <derived name="url" />
              </type>
            </variable>
            <variable name="DNS_CLIENT">
              <type>
                <derived name="DNS_CLIENT" />
              </type>
            </variable>
            <variable name="HTTP_GET">
              <type>
                <derived name="HTTP_GET" />
              </type>
            </variable>
            <variable name="activate_last">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="value_int">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="value_real">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="v_real">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="state">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="cycle">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="day_idx">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="idx">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="cnt">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="repeat_request">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="repeat_wait_time">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="5000" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Repeat-Waittime </xhtml>
              </documentation>
            </variable>
            <variable name="repeat_count">
              <type>
                <USINT />
              </type>
            </variable>
            <variable name="repeat_max_count">
              <type>
                <USINT />
              </type>
              <initialValue>
                <simpleValue value="3" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> maximal repeat </xhtml>
              </documentation>
            </variable>
            <variable name="repeat_tx">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="tx">
              <type>
                <UDINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* read system time *)
tx := OSCAT_BASIC.T_PLC_MS();

CASE state OF

00:	IF ACTIVATE AND NOT activate_last THEN
		state := 40;
		DONE := FALSE;
		BUSY := TRUE;
		ERROR_C := DWORD#0;
		ERROR_T := BYTE#0;
		cycle := 0;
		repeat_count := USINT#0;
		repeat_request := FALSE;
  		URL_DATA.DOMAIN := 'query.yahooapis.com'; (* Domainname für DNS_CLIENT *)
	END_IF;

40:	IF DNS_CLIENT.DONE THEN
		state := 50;
	ELSIF (DNS_CLIENT.ERROR &gt; DWORD#00) THEN
		(* Fehlerbehandlung *)
		ERROR_C := DNS_CLIENT.ERROR;
		ERROR_T := BYTE#01;
		state   := 100;
	END_IF;

50:   	(* Teil 1: http://query.yahooapis.com/v1/public/yql?q=select%20units,wind,atmosphere,astronomy,location%20from%20weather.forecast%20where%20woeid=551801%20AND%20u=%27c%27
             Teil 2: http://query.yahooapis.com/v1/public/yql?q=select%20item%20from%20weather.forecast%20where%20woeid=551801%20AND%20u=%27c%27 *)

	IF cycle = 0 THEN
  		URL_DATA.QUERY := 'q=select%20units,wind,atmosphere,astronomy,location%20from%20weather.forecast%20where%20woeid='; (* Teil 1 - infos *)
  	ELSE
  		URL_DATA.QUERY := 'q=select%20item%20from%20weather.forecast%20where%20woeid='; (* Teil 2 - Tagesdaten *)
  	END_IF;

  	URL_DATA.QUERY := CONCAT(URL_DATA.QUERY,LOCATION); (* location *)

  	IF UNITS THEN
    		URL_DATA.QUERY := CONCAT(URL_DATA.QUERY,'%20and%20u=%27f%27'); (* fahrenheit *)
  	ELSE
    		URL_DATA.QUERY := CONCAT(URL_DATA.QUERY,'%20and%20u=%27c%27'); (* celsius *)
  	END_IF;

  	URL_DATA.PATH := '/v1/public/yql';

  	state := 60;

60:	IF HTTP_GET.DONE THEN
		state := 80;
		CTRL.START_POS := HTTP_GET.BODY_START;
		CTRL.STOP_POS := HTTP_GET.BODY_STOP;
		CTRL.COMMAND := WORD#2#10000000_00011000; (* ONLY TEXT AND ATTRIBUTE *)
		CTRL.WATCHDOG  := T#1ms;

	ELSIF (HTTP_GET.ERROR &gt; DWORD#00) THEN
		(* Fehlerbehandlung *)
		ERROR_C := HTTP_GET.ERROR;
		ERROR_T := BYTE#02;
		state := 100;
	END_IF;

80: XML_READER(CTRL:=CTRL,BUF:=R_BUF.BUFFER); (* XML Daten seriell lesen *)
	IF CTRL.TYP &lt; 98 THEN (* nur auswerten wenn kein Watchdog durchlauf *)
		value_int := 0;
		value_real := 0.0;
		(* automatische konvertierung in real und int ausführen *)
		IF LEN(CTRL.VALUE) &lt;= 20 THEN
			v_real:=OSCAT_BASIC.FLOAT_TO_REAL(FLT:=CTRL.VALUE);
			IF OSCAT_BASIC.CHK_REAL(v_real) = 0 THEN (* !!! prüft auf gültigen REAL Wert, ansonsten kann Twincat 2.x abstürzen !!!!  *)
				value_real := v_real;
				value_int := REAL_TO_INT(value_real);
			END_IF;
		END_IF;

		(*####################  DEBUG-MESSAGE  ###################################*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'XML: ~2 # ~3 # ~4 # ~5';
			LOG_CL.PRINTF[2] := UINT_TO_STRING(CTRL.LEVEL);
			LOG_CL.PRINTF[3] := UINT_TO_STRING(CTRL.COUNT);
			LOG_CL.PRINTF[4] := CTRL.ELEMENT;
			LOG_CL.PRINTF[5] := CTRL.VALUE;
			LOG_MSG();
		END_IF;*)
		(*########################################################################*)

		(* Antwortdaten stehen noch nicht bereit -&gt; Warten und Abfrage wiederholen *)
		IF ctrl.COUNT = 7 AND (ctrl.VALUE = '0')  THEN

			repeat_count := repeat_count + USINT#1;

			(* maximale Anzahl an Wiederholungen erreicht -&gt; Mit Fehler abbrechen *)
			IF repeat_count &gt; repeat_max_count THEN

				(* Fehlerbehandlung *)
				ERROR_C := USINT_TO_DWORD(repeat_max_count);
				ERROR_T := BYTE#03;
				state   := 100;

			ELSE
				repeat_request := TRUE;
				state := 100;

				(*####################  DEBUG-MESSAGE  ###################################*)
				(*IF _debug_enable THEN
					LOG_CL.NEW_MSG := 'Request Error  / Part ~2 / Count ~3';
					LOG_CL.PRINTF[2] := INT_TO_STRING(cycle);
					LOG_CL.PRINTF[3] := USINT_TO_STRING(repeat_count);
					LOG_MSG();
				END_IF;*)
				(*########################################################################*)

			END_IF;

		END_IF;

		IF cycle = 0 THEN
	      		(* ------------ Teil 1 --------------*)
	      		CASE UINT_TO_INT(CTRL.COUNT) OF
	        		014: YW.location_city := CTRL.VALUE;
	        		015: YW.location_country := CTRL.VALUE;
	        		016: YW.location_region := CTRL.VALUE;
	        		020: YW.wind_chill := value_int;
	        		021: YW.wind_direction := value_int;
	        		022: YW.wind_speed := value_real;
	        		026: YW.atmosphere_humidity := value_int;
	        		027: YW.atmosphere_pressure := value_real;
	        		028: YW.atmosphere_rising := value_int;
	        		029: YW.atmosphere_visibility := value_real;
	        		033: YW.astronomy_sunrise := CTRL.VALUE;
	        		034: YW.astronomy_sunset := CTRL.VALUE;
	        		038: YW.unit_distance := CTRL.VALUE;
	        		039: YW.unit_pressure := CTRL.VALUE;
	        		040: YW.unit_speed := CTRL.VALUE;
	        		041: YW.unit_temperature := CTRL.VALUE;
	      		END_CASE;
	    	ELSE
	      		(* ------------ Teil 2 --------------*)
	      		CASE UINT_TO_INT(CTRL.COUNT) OF
	        		018: YW.GEO_LATITUDE := value_real;
	        		022: YW.GEO_LONGITUDE := value_real;
	
			032: YW.CUR_CONDITIONS_CODE := value_int;
			         YW.CUR_CONDITIONS_ICON := value_int;
	        		034: YW.CUR_CONDITIONS_TEMP := value_int;
	        		035: YW.CUR_CONDITIONS_TEXT := CTRL.VALUE;
	
			039: YW.FORECAST_TODAY_CODE := value_int;
			         YW.FORECAST_TODAY_ICON := value_int;
			040: YW.FORECAST_TODAY_DATE_LONG := CTRL.VALUE;
	        		042: YW.FORECAST_TODAY_HIGH_TEMP := value_int;
	        		043: YW.FORECAST_TODAY_LOW_TEMP := value_int;
	        		044: YW.FORECAST_TODAY_TEXT := CTRL.VALUE;

			048..125: (* forcast day 1-10 *)
				cnt := UINT_TO_INT(CTRL.COUNT) - 48;
				day_idx := cnt / 9 + 1;
				idx := cnt MOD 9;
	      	  		CASE idx OF
					0:	YW.FORECAST_DAY[day_idx].CODE := value_int;
						YW.FORECAST_DAY[day_idx].ICON := value_int;
					1:	YW.FORECAST_DAY[day_idx].DATE_LONG := CTRL.VALUE;
					3:	YW.FORECAST_DAY[day_idx].HIGH_TEMP := value_int;
					4:	YW.FORECAST_DAY[day_idx].LOW_TEMP := value_int;
					5:	YW.FORECAST_DAY[day_idx].TEXT := CTRL.VALUE;
	      	  		END_CASE;
	      		END_CASE;
	    	END_IF;
	ELSIF CTRL.TYP = 99 THEN (* EXIT - letztes Element gelesen *)
		state := 100;
	END_IF;

100:	(* UNLOCK HTTP DATA *)
	IF (NOT HTTP_GET.DONE) THEN

		IF repeat_request THEN
			repeat_tx := tx;
    			state := 110;

		ELSIF cycle = 0 AND ERROR_T = BYTE#0 THEN
			(* Teil 2 ausführen *)
    			state := 50;
			cycle := cycle + 1;
			repeat_count := USINT#0;
		ELSE
	    		state := 0;
	    		BUSY  := FALSE;
	    		DONE := ERROR_T = BYTE#0;
		END_IF;
	END_IF;

110: (* REPEAT REQUEST - WAIT TIME *)
	IF tx &gt; repeat_tx + repeat_wait_time THEN

		(*####################  DEBUG-MESSAGE  ###################################*)
		(*IF _debug_enable THEN
			LOG_CL.NEW_MSG := 'Repeat request after waittime / Part ~2 / Count ~3';
			LOG_CL.PRINTF[2] := INT_TO_STRING(cycle);
			LOG_CL.PRINTF[3] := USINT_TO_STRING(repeat_count);
			LOG_MSG();
		END_IF;*)
		(*########################################################################*)

		repeat_request := FALSE;
		state := 50;

	END_IF;

END_CASE;

(* ---------------- DNS --------------- *)
DNS_CLIENT(	IP_C:=IP_C,
			S_BUF:=S_BUF,
			R_BUF:=R_BUF,
			DOMAIN:=URL_DATA.DOMAIN,
			IP4_DNS:=DWORD#00,
			ACTIVATE:=state=40 (* DNS Start *)
			);
(* nicht oder nicht direkt verwendete Parameter *)
(*	DWORD :=DNS_CLIENT.IP4;
	BOOL  :=DNS_CLIENT.DONE;
	BYTE  :=DNS_CLIENT.ERROR; *)
(* -------------------------------------*)

(* ------------- HTTP_GET --------------- *)
HTTP_GET(	IP_C:=IP_C,
			S_BUF:=S_BUF,
			R_BUF:=R_BUF,
			IP4:=DNS_CLIENT.IP4,
			GET:=state=60,
			MODE:=BYTE#2, (* HTTP 1.1 mit persistenter Verbindung *)
			UNLOCK_BUF:=state=100,
			URL_DATA:=URL_DATA
			);

(* nicht oder nicht direkt verwendete Parameter *)
(*	STRING := HTTP_GET.HTTP_STATUS;
	UINT :=HTTP_GET.HEADER_START;
	UINT :=HTTP_GET.HEADER_STOP;
	UINT :=HTTP_GET.BODY_START;
	UINT :=HTTP_GET.BODY_STOP;
	BOOL :=HTTP_GET.DONE;
	BYTE :=HTTP_GET.ERROR;
*)
(* -------------------------------------*)

activate_last := ACTIVATE;

(*####################  DEBUG-MESSAGE  ###################################*)
(*IF _debug_enable THEN
	IF state &lt;&gt; _debug_state_last THEN
		LOG_CL.NEW_MSG := 'yw-step: /last ~1 /New ~2';
		LOG_CL.PRINTF[1] := INT_TO_STRING(_debug_state_last);
		LOG_CL.PRINTF[2] := INT_TO_STRING(state);
		LOG_MSG();
		_debug_state_last := state;
	END_IF;
END_IF;*)
(*########################################################################*)

(* revision history
ks	18. dez. 2008	rev 1.0
	original version

ks	01. oct. 2009	rev 1.1
	YAHOO_WEATHER_DATA

ks	24. sep. 2010	rev 1.2
	new URL-Location-parameter and REAL_CHECK (TwinCat BUG) 

ks	04. may. 2011	rev 1.3
	neue elemente:  CUR_CONDITIONS_ICON, FORCAST_TODAY_ICON, FORCAST_TOMORROW_ICON

ks	30. mar. 2016	rev 1.4
	änderung der api schnittstelle (URL) von yahoo

ks	01. jun. 2016	rev 1.5
	komplette überarbeitung auf neue yahoo-api

ks	22. may. 2017	rev 1.6
	automatische wiederholung der Abfrage wenn keine Daten vorhanden sind
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>cbcd8882-1108-4e8a-abd8-5631e462287f</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="YAHOO_WEATHER_DESC_GE" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="YW">
              <type>
                <derived name="YAHOO_WEATHER_DATA" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="ACTIVATE">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="act_last">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="x">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="y">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="str">
              <type>
                <string length="40" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF ACTIVATE AND act_last = FALSE THEN
	FOR y := 1 TO 12 DO
		CASE y OF
		01:	x := YW.CUR_CONDITIONS_CODE;

		02:	YW.CUR_CONDITIONS_TEXT := str;
			x := YW.FORECAST_TODAY_CODE;
		03:	YW.FORECAST_TODAY_TEXT := str;
			x := YW.FORECAST_DAY[1].CODE;
		04:	YW.FORECAST_DAY[1].TEXT := str;
			x := YW.FORECAST_DAY[2].CODE;
		05:	YW.FORECAST_DAY[2].TEXT := str;
			x := YW.FORECAST_DAY[3].CODE;
		06:	YW.FORECAST_DAY[3].TEXT := str;
			x := YW.FORECAST_DAY[4].CODE;
		07:	YW.FORECAST_DAY[4].TEXT := str;
			x := YW.FORECAST_DAY[5].CODE;
		08:	YW.FORECAST_DAY[5].TEXT := str;
			x := YW.FORECAST_DAY[6].CODE;
		09:	YW.FORECAST_DAY[6].TEXT := str;
			x := YW.FORECAST_DAY[7].CODE;
		10:	YW.FORECAST_DAY[7].TEXT := str;
			x := YW.FORECAST_DAY[8].CODE;
		11:	YW.FORECAST_DAY[8].TEXT := str;
			x := YW.FORECAST_DAY[9].CODE;
		12:	YW.FORECAST_DAY[9].TEXT := str;
		END_CASE;

		CASE x OF
		00:	str := 'Wirbelsturm';
		01:	str := 'Tropensturm';
		02:	str := 'Wirbelsturm';
		03:	str := 'starkes Gewitter ';
		04:	str := 'Gewitter';
		05:	str := 'Schneeregen';
		06:	str := 'Schneeregen';
		07:	str := 'Schneeregen';
		08:	str := 'gefrierender Nieselregen';
		09:	str := 'Nieselregen';
		10:	str := 'gefrierender Regen';
		11:	str := 'Regenfälle';
		12:	str := 'Regenfälle';
		13:	str := 'Schneegestöber';
		14:	str := 'leichte Schneefälle';
		15:	str := 'Schneetreiben';
		16:	str := 'Schnee';
		17:	str := 'Hagel';
		18:	str := 'Schneeregen';
		19:	str := 'Staub';
		20:	str := 'nebelig';
		21:	str := 'Dunst';
		22:	str := 'rauchig';
		23:	str := 'stürmisch';
		24:	str := 'windig';
		25:	str := 'kalt';
		26:	str := 'bewölkt';
		27:	str := 'meist bewölkt';
		28:	str := 'meist bewölkt';
		29:	str := 'teilweise bewölkt';
		30:	str := 'teilweise bewölkt';
		31:	str := 'klar';
		32:	str := 'sonnig';
		33:	str := 'heiter';
		34:	str := 'heiter';
		35:	str := 'Regen und Hagel';
		36:	str := 'heiß';
		37:	str := 'örtliche Gewitter';
		38:	str := 'vereinzelte Gewitter';
		39:	str := 'vereinzelte Gewitter';
		40:	str := 'vereinzelte Regenfälle';
		41:	str := 'schwere Schneefälle';
		42:	str := 'vereinzelte Schneefälle';
		43:	str := 'schwere Schneefälle';
		44:	str := 'teilweise bewölkt';
		45:	str := 'gewittrige Regenfälle';
		46:	str := 'Schneefälle';
		47:	str := 'örtliche gewittrige Regenfälle';
		ELSE
			str := 'nicht verfügbar';
		END_CASE;
	END_FOR;
END_IF;
act_last := ACTIVATE;

(* revision history
ks	04. may. 2011	rev 1.0
	original version
ks	01. jun. 2016	rev 1.1
	komplette überarbeitung auf neue yahoo-api

*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>fff8d2c6-0e02-46c0-97ae-605e70d6f0cb</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="YAHOO_WEATHER_ICON_OSCAT" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="YW">
              <type>
                <derived name="YAHOO_WEATHER_DATA" />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="ACTIVATE">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="dat">
              <type>
                <array>
                  <dimension lower="0" upper="48" />
                  <baseType>
                    <INT />
                  </baseType>
                </array>
              </type>
              <initialValue>
                <arrayValue>
                  <value>
                    <simpleValue value="4" />
                  </value>
                  <value>
                    <simpleValue value="2" />
                  </value>
                  <value>
                    <simpleValue value="2" />
                  </value>
                  <value>
                    <simpleValue value="4" />
                  </value>
                  <value>
                    <simpleValue value="17" />
                  </value>
                  <value>
                    <simpleValue value="1" />
                  </value>
                  <value>
                    <simpleValue value="3" />
                  </value>
                  <value>
                    <simpleValue value="1" />
                  </value>
                  <value>
                    <simpleValue value="2" />
                  </value>
                  <value>
                    <simpleValue value="2" />
                  </value>
                  <value>
                    <simpleValue value="2" />
                  </value>
                  <value>
                    <simpleValue value="2" />
                  </value>
                  <value>
                    <simpleValue value="2" />
                  </value>
                  <value>
                    <simpleValue value="3" />
                  </value>
                  <value>
                    <simpleValue value="3" />
                  </value>
                  <value>
                    <simpleValue value="3" />
                  </value>
                  <value>
                    <simpleValue value="3" />
                  </value>
                  <value>
                    <simpleValue value="5" />
                  </value>
                  <value>
                    <simpleValue value="3" />
                  </value>
                  <value>
                    <simpleValue value="6" />
                  </value>
                  <value>
                    <simpleValue value="7" />
                  </value>
                  <value>
                    <simpleValue value="14" />
                  </value>
                  <value>
                    <simpleValue value="8" />
                  </value>
                  <value>
                    <simpleValue value="9" />
                  </value>
                  <value>
                    <simpleValue value="9" />
                  </value>
                  <value>
                    <simpleValue value="10" />
                  </value>
                  <value>
                    <simpleValue value="9" />
                  </value>
                  <value>
                    <simpleValue value="11" />
                  </value>
                  <value>
                    <simpleValue value="12" />
                  </value>
                  <value>
                    <simpleValue value="11" />
                  </value>
                  <value>
                    <simpleValue value="12" />
                  </value>
                  <value>
                    <simpleValue value="13" />
                  </value>
                  <value>
                    <simpleValue value="14" />
                  </value>
                  <value>
                    <simpleValue value="15" />
                  </value>
                  <value>
                    <simpleValue value="16" />
                  </value>
                  <value>
                    <simpleValue value="4" />
                  </value>
                  <value>
                    <simpleValue value="14" />
                  </value>
                  <value>
                    <simpleValue value="4" />
                  </value>
                  <value>
                    <simpleValue value="17" />
                  </value>
                  <value>
                    <simpleValue value="2" />
                  </value>
                  <value>
                    <simpleValue value="2" />
                  </value>
                  <value>
                    <simpleValue value="3" />
                  </value>
                  <value>
                    <simpleValue value="3" />
                  </value>
                  <value>
                    <simpleValue value="3" />
                  </value>
                  <value>
                    <simpleValue value="12" />
                  </value>
                  <value>
                    <simpleValue value="2" />
                  </value>
                  <value>
                    <simpleValue value="3" />
                  </value>
                  <value>
                    <simpleValue value="4" />
                  </value>
                  <value>
                    <simpleValue value="0" />
                  </value>
                </arrayValue>
              </initialValue>
            </variable>
            <variable name="act_last">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="x">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="idx">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF ACTIVATE AND act_last = FALSE THEN
	x := MIN(YW.CUR_CONDITIONS_CODE,48);
	YW.CUR_CONDITIONS_ICON := dat[x];
	x := MIN(YW.FORECAST_TODAY_CODE,48);
	YW.FORECAST_TODAY_ICON := dat[x];
	FOR idx := 1 TO 9 DO
		x := MIN(YW.FORECAST_DAY[idx].CODE,48);
		YW.FORECAST_DAY[idx].ICON := dat[x];
	END_FOR;
END_IF;
act_last := ACTIVATE;

(* revision history
ks	04. may. 2011	rev 1.0
	original version

ks	01. jun. 2016	rev 1.1
	komplette überarbeitung auf neue yahoo-api
*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>57c81771-a039-4f95-96a1-b28d1c961fd9</ObjectId>
          </data>
        </addData>
      </pou>
    </pous>
  </types>
  <instances>
    <configurations />
  </instances>
  <addData>
    <data name="http://www.3s-software.com/plcopenxml/globalvars" handleUnknown="implementation">
      <globalVars name="Constants" constant="true">
        <variable name="NETWORK_BUFFER_LONG_SIZE">
          <type>
            <UINT />
          </type>
          <initialValue>
            <simpleValue value="4095" />
          </initialValue>
        </variable>
        <variable name="NETWORK_BUFFER_SHORT_SIZE">
          <type>
            <UINT />
          </type>
          <initialValue>
            <simpleValue value="1407" />
          </initialValue>
        </variable>
        <variable name="LOG_MAX">
          <type>
            <INT />
          </type>
          <initialValue>
            <simpleValue value="40" />
          </initialValue>
        </variable>
        <variable name="LOG_SIZE">
          <type>
            <INT />
          </type>
          <initialValue>
            <simpleValue value="80" />
          </initialValue>
        </variable>
        <variable name="ELEMENT_LENGTH">
          <type>
            <INT />
          </type>
          <initialValue>
            <simpleValue value="250" />
          </initialValue>
        </variable>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>63e96559-dc29-436a-a6b8-a70cc007edbc</ObjectId>
          </data>
        </addData>
      </globalVars>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/globalvars" handleUnknown="implementation">
      <globalVars name="Globale_Variablen">
        <variable name="TCP_SERVER_RESET">
          <type>
            <BYTE />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> only for internaly use - do't modify </xhtml>
          </documentation>
        </variable>
        <variable name="sSrvNetId">
          <type>
            <string length="23" />
          </type>
          <initialValue>
            <simpleValue value="''" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> String containing the network address of the TwinCAT TCP/IP Connection Server (e.g. '1.1.1.2.7.1'). For the local computer (default) an empty string may be specified </xhtml>
          </documentation>
        </variable>
        <variable name="sLocalHost">
          <type>
            <string length="15" />
          </type>
          <initialValue>
            <simpleValue value="''" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> The local IP address (Ipv4) of the UDP client/server socket as a string (e.g. '172.33.5.1'). An empty string may be specified for the default network adapter </xhtml>
          </documentation>
        </variable>
        <variable name="SYSLIBSOCKETS_OPTION">
          <type>
            <BYTE />
          </type>
          <initialValue>
            <simpleValue value="BYTE#16#0" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> --------------------------------------------- 
 ------- only for CoDeSys --------------------        
 Configuration for SysLibSocket.lib                   
 Bit 0 = 1 -&gt; PLCWinNT                                
 Bit 1 = 1 -&gt; PLC WAGO 750-841                        
 Bit 2 = 1 -&gt; PLC WAGO 750-881                        </xhtml>
          </documentation>
        </variable>
        <variable name="LOG_CL">
          <type>
            <derived name="LOG_CONTROL" />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> ---------------------------------------------------- </xhtml>
          </documentation>
        </variable>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>f718db89-de57-4f36-935a-ea517c607f0b</ObjectId>
          </data>
        </addData>
      </globalVars>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/libraries" handleUnknown="implementation">
      <Libraries>
        <Library Name="IecSfc, 3.4.2.0 (System)" Namespace="IecSfc" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" />
        <Library Name="Analyzation, 3.5.15.0 (System)" Namespace="Analyzation" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false">
          <Parameters>
            <Parameter Name="TABLE_UPPER_BOUND" Value="15" />
            <Parameter Name="STRING_LENGTH_EXP" Value="255" />
            <Parameter Name="STRING_LENGTH_ADDRESS" Value="20" />
            <Parameter Name="STRING_LENGTH_COMMENT" Value="255" />
            <Parameter Name="STRING_LENGTH_OUTSTRING" Value="255" />
            <Parameter Name="TABLE_SHOW_VALID_ITEMS" Value="FALSE" />
          </Parameters>
        </Library>
        <Library Name="SysFile23, 3.5.13.0 (System)" Namespace="SysFile23" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" />
        <Library Name="SysSocket23, 3.5.13.0 (System)" Namespace="SysSocket23" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" />
        <Library Name="Standard, 3.5.15.0 (System)" Namespace="Standard" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" />
        <Library Name="#OSCAT_BASIC" Namespace="OSCAT_BASIC" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="BASIC, * (OSCAT)" />
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>640bb55c-5f13-4ea1-b063-4fbf7a78ea4d</ObjectId>
          </data>
        </addData>
      </Libraries>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/projectstructure" handleUnknown="discard">
      <ProjectStructure>
        <Object Name="Library Manager" ObjectId="640bb55c-5f13-4ea1-b063-4fbf7a78ea4d" />
        <Folder Name="Data types">
          <Folder Name="DATA_LOG">
            <Object Name="DLOG_CRON_DATA" ObjectId="722a5aa6-341c-49d4-ab8e-7c304b874dc1" />
            <Object Name="DLOG_CRON_ELEMENT" ObjectId="c26978bb-462c-44a4-8b99-5a3208ba608b" />
            <Object Name="DLOG_DATA" ObjectId="e2797ee2-534c-4d70-95d4-8dd73be64d0f" />
            <Object Name="DLOG_REAL_ARRAY_DATA" ObjectId="d1868660-f0b1-40fe-8f60-2d5882ef5a06" />
            <Object Name="DLOG_REAL_ARRAY_ELEMENT" ObjectId="0ff196eb-6877-4d7c-829a-36171f1189fd" />
            <Object Name="DLOG_RETAIN" ObjectId="21d0bd37-1704-408b-a79a-96ffc7232d5f" />
            <Object Name="DLOG_SAVE" ObjectId="bc9831bc-4d9f-4cf2-9e56-c617e9c134f7" />
            <Object Name="LOG_CONTROL" ObjectId="da9b26af-a7e2-443f-ade7-c781426d690e" />
            <Object Name="PRINTF_DATA" ObjectId="f0be90b6-94f9-4574-baaf-2a8fd6544c98" />
            <Object Name="UNI_CIRCULAR_BUF" ObjectId="5acf4d1a-7471-482f-bddb-abb5b5f8ae32" />
            <Object Name="UNI_CIRCULAR_BUFFER_DATA" ObjectId="f0761d57-a9be-460d-99aa-9c0a83858af6" />
            <Object Name="us_LOG_VIEWPORT" ObjectId="1ed8b6d0-aec4-4ecc-bec0-9d824b64006f" />
          </Folder>
          <Folder Name="DATABASE">
            <Object Name="MYSQL_COM" ObjectId="50e94682-b7bd-4469-b8bf-142573aa27c8" />
            <Object Name="MYSQL_INFO" ObjectId="b5857a58-cd0d-4cc4-b62a-05e9eb480052" />
          </Folder>
          <Folder Name="FILE_SERVER">
            <Object Name="FILE_PATH_DATA" ObjectId="d5b4063c-3096-4249-b72c-9448f07dbb18" />
            <Object Name="FILE_SERVER_DATA" ObjectId="c491d149-7a23-49cf-981f-542adf181733" />
            <Object Name="FILE_SERVER_RUNTIME_DATA" ObjectId="5956d4b9-8905-4828-8ebb-ca462be3dea2" />
          </Folder>
          <Folder Name="NET_VAR">
            <Object Name="NET_VAR_DATA" ObjectId="de01c427-d933-4608-9def-cc441fbad5d7" />
          </Folder>
          <Folder Name="NETWORK">
            <Object Name="IP2GEO_DATA" ObjectId="1452c294-39a2-43d1-944e-d87d645e8d57" />
            <Object Name="IP_C" ObjectId="3c29754c-d372-46bc-818a-0ecef6a26cbf" />
            <Object Name="IP_FIFO_DATA" ObjectId="3419715a-eb72-4c11-853c-722955f9a94e" />
            <Object Name="NETWORK_BUFFER" ObjectId="d7a167a8-4536-4c5f-b89f-08898d7cf356" />
            <Object Name="NETWORK_BUFFER_SHORT" ObjectId="b4144797-6313-4601-9c83-9fca7fe0e43d" />
            <Object Name="NW_BUF_LONG" ObjectId="459cefe9-8500-4656-9890-de4f7160131e" />
            <Object Name="NW_BUF_SHORT" ObjectId="d677def3-d322-4514-881d-5275c68b8ac4" />
            <Object Name="URL" ObjectId="97caed5a-93a6-4dec-b8e8-bcec906b02d3" />
            <Object Name="VMAP_DATA" ObjectId="6b21cebf-c48b-493e-bf16-68c7ff2f3379" />
            <Object Name="XML_CONTROL" ObjectId="ba431d50-a0ef-4575-86d7-3f74f43f1f5a" />
          </Folder>
          <Folder Name="TELNET_VISION">
            <Object Name="us_TN_INPUT_CONTROL" ObjectId="7fce2af5-de19-4be6-9cb7-d9e1d583e843" />
            <Object Name="us_TN_INPUT_CONTROL_DATA" ObjectId="676db130-462f-474b-8f3d-e398db6ed5f7" />
            <Object Name="us_TN_MENU" ObjectId="a73d2916-fc68-4e11-9430-b5b6928947ee" />
            <Object Name="us_TN_MENU_POPUP" ObjectId="d65df1de-c2e8-4986-ad53-8ec8a45cd10e" />
            <Object Name="us_TN_SCREEN" ObjectId="42f503df-df63-4e27-b486-4b1ccbd2c508" />
          </Folder>
          <Folder Name="WEATHER">
            <Object Name="WORLD_WEATHER_CUR" ObjectId="72219dd3-24d8-4fe0-a14e-2e460c230760" />
            <Object Name="WORLD_WEATHER_DATA" ObjectId="139998c4-22c9-414e-9f3d-b21cb86063b9" />
            <Object Name="WORLD_WEATHER_DAY" ObjectId="da87c426-77b2-4aa0-b547-a71d04f4ef09" />
            <Object Name="YAHOO_WEATHER_DATA" ObjectId="ed9b0aa4-3582-42a4-ae51-42dfd2f45081" />
            <Object Name="YAHOO_WEATHER_FORECAST_DAY" ObjectId="fa54cec4-fc40-4a5f-8d0e-97dc680d7054" />
          </Folder>
        </Folder>
        <Folder Name="Global Variables">
          <Object Name="Constants" ObjectId="63e96559-dc29-436a-a6b8-a70cc007edbc" />
          <Object Name="Globale_Variablen" ObjectId="f718db89-de57-4f36-935a-ea517c607f0b" />
        </Folder>
        <Folder Name="POUs">
          <Folder Name="CONVERT">
            <Object Name="BASE64_DECODE_STR" ObjectId="baea567b-2a29-43e1-bfeb-5cdf6418ae1f" />
            <Object Name="BASE64_DECODE_STREAM" ObjectId="e2d7b89f-c83b-4831-9d0b-e5a40cdddec1" />
            <Object Name="BASE64_ENCODE_STR" ObjectId="4ff8fd1d-ef9d-41da-b163-90a1b729585b" />
            <Object Name="BASE64_ENCODE_STREAM" ObjectId="001b4688-06b6-4afe-874b-1e8637ab888b" />
            <Object Name="HTML_DECODE" ObjectId="55a6fe2d-3b93-4d14-92c8-8b8fb79e0103" />
            <Object Name="HTML_ENCODE" ObjectId="c1521833-4d54-46bf-ab00-5a00705a1fd2" />
            <Object Name="IP4_CHECK" ObjectId="16716fa5-f2db-4f38-a79e-597513d659f8" />
            <Object Name="IP4_DECODE" ObjectId="f26dd297-94da-49bb-969d-4f4b93d2af75" />
            <Object Name="IP4_TO_STRING" ObjectId="8c0ac529-584d-41c2-9973-e50e14210080" />
            <Object Name="IS_IP4" ObjectId="19c37975-aa9f-45e0-a26e-fe16572ea3a2" />
            <Object Name="IS_URLCHR" ObjectId="843d9cc5-7252-40de-acb7-f277a2ea5aa5" />
            <Object Name="MD5_AUX" ObjectId="390cca02-8178-493b-b660-aeb24187c8c0" />
            <Object Name="MD5_CRAM_AUTH" ObjectId="b6ab01aa-c219-4434-88fe-a7bdacbbadb8" />
            <Object Name="MD5_STR" ObjectId="b20ca3ca-b1a4-44c9-bc38-fa5d68a592f9" />
            <Object Name="MD5_STREAM" ObjectId="e05b1d58-1ea7-4fcd-b739-713aeef3d9b7" />
            <Object Name="MD5_TO_STRH" ObjectId="935651ad-c2f2-445f-94c1-3f9d754bbc7d" />
            <Object Name="RC4_CRYPT_STREAM" ObjectId="24f473d3-a3fe-4280-a8b9-73bd982a4c9a" />
            <Object Name="SHA1_STR" ObjectId="977150fe-b62c-4fbe-9c4a-56777485a928" />
            <Object Name="SHA1_STREAM" ObjectId="25cb92f6-3f49-4cdc-8cff-1720ac8b9194" />
            <Object Name="SHA1_TO_STRH" ObjectId="d47b1b3f-8e60-403f-90c3-d6e89b78fbf4" />
            <Object Name="STRING_TO_URL" ObjectId="ae0b844c-8e4e-41fa-b4d2-9d65f06e544b" />
            <Object Name="URL_DECODE" ObjectId="3d2ba6e7-a11a-4e23-a8ce-ec176d7bf960" />
            <Object Name="URL_ENCODE" ObjectId="2a9d2295-1d93-42c3-8eb5-3c6f4b98c129" />
            <Object Name="URL_TO_STRING" ObjectId="894b69e7-adcb-4dd0-8283-14958dadf103" />
          </Folder>
          <Folder Name="DATA_LOG">
            <Object Name="DLOG_BOOL" ObjectId="aad3f50d-db53-4f74-bd8b-aec4aed3f827" />
            <Object Name="DLOG_CRON_TAB" ObjectId="708c2382-2f7c-4411-929f-3e4e45b9326e" />
            <Object Name="DLOG_DINT" ObjectId="48c60732-11ff-47e9-bd7b-7037d8819f75" />
            <Object Name="DLOG_DT" ObjectId="2b43c178-b5ba-42eb-8437-624e065ad467" />
            <Object Name="DLOG_FILE_TO_FTP" ObjectId="e5c0c421-e122-4f07-8284-7444bde1437c" />
            <Object Name="DLOG_FILE_TO_SMTP" ObjectId="e62ecf04-e75d-4f59-9174-c61008eaf398" />
            <Object Name="DLOG_REAL" ObjectId="ca6f888b-aa4a-4427-8983-c34dcb87ccb0" />
            <Object Name="DLOG_REAL_ARRAY" ObjectId="396b1f8e-a2bb-4168-b92c-0585dfd22bda" />
            <Object Name="DLOG_STORE_FILE_CSV" ObjectId="2d6f97da-1189-4697-a7d9-e2baddf4b39c" />
            <Object Name="DLOG_STORE_FILE_HTML" ObjectId="8f4f199d-bbc0-43a4-b165-707529806e63" />
            <Object Name="DLOG_STORE_FILE_XML" ObjectId="79e44d99-6eb9-4610-b6e0-0055a8d482fd" />
            <Object Name="DLOG_STORE_MYSQL" ObjectId="62bb84a7-6db1-4ac6-b31c-69e7ac34aceb" />
            <Object Name="DLOG_STORE_RRD" ObjectId="d500df65-ee19-4094-be0d-a258bd46ac5c" />
            <Object Name="DLOG_STRING" ObjectId="e63c25c3-9c0d-4121-a6d5-835c60dc0224" />
          </Folder>
          <Folder Name="DATABASE">
            <Object Name="MYSQL_AUTH" ObjectId="18f73d76-a700-4df5-9c7f-3d9d607213a0" />
            <Object Name="MYSQL_CONTROL" ObjectId="d9bb0003-1ad1-48c8-a531-f1b1169effa1" />
          </Folder>
          <Folder Name="DEMO">
            <Object Name="BASE64_DEMO" ObjectId="84c37864-d86d-4272-aaca-d132f8e085b3" />
            <Object Name="CSV_PARSER_BUF_DEMO" ObjectId="f75356d4-ba6e-4993-8d26-51c72f1a892d" />
            <Object Name="CSV_PARSER_FILE_DEMO" ObjectId="aaa85380-71cf-4463-80e1-8791d472d07e" />
            <Object Name="DLOG_FILE_CSV_DEMO" ObjectId="d036d709-8a67-4f28-b263-9d631fe638e6" />
            <Object Name="DLOG_FILE_CSV_FTP_DEMO" ObjectId="bd82d061-22d0-4ede-a9a7-fe91eb1be415" />
            <Object Name="DLOG_FILE_CSV_SMTP_DEMO" ObjectId="d89a6a9f-535e-4fdc-8a52-ea4649d866cf" />
            <Object Name="DLOG_FILE_HTML_DEMO" ObjectId="5893f866-82e9-453f-9712-2d36faa00afe" />
            <Object Name="DLOG_FILE_XML_DEMO" ObjectId="34116581-cf88-4740-9d35-4cd5838c21e3" />
            <Object Name="DLOG_MYSQL_DEMO" ObjectId="d21d9f4e-9c81-4c3e-b580-84444b9c39b0" />
            <Object Name="DLOG_RRD_DEMO" ObjectId="da280a4d-03de-4342-9de8-2b953509b4a1" />
            <Object Name="DNS_DYN_DEMO" ObjectId="86732270-188b-4094-bd7f-983939ab5751" />
            <Object Name="DNS_REV_DEMO" ObjectId="d21febaf-7229-4336-b3e0-4448e3e515f3" />
            <Object Name="DNS_SNTP_SYSLOG_DEMO" ObjectId="beb3eb65-2e5e-4041-87c5-616adf4b4995" />
            <Object Name="FILE_BLOCK_DEMO" ObjectId="03282160-61d0-4579-b8a0-24c205dce373" />
            <Object Name="FTP_CLIENT_DEMO" ObjectId="d340c8b4-46d6-421c-9f45-989596d5a15d" />
            <Object Name="GET_WAN_IP_DEMO" ObjectId="1199ab3e-7af4-4937-be73-438975ee7b58" />
            <Object Name="HTTP_DEMO" ObjectId="6d7b5fab-be94-4bab-9ab2-8960ad5a8f80" />
            <Object Name="INI_PARSER_BUF_DEMO" ObjectId="d9362e1a-c868-43c4-906d-39c34748d8c3" />
            <Object Name="INI_PARSER_FILE_DEMO" ObjectId="49f54a62-d4fa-4429-9465-838b3fb601cf" />
            <Object Name="IP2GEO_DEMO" ObjectId="f9abf66d-752d-4dff-846b-6423b16c9aaa" />
            <Object Name="IRTRANS_DEMO" ObjectId="64dada24-1bad-42c0-8a0d-32d7445edbe4" />
            <Object Name="MB_CLIENT_DEMO" ObjectId="e3b3c3cb-d248-44b3-a1ce-ead3c1defb6d" />
            <Object Name="MB_SERVER_DEMO" ObjectId="539643ff-b47a-4574-afce-ea8e3b91dc56" />
            <Object Name="MD5_CRAM_AUTH_DEMO" ObjectId="c90c54e2-4b87-4028-b079-45ec7fcfadb8" />
            <Object Name="NET_VAR_MASTER_DEMO" ObjectId="da203a03-8e0d-4f72-b865-8f4525f4347f" />
            <Object Name="NET_VAR_SLAVE_DEMO" ObjectId="78d1dffe-67ea-4431-bbf1-815a5dcaa282" />
            <Object Name="RC4_CRYPT_DEMO" ObjectId="7fc4bae7-6cdc-44b0-9062-7561595ac832" />
            <Object Name="SHA1_MD5_DEMO" ObjectId="7047a7da-3e30-47fb-9380-c5024290e627" />
            <Object Name="SMTP_CLIENT_DEMO" ObjectId="df32fb37-dd50-43be-9941-19b435bdd186" />
            <Object Name="SPIDER_DEMO" ObjectId="9a04915f-bbe0-4729-985e-2cc89a74d19e" />
            <Object Name="TELNET_LOG_DEMO" ObjectId="6635dc5d-93ae-4f76-81b5-cba3bedc3965" />
            <Object Name="TELNET_PRINT_DEMO" ObjectId="b8969f7a-0017-4427-ab69-f163b5968279" />
            <Object Name="TN_VISION_DEMO_1" ObjectId="92035546-1812-4f23-8fa6-7130a1234762" />
            <Object Name="TN_VISION_DEMO_2" ObjectId="45447a7d-aa2c-4cbb-aad3-6d781d13291a" />
            <Object Name="WORLD_WEATHER_DEMO" ObjectId="4d049e72-3866-460c-b5b3-6cdf880779ff" />
            <Object Name="YAHOO_WEATHER_DEMO" ObjectId="609e4355-cf4c-4da1-b25d-dcb341c2678b" />
          </Folder>
          <Folder Name="DRIVER">
            <Object Name="IRTRANS_DECODE" ObjectId="7aba4988-2de9-460c-b66a-37fa7c81bf4b" />
            <Object Name="IRTRANS_RCV_1" ObjectId="f3d3903b-777d-4975-9868-ab34b386c90f" />
            <Object Name="IRTRANS_RCV_4" ObjectId="ea578eb0-cd71-460d-80ca-e622d09d8aaa" />
            <Object Name="IRTRANS_RCV_8" ObjectId="9c314b4f-5504-4f50-9244-08fc4d9aa884" />
            <Object Name="IRTRANS_SERVER" ObjectId="76687677-b949-4767-8908-ddf54acea13b" />
            <Object Name="IRTRANS_SND_1" ObjectId="959815d6-b002-483d-a0af-2a00cbc13b12" />
            <Object Name="IRTRANS_SND_4" ObjectId="9936175a-2273-4de9-a5bc-5548356a3d60" />
            <Object Name="IRTRANS_SND_8" ObjectId="dd275c12-c857-4e17-a0ad-acdec8a7c6b8" />
          </Folder>
          <Folder Name="FILE">
            <Object Name="CSV_PARSER_BUF" ObjectId="116ee5e5-1aa9-4b66-a63a-0104efc8af66" />
            <Object Name="CSV_PARSER_FILE" ObjectId="36b680dc-b6aa-48cb-b290-fe5e5d56b74b" />
            <Object Name="FILE_BLOCK" ObjectId="1fef6738-5fb3-44c4-b70f-fe4ee63baf9a" />
            <Object Name="FILE_PATH_SPLIT" ObjectId="b6d3018b-3d69-440e-ae40-465c4e7321da" />
            <Object Name="INI_PARSER_BUF" ObjectId="76baad16-5fac-489b-abd3-629ed2201054" />
            <Object Name="INI_PARSER_FILE" ObjectId="3584a67c-c67b-4d83-a129-6c5cc810d9bb" />
          </Folder>
          <Folder Name="HARDWARE">
            <Object Name="FILE_SERVER" ObjectId="6f6b82b1-4af4-486c-9f3a-df642d24ec39" />
            <Object Name="FILE_SERVER_RUNTIME" ObjectId="208d08d1-2a3d-4e3c-9b33-252e37213526" />
            <Object Name="IP_CONTROL2" ObjectId="73caf32e-1531-456f-97c9-6af4cf8ecac2" />
            <Object Name="IP_CONTROL" ObjectId="fe00699d-634e-4485-997d-7bda7e09138c" />
          </Folder>
          <Folder Name="NET_VAR">
            <Object Name="NET_VAR_BOOL8" ObjectId="44d6491a-6d18-47e7-a5c2-50df3ab4c2b4" />
            <Object Name="NET_VAR_BUFFER" ObjectId="6d7071c5-81f5-41c3-afa7-928ea99f2a0c" />
            <Object Name="NET_VAR_CONTROL" ObjectId="709a90c3-388a-40ed-8701-37b78f1f1697" />
            <Object Name="NET_VAR_DWORD8" ObjectId="33f07a7f-14f8-487b-bfac-7857a8087a9a" />
            <Object Name="NET_VAR_REAL8" ObjectId="45eba169-8903-411d-92fc-63ff213316c3" />
            <Object Name="NET_VAR_STRING" ObjectId="237de9e4-eaad-4683-9449-da745cea45aa" />
            <Object Name="NET_VAR_X8" ObjectId="337abaef-14af-4ad6-b92d-1a47004027cd" />
          </Folder>
          <Folder Name="NETWORK">
            <Object Name="DNS_CLIENT" ObjectId="c33236ef-b5d5-4a82-95ac-939237b6f1bf" />
            <Object Name="DNS_DYN" ObjectId="ae7c503d-eb00-45c1-a012-dcd9e4436a67" />
            <Object Name="DNS_REV_CLIENT" ObjectId="69109b46-8368-409d-ac3f-9091bf373017" />
            <Object Name="FTP_CLIENT" ObjectId="7ac78714-960c-49f3-91bb-c3938c32a30a" />
            <Object Name="GET_WAN_IP" ObjectId="776ccd27-698e-45c6-9aad-0b806f38cff7" />
            <Object Name="HTTP_GET" ObjectId="b0739b60-7f72-412d-9029-9b16eca06eac" />
            <Object Name="IP2GEO" ObjectId="1f2d6957-d125-4b2f-bd99-28b89c096907" />
            <Object Name="MB_CLIENT" ObjectId="dee3ea1b-5e26-4949-b79d-a3e182328679" />
            <Object Name="MB_SERVER" ObjectId="4971e79e-00f2-4522-87a7-526b207e214e" />
            <Object Name="MB_SERVER_1" ObjectId="09c4c576-a6cb-40d0-97e1-e7e67f1aaa2c" />
            <Object Name="MB_VMAP" ObjectId="16e90dbc-5284-45a4-94d8-a5562ddb620f" />
            <Object Name="READ_HTTP" ObjectId="39cf59c6-886d-42b3-bcee-3dc047ce3a41" />
            <Object Name="SMTP_CLIENT" ObjectId="a9d368e5-be56-41e3-8d60-77c208c402be" />
            <Object Name="SNTP_CLIENT" ObjectId="b377231c-0c67-47af-85a7-120af76a3c87" />
            <Object Name="SNTP_SERVER" ObjectId="30bb07df-46ec-496f-8113-7d2a5de044d1" />
            <Object Name="SPIDER_ACCESS" ObjectId="8fb6ac25-5cd1-485c-a97b-c6190d4a2534" />
            <Object Name="SYS_LOG" ObjectId="390ffb03-2b43-4439-ad55-17d6fa973bff" />
            <Object Name="TELNET_LOG" ObjectId="ed103a0b-9af6-44d8-81e3-a1ea17c99cb6" />
            <Object Name="TELNET_PRINT" ObjectId="4cc03d50-c26f-4521-b58e-eafbbb90d6bb" />
          </Folder>
          <Folder Name="OTHER">
            <Object Name="ELEMENT_COUNT" ObjectId="836f170f-aa87-40ac-8f57-0ea771ed6a97" />
            <Object Name="ELEMENT_GET" ObjectId="5cb438ad-1f3d-4bb1-a20e-3afe1cfdf478" />
            <Object Name="IP_FIFO" ObjectId="d192f485-bd67-4fc1-adb5-d6997ea23629" />
            <Object Name="LOG_MSG" ObjectId="103cd3cd-aa09-4585-b506-af38e4fbdde9" />
            <Object Name="LOG_VIEWPORT" ObjectId="075ae7f8-c55d-4ede-84e3-b43599d1f24d" />
            <Object Name="NETWORK_VERSION" ObjectId="dd044474-260d-4204-9a2e-18d2aceae059" />
            <Object Name="PRINT_SF" ObjectId="7a0bfa01-0e75-42c8-b720-98b771208bd7" />
            <Object Name="UNI_CIRCULAR_BUFFER" ObjectId="7fabe930-5034-4a17-93c1-d2837a51259e" />
            <Object Name="XML_READER" ObjectId="12dd8c94-a9f8-4d1f-b129-6dcb31193b60" />
          </Folder>
          <Folder Name="TELNET_VISION">
            <Object Name="TN_FRAMEWORK" ObjectId="409ffed1-46c0-4080-a6db-5aacbd887a6f" />
            <Object Name="TN_INPUT_CONTROL" ObjectId="b21d4819-5ec8-4c9d-80a4-28c3c3a0a085" />
            <Object Name="TN_INPUT_EDIT_LINE" ObjectId="528c3056-c707-4cce-a66a-25b73d5eb389" />
            <Object Name="TN_INPUT_MENU_BAR" ObjectId="a89b213e-6141-4d99-a8b8-a436f0757c51" />
            <Object Name="TN_INPUT_MENU_POPUP" ObjectId="b4a47a0b-d9e8-489e-8d81-5be9409fc615" />
            <Object Name="TN_INPUT_SELECT_POPUP" ObjectId="a4b18b70-f39e-4cad-ad60-7ca19b064676" />
            <Object Name="TN_INPUT_SELECT_TEXT" ObjectId="a002647c-be78-4ae0-8e61-533d91a817b1" />
            <Object Name="TN_RECEIVE" ObjectId="213cc3d8-1805-47ff-b906-2e7964310324" />
            <Object Name="TN_SC_ADD_SHADOW" ObjectId="0c138d71-e305-4445-9842-a08e05bca8cb" />
            <Object Name="TN_SC_AREA_RESTORE" ObjectId="db237dfd-3dab-4854-b9b3-34e2017e1993" />
            <Object Name="TN_SC_AREA_SAVE" ObjectId="e4443f82-8bc6-4003-9f6e-cf66bfe27c46" />
            <Object Name="TN_SC_BOX" ObjectId="fa8c3aed-df1e-42a2-a3fe-5daffd67cf90" />
            <Object Name="TN_SC_FILL" ObjectId="02537fc9-dd8e-45b1-9896-af11cea55dd7" />
            <Object Name="TN_SC_LINE" ObjectId="1604848f-4934-40c7-a9a2-9ff404106245" />
            <Object Name="TN_SC_READ_ATTR" ObjectId="881d65fe-72ac-4aef-82de-5ee8608f54ea" />
            <Object Name="TN_SC_READ_CHAR" ObjectId="5f7fe902-4d5b-40c6-bb3a-7d92a5b64f26" />
            <Object Name="TN_SC_SHADOW_ATTR" ObjectId="0dbe9882-dbe4-457b-9b48-48f12d1ac6aa" />
            <Object Name="TN_SC_VIEWPORT" ObjectId="bd040a1d-8d33-41f2-9e29-866f93f49513" />
            <Object Name="TN_SC_WRITE" ObjectId="45c551c6-5493-48c7-84ff-5bb9da6f84e9" />
            <Object Name="TN_SC_WRITE_ATTR" ObjectId="813fe865-e24e-460f-9d72-3956d08ce8c6" />
            <Object Name="TN_SC_WRITE_C" ObjectId="a9bed4c9-2344-4b8d-94b0-cd4bb898d949" />
            <Object Name="TN_SC_WRITE_CHAR" ObjectId="9fb011b9-82b5-4c2f-9ef4-9f39180013b9" />
            <Object Name="TN_SC_WRITE_EOS" ObjectId="4ee3509a-acb4-40a8-90bb-3afbe0c96ec2" />
            <Object Name="TN_SC_XY2_ERROR" ObjectId="8d155ffd-b916-46b7-880a-664ec495d8a6" />
            <Object Name="TN_SC_XY_ERROR" ObjectId="443c2cb1-338f-4915-b6f8-f2aa6bee5443" />
            <Object Name="TN_SEND_ROWS" ObjectId="ea8560bc-67f7-47c8-b77a-c2a09f03b048" />
          </Folder>
          <Folder Name="WEATHER">
            <Object Name="MOON_PHASE" ObjectId="41f2544f-13b3-4ca7-9409-dccbe9943906" />
            <Object Name="WORLD_WEATHER" ObjectId="8d4edeb2-f634-44eb-bd18-6f086ff517cd" />
            <Object Name="WORLD_WEATHER_DESC_GE" ObjectId="fce07cf3-86a5-4377-8fca-e81139cc184c" />
            <Object Name="WORLD_WEATHER_ICON_OSCAT" ObjectId="5f73a630-ce41-459c-b9e7-2281827a227e" />
            <Object Name="YAHOO_WEATHER" ObjectId="cbcd8882-1108-4e8a-abd8-5631e462287f" />
            <Object Name="YAHOO_WEATHER_DESC_GE" ObjectId="fff8d2c6-0e02-46c0-97ae-605e70d6f0cb" />
            <Object Name="YAHOO_WEATHER_ICON_OSCAT" ObjectId="57c81771-a039-4f95-96a1-b28d1c961fd9" />
          </Folder>
        </Folder>
        <Object Name="Project Information" ObjectId="11c0fc3a-9bcf-4dd8-ac38-efb93363e521" />
      </ProjectStructure>
    </data>
  </addData>
</project>
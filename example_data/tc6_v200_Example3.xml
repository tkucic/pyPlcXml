<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://www.plcopen.org/xml/tc6_0200">
  <fileHeader companyName="TK" productName="TC6_v0200_Example3" productVersion="v3.0" creationDateTime="2019-09-29T20:50:27.2524554" />
  <contentHeader name="PLC_Programming_With_ST.project" modificationDateTime="2020-05-23T11:25:38.4825215">
    <coordinateInfo>
      <fbd>
        <scaling x="1" y="1" />
      </fbd>
      <ld>
        <scaling x="1" y="1" />
      </ld>
      <sfc>
        <scaling x="1" y="1" />
      </sfc>
    </coordinateInfo>
    <addData>
      <data name="http://www.3s-software.com/plcopenxml/projectinformation" handleUnknown="implementation">
        <ProjectInformation />
      </data>
    </addData>
  </contentHeader>
  <types>
    <dataTypes>
      <dataType name="OnOff_ConstructorLIO">
        <baseType>
          <struct>
            <variable name="Opened">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Object is opened </xhtml>
              </documentation>
            </variable>
            <variable name="Closed">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Object is closed </xhtml>
              </documentation>
            </variable>
            <variable name="PositionError">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> TRUE: Object has position error </xhtml>
              </documentation>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>03f815a1-4b3d-468c-aa4d-45cdb818d733</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="dint8">
        <baseType>
          <struct>
            <variable name="first">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="second">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="third">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="fourth">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="fifth">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="sixth">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="seventh">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="eight">
              <type>
                <DINT />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b51107bc-8a33-4c20-a5b0-9c44e44966a0</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="MotorPump">
        <baseType>
          <struct>
            <variable name="Running">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Fail">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="DiffPress">
              <type>
                <BOOL />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ffd50fef-0d21-4836-a27c-5cd87c6223b1</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="MotorVentilator">
        <baseType>
          <struct>
            <variable name="qMotor">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="iOverheatProtection">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="iOvercurrentProtection">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="iMotorFailOther">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="qLamp_Local">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="iEmcy_Stop">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="iStart_Local">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="iStop_Local">
              <type>
                <BOOL />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>9b700c35-f999-405b-a710-de63145f0877</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="PrometnoSvjetlo">
        <baseType>
          <struct>
            <variable name="ZelenoSvjetlo">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ZutoSvjetlo">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="CrvenoSvjetlo">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="PjesakovoDugme">
              <type>
                <BOOL />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d28ca644-bb67-4465-8a4e-faecb202c873</ObjectId>
          </data>
        </addData>
      </dataType>
    </dataTypes>
    <pous>
      <pou name="FOR_Loop" pouType="program">
        <interface>
          <localVars constant="true">
            <variable name="ARR_SIZE">
              <type>
                <USINT />
              </type>
              <initialValue>
                <simpleValue value="9" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Size of the cube</xhtml>
              </documentation>
            </variable>
          </localVars>
          <localVars>
            <variable name="vType">
              <type>
                <USINT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="data">
              <type>
                <array>
                  <dimension lower="0" upper="ARR_SIZE" />
                  <dimension lower="0" upper="ARR_SIZE" />
                  <baseType>
                    <BOOL />
                  </baseType>
                </array>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Data for iteration</xhtml>
              </documentation>
            </variable>
            <variable name="i">
              <type>
                <USINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterators</xhtml>
              </documentation>
            </variable>
            <variable name="j">
              <type>
                <USINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Iterators</xhtml>
              </documentation>
            </variable>
            <variable name="vIncStep">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Support functionalities</xhtml>
              </documentation>
            </variable>
            <variable name="vDecStep">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="vStepTime">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#1s0ms" />
              </initialValue>
            </variable>
            <variable name="vStepTimeChange">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#100ms" />
              </initialValue>
            </variable>
            <variable name="Stepper">
              <type>
                <derived name="BLINK" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE vType OF
	0: (*FOR LOOP*)
		(*Loop over everything, set always to inverse*)
		FOR i:=0 TO ARR_SIZE DO
			(*Go through all the columns of this row*)
			FOR j:=0 TO ARR_SIZE DO
				data[i,j] := NOT data[i,j];
			END_FOR
		END_FOR
		
	1: (*WHILE LOOP*)
		(*Loop over everything, set always to inverse*)
		WHILE i &lt;= ARR_SIZE DO
			(*Go trough all the columns*)
			WHILE j &lt;= ARR_SIZE DO
				data[i,j] := NOT data[i,j];
				j := j + 1;
			END_WHILE
			j := 0;
			(*After each column, increase row by 1*)
			i := i + 1;			
		END_WHILE
		(*If we ended up here, that means we went throguh all the elements,
		so we can reset and start all over*)
		i := 0;
		j := 0;
	
	2: (*Repeat loop*)
		(*Repeat loop executes atleast once*)
		REPEAT

			REPEAT
				data[i,j] := NOT data[i,j];
				j := j + 1;
			UNTIL
				j &gt; ARR_SIZE
			END_REPEAT
			j := 0;
			i := i + 1;
		UNTIL
			i &gt; ARR_SIZE
		END_REPEAT
		i := 0;
		j := 0;
		
	3: (*Cycle loop on 100 ms*)
		data[i,j] := NOT data[i,j];
		j := j + 1;
		IF j &gt; ARR_SIZE THEN
			j:=0;
			i := i + 1;
			IF i &gt; ARR_SIZE THEN
				i := 0;
			END_IF
		END_IF
		
	4: (*Pulse/Trigger loop*)
		IF Stepper.OUT THEN
			data[i,j] := NOT data[i,j];
			j := j + 1;
			IF j &gt; ARR_SIZE THEN
				j:=0;
				i := i + 1;
				IF i &gt; ARR_SIZE THEN
					i := 0;
				END_IF
			END_IF
		END_IF
	
	5: (*Reset - Set all to false*)
		MEMUtils.MemSet(ADR(data),0, SIZEOF(data));
END_CASE

(*Support functionality*)
(*Step speed*)
IF vIncStep THEN
	vStepTime := LIMIT(T#0.1S, vStepTime + vStepTimeChange, T#10S);
ELSIF vDecStep THEN
	vStepTime := LIMIT(T#0.1S, vStepTime - vStepTimeChange, T#10S);
END_IF
Stepper(ENABLE:= TRUE, TIMELOW:= vStepTime, TIMEHIGH:= T#100MS);</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>60883219-bc23-476c-91db-fffffee32da6</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CollisionDetection" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="xcor1">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> X Coordinate of object 1 </xhtml>
              </documentation>
            </variable>
            <variable name="ycor1">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Y Coordinate of object 1 </xhtml>
              </documentation>
            </variable>
            <variable name="height1">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Height of object 1 </xhtml>
              </documentation>
            </variable>
            <variable name="width1">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Width of object 1 </xhtml>
              </documentation>
            </variable>
            <variable name="xcor2">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> X Coordinate of object 2 </xhtml>
              </documentation>
            </variable>
            <variable name="ycor2">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Y Coordinate of object 2 </xhtml>
              </documentation>
            </variable>
            <variable name="height2">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Height of object 1 </xhtml>
              </documentation>
            </variable>
            <variable name="width2">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Width of object 1 </xhtml>
              </documentation>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="isCollision">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
          </outputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF xcor1 &lt; (xcor2 + width2) AND
   (xcor1 + width1) &gt; xcor2 AND
   ycor1 &lt; (ycor2 + height2) AND
  ( height1 + ycor1) &gt; ycor2 THEN
   isCollision := TRUE;
ELSE
	isCollision := FALSE;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>2bb3af1c-50de-4ea4-8cc2-9e0bdbff8bf2</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="CONCAT2" pouType="function">
        <interface>
          <returnType>
            <string />
          </returnType>
          <inputVars>
            <variable name="STR">
              <type>
                <array>
                  <dimension lower="0" upper="19" />
                  <baseType>
                    <string />
                  </baseType>
                </array>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> String array filled with characters to concatenate </xhtml>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="vStr">
              <type>
                <string />
              </type>
              <initialValue>
                <simpleValue value="''" />
              </initialValue>
            </variable>
            <variable name="i">
              <type>
                <UINT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="vSize">
              <type>
                <UINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">vStr := '';
vSize :=(SIZEOF(STR)/81);

FOR i:=0 TO vSize - 1 BY 1 DO
	IF STR[i] &lt;&gt; '' THEN
		vStr := CONCAT(vStr, STR[i]);
	END_IF
END_FOR
CONCAT2 := vStr;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>4935d0e0-96c6-41b2-9c1f-bc15f183da79</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="PLC_PRG_1" pouType="program">
        <interface>
          <localVars>
            <variable name="Start_Switch">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Bottle">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="UpperLimitSwitch">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="ConveyorBeltPut">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ConveyorBeltSimPut">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="TimeSimConvey">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#2s0ms" />
              </initialValue>
            </variable>
            <variable name="MotorDown">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="LowerLimitSwitch">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="MotorUp">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="MovingDownSim">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="TimeDownSim">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#4s0ms" />
              </initialValue>
            </variable>
            <variable name="ElapsedTimeDown">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="TimeCheck">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#0ms" />
              </initialValue>
            </variable>
            <variable name="BottleStamped">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="MovingUpSim">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="TimeUpSim">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#4s0ms" />
              </initialValue>
            </variable>
            <variable name="ElapsedTimeUp">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="ConveyorBeltRemove">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ConveyorBeltRemoveSim">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="ConveyorBeltMotor">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF Start_Switch THEN

	(* Putting new bottle under the marker if there isnt any *)
	IF NOT Bottle AND UpperLimitSwitch THEN
		ConveyorBeltPut := TRUE;
	ELSE
		ConveyorBeltPut := FALSE;
	END_IF;

	(*Simulating the conveyor belt putting new bottle in*)
	ConveyorBeltSimPut(IN:= ConveyorBeltPut, PT:= TimeSimConvey);

	IF ConveyorBeltSimPut.Q THEN
		Bottle := TRUE;
	END_IF;

	MotorDown := Bottle AND NOT LowerLimitSwitch AND NOT MotorUp;
	(*Simulating the movement of the motor down and engaging the limit switches*)
	MovingDownSim(IN := MotorDown, PT := TimeDownSim, ET =&gt; ElapsedTimeDown);

	IF MovingDownSim.ET &lt;&gt; TimeCheck THEN
		UpperLimitSwitch := FALSE;
	END_IF;

	IF MovingDownSim.Q THEN
		LowerLimitSwitch := TRUE;
		BottleStamped :=TRUE;
	END_IF;

	MotorUp := BottleStamped AND NOT UpperLimitSwitch AND NOT MotorDown;
	(*Simulating the movement of the motor up and engaging the limit switches*)
	MovingUpSim(IN := MotorUp,PT := TimeUpSim, ET=&gt;ElapsedTimeUp);

	IF MovingUpSim.ET &lt;&gt; TimeCheck THEN
		LowerLimitSwitch := FALSE;
	END_IF;

	IF MovingUpSim.Q THEN
		UpperLimitSwitch := TRUE;
	END_IF;

	IF BottleStamped AND UpperLimitSwitch THEN
		ConveyorBeltRemove := TRUE;
		(*Simulating the rotation of the conveyor and removing the bottles that is stamped*)
		ConveyorBeltRemoveSim(IN := ConveyorBeltRemove, PT := TimeSimConvey );
		IF ConveyorBeltRemoveSim.Q THEN
			Bottle := FALSE;
			BottleStamped := FALSE;
		END_IF;
	ELSE
		ConveyorBeltRemove := FALSE;
	END_IF;

	ConveyorBeltMotor := ConveyorBeltRemove OR ConveyorBeltPut;

END_IF;
(*
IF Start_Switch THEN

	IF  UpperLimitSwitch
		AND NOT LowerLimitSwitch
		AND NOT CylinderUpMotor
		THEN
			CylinderDownMotor := TRUE;
	END_IF;

	UpperLSWDelay(IN:=CylinderDownMotor, PT:=T#10S);
	IF 	UpperLSWDelay.Q
	THEN
		LowerLimitSwitch := TRUE;
	END_IF;

	IF  LowerLimitSwitch
	THEN
		CylinderDownMotor:= FALSE;
	END_IF;

	IF 	UpperLimitSwitch
	THEN
		CylinderUpMotor := FALSE;
	END_IF;

	IF 			 LowerLimitSwitch
		AND NOT  UpperLimitSwitch
	THEN
				 CylinderUpMotor := TRUE;
	END_IF;
	
	LowerLSWDelay(IN:=CylinderUpMotor, PT:=T#10S);
	IF 	LowerLSWDelay.Q
	THEN
		UpperLimitSwitch := TRUE;
	END_IF;

	IF UpperLimitSwitch
	THEN
		LowerLimitSwitch := FALSE;
	ELSE IF LowerLimitSwitch
	THEN
 	UpperLimitSwitch:FALSE;
	END_IF;

END_IF;
*)
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>987637a4-49bc-4a6f-847b-45d0bd88f175</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Motor_Model" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="CBActivated">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="LineVoltage">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="440" />
              </initialValue>
            </variable>
            <variable name="cfgNominalPower">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="12" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">kW</xhtml>
              </documentation>
            </variable>
            <variable name="cfgPowerFactor">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="0.83" />
              </initialValue>
            </variable>
            <variable name="Frequency">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="60" />
              </initialValue>
            </variable>
            <variable name="cfgNoOfPoles">
              <type>
                <DINT />
              </type>
              <initialValue>
                <simpleValue value="4" />
              </initialValue>
            </variable>
            <variable name="cfgSpeedUpRate">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="800" />
              </initialValue>
            </variable>
            <variable name="cfgSpeedDownRate">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="800" />
              </initialValue>
            </variable>
            <variable name="simShortCircuit">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="CurrentL1">
              <type>
                <LREAL />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="CurrentL2">
              <type>
                <LREAL />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="CurrentL3">
              <type>
                <LREAL />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="Speed">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="Status">
              <type>
                <array>
                  <dimension lower="0" upper="10" />
                  <baseType>
                    <BOOL />
                  </baseType>
                </array>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="vNs">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="vPhaseCurrent">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="SpeedRamp">
              <type>
                <derived name="RAMP_REAL" />
              </type>
            </variable>
            <variable name="SpeedBlink">
              <type>
                <derived name="BLINK" />
              </type>
            </variable>
            <variable name="vBlinkTime">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="vBlinker">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="vApparentPower_kVA">
              <type>
                <REAL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Status[0] := CBActivated;;

vApparentPower_kVA := cfgNominalPower/(3*cfgPowerFactor);

vPhaseCurrent := (vApparentPower_kVA*1000)/LineVoltage;

CurrentL1 := (vPhaseCurrent/SQRT(3)+(BOOL_TO_REAL(simShortCircuit)*250))*BOOL_TO_REAL(Status[0]);
CurrentL2 := (vPhaseCurrent/SQRT(3)+(BOOL_TO_REAL(simShortCircuit)*250))*BOOL_TO_REAL(Status[0]);
CurrentL3 := (vPhaseCurrent/SQRT(3)+(BOOL_TO_REAL(simShortCircuit)*250))*BOOL_TO_REAL(Status[0]);

vNs := ((120 *Frequency)/DINT_TO_REAL(cfgNoOfPoles))*BOOL_TO_REAL(Status[0]);

SpeedRamp(
	IN:= vNs, 
	ASCEND:= cfgSpeedUpRate, 
	DESCEND:= cfgSpeedDownRate, 
	TIMEBASE:= T#2S, 
	OUT=&gt;Speed);
	
vBlinkTime := 100000/MAX(1,Speed);

SpeedBlink(ENABLE:= vBlinkTime &lt; 100000, TIMELOW:= REAL_TO_TIME(vBlinkTime), TIMEHIGH:= REAL_TO_TIME(vBlinkTime), OUT=&gt; Status[1]);</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>1505332d-a29d-40f9-96df-69cc96037121</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="On_Off_Constructor" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="iOpenedFB">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> IO Open signal feedback from the valve </xhtml>
              </documentation>
            </variable>
            <variable name="iClosedFB">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> IO Close signal feedback from the valve </xhtml>
              </documentation>
            </variable>
            <variable name="cfgPositionErrorDelay">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#10s0ms" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Position error alarm delay </xhtml>
              </documentation>
            </variable>
            <variable name="cfgFBs">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="3" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> B0 - Opened signal in use, B1 - Closed signal in use </xhtml>
              </documentation>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="LIO">
              <type>
                <derived name="OnOff_ConstructorLIO" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Communication structure to higher logic </xhtml>
              </documentation>
            </variable>
            <variable name="HMI">
              <type>
                <derived name="OnOff_ConstructorLIO" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Communication structure to HMI </xhtml>
              </documentation>
            </variable>
          </outputVars>
          <localVars>
            <variable name="PositionErrorDelay">
              <type>
                <derived name="TON" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Position error alarm delay </xhtml>
              </documentation>
            </variable>
            <variable name="vPositionErrorOld">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Event memory: Position error </xhtml>
              </documentation>
            </variable>
            <variable name="vOpenedOld">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Event memory: Opened </xhtml>
              </documentation>
            </variable>
            <variable name="vClosedOld">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Event memory: Closed </xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Handle IOs depending on CFG *)
IF cfgFBs.0 AND cfgFBs.1 THEN
	LIO.Closed := iClosedFB;
	LIO.Opened := iOpenedFB;
ELSIF cfgFBs.0 THEN
	LIO.Closed := NOT iOpenedFB;
	LIO.Opened := iOpenedFB;
ELSIF cfgFBs.1 THEN
	LIO.Closed := iClosedFB;
	LIO.Opened := NOT iClosedFB;
ELSE
	(* Invalid configuration *)
END_IF;

(* Alarm management *)
(* Position error *)
PositionErrorDelay(
	IN:= LIO.Closed AND LIO.Opened OR NOT (LIO.Closed OR LIO.Opened),
	PT:= cfgPositionErrorDelay,
	Q  =&gt; LIO.PositionError);

(* Event management *)
(* Breaker opened *)
IF LIO.Opened AND NOT vOpenedOld THEN
	(* Call event *)
END_IF

(* Breaker closed *)
IF LIO.Closed AND NOT vClosedOld THEN
	(* Call event *)
END_IF
(* Position error *)
IF LIO.PositionError AND NOT vPositionErrorOld THEN
	(* Call event *)
END_IF

(* Communicate status to HMI *)	
HMI := LIO;


 </xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>aa484129-fb06-4af2-a089-7854403240d6</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="OnOffValve_Model" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="OpenCmd">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Command to open the valve </xhtml>
              </documentation>
            </variable>
            <variable name="CloseCmd">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Command to close the valve </xhtml>
              </documentation>
            </variable>
            <variable name="cfgOpeningTime">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#5s0ms" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Time it take to open the valve </xhtml>
              </documentation>
            </variable>
            <variable name="cfgClosingTime">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#5s0ms" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Time it take to close the valve </xhtml>
              </documentation>
            </variable>
            <variable name="simOpenFail">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Simulated open fail when true </xhtml>
              </documentation>
            </variable>
            <variable name="simCloseFail">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Simulated close fail when true </xhtml>
              </documentation>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Opened">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Closed">
              <type>
                <BOOL />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="OpenTime">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="CloseTime">
              <type>
                <derived name="TON" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Description of action:
If the open/close signal comes the valve opens/closes in designated time *)

OpenTime(IN:= OpenCmd AND NOT Opened, PT:=cfgOpeningTime);
CloseTime(IN:= CloseCmd AND NOT Closed, PT:=cfgClosingTime);

IF Opened AND CloseCmd THEN
	Opened := FALSE;
ELSIF OpenTime.Q AND NOT simOpenFail THEN
	Opened := TRUE;
END_IF

IF Closed AND OpenCmd THEN
	Closed := FALSE;
ELSIF CloseTime.Q AND NOT simCloseFail THEN
	Closed := TRUE;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>6734a321-abac-4b15-a10b-d0fe6fe7b2f6</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="OnOffValve_Object" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="iOpenedFB">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> IO Open signal feedback from the valve </xhtml>
              </documentation>
            </variable>
            <variable name="iClosedFB">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> IO Close signal feedback from the valve </xhtml>
              </documentation>
            </variable>
            <variable name="OpenAutoCmd">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Open cmd from program logic </xhtml>
              </documentation>
            </variable>
            <variable name="CloseAutoCmd">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Close cmd from program logic </xhtml>
              </documentation>
            </variable>
            <variable name="OpenCmdHMI">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Open cmd from HMI </xhtml>
              </documentation>
            </variable>
            <variable name="CloseCmdHMI">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Close cmd from HMI </xhtml>
              </documentation>
            </variable>
            <variable name="SetToAuto">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Sets valve control to auto mode </xhtml>
              </documentation>
            </variable>
            <variable name="SetToMan">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Sets valve control to manual mode </xhtml>
              </documentation>
            </variable>
            <variable name="cfgOpenFailDelay">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#6s0ms" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Open fail delay </xhtml>
              </documentation>
            </variable>
            <variable name="cfgCloseFailDelay">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#6s0ms" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Close fail delay </xhtml>
              </documentation>
            </variable>
            <variable name="cfgPositionErrorDelay">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#10s0ms" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Position error delay </xhtml>
              </documentation>
            </variable>
            <variable name="cfgFBs">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="16#3" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> B0 - Opened signal in use, B1 - Closed signal in use </xhtml>
              </documentation>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="ValveStatus">
              <type>
                <array>
                  <dimension lower="1" upper="20" />
                  <baseType>
                    <DINT />
                  </baseType>
                </array>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 1:Open/Closed/InTransit, 2:OpenFail, 3:CloseFail, 4:FBError, 5:Control Position, 6:OpenCmd, 7:CloseCmd  </xhtml>
              </documentation>
            </variable>
            <variable name="ValveIcon">
              <type>
                <string />
              </type>
            </variable>
            <variable name="qOpenCmd">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">IO Open command signal </xhtml>
              </documentation>
            </variable>
            <variable name="qCloseCmd">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">IO Close command signal </xhtml>
              </documentation>
            </variable>
          </outputVars>
          <localVars>
            <variable name="ObjConstructor">
              <type>
                <derived name="On_Off_Constructor" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Base building block of this object </xhtml>
              </documentation>
            </variable>
            <variable name="OpenFail">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="CloseFail">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="vControlPosition">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="vOpenCmd">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="vCloseCmd">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Handle base constructor *)
ObjConstructor(
	iOpenedFB := iOpenedFB,
	iClosedFB := iClosedFB,
	cfgPositionErrorDelay := cfgPositionErrorDelay,
	cfgFBs := cfgFBs);

(* Control position *)
(* Auto/Man setting should be rtrig or non holding button *)
IF SetToAuto AND NOT SetToMan THEN
	vControlPosition := 1;
ELSIF SetToMan THEN
	vControlPosition := 0;
END_IF

IF NOT(OpenFail.Q OR CloseFail.Q) THEN
	IF vControlPosition = 1 THEN
		vOpenCmd := (vOpenCmd OR OpenAutoCmd) AND NOT ObjConstructor.LIO.Opened;
		vCloseCmd := (vCloseCmd OR CloseAutoCmd) AND NOT ObjConstructor.LIO.Closed;
	ELSIF vControlPosition = 0 THEN
		vOpenCmd := (vOpenCmd OR OpenCmdHMI) AND NOT ObjConstructor.LIO.Opened;
		vCloseCmd := (vCloseCmd OR CloseCmdHMI) AND NOT ObjConstructor.LIO.Closed;
	ELSE
		vOpenCmd := FALSE;
		vCloseCmd := FALSE;	
	END_IF
ELSE
		vOpenCmd := FALSE;
		vCloseCmd := FALSE;		
END_IF

OpenFail(IN:= vOpenCmd AND NOT ObjConstructor.LIO.Opened, PT:= cfgOpenFailDelay);
CloseFail(IN:= vCloseCmd AND NOT ObjConstructor.LIO.Closed, PT:= cfgCloseFailDelay);

qOpenCmd := vOpenCmd AND NOT (OpenFail.Q OR ObjConstructor.LIO.Opened OR ObjConstructor.LIO.PositionError);
qCloseCmd := vCloseCmd AND NOT (CloseFail.Q OR ObjConstructor.LIO.Closed OR ObjConstructor.LIO.PositionError);

ValveStatus[1] := BOOL_TO_DINT(ObjConstructor.LIO.Opened) + 2*BOOL_TO_DINT(ObjConstructor.LIO.Closed);
ValveStatus[2] := BOOL_TO_DINT(OpenFail.Q);
ValveStatus[3] := BOOL_TO_DINT(CloseFail.Q);
ValveStatus[4] := BOOL_TO_DINT(ObjConstructor.LIO.PositionError);
ValveStatus[5] := vControlPosition;
ValveStatus[6] := BOOL_TO_DINT(qOpenCmd);
ValveStatus[7] := BOOL_TO_DINT(qCloseCmd);

IF ValveStatus[1] = 1 THEN
	ValveIcon := 'Valve1';
ELSIF ValveStatus[1] = 2 THEN
	ValveIcon := 'Valve2';
ELSE
	ValveIcon := 'Valve3';
END_IF

</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>488ff859-327d-4aec-a99e-54a706512310</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="PriorityPOU" pouType="program">
        <interface>
          <localVars>
            <variable name="SortPriority">
              <type>
                <derived name="PrioritySort" />
              </type>
            </variable>
            <variable name="SwapSequence1">
              <type>
                <derived name="Swapper" />
              </type>
            </variable>
            <variable name="SwapSequence2">
              <type>
                <derived name="Swapper" />
              </type>
            </variable>
            <variable name="FPSequenceChangeTimer">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="vEngineSequence">
              <type>
                <derived name="dint8" />
              </type>
            </variable>
            <variable name="vFPSequence">
              <type>
                <derived name="dint8" />
              </type>
            </variable>
            <variable name="vPPSequence">
              <type>
                <derived name="dint8" />
              </type>
            </variable>
            <variable name="vModeManagerSequence">
              <type>
                <derived name="dint8" />
              </type>
            </variable>
            <variable name="vApplyNewSequence">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="vApplyButtonPermission">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="vNewSequence">
              <type>
                <derived name="dint8" />
              </type>
            </variable>
            <variable name="vSequenceIsSame">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="vValidStartSequenceSum">
              <type>
                <LREAL />
              </type>
            </variable>
            <variable name="vEngineSequenceSum">
              <type>
                <LREAL />
              </type>
            </variable>
            <variable name="vFPSequenceSum">
              <type>
                <LREAL />
              </type>
            </variable>
            <variable name="vFPSequenceInvalid">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="vApplyButton2Permission">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
          <localVars retain="true">
            <variable name="vRestarted">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="vInvalidSequence">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
IF NOT vRestarted OR vInvalidSequence THEN
	(* Reinitialize priority list *)
	vEngineSequence.first := 1;
	vEngineSequence.second := 2;
	vEngineSequence.third  := 3;
	vEngineSequence.fourth := 4;
	vEngineSequence.fifth := 5;
	vEngineSequence.sixth := 6;
	vEngineSequence.seventh := 7;
	vEngineSequence.eight := 8;
	vFPSequence := vEngineSequence;
	vRestarted := TRUE;
END_IF

(* Determine correct sequence sum *)
vValidStartSequenceSum := EXPT(2,1)
						+ EXPT(2,2)
						+ EXPT(2,3)
                        + EXPT(2,4)
						+ EXPT(2,5)
						+ EXPT(2,6)
						+ EXPT(2,7)
						+ EXPT(2,8);

(* Constantly check engine sequence to make sure it is correct *)
vEngineSequenceSum := EXPT(2,vEngineSequence.first)
					+ EXPT(2,vEngineSequence.second)
					+ EXPT(2,vEngineSequence.third)
                    + EXPT(2,vEngineSequence.fourth)
				    + EXPT(2,vEngineSequence.fifth)
				    + EXPT(2,vEngineSequence.sixth)
					+ EXPT(2,vEngineSequence.seventh)
					+ EXPT(2,vEngineSequence.eight);
					
vInvalidSequence := vEngineSequenceSum &lt;&gt; vValidStartSequenceSum;

(* Faceplate start sequence handling *)
vSequenceIsSame :=  vEngineSequence.first = vFPSequence.first
				AND vEngineSequence.second = vFPSequence.second
				AND vEngineSequence.third = vFPSequence.third
				AND vEngineSequence.fourth = vFPSequence.fourth
				AND vEngineSequence.fifth = vFPSequence.fifth
				AND vEngineSequence.sixth = vFPSequence.sixth
				AND vEngineSequence.seventh = vFPSequence.seventh
				AND vEngineSequence.eight = vFPSequence.eight;

vFPSequenceSum := EXPT(2,vFPSequence.first)
				+ EXPT(2,vFPSequence.second)
				+ EXPT(2,vFPSequence.third)
                + EXPT(2,vFPSequence.fourth)
				+ EXPT(2,vFPSequence.fifth)
				+ EXPT(2,vFPSequence.sixth)
				+ EXPT(2,vFPSequence.seventh)
				+ EXPT(2,vFPSequence.eight);
				
vFPSequenceInvalid := vFPSequenceSum &lt;&gt; vValidStartSequenceSum;	
			
FPSequenceChangeTimer(IN:= NOT vSequenceIsSame OR vFPSequenceInvalid, PT:=T#15S);
IF FPSequenceChangeTimer.Q THEN
	vFPSequence := vEngineSequence;
END_IF;	
		
(* Swapper function 
- swaps places with the selected number*)
SwapSequence1(Enable:= NOT vSequenceIsSame, SequenceIN:= vFPSequence, SequenceOut =&gt; vFPSequence);

(* Functionality:
- Takes care of reseting invalid seq
- Applies requests
- converts to engine format
*)
SortPriority(
	EngineSequenceIN := vEngineSequence,
	RequestSequence1:= vFPSequence,
	RequestSequence1Permission:= NOT vFPSequenceInvalid,
	RequestSequence1Apply:= vApplyNewSequence,
	RequestSequence2:= vPPSequence,
	RequestSequence2Permission:= FALSE,
	RequestSequence2Apply:= FALSE,
	RequestSequence1ApplyPermission=&gt; vApplyButtonPermission,
	RequestSequence2ApplyPermission=&gt; vApplyButton2Permission,
	RequestSequence1OUT=&gt; vFPSequence,
	RequestSequence2OUT=&gt; vPPSequence,
	EngineSequenceOUT=&gt; vEngineSequence);
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>28c4622b-4282-464e-9123-021d132cdf4c</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="PrioritySort" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="EngineSequenceIN">
              <type>
                <derived name="dint8" />
              </type>
            </variable>
            <variable name="RequestSequence1">
              <type>
                <derived name="dint8" />
              </type>
            </variable>
            <variable name="RequestSequence1Permission">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="RequestSequence1Apply">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="RequestSequence2">
              <type>
                <derived name="dint8" />
              </type>
            </variable>
            <variable name="RequestSequence2Permission">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="RequestSequence2Apply">
              <type>
                <BOOL />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="RequestSequence1ApplyPermission">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="RequestSequence2ApplyPermission">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="RequestSequence1OUT">
              <type>
                <derived name="dint8" />
              </type>
            </variable>
            <variable name="RequestSequence2OUT">
              <type>
                <derived name="dint8" />
              </type>
            </variable>
            <variable name="EngineSequenceOUT">
              <type>
                <derived name="dint8" />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="v1stSeqDifferent">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="v2ndSeqDifferent">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Compare sequences *)
v1stSeqDifferent := RequestSequence1.first &lt;&gt; EngineSequenceIN.first
				OR  RequestSequence1.second &lt;&gt; EngineSequenceIN.second
				OR  RequestSequence1.third &lt;&gt; EngineSequenceIN.third
				OR  RequestSequence1.fourth &lt;&gt; EngineSequenceIN.fourth
				OR  RequestSequence1.fifth &lt;&gt; EngineSequenceIN.fifth
				OR  RequestSequence1.sixth &lt;&gt; EngineSequenceIN.sixth
				OR  RequestSequence1.seventh &lt;&gt; EngineSequenceIN.seventh
				OR  RequestSequence1.eight &lt;&gt; EngineSequenceIN.eight;

v2ndSeqDifferent := RequestSequence2.first &lt;&gt; EngineSequenceIN.first
				OR  RequestSequence2.second &lt;&gt; EngineSequenceIN.second
				OR  RequestSequence2.third &lt;&gt; EngineSequenceIN.third
				OR  RequestSequence2.fourth &lt;&gt; EngineSequenceIN.fourth
				OR  RequestSequence2.fifth &lt;&gt; EngineSequenceIN.fifth
				OR  RequestSequence2.sixth &lt;&gt; EngineSequenceIN.sixth
				OR  RequestSequence2.seventh &lt;&gt; EngineSequenceIN.seventh
				OR  RequestSequence2.eight &lt;&gt; EngineSequenceIN.eight;

IF v1stSeqDifferent AND RequestSequence1Permission AND RequestSequence1Apply THEN
	EngineSequenceOUT := RequestSequence1;
	RequestSequence2OUT := RequestSequence1;
	
ELSIF v2ndSeqDifferent AND RequestSequence2Permission AND RequestSequence2Apply THEN
	EngineSequenceOUT := RequestSequence2;
	RequestSequence1OUT := RequestSequence2;
	
ELSE
	(* Basically do nothing, copy parameters *)
	EngineSequenceOUT := EngineSequenceIN;
	RequestSequence1OUT := RequestSequence1;
	RequestSequence2OUT := RequestSequence2;
END_IF

(* Send out permissions *)
RequestSequence1ApplyPermission:= RequestSequence1Permission AND NOT RequestSequence2Apply;
RequestSequence2ApplyPermission:= RequestSequence2Permission AND NOT RequestSequence1Apply;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d892b45b-76e9-460d-ae2b-0149332154a4</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Swapper" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="Enable">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="SequenceIn">
              <type>
                <derived name="dint8" />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="SequenceOut">
              <type>
                <derived name="dint8" />
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="vTemp">
              <type>
                <DINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF Enable THEN
	(* Check if any of the positions have changed values *)
	IF SequenceIN.first &lt;&gt; SequenceOut.first THEN
		(* If this position changed, save the old position and apply new one to its place *)
		vTemp:= SequenceOut.first;
		SequenceOut.first := SequenceIN.first;
		(* Find the position where the same number is and write temp there
		but skip this position *)
		IF SequenceIN.first = SequenceOut.second THEN
			SequenceOut.second := vTemp;
		ELSIF SequenceIN.first = SequenceOut.third THEN
			SequenceOut.third := vTemp;
		ELSIF SequenceIN.first = SequenceOut.fourth THEN
			SequenceOut.fourth := vTemp;
		ELSIF SequenceIN.first = SequenceOut.fifth THEN
			SequenceOut.fifth := vTemp;
		ELSIF SequenceIN.first = SequenceOut.sixth THEN
			SequenceOut.sixth := vTemp;
		ELSIF SequenceIN.first = SequenceOut.seventh THEN
			SequenceOut.seventh := vTemp;
		ELSIF SequenceIN.first = SequenceOut.eight THEN
			SequenceOut.eight := vTemp;
		END_IF
	ELSIF SequenceIN.second &lt;&gt; SequenceOut.second THEN
		vTemp:= SequenceOut.second;
		SequenceOut.second := SequenceIN.second;
		(* Find the index where the same number is and write temp there
		but skip this position *)
		IF SequenceIN.second = SequenceOut.first THEN
			SequenceOut.first := vTemp;
		ELSIF SequenceIN.second = SequenceOut.third THEN
			SequenceOut.third := vTemp;
		ELSIF SequenceIN.second = SequenceOut.fourth THEN
			SequenceOut.fourth := vTemp;
		ELSIF SequenceIN.second = SequenceOut.fifth THEN
			SequenceOut.fifth := vTemp;
		ELSIF SequenceIN.second = SequenceOut.sixth THEN
			SequenceOut.sixth := vTemp;
		ELSIF SequenceIN.second = SequenceOut.seventh THEN
			SequenceOut.seventh := vTemp;
		ELSIF SequenceIN.second = SequenceOut.eight THEN
			SequenceOut.eight := vTemp;
		END_IF
	ELSIF SequenceIN.third &lt;&gt; SequenceOut.third THEN
			vTemp:= SequenceOut.third;
		SequenceOut.third := SequenceIN.third;
		(* Find the index where the same number is and write temp there
		but skip this position *)
		IF SequenceIN.third = SequenceOut.first THEN
			SequenceOut.first := vTemp;
		ELSIF SequenceIN.third = SequenceOut.second THEN
			SequenceOut.second := vTemp;
		ELSIF SequenceIN.third = SequenceOut.fourth THEN
			SequenceOut.fourth := vTemp;
		ELSIF SequenceIN.third = SequenceOut.fifth THEN
			SequenceOut.fifth := vTemp;
		ELSIF SequenceIN.third = SequenceOut.sixth THEN
			SequenceOut.sixth := vTemp;
		ELSIF SequenceIN.third = SequenceOut.seventh THEN
			SequenceOut.seventh := vTemp;
		ELSIF SequenceIN.third = SequenceOut.eight THEN
			SequenceOut.eight := vTemp;
		END_IF
	ELSIF SequenceIN.fourth &lt;&gt; SequenceOut.fourth THEN
			vTemp:= SequenceOut.fourth;
		SequenceOut.fourth := SequenceIN.fourth;
		(* Find the index where the same number is and write temp there
		but skip this position *)
		IF SequenceIN.third = SequenceOut.first THEN
			SequenceOut.first := vTemp;
		ELSIF SequenceIN.fourth = SequenceOut.second THEN
			SequenceOut.second := vTemp;
		ELSIF SequenceIN.fourth = SequenceOut.third THEN
			SequenceOut.third := vTemp;
		ELSIF SequenceIN.fourth = SequenceOut.fifth THEN
			SequenceOut.fifth := vTemp;
		ELSIF SequenceIN.fourth = SequenceOut.sixth THEN
			SequenceOut.sixth := vTemp;
		ELSIF SequenceIN.fourth = SequenceOut.seventh THEN
			SequenceOut.seventh := vTemp;
		ELSIF SequenceIN.fourth = SequenceOut.eight THEN
			SequenceOut.eight := vTemp;
		END_IF
	ELSIF SequenceIN.fifth &lt;&gt; SequenceOut.fifth THEN
			vTemp:= SequenceOut.fifth;
		SequenceOut.fifth := SequenceIN.fifth;
		(* Find the index where the same number is and write temp there
		but skip this position *)
		IF SequenceIN.fifth = SequenceOut.first THEN
			SequenceOut.first := vTemp;
		ELSIF SequenceIN.fifth = SequenceOut.second THEN
			SequenceOut.second := vTemp;
		ELSIF SequenceIN.fifth = SequenceOut.third THEN
			SequenceOut.third := vTemp;
		ELSIF SequenceIN.fifth = SequenceOut.fourth THEN
			SequenceOut.fourth := vTemp;
		ELSIF SequenceIN.fifth = SequenceOut.sixth THEN
			SequenceOut.sixth := vTemp;
		ELSIF SequenceIN.fifth = SequenceOut.seventh THEN
			SequenceOut.seventh := vTemp;
		ELSIF SequenceIN.fifth = SequenceOut.eight THEN
			SequenceOut.eight := vTemp;
		END_IF
	ELSIF SequenceIN.sixth &lt;&gt; SequenceOut.sixth THEN
			vTemp:= SequenceOut.sixth;
		SequenceOut.sixth := SequenceIN.sixth;
		(* Find the index where the same number is and write temp there
		but skip this position *)
		IF SequenceIN.sixth = SequenceOut.first THEN
			SequenceOut.first := vTemp;
		ELSIF SequenceIN.sixth = SequenceOut.second THEN
			SequenceOut.second := vTemp;
		ELSIF SequenceIN.sixth = SequenceOut.third THEN
			SequenceOut.third := vTemp;
		ELSIF SequenceIN.sixth = SequenceOut.fourth THEN
			SequenceOut.fourth := vTemp;
		ELSIF SequenceIN.sixth = SequenceOut.fifth THEN
			SequenceOut.fifth := vTemp;
		ELSIF SequenceIN.sixth = SequenceOut.seventh THEN
			SequenceOut.seventh := vTemp;
		ELSIF SequenceIN.sixth = SequenceOut.eight THEN
			SequenceOut.eight := vTemp;
		END_IF
	ELSIF SequenceIN.seventh &lt;&gt; SequenceOut.seventh THEN
			vTemp:= SequenceOut.seventh;
		SequenceOut.seventh := SequenceIN.seventh;
		(* Find the index where the same number is and write temp there
		but skip this position *)
		IF SequenceIN.seventh = SequenceOut.first THEN
			SequenceOut.first := vTemp;
		ELSIF SequenceIN.seventh = SequenceOut.second THEN
			SequenceOut.second := vTemp;
		ELSIF SequenceIN.seventh = SequenceOut.third THEN
			SequenceOut.third := vTemp;
		ELSIF SequenceIN.seventh = SequenceOut.fourth THEN
			SequenceOut.fourth := vTemp;
		ELSIF SequenceIN.seventh = SequenceOut.fifth THEN
			SequenceOut.fifth := vTemp;
		ELSIF SequenceIN.seventh = SequenceOut.sixth THEN
			SequenceOut.sixth := vTemp;
		ELSIF SequenceIN.seventh = SequenceOut.eight THEN
			SequenceOut.eight := vTemp;
		END_IF
	ELSIF SequenceIN.eight &lt;&gt; SequenceOut.eight THEN
			vTemp:= SequenceOut.eight;
		SequenceOut.eight := SequenceIN.eight;
		(* Find the index where the same number is and write temp there
		but skip this position *)
		IF SequenceIN.eight = SequenceOut.first THEN
			SequenceOut.first := vTemp;
		ELSIF SequenceIN.eight = SequenceOut.second THEN
			SequenceOut.second := vTemp;
		ELSIF SequenceIN.eight = SequenceOut.third THEN
			SequenceOut.third := vTemp;
		ELSIF SequenceIN.eight = SequenceOut.fourth THEN
			SequenceOut.fourth := vTemp;
		ELSIF SequenceIN.eight = SequenceOut.fifth THEN
			SequenceOut.fifth := vTemp;
		ELSIF SequenceIN.eight = SequenceOut.sixth THEN
			SequenceOut.sixth := vTemp;
		ELSIF SequenceIN.eight = SequenceOut.seventh THEN
			SequenceOut.seventh := vTemp;
		END_IF
	ELSE
		vTemp := 0;
	END_IF
ELSE
	vTemp:= 0;
	SequenceOut := SequenceIN;
END_IF;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ead7635a-ee19-4e90-9319-96762077517e</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="VJEZBA_PID" pouType="program">
        <interface>
          <localVars>
            <variable name="Kontroler">
              <type>
                <derived name="PID" />
              </type>
            </variable>
            <variable name="vIzlazProcesa">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="Proces">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="Smetnja">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="vSP">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="vMan">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="vRes">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="IzlazPID">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="vKp">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="vTn">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="vTv">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="vManY">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="vOffSet">
              <type>
                <REAL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(**)
vIzlazProcesa:=Proces+Smetnja+IzlazPID;

Kontroler(
	ACTUAL:= vIzlazProcesa, 
	SET_POINT:= vSP, 
	KP:= vKp, 
	TN:= vTn, 
	TV:= vTv, 
	Y_MANUAL:= vManY, 
	Y_OFFSET:= vOffSet, 
	Y_MIN:=1 , 
	Y_MAX:= 100, 
	MANUAL:=vMan , 
	RESET:= vRes, 
	Y=&gt;IzlazPID , 
	LIMITS_ACTIVE=&gt; , 
	OVERFLOW=&gt; );</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>5fccfb84-f9df-4f92-9d4f-dd055b11f07e</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="VJEZBA0" pouType="program">
        <interface>
          <localVars>
            <variable name="Ventilator">
              <type>
                <derived name="MotorVentilator" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">10kV, 1 MW ELektromotor</xhtml>
              </documentation>
            </variable>
            <variable name="StartRequirements">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="StopRequirements">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="MotorStart">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="MotorFail">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="MotorDisablements">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="iStartSWB">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="iStartRemote">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="StartPLC">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="MotorStop">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="iStopSWB">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="iStopRemote">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="StopPLC">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="iMotor_CB_Closed">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="iMotor_CB_Earthed">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="MotorProtection">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Counter">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="iEMCY_Remote">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="iEMCY_SWB">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="EMCY_Group">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="qLamp_Remote">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="qLamp_SWB">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="RHS">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="StartTrig">
              <type>
                <derived name="R_TRIG" />
              </type>
            </variable>
            <variable name="StartCount">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="LampBlink05HZ">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="MotorDelayStart">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ResetRHS">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="LightBlinker05HZ">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="RHSBlink">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="StartCountBlink">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ResetButtonVisible">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Current">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="StartDelay">
              <type>
                <derived name="TP" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
VJEŽBA 0: UPRAVLJANJE SREDNJENAPONSKIM NEREGULIRANIM
ELEKTROMOTORNIM POGONOM S DIREKTNIM UKLJUČIVANJEM
Cilj vježbe: Naučiti osnove programiranja programirljivih logičkih kontrolera (PLC-ova),
primijeniti PLC za automatizaciju tipičnog industrijskog postrojenja
Opis tehnološkog procesa:
Prozračivanje proizvodne hale obavlja se usisnim ventilatorom kojeg pogoni srednjenaponski (10kV, 1MW)
elektromotor. Elektromotor se pokreće direktnim upuštanjem i to prekidačem ugrađenim u sklopu SN razvodne
ploče.*)

MotorFail := Ventilator.iMotorFailOther OR Ventilator.iOvercurrentProtection OR Ventilator.iOverheatProtection;

Ventilator.qMotor := 		 StartRequirements
 						AND (MotorStart OR Ventilator.qMotor)
			   			AND NOT StopRequirements
			    		AND NOT MotorStop;

(*Sustav ventilacije je samo dio složenijeg proizvodnog procesa kojim upravlja PLC. Kako je većina uređaja pod
kontrolom PLCa niskonaponska, upravljački ormarić sa PLCom i popratnom opremom se nalazi u prostoriji sa
nisko naponskom razvodno-upravljačkom pločom.
U neposrednoj blizini motora je postavljena lokalna upravljačka konzola na kojoj su smještene tipkala, preklopke
i signalne sijalice kojima operater upravlja radom motora.*)

(*Motor može pokrenuti/zaustaviti (prema prioritetnom redu):
• operater komandama sa motornog polja ploče srednjeg napona,
• operater sa lokalne upravljačke konzole,
• operater iz udaljene komandne prostorije (eng. control room) pomoću SCADA sustava ili
• program PLC-a kada to zahtjeva tehnološki ciklus.*)

MotorStart := (Ventilator.iStart_Local OR iStartSWB OR iStartRemote OR StartPLC) AND NOT MotorDelayStart;
MotorStop := Ventilator.iStop_Local OR iStopSWB OR iStopRemote OR StopPLC;

(*Da bi se motor mogao pokrenuti, moraju za to biti ispunjeni preduvjeti poput:
• prekidač motora je u radnoj poziciji, spreman za zatvaranje,
• rastavljač za uzemljenje motora mora biti otvoren,
• niti jedna zaštita motora ne smije biti aktivna,
• glavno i pomoćno napajanje mora biti prisutno,
• niti jedno tipkalo za isklop u nuždi ("gljiva") nije aktivirano,
• proteklo je dovoljno vremena (vremenska zadrška) od posljednjeg starta itd.*)

StartRequirements := iMotor_CB_Closed AND NOT iMotor_CB_Earthed AND NOT MotorFail AND EMCY_Group;

IF iEMCY_Remote AND Ventilator.iEmcy_Stop AND iEMCY_SWB THEN
	EMCY_Group := TRUE;
ELSE
	EMCY_Group := FALSE;
	iMotor_CB_Closed := FALSE; (*TripCB*)
END_IF

IF Ventilator.iOvercurrentProtection THEN
	iMotor_CB_Closed := FALSE;
END_IF

(*Većina od ovih zahtjeva blokira pokretanje motora "ožičenom logikom". Osim ovih (osnovnih) uvjeta, postoje
dodatni uvjeti koji moraju, ovisno o mjestu i načinu upravljanja motorom, biti ispunjeni prije pokretanja motora:
• klapne na usisnoj grani ventilatora moraju biti zatvorene (manji udar na mrežu),
• ostali dijelovi sustava ventilacije moraju biti funkcionalni,
• pretpostavke za ekonomičan rad moraju biti ispunjene, itd.
Za potrebe laboratorijske vježbe će funkcionalnost sustava biti pojednostavljena, a broj U/I linija sveden na
minimum. Stoga će se koristiti samo signali čije su U/I linije PLCa označene punom linijom na slici 1.*)

(*Napomena: Isklop u nuždi mora biti izveden u "ožičenoj logici" i mora zaustaviti cijeli pogon ili samo jedan njegov dio
(zonu) neovisno o radu PLCa. Uglavnom se izvodi tako da prekida pomoćno napajanje sklopnika ili djeluje na ulaz za
otvaranje prekidača u svrhu dovođenja uređaja u beznaponsko stanje.*)
 
(*Kratak opis upravljačkog programa
Upravljački program PLCa mora osigurati jednostavno vođenje motora ventilatora sa lokalne upravljačke
konzole. Uz funkcije koje su date u opisu signalnih linija, program mora ispuniti i slijedeće zahtjeve:
1. motor se smije pokrenuti (zahtjev za start motora smije se poslati) samo ukoliko za to ispunjeni svi uvjeti
2. prebacivanjem kontrole motora sa lokalnog upravljanja (kontrole na MV ploči) na daljinsko upravljanje
(PLC) mora se održati status rada motora (ukoliko motor radi ne smije stati i obrnuto)
3. status motora i popratne opreme mora biti vidljiv na lokalnoj upravljačkoj. To se izvodi pomoću READY
signalne sijalice po slijedećoj shemi:
• ugašena, motor radi normalan rad motora
• ugašena, motor ne radi blokada aktivna u MV ploči (MV_SWBD_RDY_DI=0)
• trajno svijetli, motor ne radi motor spreman za start
• trajno svijetli, motor radi kontrola sa MV ploče (MV_SWBD_REM_DI=0)
• treptanje sporo (0.5Hz), ne radi vremenska zadrška zbog opetovanog starta
• treptanje srednje (1Hz), ne radi prorada zaštite tijekom rada motora ili neuspješan
start(zabilježen događaj)
• treptanje brzo (2Hz), ne radi isklop u nuždi aktivan.*)

Ventilator.qLamp_Local := Ventilator.qMotor AND NOT RHSBlink AND NOT StartCountBlink;
qLamp_Remote := Ventilator.qMotor AND NOT RHSBlink AND NOT StartCountBlink;
qLamp_SWB := Ventilator.qMotor AND NOT RHSBlink AND NOT StartCountBlink;

(*Da bi se poništilo zabilježeno alarmno stanje (ispad motora) i dobio trenutan status spremnosti motora za
rad potrebno je pritisnuti STOP tipku.*)

IF Ventilator.iStop_Local OR iStopRemote OR iStopSWB THEN
	Ventilator.iMotorFailOther := FALSE;
	Ventilator.iOvercurrentProtection := FALSE;
	Ventilator.iOverheatProtection := FALSE;
END_IF

(*4. kako bi se smanjila termička naprezanja motora, motor se može startati 3 puta na sat ako je hladan ili 2 puta
na sat, ako je topao. Motor je hladan ako ne radi jedan sat. Ovaj zahtjev se realizira po principu (15-30) tj.
hladan motor se može startati 15 minuta nakon prvog i potom 30 minuta nakon svakog slijedećeg starta.
Za potrebe vježbe je potrebno napraviti blokadu pokretanja motora 1 minutu nakon zadnjeg upuštanja.*)
StartDelay(IN:=Ventilator.iStart_Local OR iStartSWB OR iStartRemote OR StartPLC, PT:=T#15S , Q=&gt;MotorDelayStart);
(*
5. Radi potreba održavanja, potrebno je realizirati brojač sati rada motora i broja upuštanja. Ukoliko je broj sati
rada veći od 5000 ili broj upuštanja veći od 300, READY sijalica mora svakih 5 s nakratko promijeniti svoje
stanje.*)
LightBlinker05HZ := LightBlinker05HZ+1;
IF LightBlinker05HZ &gt;= 0 AND LightBlinker05HZ &lt; 25 THEN
	LampBlink05HZ:=TRUE;
ELSIF LightBlinker05HZ &gt;=25 AND LightBlinker05HZ &lt;50 THEN
	LampBlink05HZ:=FALSE;
ELSIF LightBlinker05HZ &gt;=50	THEN
	LightBlinker05HZ := 0;
END_IF

IF ResetRHS THEN
	StartCount:=0;
	RHS:=0;
END_IF

StartTrig(CLK:=Ventilator.iStart_Local OR iStartRemote OR iStartSWB OR StartPLC);
IF StartTrig.Q THEN
	StartCount := StartCount + 1;
END_IF
IF StartCount &gt;5 THEN
	StartCountBlink := LampBlink05HZ;
ELSE
	StartCountBlink := FALSE;
END_IF

IF Ventilator.qMotor THEN
	RHS := RHS + 1;
	IF RHS &gt;= 2000 THEN
		RHSBlink := LampBlink05HZ;
	ELSE
		RHSBlink := FALSE;
	END_IF
END_IF
ResetButtonVisible := StartCount &gt; 3 OR RHS &gt; 1500;

IF Ventilator.qMotor THEN
	Current := 30;
ELSE
	Current := 0;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>8f39462e-a3cd-4e55-b9c9-b08c42190070</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="VJEZBA1" pouType="program">
        <interface>
          <localVars>
            <variable name="RUCNO_AUTO">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="START_TIPKA">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="STOP_TIPKA">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="LAMP_TEST">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="LEVEL_H_HIGH">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="LEVEL_HIGH">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="LEVEL_LOW">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="LEVEL_L_LOW">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="MOTOR_READY">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="PUMPA">
              <type>
                <derived name="MotorPump" />
              </type>
            </variable>
            <variable name="Ready_Lampa">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Run_Lampa">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Alarm_Lampa">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="H_High_Lampa">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="High_Lampa">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Low_Lampa">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="L_Low_Lampa">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="START_AUTO">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="STOP_AUTO">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Motor_Start">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="WaterLevel">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="280" />
              </initialValue>
            </variable>
            <variable name="Inflow">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="OutFlow">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="DiffPressDelay">
              <type>
                <derived name="Ton" />
              </type>
            </variable>
            <variable name="SimulateRain">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="AlarmCreator">
              <type>
                <derived name="LIMITALARM" />
              </type>
            </variable>
            <variable name="Alarm_Level_Too_High">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Alarm_Level_Too_Low">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="RHS">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="BlinkingLight">
              <type>
                <derived name="BLINK" />
              </type>
            </variable>
            <variable name="ServiceLight">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="RHS_Reset">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Kolektor otpadnih voda*)
(*Opis tehnološkog procesa:
Otpadne vode slivaju se u spremnik sabirnika otpadnih voda. Spremnik se nalazi na najnižoj točki teritorija sa
kojeg se vode prikupljalju. Prije ispuštanja u more prikupljena voda se prečišćava u pogonima gradskog
kolektora. Da bi se otpadne vode dopremile u kolektor potrebno ih je prebaciti u gradski kanalizacijski sustav. Za
savladavanje visinske razlike između spremnika i priključka na kanalizacijski sustav koristi se pumpa pokretana
trofaznim asinkronim motorom.
Opis crpne stanice:
Vizualizacija 1 prikazuje shematski prikaz stanice. Stanica se sastoji od crpke pokretane trofaznim asinkronim motorom,
četiri magnetska nivo sklopke za dojavljivanje razine otpadnih voda, lokalnog upravljačkog ormarića
(upravljačke konzole), PLCa i motorske grupe za pokretanje i zaštitu motora.
Svaka nivo sklopka se nalazi na zasebnoj razini, dva na gornjoj, a dva na donjoj razini spremnika, prema
slijedećem rasporedu :
• Level High-High (LEV_HH) – jako visoka razina vode
• Level High (LEV_HI) – visoka razina vode
• Level Low (LEV_LO) – niska razina vode
• Level Low–Low (LEV_LL) – jako niska razina vode
Sklopka visokog nivoa LEV_HI signalizira da je nivo otpadnih voda dosegnuo razinu na kojoj je potrebno
uključiti motor crpke radi pražnjenja spremnika. Spremnik se prazni dok sklopka LEV_LO ne signalizira da je
spremnik dovoljno ispražnjen tj. da je dosegnuta razina vode pri koje je potrebno zaustaviti pogon crpke. Ostale
dvije sklopke imaju dvostruku ulogu: alarmiranje i zaštitu od otkazivanja. Sklopka LEV_HH može biti aktivirana
ukoliko je sklopka LEV_HI neispravna (ili blokirana krupnim otpadnim materijalom. npr. granjem) pa crpka nije
proradila na pravom nivou ili je dotok (npr. oborinskih voda) veći od kapaciteta crpke pa prijeti opasnost od
izlijevanja otpadnih voda u more kroz prelijevni ventil. Sklopka LEV_LL predstavlja veoma nisku razinu
otpadnih voda pri kojem prijeti opasnost od oštećenja crpke zbog povlačenja krutog plutajućeg otpada ili zbog
“suhog rada”. *)

IF SimulateRain THEN
	Inflow := Inflow - 0.25;
END_IF;

WaterLevel := Inflow + OutFlow;

IF PUMPA.Running THEN
	OutFlow := Outflow + 0.5;
	IF WaterLevel &gt;280 THEN
		WaterLevel := 280;
	END_IF
END_IF

IF WaterLevel &lt;=-100 THEN
	LEVEL_H_HIGH := TRUE;
	Alarm_Level_Too_High:=TRUE;
ELSIF WaterLevel &lt;= -90 THEN
	LEVEL_HIGH := TRUE;
ELSE
	LEVEL_HIGH:=FALSE;
	LEVEL_H_HIGH := FALSE;
	Alarm_Level_Too_High:=FALSE;
END_IF

IF WaterLevel &gt;=0 THEN
	LEVEL_L_LOW := TRUE;
	Alarm_Level_Too_Low:=TRUE;
ELSIF WaterLevel &gt;= -10 THEN
	LEVEL_LOW := TRUE;
ELSE
	LEVEL_LOW:=FALSE;
	LEVEL_L_LOW := FALSE;
	Alarm_Level_Too_Low:=FALSE;
END_IF

	
(*Crpka je opremljena i diferencijalni senzor tlaka (diferencijalnom tlačnom sklopkom ili presostatom). Sklopka
aktivira izlazni signal ukoliko je razlika razlika tlakova na ulaznij i izlaznoj cijevi crpke veća od podešenog praga.
Prag sklopke se postavlja tako da odgovara razlici ulaznog i izlaznog tlaka pri ispravnom radu crpke.
Nepostojanje takvog tlaka tj. nepostojanje signala tlačne sklopke predstavlja neispravan rad rad crpke pri kojem
se mora zaustaviti rad pogonskog motora, a detektirano stanje se mora prikazati alarmom.*)


	DiffPressDelay (IN:=WaterLevel &gt;10 AND PUMPA.Running, PT:=T#5S); (*Tu mora dati alarm*)
	IF DiffPressDelay.q THEN
		PUMPA.DiffPress := TRUE;
	ELSE
		PUMPA.DiffPress := FALSE;	
	END_IF

(*Postoje dva režima rada crpna stanice: ručno i automatski. Način rada se odabire preklopkom koja se nalazi na
upravljačkoj konzoli.
Ručni režim rada:
Ručni režim rada koristi se u izvanrednim situacijama: prilikom puštanja u rad, servisnih radova ili zbog takvog
otkaza opreme da je automatski rad onemogućen. U režimu ručnog rada operater preuzima kontrolu nad
pokretanjem i zaustavljanjem motora crpke START/STOP tipkalima, neovisno o signalima nivo sklopki.
Aktivna je zaštita koja zaustavlja motor u slučaju nedovoljne razlike tlaka na crpki.
Automatski režim rada:
Automatski režim rada je normalan režim rada. Podizanjem nivoa otpadnih voda i proradom nivo sklopke
LEV_HI pokreće se crpka. Crpka se isključuje kada je dosegnut niski nivo u spremniku, odnosno kada proradi
sklopka LEV_LO. Redundantne sklopke LEV_HH i LEV_LL moraju pokrenuti odnosno zaustaviti motor crpke
neovisno o položajima sklopki LEV_HI i LEV_LO. Aktivna je zaštita koja zaustavlja motor u slučaju
nedovoljne razlike tlaka na crpki.*)

(*Zaštita crpke i pogonskog motora
Mehanizam crpke štiti se isključivanjem pogonskog motora kada je dostignuta vrlo niska razina u spremniku
LEV_LL i kada je razlika tlakova na ulaznoj i izlaznoj ispod dopuštenoga. Radni tlak crpka postiže 2 sekunde
nakon pokretanja motora.
Elektro motor crpke štiti se bimetalnom zaštitom u sklopu startera motora. Za očitavanje stanja startera motora
koristi se beznaponski kontakt koji je zatvoren ukoliko je motor spreman za pokretanje. Prorada zaštite, ispad
napajanja ili pokretanje motora otvorit će signalni kontakt. Za provjeru da li motor radi odnosno da li je sklopnik
motora uključen koristi se MOTOR RUNNING linija koju zatvaraju pomoćni kontakti sklopnika motora. Signal
MOT_RUN služi za pokretanje motora. Motor će raditi (sklopnik motora će biti uključen) dok je signal aktivan.*)

START_AUTO := RUCNO_AUTO AND (LEVEL_HIGH OR LEVEL_H_HIGH);
STOP_AUTO := RUCNO_AUTO AND (LEVEL_LOW OR LEVEL_L_LOW);

IF RUCNO_AUTO THEN
	Motor_Start := (START_AUTO OR Motor_Start) AND NOT PUMPA.DiffPress AND NOT STOP_AUTO;
ELSE
	Motor_Start := (START_TIPKA OR Motor_Start) AND NOT PUMPA.DiffPress AND NOT STOP_TIPKA;
END_IF
PUMPA.Running := Motor_Start;

MOTOR_READY := NOT PUMPA.Running AND NOT PUMPA.DiffPress AND NOT PUMPA.Fail;
Ready_Lampa := MOTOR_READY OR ServiceLight;
H_HIGH_LAMPA := LEVEL_H_HIGH;
HIGH_LAMPA := LEVEL_HIGH;
Run_Lampa := PUMPA.Running;
Low_Lampa := LEVEL_LOW;
L_LOW_LAMPA := LEVEL_L_LOW;
Alarm_Lampa := PUMPA.DiffPress OR PUMPA.Fail OR LEVEL_H_HIGH OR LEVEL_L_LOW;

IF Lamp_Test THEN
	Ready_Lampa := TRUE;
	H_HIGH_LAMPA := TRUE;
	HIGH_LAMPA := TRUE;
	Run_Lampa := TRUE;
	Low_Lampa := TRUE;
	L_LOW_LAMPA := TRUE;
	Alarm_Lampa := TRUE;
ELSE
	Ready_Lampa := FALSE;
	H_HIGH_LAMPA := FALSE;
	HIGH_LAMPA := FALSE;
	Run_Lampa := FALSE;
	Low_Lampa := FALSE;
	L_LOW_LAMPA := FALSE;
	Alarm_Lampa := FALSE;
END_IF

(*Upravljačka konzola
Za odabir načina rada, pokretanje i zaustavljanje motora crpke te očitanje statusa postrojenja operater koristi
upravljačku konzolu. Ona se sastoji od preklopke za odabir režima rada, start tipkala, stop tipkala, tipkala za
provjeru sijalica, te signalnih sijalica za dojave razine vode u spremniku, alarma i rada motora. Izgled upravljačke
konzole vidi se na dijelu “KONTROLNI PANEL” makete crpne stanice (slika 2.)
Na upravljačkoj konzoli nalazi se sedam signalnih sijalica pomoću kojih se može odrediti stanje pojedinih
dijelova crpne stanice. To su:
• READY sijalica - potvrda spremnosti crpke za pokretanje, zahtjev za servis
• RUN sijalica - signalizira da motor crpke radi
• ALARM sijalica - signalizira da li je došlo i do koje greške u radu crpke
• 4 sijalice - prikaz stanja nivo sklopki.*)

(*Alarmi
Alarmi dojavljuju opasna stanja. Alarm može biti:
• aktivan - opasna situacija još uvijek prisutna
• nepotvrđen - opasna situacija je prošla,
• potvrđen - operator je reagirao na nepotvrđen alarm, alarmno stanje se gasi,
• tihi – alarmna situacija je još uvijek aktivna, ali je potvrđena sa strane operatera. Prestankom uzroka
alarmne situacije, alarm se gasi.
Alarmi koje treba realizirati u okviru vježbe su dati u tablici 2. Kako zvučno alarmiranje (alarmna sirena) nije
ugrađena u pogon, tihi alarm nije potrebno realizirati. Alarmna situacija se potvrđuje tipkalom LAMP TEST.*)



(*Zbog nepovoljnih uvjeta u kojima radi crpka (potpuno uronjena u otpadnu vodu) potrebno je obaviti servisni
pregled svakih 100 sati rada. Upravljački program PLCa prati broj sati rada od zadnjeg pregleda i dostizanjem
servisnog intervala postavlja zahtjev za servis na upravljačkoj konzoli.*)
IF PUMPA.Running THEN
	RHS:=RHS+1;
	IF RHS &gt; 1000 THEN
		BlinkingLight(ENABLE:=TRUE, TIMELOW:=T#2S, TIMEHIGH:=T#2S, OUT=&gt;ServiceLight);
	END_IF
END_IF
IF RHS&gt;1000 AND RHS_Reset THEN
	RHS:=0;
END_IF;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>c40a828a-8e8c-4c6f-b79c-7baa0a29c365</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Pump_Model" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="OnCmd">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Pump simulator will turn on when recieves ON signal and will shutoff when it recieves a OFF signal 
 If SimTrip signal becomes true, pump will trip and cannot be started until signal goes false 
 If SimFilterFail signal becomes true the pump will operate but the flowrate will start to slowly drop until zero </xhtml>
              </documentation>
            </variable>
            <variable name="OffCmd">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="SimTrip">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="SimFilterFail">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="NoWater">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> This tells the pump simulation that there is no more medium to pump so the flowmeter drops to 0 </xhtml>
              </documentation>
            </variable>
            <variable name="cfgFlowrate">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="3000" />
              </initialValue>
            </variable>
            <variable name="cfgRampUpRate">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="150" />
              </initialValue>
            </variable>
            <variable name="cfgRampDownRate">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="150" />
              </initialValue>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="RunStatus">
              <type>
                <DINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 0 - Stopped, 1 - Running </xhtml>
              </documentation>
            </variable>
            <variable name="FlowmeterOut">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Cubic meters per hour </xhtml>
              </documentation>
            </variable>
          </outputVars>
          <localVars>
            <variable name="PumpSR">
              <type>
                <derived name="SR" />
              </type>
            </variable>
            <variable name="vPumpRunning">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Flowmeter">
              <type>
                <derived name="RAMP_REAL" />
              </type>
            </variable>
            <variable name="vFlowmeterSP">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="vAscend">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="vDescend">
              <type>
                <REAL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
PumpSR(SET1:= OnCmd AND NOT (OffCmd OR SimTrip OR RunStatus=1) , RESET:= (OffCmd OR SimTrip), Q1=&gt;vPumpRunning );

RunStatus := BOOL_TO_DINT(vPumpRunning);

IF vPumpRunning AND NOT NoWater THEN
	vFlowmeterSP := BOOL_TO_REAL( NOT SimFilterFail) * cfgFlowrate;
	vAscend := cfgRampUpRate;
	vDescend := cfgRampDownRate;
ELSE
	vFlowmeterSP := 0;
	vAscend := 0;
	vDescend := 99999999;
END_IF


Flowmeter(
	IN:= vFlowmeterSP, 
	ASCEND:= vAscend,
	TIMEBASE:= T#500MS, 
	DESCEND:= vDescend, 
	OUT=&gt; FlowmeterOut);</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>384c9f0a-fb8c-4f23-bf7e-e5999e5b7c60</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Rand" pouType="function">
        <interface>
          <returnType>
            <DINT />
          </returnType>
          <inOutVars>
            <variable name="seed">
              <type>
                <ULINT />
              </type>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="lower">
              <type>
                <UINT />
              </type>
            </variable>
            <variable name="upper">
              <type>
                <UINT />
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="range">
              <type>
                <UINT />
              </type>
              <initialValue>
                <simpleValue value="((upper - lower) + 1)" />
              </initialValue>
            </variable>
            <variable name="interval">
              <type>
                <UINT />
              </type>
              <initialValue>
                <simpleValue value="(c4 / range)" />
              </initialValue>
            </variable>
            <variable name="preRand">
              <type>
                <UINT />
              </type>
            </variable>
          </localVars>
          <localVars constant="true">
            <variable name="c1">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="1103515245" />
              </initialValue>
            </variable>
            <variable name="c2">
              <type>
                <UINT />
              </type>
              <initialValue>
                <simpleValue value="12345" />
              </initialValue>
            </variable>
            <variable name="c3">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="65536" />
              </initialValue>
            </variable>
            <variable name="c4">
              <type>
                <UINT />
              </type>
              <initialValue>
                <simpleValue value="32768" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">seed := seed * c1 + c2;
preRand := ULINT_TO_UINT((seed/c3) MOD c4);
IF interval &gt; 0 THEN
	Rand := (preRand+lower*interval-1)/interval; 
ELSE
	Rand := preRand;
END_IF;
RETURN;

</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>3c70ca2b-944a-4582-8eaf-4059251bbcb8</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="PLC_PRG" pouType="program">
        <interface>
          <localVars>
            <variable name="Lamp">
              <type>
                <array>
                  <dimension lower="0" upper="39" />
                  <dimension lower="0" upper="7" />
                  <baseType>
                    <BOOL />
                  </baseType>
                </array>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Array for multiplying the Lamp object in the visualisation</xhtml>
              </documentation>
            </variable>
            <variable name="Row0">
              <type>
                <LINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Row 0 of the Lamp array</xhtml>
              </documentation>
            </variable>
            <variable name="Row1">
              <type>
                <LINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Row 1 of the Lamp array</xhtml>
              </documentation>
            </variable>
            <variable name="Row2">
              <type>
                <LINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Row 2 of the Lamp array</xhtml>
              </documentation>
            </variable>
            <variable name="Row3">
              <type>
                <LINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Row 3 of the Lamp array</xhtml>
              </documentation>
            </variable>
            <variable name="Row4">
              <type>
                <LINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Row 4 of the Lamp array</xhtml>
              </documentation>
            </variable>
            <variable name="Row5">
              <type>
                <LINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Row 5 of the Lamp array</xhtml>
              </documentation>
            </variable>
            <variable name="Row6">
              <type>
                <LINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Row 6 of the Lamp array</xhtml>
              </documentation>
            </variable>
            <variable name="Row7">
              <type>
                <LINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Row 7 of the Lamp array</xhtml>
              </documentation>
            </variable>
            <variable name="Timer">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="vSequence">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Sequence selector for the case machine</xhtml>
              </documentation>
            </variable>
            <variable name="Start">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Starts the simulation</xhtml>
              </documentation>
            </variable>
            <variable name="Stop">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Stops the simulation</xhtml>
              </documentation>
            </variable>
            <variable name="ScrollText">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Starts the scrolling text simulation</xhtml>
              </documentation>
            </variable>
            <variable name="TempBuff0">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="TempBuff1">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="TempBuff2">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="TempBuff3">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="TempBuff4">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="TempBuff5">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="TempBuff6">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="TempBuff7">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="n">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Number of places to shift</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Project Scrolling Text, Toni Kucic, Finland/Croatia, 16.6.2017*)

(*Letter S= 16#7f,16#7f,16#60,16#7f,16#7f,16#3,16#7f,16#7f  *)
(*Letter C= 16#7f,16#7f,16#60,16#60,16#60,16#60,16#7f,16#7f *)
(*Letter A= 16#7f,16#7f,16#63,16#63,16#7f,16#7f,16#63,16#63 *)
(*Letter D= 16#7c,16#7e,16#63,16#63,16#63,16#63,16#7e,16#7c *)
(*Letter A= 16#7f,16#7f,16#63,16#63,16#7f,16#7f,16#63,16#63 *)

(*First task was to create an LCD screen that lights up sequentially following the scheme:
" ", "S", "C", "A", "D", "A", "SCADA".
Each part of the sequence is 5sec long therefore the whole sequence is 35sec After that its repeated.
There is a Start and a Stop control button. In the sequence 6, the scrolling text funcionality is added
 to which we enter from the sequence 5 and by pressing ScrollText Button.
Future plan is to create a feeding system that will scroll the text in a string variable. 
As far as 18.6.2017 that hasn't been done on the PLC/using ST code.*)

IF STOP THEN
	vSequence:=0;
END_IF

CASE vSequence OF
	0: 	Timer(IN:=TRUE,PT:=T#1S);
		Row0:=16#0;
		Row1:=16#0;
		Row2:=16#0;
		Row3:=16#0;
		Row4:=16#0;
		Row5:=16#0;
		Row6:=16#0;
		Row7:=16#0;
		
		IF Start  AND NOT Stop AND Timer.Q THEN
			Timer(IN:=FALSE);
			vSequence:=1;
		END_IF
		
	1:	Timer(IN:=TRUE,PT:=T#5S);
		Row0:=16#7F;
		Row1:=16#7F;
		Row2:=16#60;
		Row3:=16#7F;
		Row4:=16#7F;
		Row5:=16#3;
		Row6:=16#7F;
		Row7:=16#7F;
		IF Timer.Q THEN
			Timer(IN:=FALSE);
			vSequence:=2;
		END_IF
		
	2: Timer(IN:=TRUE,PT:=T#5S);
		Row0:=16#7F7F;
		Row1:=16#7F7F;
		Row2:=16#6060;
		Row3:=16#7F60;
		Row4:=16#7F60;
		Row5:=16#360;
		Row6:=16#7F7F;
		Row7:=16#7F7F;
		IF Timer.Q THEN
			Timer(IN:=FALSE);
			vSequence:=3;
		END_IF
		
	3: Timer(IN:=TRUE,PT:=T#5S);
		Row0:=16#7F7F7F;
		Row1:=16#7F7F7F;
		Row2:=16#606063;
		Row3:=16#7F6063;
		Row4:=16#7F607F;
		Row5:=16#3607F;
		Row6:=16#7F7F63;
		Row7:=16#7F7F63;
		IF Timer.Q THEN
			Timer(IN:=FALSE);
			vSequence:=4;
		END_IF
		
	4: Timer(IN:=TRUE,PT:=T#5S);
		Row0:=16#7F7F7F7C;
		Row1:=16#7F7F7F7E;
		Row2:=16#60606363;
		Row3:=16#7F606363;
		Row4:=16#7F607F63;
		Row5:=16#3607F63;
		Row6:=16#7F7F637E;
		Row7:=16#7F7F637C;
		IF Timer.Q THEN
			Timer(IN:=FALSE);
			vSequence:=5;
		END_IF
		
	5: Timer(IN:=TRUE,PT:=T#5S);
		Row0:=16#7F7F7F7C7F;
		Row1:=16#7F7F7F7E7F;
		Row2:=16#6060636363;
		Row3:=16#7F60636363;
		Row4:=16#7F607F637F;
		Row5:=16#3607F637F;
		Row6:=16#7F7F637E63;
		Row7:=16#7F7F637C63;
		IF Timer.Q THEN (*When done, go back to state 0 and the sequence is repeating*)
			Timer(IN:=FALSE);
			vSequence:=0;
		ELSIF ScrollText THEN (*If the button scroll text is pressed the loop is broken and it goes to state 6, where it scrolls the text*)
			vSequence:=6;
		END_IF
	6: 
		Timer(IN:=NOT Timer.Q, PT:=T#0.25S);
		IF Timer.Q THEN
			TempBuff0.0 := Row0.39; (*Put last usable bit value to temporary buffer*)
			TempBuff1.0 := Row1.39;
			TempBuff2.0 := Row2.39;
			TempBuff3.0 := Row3.39;
			TempBuff4.0 := Row4.39;
			TempBuff5.0 := Row5.39;
			TempBuff6.0 := Row6.39;
			TempBuff7.0 := Row7.39;

			Row0:=SHL(Row0,n); (*Shift the data one bit to the left*)
			Row1:=SHL(Row1,n);
			Row2:=SHL(Row2,n);
			Row3:=SHL(Row3,n);
			Row4:=SHL(Row4,n);
			Row5:=SHL(Row5,n);
			Row6:=SHL(Row6,n);
			Row7:=SHL(Row7,n);

			Row0.0:=TempBuff0.0; (*The last bit of data that has moved gets put back to the beggining*)
			Row1.0:=TempBuff1.0;
			Row2.0:=TempBuff2.0;
			Row3.0:=TempBuff3.0;
			Row4.0:=TempBuff4.0;
			Row5.0:=TempBuff5.0;
			Row6.0:=TempBuff6.0;
			Row7.0:=TempBuff7.0;
		END_IF;
END_CASE

(*Lamp system 40x8*)
Lamp[0, 0]:=Row0.39;
Lamp[0, 1]:=Row1.39;
Lamp[0, 2]:=Row2.39;
Lamp[0, 3]:=Row3.39;
Lamp[0, 4]:=Row4.39;
Lamp[0, 5]:=Row5.39;
Lamp[0, 6]:=Row6.39;
Lamp[0, 7]:=Row7.39;
Lamp[1, 0]:=Row0.38;
Lamp[1, 1]:=Row1.38;
Lamp[1, 2]:=Row2.38;
Lamp[1, 3]:=Row3.38;
Lamp[1, 4]:=Row4.38;
Lamp[1, 5]:=Row5.38;
Lamp[1, 6]:=Row6.38;
Lamp[1, 7]:=Row7.38;
Lamp[2, 0]:=Row0.37;
Lamp[2, 1]:=Row1.37;
Lamp[2, 2]:=Row2.37;
Lamp[2, 3]:=Row3.37;
Lamp[2, 4]:=Row4.37;
Lamp[2, 5]:=Row5.37;
Lamp[2, 6]:=Row6.37;
Lamp[2, 7]:=Row7.37;
Lamp[3, 0]:=Row0.36;
Lamp[3, 1]:=Row1.36;
Lamp[3, 2]:=Row2.36;
Lamp[3, 3]:=Row3.36;
Lamp[3, 4]:=Row4.36;
Lamp[3, 5]:=Row5.36;
Lamp[3, 6]:=Row6.36;
Lamp[3, 7]:=Row7.36;
Lamp[4, 0]:=Row0.35;
Lamp[4, 1]:=Row1.35;
Lamp[4, 2]:=Row2.35;
Lamp[4, 3]:=Row3.35;
Lamp[4, 4]:=Row4.35;
Lamp[4, 5]:=Row5.35;
Lamp[4, 6]:=Row6.35;
Lamp[4, 7]:=Row7.35;
Lamp[5, 0]:=Row0.34;
Lamp[5, 1]:=Row1.34;
Lamp[5, 2]:=Row2.34;
Lamp[5, 3]:=Row3.34;
Lamp[5, 4]:=Row4.34;
Lamp[5, 5]:=Row5.34;
Lamp[5, 6]:=Row6.34;
Lamp[5, 7]:=Row7.34;
Lamp[6, 0]:=Row0.33;
Lamp[6, 1]:=Row1.33;
Lamp[6, 2]:=Row2.33;
Lamp[6, 3]:=Row3.33;
Lamp[6, 4]:=Row4.33;
Lamp[6, 5]:=Row5.33;
Lamp[6, 6]:=Row6.33;
Lamp[6, 7]:=Row7.33;
Lamp[7, 0]:=Row0.32;
Lamp[7, 1]:=Row1.32;
Lamp[7, 2]:=Row2.32;
Lamp[7, 3]:=Row3.32;
Lamp[7, 4]:=Row4.32;
Lamp[7, 5]:=Row5.32;
Lamp[7, 6]:=Row6.32;
Lamp[7, 7]:=Row7.32;
Lamp[8, 0]:=Row0.31;
Lamp[8, 1]:=Row1.31;
Lamp[8, 2]:=Row2.31;
Lamp[8, 3]:=Row3.31;
Lamp[8, 4]:=Row4.31;
Lamp[8, 5]:=Row5.31;
Lamp[8, 6]:=Row6.31;
Lamp[8, 7]:=Row7.31;
Lamp[9, 0]:=Row0.30;
Lamp[9, 1]:=Row1.30;
Lamp[9, 2]:=Row2.30;
Lamp[9, 3]:=Row3.30;
Lamp[9, 4]:=Row4.30;
Lamp[9, 5]:=Row5.30;
Lamp[9, 6]:=Row6.30;
Lamp[9, 7]:=Row7.30;
Lamp[10, 0]:=Row0.29;
Lamp[10, 1]:=Row1.29;
Lamp[10, 2]:=Row2.29;
Lamp[10, 3]:=Row3.29;
Lamp[10, 4]:=Row4.29;
Lamp[10, 5]:=Row5.29;
Lamp[10, 6]:=Row6.29;
Lamp[10, 7]:=Row7.29;
Lamp[11, 0]:=Row0.28;
Lamp[11, 1]:=Row1.28;
Lamp[11, 2]:=Row2.28;
Lamp[11, 3]:=Row3.28;
Lamp[11, 4]:=Row4.28;
Lamp[11, 5]:=Row5.28;
Lamp[11, 6]:=Row6.28;
Lamp[11, 7]:=Row7.28;
Lamp[12, 0]:=Row0.27;
Lamp[12, 1]:=Row1.27;
Lamp[12, 2]:=Row2.27;
Lamp[12, 3]:=Row3.27;
Lamp[12, 4]:=Row4.27;
Lamp[12, 5]:=Row5.27;
Lamp[12, 6]:=Row6.27;
Lamp[12, 7]:=Row7.27;
Lamp[13, 0]:=Row0.26;
Lamp[13, 1]:=Row1.26;
Lamp[13, 2]:=Row2.26;
Lamp[13, 3]:=Row3.26;
Lamp[13, 4]:=Row4.26;
Lamp[13, 5]:=Row5.26;
Lamp[13, 6]:=Row6.26;
Lamp[13, 7]:=Row7.26;
Lamp[14, 0]:=Row0.25;
Lamp[14, 1]:=Row1.25;
Lamp[14, 2]:=Row2.25;
Lamp[14, 3]:=Row3.25;
Lamp[14, 4]:=Row4.25;
Lamp[14, 5]:=Row5.25;
Lamp[14, 6]:=Row6.25;
Lamp[14, 7]:=Row7.25;
Lamp[15, 0]:=Row0.24;
Lamp[15, 1]:=Row1.24;
Lamp[15, 2]:=Row2.24;
Lamp[15, 3]:=Row3.24;
Lamp[15, 4]:=Row4.24;
Lamp[15, 5]:=Row5.24;
Lamp[15, 6]:=Row6.24;
Lamp[15, 7]:=Row7.24;
Lamp[16, 0]:=Row0.23;
Lamp[16, 1]:=Row1.23;
Lamp[16, 2]:=Row2.23;
Lamp[16, 3]:=Row3.23;
Lamp[16, 4]:=Row4.23;
Lamp[16, 5]:=Row5.23;
Lamp[16, 6]:=Row6.23;
Lamp[16, 7]:=Row7.23;
Lamp[17, 0]:=Row0.22;
Lamp[17, 1]:=Row1.22;
Lamp[17, 2]:=Row2.22;
Lamp[17, 3]:=Row3.22;
Lamp[17, 4]:=Row4.22;
Lamp[17, 5]:=Row5.22;
Lamp[17, 6]:=Row6.22;
Lamp[17, 7]:=Row7.22;
Lamp[18, 0]:=Row0.21;
Lamp[18, 1]:=Row1.21;
Lamp[18, 2]:=Row2.21;
Lamp[18, 3]:=Row3.21;
Lamp[18, 4]:=Row4.21;
Lamp[18, 5]:=Row5.21;
Lamp[18, 6]:=Row6.21;
Lamp[18, 7]:=Row7.21;
Lamp[19, 0]:=Row0.20;
Lamp[19, 1]:=Row1.20;
Lamp[19, 2]:=Row2.20;
Lamp[19, 3]:=Row3.20;
Lamp[19, 4]:=Row4.20;
Lamp[19, 5]:=Row5.20;
Lamp[19, 6]:=Row6.20;
Lamp[19, 7]:=Row7.20;
Lamp[20, 0]:=Row0.19;
Lamp[20, 1]:=Row1.19;
Lamp[20, 2]:=Row2.19;
Lamp[20, 3]:=Row3.19;
Lamp[20, 4]:=Row4.19;
Lamp[20, 5]:=Row5.19;
Lamp[20, 6]:=Row6.19;
Lamp[20, 7]:=Row7.19;
Lamp[21, 0]:=Row0.18;
Lamp[21, 1]:=Row1.18;
Lamp[21, 2]:=Row2.18;
Lamp[21, 3]:=Row3.18;
Lamp[21, 4]:=Row4.18;
Lamp[21, 5]:=Row5.18;
Lamp[21, 6]:=Row6.18;
Lamp[21, 7]:=Row7.18;
Lamp[22, 0]:=Row0.17;
Lamp[22, 1]:=Row1.17;
Lamp[22, 2]:=Row2.17;
Lamp[22, 3]:=Row3.17;
Lamp[22, 4]:=Row4.17;
Lamp[22, 5]:=Row5.17;
Lamp[22, 6]:=Row6.17;
Lamp[22, 7]:=Row7.17;
Lamp[23, 0]:=Row0.16;
Lamp[23, 1]:=Row1.16;
Lamp[23, 2]:=Row2.16;
Lamp[23, 3]:=Row3.16;
Lamp[23, 4]:=Row4.16;
Lamp[23, 5]:=Row5.16;
Lamp[23, 6]:=Row6.16;
Lamp[23, 7]:=Row7.16;
Lamp[24, 0]:=Row0.16;
Lamp[24, 1]:=Row1.15;
Lamp[24, 2]:=Row2.15;
Lamp[24, 3]:=Row3.15;
Lamp[24, 4]:=Row4.15;
Lamp[24, 5]:=Row5.15;
Lamp[24, 6]:=Row6.15;
Lamp[24, 7]:=Row7.15;
Lamp[25, 0]:=Row0.14;
Lamp[25, 1]:=Row1.14;
Lamp[25, 2]:=Row2.14;
Lamp[25, 3]:=Row3.14;
Lamp[25, 4]:=Row4.14;
Lamp[25, 5]:=Row5.14;
Lamp[25, 6]:=Row6.14;
Lamp[25, 7]:=Row7.14;
Lamp[26, 0]:=Row0.13;
Lamp[26, 1]:=Row1.13;
Lamp[26, 2]:=Row2.13;
Lamp[26, 3]:=Row3.13;
Lamp[26, 4]:=Row4.13;
Lamp[26, 5]:=Row5.13;
Lamp[26, 6]:=Row6.13;
Lamp[26, 7]:=Row7.13;
Lamp[27, 0]:=Row0.12;
Lamp[27, 1]:=Row1.12;
Lamp[27, 2]:=Row2.12;
Lamp[27, 3]:=Row3.12;
Lamp[27, 4]:=Row4.12;
Lamp[27, 5]:=Row5.12;
Lamp[27, 6]:=Row6.12;
Lamp[27, 7]:=Row7.12;
Lamp[28, 0]:=Row0.11;
Lamp[28, 1]:=Row1.11;
Lamp[28, 2]:=Row2.11;
Lamp[28, 3]:=Row3.11;
Lamp[28, 4]:=Row4.11;
Lamp[28, 5]:=Row5.11;
Lamp[28, 6]:=Row6.11;
Lamp[28, 7]:=Row7.11;
Lamp[29, 0]:=Row0.10;
Lamp[29, 1]:=Row1.10;
Lamp[29, 2]:=Row2.10;
Lamp[29, 3]:=Row3.10;
Lamp[29, 4]:=Row4.10;
Lamp[29, 5]:=Row5.10;
Lamp[29, 6]:=Row6.10;
Lamp[29, 7]:=Row7.10;
Lamp[30, 0]:=Row0.9;
Lamp[30, 1]:=Row1.9;
Lamp[30, 2]:=Row2.9;
Lamp[30, 3]:=Row3.9;
Lamp[30, 4]:=Row4.9;
Lamp[30, 5]:=Row5.9;
Lamp[30, 6]:=Row6.9;
Lamp[30, 7]:=Row7.9;
Lamp[31, 0]:=Row0.8;
Lamp[31, 1]:=Row1.8;
Lamp[31, 2]:=Row2.8;
Lamp[31, 3]:=Row3.8;
Lamp[31, 4]:=Row4.8;
Lamp[31, 5]:=Row5.8;
Lamp[31, 6]:=Row6.8;
Lamp[31, 7]:=Row7.8;
Lamp[32, 0]:=Row0.7;
Lamp[32, 1]:=Row1.7;
Lamp[32, 2]:=Row2.7;
Lamp[32, 3]:=Row3.7;
Lamp[32, 4]:=Row4.7;
Lamp[32, 5]:=Row5.7;
Lamp[32, 6]:=Row6.7;
Lamp[32, 7]:=Row7.7;
Lamp[33, 0]:=Row0.6;
Lamp[33, 1]:=Row1.6;
Lamp[33, 2]:=Row2.6;
Lamp[33, 3]:=Row3.6;
Lamp[33, 4]:=Row4.6;
Lamp[33, 5]:=Row5.6;
Lamp[33, 6]:=Row6.6;
Lamp[33, 7]:=Row7.6;
Lamp[34, 0]:=Row0.5;
Lamp[34, 1]:=Row1.5;
Lamp[34, 2]:=Row2.5;
Lamp[34, 3]:=Row3.5;
Lamp[34, 4]:=Row4.5;
Lamp[34, 5]:=Row5.5;
Lamp[34, 6]:=Row6.5;
Lamp[34, 7]:=Row7.5;
Lamp[35, 0]:=Row0.4;
Lamp[35, 1]:=Row1.4;
Lamp[35, 2]:=Row2.4;
Lamp[35, 3]:=Row3.4;
Lamp[35, 4]:=Row4.4;
Lamp[35, 5]:=Row5.4;
Lamp[35, 6]:=Row6.4;
Lamp[35, 7]:=Row7.4;
Lamp[36, 0]:=Row0.3;
Lamp[36, 1]:=Row1.3;
Lamp[36, 2]:=Row2.3;
Lamp[36, 3]:=Row3.3;
Lamp[36, 4]:=Row4.3;
Lamp[36, 5]:=Row5.3;
Lamp[36, 6]:=Row6.3;
Lamp[36, 7]:=Row7.3;
Lamp[37, 0]:=Row0.2;
Lamp[37, 1]:=Row1.2;
Lamp[37, 2]:=Row2.2;
Lamp[37, 3]:=Row3.2;
Lamp[37, 4]:=Row4.2;
Lamp[37, 5]:=Row5.2;
Lamp[37, 6]:=Row6.2;
Lamp[37, 7]:=Row7.2;
Lamp[38, 0]:=Row0.1;
Lamp[38, 1]:=Row1.1;
Lamp[38, 2]:=Row2.1;
Lamp[38, 3]:=Row3.1;
Lamp[38, 4]:=Row4.1;
Lamp[38, 5]:=Row5.1;
Lamp[38, 6]:=Row6.1;
Lamp[38, 7]:=Row7.1;
Lamp[39, 0]:=Row0.0;
Lamp[39, 1]:=Row1.0;
Lamp[39, 2]:=Row2.0;
Lamp[39, 3]:=Row3.0;
Lamp[39, 4]:=Row4.0;
Lamp[39, 5]:=Row5.0;
Lamp[39, 6]:=Row6.0;
Lamp[39, 7]:=Row7.0;

</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>963a9665-e31d-443f-a029-4b389fb56250</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="ShiftArray" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="DataArray">
              <type>
                <array>
                  <dimension lower="0" upper="31" />
                  <baseType>
                    <DINT />
                  </baseType>
                </array>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 32 bit array of dints that will be shifted </xhtml>
              </documentation>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="ShiftLeft">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Shifting left by one index. Trigger based </xhtml>
              </documentation>
            </variable>
            <variable name="ShiftRight">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Shifting right by one index. Trigger based </xhtml>
              </documentation>
            </variable>
            <variable name="Value">
              <type>
                <DINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Value to be inserted </xhtml>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="ShiftLeftTrig">
              <type>
                <derived name="R_TRIG" />
              </type>
            </variable>
            <variable name="ShiftRightTrig">
              <type>
                <derived name="R_TRIG" />
              </type>
            </variable>
            <variable name="i">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">ShiftLeftTrig(CLK:=ShiftLeft);
ShiftRightTrig(CLK:=ShiftRight);

IF ShiftRightTrig.Q THEN
	FOR i := 31 TO 1 BY -1 DO
		DataArray[i]:= DataArray[i-1];
	END_FOR;
	DataArray[0]:= Value;
ELSIF ShiftLeftTrig.Q THEN
	FOR i := 0 TO 30 BY 1 DO
		DataArray[i]:= DataArray[i+1];
	END_FOR;
	DataArray[31]:= Value;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e85c3188-3f87-4883-a53c-302082425315</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="ShiftPOU" pouType="program">
        <interface>
          <localVars>
            <variable name="ShiftArray">
              <type>
                <derived name="ShiftArray" />
              </type>
            </variable>
            <variable name="SomeArray">
              <type>
                <array>
                  <dimension lower="0" upper="31" />
                  <baseType>
                    <DINT />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="vShiftLeft">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="vShiftRight">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="vValue">
              <type>
                <DINT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
ShiftArray(
	DataArray:= SomeArray,
	ShiftLeft:= vShiftLeft,
	ShiftRight:= vShiftRight,
	Value := vValue);
	
	</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>6d00b0bb-951b-4d70-baa4-605147281a36</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="POU" pouType="program">
        <interface>
          <localVars>
            <variable name="vStartGame">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="PushButtonStart">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Candidate1Lamp">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Candidate2Lamp">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Candidate3Lamp">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="PushButtonReset">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="TimeOut">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="GameTime">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="IN">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="PT">
              <type>
                <INT />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">// vStartGame := (Task02GVL.PushButtonStart OR vStartGame)
// 		 AND NOT Task02GVL.Candidate1Lamp
// 		 AND NOT Task02GVL.Candidate2Lamp
// 		 AND NOT Task02GVL.Candidate3Lamp
// 		 AND NOT Task02GVL.PushButtonReset;
// 
// TimeOut(IN:=vStartGame,PT:=Task02GVL.GameTime);
// Task02GVL.Buzzer := TimeOut.Q;
// 
// IF vStartGame THEN
// Task02GVL.Candidate1Lamp := (Task02GVL.Candidate1PushButton OR Task02GVL.Candidate1Lamp) AND NOT TimeOut.Q;
// Task02GVL.Candidate2Lamp := (Task02GVL.Candidate2PushButton OR Task02GVL.Candidate2Lamp) AND NOT TimeOut.Q;
// Task02GVL.Candidate3Lamp := (Task02GVL.Candidate3PushButton OR Task02GVL.Candidate3Lamp) AND NOT TimeOut.Q;
// END_IF;
// 
// IF Task02GVL.Candidate1Lamp THEN
// 	Task02GVL.Candidate2Lamp:=FALSE;
// 	Task02GVL.Candidate3Lamp:=FALSE;
// ELSIF Task02GVL.Candidate2Lamp THEN
// 	Task02GVL.Candidate3Lamp:=FALSE;
// 	Task02GVL.Candidate1Lamp:=FALSE;
// ELSIF Task02GVL.Candidate3Lamp THEN
// 	Task02GVL.Candidate2Lamp:=FALSE;
// 	Task02GVL.Candidate1Lamp:=FALSE;	
// END_IF
// 
// IF Task02GVL.PushButtonReset THEN
// 	Task02GVL.Candidate1Lamp:=FALSE;
// 	Task02GVL.Candidate2Lamp:=FALSE;
// 	Task02GVL.Candidate3Lamp:=FALSE;
// END_IF
// 
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b5254b6c-8806-4ee6-8485-7012155be54a</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Zadatak4" pouType="program">
        <interface>
          <localVars>
            <variable name="M3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Start_Desno">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Start_Lijevo">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="STOP">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="SklopkaPreopterecenja">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="M3_Lijevo">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="M3_Desno">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Cooling">
              <type>
                <derived name="TOF" />
              </type>
            </variable>
            <variable name="StreliceLijevoInv">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="StreliceDesnoInv">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Zadatak 4.
Promena smera obrtanja trofaznog asinhronog motora izvodi se promenom redosleda faza napona
napajanja motora. Upravljanje motorom izvodi se tasterima "START-DESNO", "START-LEVO" i "STOP".
Motor se sem toga štiti i od preopterećenja motornom zaštitnom sklopkom.
Razraditi rešenje kašnjenja sa PLC kontrolerom.*)

M3_Lijevo:=(M3_Lijevo OR Start_Lijevo) AND NOT M3_Desno AND NOT STOP AND NOT SklopkaPreopterecenja AND NOT Cooling.Q;
M3_Desno:=(M3_Desno OR Start_Desno) AND NOT M3_Lijevo AND NOT STOP AND NOT SklopkaPreopterecenja AND NOT Cooling.Q;

M3:= M3_Lijevo OR M3_Desno; (*Ovo je samo simulirani motor jer nemamo pravi*)
Cooling(IN:=Stop, PT:=T#5S);
StreliceLijevoInv:=M3_Desno OR (NOT M3_Desno AND NOT M3_Lijevo);
StreliceDesnoInv:=M3_Lijevo OR (NOT M3_Desno AND NOT M3_Lijevo);
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>acabf99f-9949-4167-a32e-804426fcd702</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Zadatak5" pouType="program">
        <interface>
          <localVars>
            <variable name="Lamp">
              <type>
                <array>
                  <dimension lower="0" upper="39" />
                  <dimension lower="0" upper="7" />
                  <baseType>
                    <BOOL />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="dword0">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="dword1">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="dword2">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="dword3">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="dword4">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="dword5">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="dword6">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="dword7">
              <type>
                <LINT />
              </type>
            </variable>
            <variable name="Timer">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="vSequence">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Start">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="STOP">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Slovo S= 0x7f,0x7f,0x60,0x7f,0x7f,0x3,0x7f,0x7f  *)
(*Slovo C= 0x7f,0x7f,0x60,0x60,0x60,0x60,0x7f,0x7f  *)
(*Slovo A= 0x7f,0x7f,0x63,0x63,0x7f,0x7f,0x63,0x63  *)
(*Slovo D= 0x7c,0x7e,0x63,0x63,0x63,0x63,0x7e,0x7c  *)
(*Slovo A= 0x7f,0x7f,0x63,0x63,0x7f,0x7f,0x63,0x63 *)

(*Svijetleća reklama pali se sekvencijalno po slijedećoj šemi:
" ", "S", "C", "A", "D", "A", "SCADA".
Trajanje svakog dijela sekvence traje pet sekundi, odnosno ukupno trideset pet sekundi, poslije čega se
sekvenca automatski ponavlja. Komande za upravljanje svijetlećom reklamom ostvaruju se komandnim tasterima
"START" i "STOP". Paljenje segmenata svijetleće reklame izvedeno je relejnim kontaktima.
Razraditi prijedlog za realizaciju datog upravljačkog zadatka primjenom PLC uređaja.*)

IF STOP THEN
	vSequence:=0;
END_IF

CASE vSequence OF
	0: 	Timer(IN:=TRUE,PT:=T#1S);
		dword0:=16#0;
		dword1:=16#0;
		dword2:=16#0;
		dword3:=16#0;
		dword4:=16#0;
		dword5:=16#0;
		dword6:=16#0;
		dword7:=16#0;
		
		IF Start  AND NOT Stop AND Timer.Q THEN
			Timer(IN:=FALSE);
			vSequence:=1;
		END_IF
		
	1:	Timer(IN:=TRUE,PT:=T#5S);
		dword0:=16#7F;
		dword1:=16#7F;
		dword2:=16#60;
		dword3:=16#7F;
		dword4:=16#7F;
		dword5:=16#3;
		dword6:=16#7F;
		dword7:=16#7F;
		IF Timer.Q THEN
			Timer(IN:=FALSE);
			vSequence:=2;
		END_IF
		
	2: Timer(IN:=TRUE,PT:=T#5S);
		dword0:=16#7F7F;
		dword1:=16#7F7F;
		dword2:=16#6060;
		dword3:=16#7F60;
		dword4:=16#7F60;
		dword5:=16#360;
		dword6:=16#7F7F;
		dword7:=16#7F7F;
		IF Timer.Q THEN
			Timer(IN:=FALSE);
			vSequence:=3;
		END_IF
		
	3: Timer(IN:=TRUE,PT:=T#5S);
		dword0:=16#7F7F7F;
		dword1:=16#7F7F7F;
		dword2:=16#606063;
		dword3:=16#7F6063;
		dword4:=16#7F607F;
		dword5:=16#3607F;
		dword6:=16#7F7F63;
		dword7:=16#7F7F63;
		IF Timer.Q THEN
			Timer(IN:=FALSE);
			vSequence:=4;
		END_IF
		
	4: Timer(IN:=TRUE,PT:=T#5S);
		dword0:=16#7F7F7F7C;
		dword1:=16#7F7F7F7E;
		dword2:=16#60606363;
		dword3:=16#7F606363;
		dword4:=16#7F607F63;
		dword5:=16#3607F63;
		dword6:=16#7F7F637E;
		dword7:=16#7F7F637C;
		IF Timer.Q THEN
			Timer(IN:=FALSE);
			vSequence:=5;
		END_IF
		
	5: Timer(IN:=TRUE,PT:=T#5S);
		dword0:=16#7F7F7F7C7F;
		dword1:=16#7F7F7F7E7F;
		dword2:=16#6060636363;
		dword3:=16#7F60636363;
		dword4:=16#7F607F637F;
		dword5:=16#3607F637F;
		dword6:=16#7F7F637E63;
		dword7:=16#7F7F637C63;
		IF Timer.Q THEN
			Timer(IN:=FALSE);
			vSequence:=0;
		END_IF
END_CASE

(*Lamp system 40x7*)
Lamp[0, 0]:=dword0.39;
Lamp[0, 1]:=dword1.39;
Lamp[0, 2]:=dword2.39;
Lamp[0, 3]:=dword3.39;
Lamp[0, 4]:=dword4.39;
Lamp[0, 5]:=dword5.39;
Lamp[0, 6]:=dword6.39;
Lamp[0, 7]:=dword7.39;
Lamp[1, 0]:=dword0.38;
Lamp[1, 1]:=dword1.38;
Lamp[1, 2]:=dword2.38;
Lamp[1, 3]:=dword3.38;
Lamp[1, 4]:=dword4.38;
Lamp[1, 5]:=dword5.38;
Lamp[1, 6]:=dword6.38;
Lamp[1, 7]:=dword7.38;
Lamp[2, 0]:=dword0.37;
Lamp[2, 1]:=dword1.37;
Lamp[2, 2]:=dword2.37;
Lamp[2, 3]:=dword3.37;
Lamp[2, 4]:=dword4.37;
Lamp[2, 5]:=dword5.37;
Lamp[2, 6]:=dword6.37;
Lamp[2, 7]:=dword7.37;
Lamp[3, 0]:=dword0.36;
Lamp[3, 1]:=dword1.36;
Lamp[3, 2]:=dword2.36;
Lamp[3, 3]:=dword3.36;
Lamp[3, 4]:=dword4.36;
Lamp[3, 5]:=dword5.36;
Lamp[3, 6]:=dword6.36;
Lamp[3, 7]:=dword7.36;
Lamp[4, 0]:=dword0.35;
Lamp[4, 1]:=dword1.35;
Lamp[4, 2]:=dword2.35;
Lamp[4, 3]:=dword3.35;
Lamp[4, 4]:=dword4.35;
Lamp[4, 5]:=dword5.35;
Lamp[4, 6]:=dword6.35;
Lamp[4, 7]:=dword7.35;
Lamp[5, 0]:=dword0.34;
Lamp[5, 1]:=dword1.34;
Lamp[5, 2]:=dword2.34;
Lamp[5, 3]:=dword3.34;
Lamp[5, 4]:=dword4.34;
Lamp[5, 5]:=dword5.34;
Lamp[5, 6]:=dword6.34;
Lamp[5, 7]:=dword7.34;
Lamp[6, 0]:=dword0.33;
Lamp[6, 1]:=dword1.33;
Lamp[6, 2]:=dword2.33;
Lamp[6, 3]:=dword3.33;
Lamp[6, 4]:=dword4.33;
Lamp[6, 5]:=dword5.33;
Lamp[6, 6]:=dword6.33;
Lamp[6, 7]:=dword7.33;
Lamp[7, 0]:=dword0.32;
Lamp[7, 1]:=dword1.32;
Lamp[7, 2]:=dword2.32;
Lamp[7, 3]:=dword3.32;
Lamp[7, 4]:=dword4.32;
Lamp[7, 5]:=dword5.32;
Lamp[7, 6]:=dword6.32;
Lamp[7, 7]:=dword7.32;
Lamp[8, 0]:=dword0.31;
Lamp[8, 1]:=dword1.31;
Lamp[8, 2]:=dword2.31;
Lamp[8, 3]:=dword3.31;
Lamp[8, 4]:=dword4.31;
Lamp[8, 5]:=dword5.31;
Lamp[8, 6]:=dword6.31;
Lamp[8, 7]:=dword7.31;
Lamp[9, 0]:=dword0.30;
Lamp[9, 1]:=dword1.30;
Lamp[9, 2]:=dword2.30;
Lamp[9, 3]:=dword3.30;
Lamp[9, 4]:=dword4.30;
Lamp[9, 5]:=dword5.30;
Lamp[9, 6]:=dword6.30;
Lamp[9, 7]:=dword7.30;
Lamp[10, 0]:=dword0.29;
Lamp[10, 1]:=dword1.29;
Lamp[10, 2]:=dword2.29;
Lamp[10, 3]:=dword3.29;
Lamp[10, 4]:=dword4.29;
Lamp[10, 5]:=dword5.29;
Lamp[10, 6]:=dword6.29;
Lamp[10, 7]:=dword7.29;
Lamp[11, 0]:=dword0.28;
Lamp[11, 1]:=dword1.28;
Lamp[11, 2]:=dword2.28;
Lamp[11, 3]:=dword3.28;
Lamp[11, 4]:=dword4.28;
Lamp[11, 5]:=dword5.28;
Lamp[11, 6]:=dword6.28;
Lamp[11, 7]:=dword7.28;
Lamp[12, 0]:=dword0.27;
Lamp[12, 1]:=dword1.27;
Lamp[12, 2]:=dword2.27;
Lamp[12, 3]:=dword3.27;
Lamp[12, 4]:=dword4.27;
Lamp[12, 5]:=dword5.27;
Lamp[12, 6]:=dword6.27;
Lamp[12, 7]:=dword7.27;
Lamp[13, 0]:=dword0.26;
Lamp[13, 1]:=dword1.26;
Lamp[13, 2]:=dword2.26;
Lamp[13, 3]:=dword3.26;
Lamp[13, 4]:=dword4.26;
Lamp[13, 5]:=dword5.26;
Lamp[13, 6]:=dword6.26;
Lamp[13, 7]:=dword7.26;
Lamp[14, 0]:=dword0.25;
Lamp[14, 1]:=dword1.25;
Lamp[14, 2]:=dword2.25;
Lamp[14, 3]:=dword3.25;
Lamp[14, 4]:=dword4.25;
Lamp[14, 5]:=dword5.25;
Lamp[14, 6]:=dword6.25;
Lamp[14, 7]:=dword7.25;
Lamp[15, 0]:=dword0.24;
Lamp[15, 1]:=dword1.24;
Lamp[15, 2]:=dword2.24;
Lamp[15, 3]:=dword3.24;
Lamp[15, 4]:=dword4.24;
Lamp[15, 5]:=dword5.24;
Lamp[15, 6]:=dword6.24;
Lamp[15, 7]:=dword7.24;
Lamp[16, 0]:=dword0.23;
Lamp[16, 1]:=dword1.23;
Lamp[16, 2]:=dword2.23;
Lamp[16, 3]:=dword3.23;
Lamp[16, 4]:=dword4.23;
Lamp[16, 5]:=dword5.23;
Lamp[16, 6]:=dword6.23;
Lamp[16, 7]:=dword7.23;
Lamp[17, 0]:=dword0.22;
Lamp[17, 1]:=dword1.22;
Lamp[17, 2]:=dword2.22;
Lamp[17, 3]:=dword3.22;
Lamp[17, 4]:=dword4.22;
Lamp[17, 5]:=dword5.22;
Lamp[17, 6]:=dword6.22;
Lamp[17, 7]:=dword7.22;
Lamp[18, 0]:=dword0.21;
Lamp[18, 1]:=dword1.21;
Lamp[18, 2]:=dword2.21;
Lamp[18, 3]:=dword3.21;
Lamp[18, 4]:=dword4.21;
Lamp[18, 5]:=dword5.21;
Lamp[18, 6]:=dword6.21;
Lamp[18, 7]:=dword7.21;
Lamp[19, 0]:=dword0.20;
Lamp[19, 1]:=dword1.20;
Lamp[19, 2]:=dword2.20;
Lamp[19, 3]:=dword3.20;
Lamp[19, 4]:=dword4.20;
Lamp[19, 5]:=dword5.20;
Lamp[19, 6]:=dword6.20;
Lamp[19, 7]:=dword7.20;
Lamp[20, 0]:=dword0.19;
Lamp[20, 1]:=dword1.19;
Lamp[20, 2]:=dword2.19;
Lamp[20, 3]:=dword3.19;
Lamp[20, 4]:=dword4.19;
Lamp[20, 5]:=dword5.19;
Lamp[20, 6]:=dword6.19;
Lamp[20, 7]:=dword7.19;
Lamp[21, 0]:=dword0.18;
Lamp[21, 1]:=dword1.18;
Lamp[21, 2]:=dword2.18;
Lamp[21, 3]:=dword3.18;
Lamp[21, 4]:=dword4.18;
Lamp[21, 5]:=dword5.18;
Lamp[21, 6]:=dword6.18;
Lamp[21, 7]:=dword7.18;
Lamp[22, 0]:=dword0.17;
Lamp[22, 1]:=dword1.17;
Lamp[22, 2]:=dword2.17;
Lamp[22, 3]:=dword3.17;
Lamp[22, 4]:=dword4.17;
Lamp[22, 5]:=dword5.17;
Lamp[22, 6]:=dword6.17;
Lamp[22, 7]:=dword7.17;
Lamp[23, 0]:=dword0.16;
Lamp[23, 1]:=dword1.16;
Lamp[23, 2]:=dword2.16;
Lamp[23, 3]:=dword3.16;
Lamp[23, 4]:=dword4.16;
Lamp[23, 5]:=dword5.16;
Lamp[23, 6]:=dword6.16;
Lamp[23, 7]:=dword7.16;
Lamp[24, 0]:=dword0.16;
Lamp[24, 1]:=dword1.15;
Lamp[24, 2]:=dword2.15;
Lamp[24, 3]:=dword3.15;
Lamp[24, 4]:=dword4.15;
Lamp[24, 5]:=dword5.15;
Lamp[24, 6]:=dword6.15;
Lamp[24, 7]:=dword7.15;
Lamp[25, 0]:=dword0.14;
Lamp[25, 1]:=dword1.14;
Lamp[25, 2]:=dword2.14;
Lamp[25, 3]:=dword3.14;
Lamp[25, 4]:=dword4.14;
Lamp[25, 5]:=dword5.14;
Lamp[25, 6]:=dword6.14;
Lamp[25, 7]:=dword7.14;
Lamp[26, 0]:=dword0.13;
Lamp[26, 1]:=dword1.13;
Lamp[26, 2]:=dword2.13;
Lamp[26, 3]:=dword3.13;
Lamp[26, 4]:=dword4.13;
Lamp[26, 5]:=dword5.13;
Lamp[26, 6]:=dword6.13;
Lamp[26, 7]:=dword7.13;
Lamp[27, 0]:=dword0.12;
Lamp[27, 1]:=dword1.12;
Lamp[27, 2]:=dword2.12;
Lamp[27, 3]:=dword3.12;
Lamp[27, 4]:=dword4.12;
Lamp[27, 5]:=dword5.12;
Lamp[27, 6]:=dword6.12;
Lamp[27, 7]:=dword7.12;
Lamp[28, 0]:=dword0.11;
Lamp[28, 1]:=dword1.11;
Lamp[28, 2]:=dword2.11;
Lamp[28, 3]:=dword3.11;
Lamp[28, 4]:=dword4.11;
Lamp[28, 5]:=dword5.11;
Lamp[28, 6]:=dword6.11;
Lamp[28, 7]:=dword7.11;
Lamp[29, 0]:=dword0.10;
Lamp[29, 1]:=dword1.10;
Lamp[29, 2]:=dword2.10;
Lamp[29, 3]:=dword3.10;
Lamp[29, 4]:=dword4.10;
Lamp[29, 5]:=dword5.10;
Lamp[29, 6]:=dword6.10;
Lamp[29, 7]:=dword7.10;
Lamp[30, 0]:=dword0.9;
Lamp[30, 1]:=dword1.9;
Lamp[30, 2]:=dword2.9;
Lamp[30, 3]:=dword3.9;
Lamp[30, 4]:=dword4.9;
Lamp[30, 5]:=dword5.9;
Lamp[30, 6]:=dword6.9;
Lamp[30, 7]:=dword7.9;
Lamp[31, 0]:=dword0.8;
Lamp[31, 1]:=dword1.8;
Lamp[31, 2]:=dword2.8;
Lamp[31, 3]:=dword3.8;
Lamp[31, 4]:=dword4.8;
Lamp[31, 5]:=dword5.8;
Lamp[31, 6]:=dword6.8;
Lamp[31, 7]:=dword7.8;
Lamp[32, 0]:=dword0.7;
Lamp[32, 1]:=dword1.7;
Lamp[32, 2]:=dword2.7;
Lamp[32, 3]:=dword3.7;
Lamp[32, 4]:=dword4.7;
Lamp[32, 5]:=dword5.7;
Lamp[32, 6]:=dword6.7;
Lamp[32, 7]:=dword7.7;
Lamp[33, 0]:=dword0.6;
Lamp[33, 1]:=dword1.6;
Lamp[33, 2]:=dword2.6;
Lamp[33, 3]:=dword3.6;
Lamp[33, 4]:=dword4.6;
Lamp[33, 5]:=dword5.6;
Lamp[33, 6]:=dword6.6;
Lamp[33, 7]:=dword7.6;
Lamp[34, 0]:=dword0.5;
Lamp[34, 1]:=dword1.5;
Lamp[34, 2]:=dword2.5;
Lamp[34, 3]:=dword3.5;
Lamp[34, 4]:=dword4.5;
Lamp[34, 5]:=dword5.5;
Lamp[34, 6]:=dword6.5;
Lamp[34, 7]:=dword7.5;
Lamp[35, 0]:=dword0.4;
Lamp[35, 1]:=dword1.4;
Lamp[35, 2]:=dword2.4;
Lamp[35, 3]:=dword3.4;
Lamp[35, 4]:=dword4.4;
Lamp[35, 5]:=dword5.4;
Lamp[35, 6]:=dword6.4;
Lamp[35, 7]:=dword7.4;
Lamp[36, 0]:=dword0.3;
Lamp[36, 1]:=dword1.3;
Lamp[36, 2]:=dword2.3;
Lamp[36, 3]:=dword3.3;
Lamp[36, 4]:=dword4.3;
Lamp[36, 5]:=dword5.3;
Lamp[36, 6]:=dword6.3;
Lamp[36, 7]:=dword7.3;
Lamp[37, 0]:=dword0.2;
Lamp[37, 1]:=dword1.2;
Lamp[37, 2]:=dword2.2;
Lamp[37, 3]:=dword3.2;
Lamp[37, 4]:=dword4.2;
Lamp[37, 5]:=dword5.2;
Lamp[37, 6]:=dword6.2;
Lamp[37, 7]:=dword7.2;
Lamp[38, 0]:=dword0.1;
Lamp[38, 1]:=dword1.1;
Lamp[38, 2]:=dword2.1;
Lamp[38, 3]:=dword3.1;
Lamp[38, 4]:=dword4.1;
Lamp[38, 5]:=dword5.1;
Lamp[38, 6]:=dword6.1;
Lamp[38, 7]:=dword7.1;
Lamp[39, 0]:=dword0.0;
Lamp[39, 1]:=dword1.0;
Lamp[39, 2]:=dword2.0;
Lamp[39, 3]:=dword3.0;
Lamp[39, 4]:=dword4.0;
Lamp[39, 5]:=dword5.0;
Lamp[39, 6]:=dword6.0;
Lamp[39, 7]:=dword7.0;

</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>80181576-bdb6-452a-9454-5eaaa26e5e88</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Tank_Model" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="cfgTaskCycle">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Task cycle of the POU this model is running in miliseconds</xhtml>
              </documentation>
            </variable>
            <variable name="cfgLenght">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Lenght of the tank in meters </xhtml>
              </documentation>
            </variable>
            <variable name="cfgWidth">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Width of the tank in meters </xhtml>
              </documentation>
            </variable>
            <variable name="cfgHeight">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Height of the tank in meters </xhtml>
              </documentation>
            </variable>
            <variable name="cfgStartLevel">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Starting level of the tank in m~3 </xhtml>
              </documentation>
            </variable>
            <variable name="cfgFSHH">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="95" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Float switch high high level in percentages of the volume of the tank </xhtml>
              </documentation>
            </variable>
            <variable name="cfgFSH">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="80" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Float switch  high level in percentages of the volume of the tank </xhtml>
              </documentation>
            </variable>
            <variable name="cfgFSL">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="20" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Float switch  low level in percentages of the volume of the tank </xhtml>
              </documentation>
            </variable>
            <variable name="cfgFSLL">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="5" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Float switch  low low level in percentages of the volume of the tank </xhtml>
              </documentation>
            </variable>
            <variable name="Inflow1">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Inflow, slot 1 to the tank in cubic meters per hour </xhtml>
              </documentation>
            </variable>
            <variable name="Inflow2">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Inflow, slot 2 to the tank in cubic meters per hour </xhtml>
              </documentation>
            </variable>
            <variable name="Inflow3">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Inflow, slot 3 to the tank in cubic meters per hour </xhtml>
              </documentation>
            </variable>
            <variable name="Inflow4">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Inflow, slot 4 to the tank in cubic meters per hour </xhtml>
              </documentation>
            </variable>
            <variable name="Inflow5">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Inflow, slot 5 to the tank in cubic meters per hour </xhtml>
              </documentation>
            </variable>
            <variable name="Outflow1">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Outflow, slot 1 to the tank in cubic meters per hour </xhtml>
              </documentation>
            </variable>
            <variable name="Outflow2">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Outflow, slot 2 to the tank in cubic meters per hour </xhtml>
              </documentation>
            </variable>
            <variable name="Outflow3">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Outflow, slot 3 to the tank in cubic meters per hour </xhtml>
              </documentation>
            </variable>
            <variable name="Outflow4">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Outflow, slot 4 to the tank in cubic meters per hour </xhtml>
              </documentation>
            </variable>
            <variable name="Outflow5">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Outflow, slot 5 to the tank in cubic meters per hour </xhtml>
              </documentation>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="TankLevel_cbm">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Tank level in cubic meters </xhtml>
              </documentation>
            </variable>
            <variable name="TankLevel_pc">
              <type>
                <REAL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Tank level in percentages </xhtml>
              </documentation>
            </variable>
            <variable name="FSHHActive">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Floating switch High high level active </xhtml>
              </documentation>
            </variable>
            <variable name="FSHActive">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Floating switch High level active </xhtml>
              </documentation>
            </variable>
            <variable name="FSLActive">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Floating switch Low level active </xhtml>
              </documentation>
            </variable>
            <variable name="FSLLActive">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Floating switch Low low level active </xhtml>
              </documentation>
            </variable>
          </outputVars>
          <localVars>
            <variable name="vNominalVolume">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="vInflowTotal">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="vOutflowTotal">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="vDeltaTime">
              <type>
                <REAL />
              </type>
            </variable>
          </localVars>
          <localVars retain="true">
            <variable name="vColdRestart">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF NOT vColdRestart THEN
	TankLevel_cbm := cfgStartLevel;
	vColdRestart := TRUE;
END_IF

vNominalVolume := cfgLenght * cfgWidth * cfgHeight;

vInflowTotal := Inflow1 + Inflow2 + Inflow3 + Inflow4 + Inflow5;

vOutflowTotal := Outflow1 + Outflow2 + Outflow3 + Outflow4 + Outflow5;

(* Task cycle speed increase will lower the speed of TankLevel filling *)
vDeltaTime := cfgTaskCycle/DINT_TO_REAL(3600 * 1000);

(* Tank level calculation, independent of task execution cycle *)
TankLevel_cbm :=LIMIT(0,TankLevel_cbm + (vInflowTotal - vOutflowTotal) * vDeltaTime, vNominalVolume);

TankLevel_pc := (TankLevel_cbm / vNominalVolume) * 100;

(* Limit switch handling *)
FSHHActive := TankLevel_pc &gt;= cfgFSHH;
FSHActive := TankLevel_pc &gt;= cfgFSH;
FSLActive := TankLevel_pc &lt;= cfgFSL;
FSLLActive := TankLevel_pc &lt;= cfgFSLL;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ddc61a00-3778-4b50-8361-25581b367426</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TankControl" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="TankLevel_pc">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="LevelRef">
              <type>
                <REAL />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Drain">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Fill">
              <type>
                <BOOL />
              </type>
            </variable>
          </outputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF LevelRef &gt; TankLevel_pc + 2 THEN
	Fill := TRUE;
	Drain := FALSE;
ELSIF LevelRef &lt; TankLevel_pc THEN
	Fill := FALSE;
	Drain := TRUE;
ELSE
	Fill:= FALSE;
	Drain:= FALSE;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>f62bed87-80ae-4dc4-888e-c2a34b811c2c</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="MixingTank" pouType="program">
        <interface>
          <localVars>
            <variable name="vSystemState">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="vSequenceStarted">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="vDrainingSequence">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="SR">
              <type>
                <derived name="SR" />
              </type>
            </variable>
            <variable name="NewSeqTimer">
              <type>
                <derived name="TON" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Logic part *)
(* Control the start and stop of the sequence *)
SR(Set1 := MixingTankGVL.PushButtonStart, Reset := MixingTankGVL.PushButtonStop, Q1 =&gt; vSequenceStarted);

(* If the tank is empty reset the DrainingSequence indication*)
IF MixingTankGVL.TankLevel &lt;=0 THEN
	NewSeqTimer(IN:=TRUE, PT:=T#5S);
	IF NewSeqTimer.Q THEN
		vDrainingSequence := FALSE;
		NewSeqTimer(IN:=FALSE);
	END_IF
END_IF

//Use Tank level value to remember case machine state
IF vSequenceStarted THEN
	IF MixingTankGVL.TankLevel &gt;= 0 AND MixingTankGVL.TankLevel &lt;= 33 AND NOT vDrainingSequence THEN
		vSystemState := 0;
	END_IF
	
	IF MixingTankGVL.TankLevel &gt;= 33 AND MixingTankGVL.TankLevel &lt;= 66 AND NOT vDrainingSequence THEN
		vSystemState := 1;
	END_IF
	
	IF MixingTankGVL.TankLevel &gt;= 66 AND MixingTankGVL.TankLevel &lt; 95 AND NOT vDrainingSequence THEN
		vSystemState := 2;
	END_IF
	
	IF MixingTankGVL.TankLevel &gt; 95 OR vDrainingSequence THEN
		vSystemState := 3;
	END_IF
ELSE
	vSystemState := 99;
END_IF


//Define the states logic
CASE vSystemState OF
	//First state. System below 33%
	0:
	MixingTankGVL.Pump1StartCmd := NOT MixingTankGVL.Pump1Running; //Start command pump 1 active until it starts
	MixingTankGVL.DrainValveCloseCmd := NOT MixingTankGVL.DrainValveClosed; //Close drain valve command active until it closes
	
	//Second state. System above 33%
	1:
	MixingTankGVL.Pump1StopCmd := MixingTankGVL.Pump1Running; //Stop command pump 1 active until it stops
	MixingTankGVL.Pump2StartCmd := NOT MixingTankGVL.Pump2Running; //Start command pump 2 active until it starts
	MixingTankGVL.DrainValveCloseCmd := NOT MixingTankGVL.DrainValveClosed; //Close drain valve command active until it closes
	
	//Third state. System above 66%
	2:
	MixingTankGVL.Pump2StopCmd := MixingTankGVL.Pump2Running; //Stop command pump 2 active until it stops
	MixingTankGVL.Pump1StartCmd := NOT MixingTankGVL.Pump1Running; //Start command pump 1 active until it starts
	MixingTankGVL.DrainValveCloseCmd := NOT MixingTankGVL.DrainValveClosed; //Close drain valve command active until it closes
	
	//Fourth state. System ready for draining
	3:
	vDrainingSequence := TRUE; //Draining sequence flag we set to true
	MixingTankGVL.Pump1StopCmd := MixingTankGVL.Pump1Running; //Stop command pump 1 active until it stops
	MixingTankGVL.Pump2StopCmd := MixingTankGVL.Pump2Running; //Stop command pump 2 active until it stops
	MixingTankGVL.DrainValveOpenCmd := NOT MixingTankGVL.DrainValveOpened; //Open drain valve command active until it opens
	
	//Sequence stopped state
	99:
	MixingTankGVL.Pump1StopCmd := MixingTankGVL.Pump1Running;
	MixingTankGVL.Pump2StopCmd := MixingTankGVL.Pump2Running;
	MixingTankGVL.DrainValveCloseCmd := NOT MixingTankGVL.DrainValveClosed;
END_CASE
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>9a69d563-82da-4abf-8956-aa135d80ff28</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="MoveSprite" pouType="functionBlock">
        <interface>
          <inOutVars>
            <variable name="xCor">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="yCor">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
          </inOutVars>
          <inputVars>
            <variable name="xScreen">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Width of the screen </xhtml>
              </documentation>
            </variable>
            <variable name="yScreen">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Height of the screen </xhtml>
              </documentation>
            </variable>
            <variable name="SpriteWidth">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Width of the sprite </xhtml>
              </documentation>
            </variable>
            <variable name="SpriteHeight">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Height of the sprite </xhtml>
              </documentation>
            </variable>
            <variable name="ySpeed">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Control up or down movement with +- </xhtml>
              </documentation>
            </variable>
            <variable name="xSpeed">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Control left or right movement with +- </xhtml>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Reseting the position if sprite goes off screen *)
(* If moving left to right *)
IF xCor &gt;= xScreen  AND xSpeed &gt; 0 THEN
	xCor := -SpriteWidth;
(* If moving right to left *)
ELSIF xCor &lt;= -SpriteWidth AND xSpeed &lt; 0 THEN
	xCor := xScreen;	
END_IF
(* If moving from up, down *)
IF yCor &gt;= yScreen AND ySpeed &gt; 0 THEN
	yCor := -SpriteHeight;
(* If moving from down, up *)
ELSIF yCor &lt; -SpriteHeight AND ySpeed &lt; 0 THEN
	yCor := yScreen;	
END_IF

(* Actual moving of the coordinates *)
xCor := xCor + xSpeed;
yCor := yCor + ySpeed;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>efe1e0d8-4162-41ed-bb90-87826e90fc6b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Servo" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="CmdFwd">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="CmdRev">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="PulseWidth">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#100ms" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Width of a pulse from the hall effect sensor when its above magnetic surface </xhtml>
              </documentation>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="S1">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="S2">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
          </outputVars>
          <localVars>
            <variable name="tofS2">
              <type>
                <derived name="TOF" />
              </type>
            </variable>
            <variable name="tonS2">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="blink">
              <type>
                <derived name="BLINK" />
              </type>
            </variable>
            <variable name="blinkOld">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="vStartBlinker">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">vStartBlinker := (CmdFwd OR CmdRev) AND NOT (CmdFwd AND CmdRev);
Blink(ENABLE := vStartBlinker, TIMELOW:= PulseWidth, TIMEHIGH := PulseWidth);

tonS2(IN := blink.OUT, PT:=PulseWidth/2);
tofS2(IN := NOT tonS2.Q AND blinkOld, PT:=PulseWidth/2);
 
blinkOld := tonS2.Q;

IF CmdFwd THEN
	S1 := blink.OUT;
	S2 := tonS2.Q OR tofS2.Q;
ELSIF CmdRev THEN
	S1 := tonS2.Q OR tofS2.Q;
	S2 := blink.OUT;
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>6ff4fb81-292f-4a52-8f07-693ce750afde</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task02" pouType="program">
        <interface>
          <localVars>
            <variable name="PositionDetector">
              <type>
                <derived name="CTUD" />
              </type>
            </variable>
            <variable name="PositionDetector2">
              <type>
                <derived name="CTUD" />
              </type>
            </variable>
            <variable name="vHorizontalCountS1">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="vHorizontalCountS2">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="vVerticalCountS1">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="vVerticalCountS2">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="rtHorizontalS1">
              <type>
                <derived name="R_TRIG" />
              </type>
            </variable>
            <variable name="rtHorizontalS2">
              <type>
                <derived name="R_TRIG" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Quadrature signal array *)
rtHorizontalS1(CLK:=Task02GVl.HorizontalS1);
rtHorizontalS2(CLK:=Task02GVl.HorizontalS2);


PositionDetector2(
	CU:= rtHorizontalS2.Q, 
	CD:= FALSE, 
	CV=&gt; vHorizontalCountS2);

PositionDetector(
	CU:= rtHorizontalS1.Q, 
	CD:= FALSE, 
	CV=&gt; vHorizontalCountS1);
	
Task02GVL.HorizontalLeft := Task02GVL.ManLeft OR Task02GVl.ManUpLeft OR Task02GVl.ManDownLeft;
Task02GVL.HorizontalRight := Task02GVL.ManRight OR Task02GVl.ManUpRight OR Task02GVl.ManDownRight;
Task02GVL.VerticalUp := Task02GVL.ManUp OR Task02GVl.ManUpLeft OR Task02GVl.ManUpRight;
Task02GVL.VerticalDown := Task02GVL.ManDown OR Task02GVl.ManDownLeft OR Task02GVl.ManDownRight;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>0e43dcec-62b5-40b5-a883-59b832cbbbc4</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task03" pouType="program">
        <interface>
          <localVars>
            <variable name="vSequenceA">
              <type>
                <DINT />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
            <variable name="TimerA">
              <type>
                <derived name="TOF" />
              </type>
            </variable>
            <variable name="vSequenceB">
              <type>
                <DINT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="TimerB">
              <type>
                <derived name="TOF" />
              </type>
            </variable>
            <variable name="Start">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="StartOld">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="vSequence">
              <type>
                <DINT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="TactTimer">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="vPeriodTime">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#1m25s0ms" />
              </initialValue>
            </variable>
            <variable name="vElapsedTime">
              <type>
                <TIME />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
TactTimer(IN:=TRUE, PT:=vPeriodTime, ET =&gt; vElapsedTime);
IF TactTimer.Q THEN
	TactTimer(IN:=FALSE);
END_IF
(* Direction Up, Down traffic light *)
Task03GVL.TLight3Red := vElapsedTime &lt;= T#5S OR vElapsedTime &gt;= T#37S AND vElapsedTime &lt;= T#85S;
Task03GVL.TLight3Yellow := vElapsedTime &gt; T#3S AND vElapsedTime &lt;= T#5S OR vElapsedTime &gt;= T#35S AND vElapsedTime &lt;= T#37S;
Task03GVL.TLight3Green := vElapsedTime &gt;= T#5S AND vElapsedTime &lt;= T#35S;

(* Mirror the other side of the Up, Down direction *)
Task03GVL.TLight4Red := Task03GVL.TLight3Red;
Task03GVL.TLight4Yellow := Task03GVL.TLight3Yellow;
Task03GVL.TLight4Green := Task03GVL.TLight3Green;

(* Direction Left, Right traffic light *)
Task03GVL.TLight2Red := vElapsedTime &gt;= T#0S AND vElapsedTime &lt;= T#39S OR vElapsedTime &gt;= T#71S AND vElapsedTime &lt;= T#85S;
Task03GVL.TLight2Yellow := vElapsedTime &gt; T#37S AND vElapsedTime &lt;= T#39S OR vElapsedTime &gt;= T#69S AND vElapsedTime &lt;= T#71S;
Task03GVL.TLight2Green := vElapsedTime &gt;= T#39S AND vElapsedTime &lt;= T#69S;

(* Mirror the other side of the Left, Right direction *)
Task03GVL.TLight1Red := Task03GVL.TLight2Red;
Task03GVL.TLight1Yellow := Task03GVL.TLight2Yellow;
Task03GVL.TLight1Green := Task03GVL.TLight2Green;
(*CASE vSequence OF
	0:
	(* Starting sequence, direction Up, Down *)
	TimerA
	Task03GVL.TLight1Red := TRUE;
	
END_CASE
CASE vSequenceA OF
	0: TimerA(IN:=FALSE,PT:=T#20S);
	Task03GVL.TLight1Yellow:= FALSE;
	Task03GVL.TLight1Red:= FALSE;
	Task03GVL.TLight1Green:= TimerA.Q;
	Task03GVL.TLight2Green := Task03GVL.TLight1Green;
	IF NOT TimerA.Q THEN
		TimerA(IN:=TRUE);
		vSequenceA:=1;
	END_IF
	1: TimerA(IN:=FALSE,PT:=T#4S);
	Task03GVL.TLight1Red:= FALSE;
	Task03GVL.TLight1Green:= FALSE;
	Task03GVL.TLight1Yellow:= TimerA.Q;
	Task03GVL.TLight2Yellow := Task03GVL.TLight1Yellow;
	IF NOT TimerA.Q THEN
		TimerA(IN:=TRUE);
		vSequenceA:=2;
	END_IF
		2: TimerA(IN:=FALSE,PT:=T#30S);
	Task03GVL.TLight1Green:= FALSE;
	Task03GVL.TLight1Yellow:= FALSE;
	Task03GVL.TLight1Red:= TimerA.Q;
	Task03GVL.TLight2Red := Task03GVL.TLight1Red;
	IF NOT TimerA.Q THEN
		TimerA(IN:=TRUE);
		vSequenceA:=3;
	END_IF
		3: TimerA(IN:=FALSE,PT:=T#4S);
	Task03GVL.TLight1Green:= FALSE;
	Task03GVL.TLight1Red:= TimerA.Q;
	Task03GVL.TLight1Yellow:= TimerA.Q;
	Task03GVL.TLight2Red := Task03GVL.TLight1Red;
	Task03GVL.TLight2Yellow := Task03GVL.TLight1Yellow;
	IF NOT TimerA.Q THEN
		TimerA(IN:=TRUE);
		vSequenceA:=0;
		IF vSequenceB=6 THEN
		vSequenceB:=3;	
		END_IF
		
	END_IF
END_CASE

CASE vSequenceB OF
	0: TimerB(IN:=FALSE,PT:=T#4S);
	Task03GVL.TLight3Green:= FALSE;
	Task03GVL.TLight3Red:= TimerB.Q;
	Task03GVL.TLight3Yellow:= TimerB.Q;
	Task03GVL.TLight4Red := Task03GVL.TLight3Red;
	Task03GVL.TLight4Yellow := Task03GVL.TLight3Yellow;
	IF NOT TimerB.Q THEN
		TimerB(IN:=TRUE);
		vSequenceB:=1;
	END_IF
	
	1: TimerB(IN:=FALSE,PT:=T#20S);
	Task03GVL.TLight3Yellow:= FALSE;
	Task03GVL.TLight3Red:= FALSE;
	Task03GVL.TLight3Green:= TimerB.Q;
	Task03GVL.TLight4Green := Task03GVL.TLight3Green;
	IF NOT TimerB.Q THEN
		TimerB(IN:=TRUE);
		vSequenceB:=2;
	END_IF
	
	2: TimerB(IN:=FALSE,PT:=T#4S);
	Task03GVL.TLight3Red:= FALSE;
	Task03GVL.TLight3Green:= FALSE;
	Task03GVL.TLight3Yellow:= TimerB.Q;
	Task03GVL.TLight4Yellow := Task03GVL.TLight3Yellow;
	IF NOT TimerB.Q THEN
		TimerB(IN:=TRUE);
		vSequenceB:=3;
	END_IF
	
		3: TimerB(IN:=FALSE,PT:=T#30S);
	Task03GVL.TLight3Green:= FALSE;
	Task03GVL.TLight3Yellow:= FALSE;
	Task03GVL.TLight3Red:= TimerB.Q;
	Task03GVL.TLight4Red := Task03GVL.TLight3Red;
	IF NOT TimerB.Q THEN
		TimerB(IN:=TRUE);
		vSequenceB:=0;
	END_IF
		
END_CASE
END_IF;*)</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e7eb72fd-dd19-4d64-b3b3-1d670977a2d9</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task04" pouType="program">
        <interface>
          <localVars>
            <variable name="M3">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Start_Desno">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Start_Lijevo">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="STOP">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="SklopkaPreopterecenja">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="M3_Lijevo">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="M3_Desno">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Cooling">
              <type>
                <derived name="TOF" />
              </type>
            </variable>
            <variable name="StreliceLijevoInv">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="StreliceDesnoInv">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Zadatak 4.
Promena smera obrtanja trofaznog asinhronog motora izvodi se promenom redosleda faza napona
napajanja motora. Upravljanje motorom izvodi se tasterima "START-DESNO", "START-LEVO" i "STOP".
Motor se sem toga štiti i od preopterećenja motornom zaštitnom sklopkom.
Razraditi rešenje kašnjenja sa PLC kontrolerom.*)

M3_Lijevo:=(M3_Lijevo OR Start_Lijevo) AND NOT M3_Desno AND NOT STOP AND NOT SklopkaPreopterecenja AND NOT Cooling.Q;
M3_Desno:=(M3_Desno OR Start_Desno) AND NOT M3_Lijevo AND NOT STOP AND NOT SklopkaPreopterecenja AND NOT Cooling.Q;

M3:= M3_Lijevo OR M3_Desno; (*Ovo je samo simulirani motor jer nemamo pravi*)
Cooling(IN:=Stop, PT:=T#5S);
StreliceLijevoInv:=M3_Desno OR (NOT M3_Desno AND NOT M3_Lijevo);
StreliceDesnoInv:=M3_Lijevo OR (NOT M3_Desno AND NOT M3_Lijevo);</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>44854fd1-ca8f-4c69-9c3e-b20f739e131e</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task05" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e6ece021-1b40-409f-8b4d-28e53f6719ba</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task06" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF Task06GVL.EmcyStop THEN
	Task06GVL.CraneDown := Task06GVL.JoyDown OR Task06GVL.JoyDownLeft OR Task06GVL.JoyDownRight;
	Task06GVL.CraneUp := Task06GVL.JoyUp OR Task06GVL.JoyUpLeft OR Task06GVL.JoyUpRight;

	Task06GVL.MotorRight := Task06GVL.JoyRight OR Task06GVL.JoyUpRight OR Task06GVL.JoyDownRight;
	Task06GVL.MotorLeft := Task06GVL.JoyLeft OR Task06GVL.JoyUpLeft OR Task06GVL.JoyDownLeft;
ELSE
	Task06GVL.CraneDown := FALSE;
	Task06GVL.CraneUp := FALSE;

	Task06GVL.MotorRight := FALSE;
	Task06GVL.MotorLeft := FALSE;
END_IF



</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>f709c5ee-b0aa-445c-af2b-bf543f210ff5</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task07" pouType="program">
        <interface>
          <localVars>
            <variable name="StartRight">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="StartLeft">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="PulseWidth">
              <type>
                <TIME />
              </type>
              <initialValue>
                <simpleValue value="TIME#100ms" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Width of a pulse from the hall effect sensor when its above magnetic surface </xhtml>
              </documentation>
            </variable>
            <variable name="tofS2">
              <type>
                <derived name="TOF" />
              </type>
            </variable>
            <variable name="tonS2">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="blinkS1">
              <type>
                <derived name="BLINK" />
              </type>
            </variable>
            <variable name="blinkS1Old">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="S1">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="S2">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">blinkS1(ENABLE := StartRight OR StartLeft, TIMELOW:= PulseWidth, TIMEHIGH := PulseWidth);
tonS2(IN := blinkS1.OUT, PT:=PulseWidth/2);
tofS2(IN := NOT tonS2.Q AND blinkS1Old, PT:=PulseWidth/2);
 
blinkS1Old := tonS2.Q;

S1 := blinkS1.OUT;
S2 := tonS2.Q OR tofS2.Q;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>6556073a-87e5-46d1-a2cd-8c2ff68fa95d</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task08" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>cf2b9d28-b015-460e-a77c-54443dd3a3f0</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task09" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>244d14cc-6511-4f01-b74d-42e40d4c31a2</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task10" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>047a811e-bca2-4c80-8334-bed6a6193400</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task01Sim" pouType="program">
        <interface>
          <localVars>
            <variable name="Pump1Sim">
              <type>
                <derived name="Pump_Model" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">Simulator and graphics</xhtml>
              </documentation>
            </variable>
            <variable name="Pump2Sim">
              <type>
                <derived name="Pump_Model" />
              </type>
            </variable>
            <variable name="DrainValveSim">
              <type>
                <derived name="OnOffValve_model" />
              </type>
            </variable>
            <variable name="MixingTank">
              <type>
                <derived name="Tank_Model" />
              </type>
            </variable>
            <variable name="vPump1RunningDint">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="vPump2RunningDint">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="vPump1FlowRate">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="vPump2FlowRate">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="ValveIcon">
              <type>
                <string />
              </type>
            </variable>
            <variable name="Pump1Icon">
              <type>
                <string />
              </type>
            </variable>
            <variable name="Pump2Icon">
              <type>
                <string />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(*Task 01 Simulator*)
Pump1Sim(
	OnCmd:= MixingTankGVL.Pump1StartCmd, 
	OffCmd:= MixingTankGVL.Pump1StopCmd, 
	cfgFlowrate:= 1200, 
	RunStatus=&gt; vPump1RunningDint, 
	FlowmeterOut=&gt; vPump1FlowRate);
MixingTankGVL.Pump1Running:= DINT_TO_BOOL(vPump1RunningDint);
	
Pump2Sim(
	OnCmd:= MixingTankGVL.Pump2StartCmd, 
	OffCmd:= MixingTankGVL.Pump2StopCmd, 
	cfgFlowrate:= 1200, 
	RunStatus=&gt; vPump2RunningDint, 
	FlowmeterOut=&gt; vPump2FlowRate);
MixingTankGVL.Pump2Running:= DINT_TO_BOOL(vPump2RunningDint);
	
DrainValveSim(
	OpenCmd:= MixingTankGVL.DrainValveOpenCmd, 
	CloseCmd:= MixingTankGVL.DrainValveCloseCmd, 
	cfgOpeningTime:= T#2S, 
	cfgClosingTime:= T#2S, 
	Opened=&gt; MixingTankGVL.DrainValveOpened, 
	Closed=&gt; MixingTankGVL.DrainValveClosed);

MixingTank(
	cfgTaskCycle:= 100, 
	cfgLenght:= 5, 
	cfgWidth:= 5, 
	cfgHeight:= 5, 
	cfgStartLevel:= 0, 
	Inflow1:= vPump1FlowRate, 
	Inflow2:= vPump2FlowRate, 
	Outflow1:= 2400*BOOL_TO_REAL(MixingTankGVL.DrainValveOpened), 
	TankLevel_pc=&gt; MixingTankGVL.TankLevel);
	
IF MixingTankGVL.DrainValveClosed THEN
	ValveIcon := 'Valve1';
ELSIF MixingTankGVL.DrainValveOpened THEN
	ValveIcon := 'Valve2';
ELSE
	ValveIcon := 'Valve3';
END_IF

IF MixingTankGVL.Pump1Running THEN
	Pump1Icon := 'PumpOn';
ELSE
	Pump1Icon := 'PumpOff';
END_IF

IF MixingTankGVL.Pump2Running THEN
	Pump2Icon := 'PumpOn';
ELSE
	Pump2Icon := 'PumpOff';
END_IF

</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>0c49e400-ee18-44bb-9c02-11f51c58f352</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task02Sim" pouType="program">
        <interface>
          <localVars>
            <variable name="HorizontalAxis">
              <type>
                <derived name="Servo" />
              </type>
            </variable>
            <variable name="VerticalAxis">
              <type>
                <derived name="Servo" />
              </type>
            </variable>
            <variable name="rtHIncrement">
              <type>
                <derived name="R_TRIG" />
              </type>
            </variable>
            <variable name="rtHDecrement">
              <type>
                <derived name="R_TRIG" />
              </type>
            </variable>
            <variable name="rtVIncrement">
              <type>
                <derived name="R_TRIG" />
              </type>
            </variable>
            <variable name="rtVDecrement">
              <type>
                <derived name="R_TRIG" />
              </type>
            </variable>
            <variable name="vHorizontalS1Old">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="vHorizontalS2Old">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="vVerticalS1Old">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="vVerticalS2Old">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="PositionCounterVerticalAxis">
              <type>
                <derived name="CTUD" />
              </type>
            </variable>
            <variable name="vHorizontalPos">
              <type>
                <DINT />
              </type>
            </variable>
            <variable name="PositionCounterHorizontalAxis">
              <type>
                <derived name="CTUD" />
              </type>
            </variable>
            <variable name="vVerticalPos">
              <type>
                <WORD />
              </type>
            </variable>
            <variable name="vPositionX">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="vPositionY">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="vResetSIM">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="vHorizontalLimit">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="vVerticalLimit">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* The actual servos that move the watering equipment *)
vHorizontalLimit := vPositionX &gt;= 940;
vVerticalLimit := vPositionY &gt;= 500;

(* Maximum range - 940 steps *)
HorizontalAxis(
	CmdFwd:= Task02GVL.HorizontalRight AND NOT vHorizontalLimit, 
	CmdRev:= Task02GVL.HorizontalLeft, 
	PulseWidth:= T#0.1S , 
	S1=&gt; Task02GVL.HorizontalS1, 
	S2=&gt; Task02GVL.HorizontalS2);
	
(* Maximum range - 500 steps *)	
VerticalAxis(
	CmdFwd:= Task02GVL.VerticalDown AND NOT vVerticalLimit, 
	CmdRev:= Task02GVL.VerticalUp, 
	PulseWidth:= T#0.1S , 
	S1=&gt; Task02GVL.VerticalS1, 
	S2=&gt; Task02GVL.VerticalS2);

IF vResetSIM THEN
	vHorizontalPos := 0;
	vVerticalPos := 0;
END_IF

IF Task02GVL.HorizontalS1 &lt;&gt; vHorizontalS1Old THEN
	IF Task02GVL.HorizontalS1 &lt;&gt; Task02GVL.HorizontalS2 THEN
		rtHIncrement(CLK:=TRUE);
	ELSE
		rtHDecrement(CLK:=TRUE);
	END_IF
ELSE
	rtHIncrement(CLK:=FALSE);
	rtHDecrement(CLK:=FALSE);
END_IF

IF Task02GVL.VerticalS1 &lt;&gt; vVerticalS1Old THEN
	IF Task02GVL.VerticalS1 &lt;&gt; Task02GVL.VerticalS2 THEN
		rtVIncrement(CLK:=TRUE);
	ELSE
		rtVDecrement(CLK:=TRUE);
	END_IF
ELSE
	rtVIncrement(CLK:=FALSE);
	rtVDecrement(CLK:=FALSE);
END_IF

PositionCounterHorizontalAxis(
	CU:= rtHIncrement.Q, 
	CD:= rtHDecrement.Q, 
	CV=&gt; vHorizontalPos);

PositionCounterVerticalAxis(
	CU:= rtVIncrement.Q, 
	CD:= rtVDecrement.Q, 
	CV=&gt; vVerticalPos);
	
(* Position of the system *)
(* For every 5 pulses we move 200 px *)
vPositionX := (DINT_TO_REAL(vHorizontalPos)/ 5) * 200;
vPositionY := (DINT_TO_REAL(vVerticalPos)/ 5) * 200;
	
vHorizontalS1Old := Task02GVL.HorizontalS1;
vVerticalS1Old := Task02GVL.VerticalS1;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>57530bb6-c5e2-400f-b723-a133d092dff8</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task03Sim" pouType="program">
        <interface>
          <localVars>
            <variable name="Car1X">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="925" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Red car </xhtml>
              </documentation>
            </variable>
            <variable name="Car1Y">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="740" />
              </initialValue>
            </variable>
            <variable name="Car1Width">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="100" />
              </initialValue>
            </variable>
            <variable name="Car1Height">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="230" />
              </initialValue>
            </variable>
            <variable name="Car2X">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="420" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Blue car </xhtml>
              </documentation>
            </variable>
            <variable name="Car2Y">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="511" />
              </initialValue>
            </variable>
            <variable name="Car2Width">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="230" />
              </initialValue>
            </variable>
            <variable name="Car2Height">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="100" />
              </initialValue>
            </variable>
            <variable name="Car3X">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="1160" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Green car </xhtml>
              </documentation>
            </variable>
            <variable name="Car3Y">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="366" />
              </initialValue>
            </variable>
            <variable name="Car3Width">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="230" />
              </initialValue>
            </variable>
            <variable name="Car3Height">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="100" />
              </initialValue>
            </variable>
            <variable name="Car4X">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="775" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Yellow car </xhtml>
              </documentation>
            </variable>
            <variable name="Car4Y">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="Car4Width">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="100" />
              </initialValue>
            </variable>
            <variable name="Car4Height">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="230" />
              </initialValue>
            </variable>
            <variable name="Speed">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="25" />
              </initialValue>
            </variable>
            <variable name="vCarCrash">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="vReset">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="xExplosion">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="yExplosion">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="Car3Car4Coll">
              <type>
                <derived name="CollisionDetection" />
              </type>
            </variable>
            <variable name="Car3Car1Coll">
              <type>
                <derived name="CollisionDetection" />
              </type>
            </variable>
            <variable name="Car2Car1Coll">
              <type>
                <derived name="CollisionDetection" />
              </type>
            </variable>
            <variable name="Car2Car4Coll">
              <type>
                <derived name="CollisionDetection" />
              </type>
            </variable>
            <variable name="MoveCar1">
              <type>
                <derived name="MoveSprite" />
              </type>
            </variable>
            <variable name="MoveCar2">
              <type>
                <derived name="MoveSprite" />
              </type>
            </variable>
            <variable name="MoveCar3">
              <type>
                <derived name="MoveSprite" />
              </type>
            </variable>
            <variable name="MoveCar4">
              <type>
                <derived name="MoveSprite" />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Collision detection *)
(* Car3 and Car 4 *)
Car3Car4Coll(
	xcor1:= Car3X, 
	ycor1:= Car3Y, 
	height1:= Car3Height, 
	width1:= Car3Width, 
	xcor2:= Car4X, 
	ycor2:= Car4Y, 
	height2:= Car4Height, 
	width2:= Car4Width);
(* Car3 and Car 1 *)
Car3Car1Coll(
	xcor1:= Car3X, 
	ycor1:= Car3Y, 
	height1:= Car3Height, 
	width1:= Car3Width, 
	xcor2:= Car1X, 
	ycor2:= Car1Y, 
	height2:= Car1Height, 
	width2:= Car1Width);
(* Car2 and Car 4 *)
Car2Car4Coll(
	xcor1:= Car2X, 
	ycor1:= Car2Y, 
	height1:= Car2Height, 
	width1:= Car2Width, 
	xcor2:= Car4X, 
	ycor2:= Car4Y, 
	height2:= Car4Height, 
	width2:= Car4Width);
(* Car2 and Car 1 *)
Car2Car1Coll(
	xcor1:= Car2X, 
	ycor1:= Car2Y, 
	height1:= Car2Height, 
	width1:= Car2Width, 
	xcor2:= Car1X, 
	ycor2:= Car1Y, 
	height2:= Car1Height, 
	width2:= Car1Width);

IF Car3Car4Coll.isCollision OR Car3Car1Coll.isCollision OR Car2Car4Coll.isCollision OR Car2Car1Coll.isCollision THEN
	vCarCrash := TRUE;
ELSE
	vCarCrash := FALSE;	
END_IF

(* Explosion graphic *)
IF Car3Car4Coll.isCollision THEN
	xExplosion := Car3X;
	yExplosion := Car3Y;
ELSIF Car3Car1Coll.isCollision THEN
	xExplosion := Car3X;
	yExplosion := Car3Y;
ELSIF Car2Car4Coll.isCollision THEN
	xExplosion := Car2X + Car2Width;
	yExplosion := Car2Y;
ELSIF Car2Car1Coll.isCollision THEN
	xExplosion := Car2X + Car2Width;
	yExplosion := Car2Y;
ELSE
	xExplosion := 2000;
	yExplosion := 2000;
END_IF

(* Car movements *)
IF  vCarCrash THEN
	//wait
	IF vReset THEN
		(* Reset to start position *)
		Car1X:= 925;
		Car1Y:= 740;
		Car2X:= 420;
		Car2Y:= 511;
		Car3X:= 1160;
		Car3Y:= 366;
		Car4X:= 775;
		Car4Y:= 0;
	END_IF
ELSE
	(* Define what cars do depending on lights *)
	(* car moves if its green for him or he is past the traffic ligght but stops at the traffic light if its red, or yellow.*)
	IF Task03GVL.TLight4Green OR Car1Y - 740 &lt; 0 OR Car1Y - 740 &gt; Speed THEN
		MoveCar1(
		xCor:= Car1X, 
		yCor:= Car1Y, 
		xScreen:= 1830, 
		yScreen:= 930,
		SpriteWidth:= Car1Width, 
		SpriteHeight:= Car1Height, 
		ySpeed:= -Speed, 
		xSpeed:= 0 );
	END_IF;
	IF Task03GVL.TLight2Green OR Car2X - 420 &lt; 0 OR Car2X - 420 &gt; Speed THEN
		MoveCar2(
		xCor:= Car2X, 
		yCor:= Car2Y, 
		xScreen:= 1830, 
		yScreen:= 930,
		SpriteWidth:= Car2Width, 
		SpriteHeight:= Car2Height,  
		ySpeed:= 0, 
		xSpeed:= Speed );
	END_IF;
	IF Task03GVL.TLight1Green OR Car3X - 1160 &lt; 0 OR Car3X - 1160 &gt; Speed THEN
		MoveCar3(
		xCor:= Car3X, 
		yCor:= Car3Y, 
		xScreen:= 1830, 
		yScreen:= 930,
		SpriteWidth:= Car3Width, 
		SpriteHeight:= Car3Height,  
		ySpeed:= 0, 
		xSpeed:= -Speed );
	END_IF;
	IF Task03GVL.TLight3Green OR Car4Y - 0 &lt; 0 OR Car4Y - 0 &gt; Speed THEN
		MoveCar4(
		xCor:= Car4X, 
		yCor:= Car4Y, 
		xScreen:= 1830, 
		yScreen:= 930,
		SpriteWidth:= Car4Width, 
		SpriteHeight:= Car4Height,  
		ySpeed:= Speed, 
		xSpeed:= 0 );
	END_IF;
END_IF

</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e8cc3a31-36c9-4946-a8e8-c5e86e24c67e</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task04Sim" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>166974fc-801d-4a40-901b-41b59d178321</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task05Sim" pouType="program">
        <interface>
          <localVars>
            <variable name="vConveyorElements">
              <type>
                <array>
                  <dimension lower="0" upper="31" />
                  <baseType>
                    <DINT />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="vBottleImage">
              <type>
                <array>
                  <dimension lower="0" upper="31" />
                  <baseType>
                    <string />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="vBox">
              <type>
                <array>
                  <dimension lower="0" upper="23" />
                  <baseType>
                    <DINT />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="vBoxBottleImage">
              <type>
                <array>
                  <dimension lower="0" upper="23" />
                  <baseType>
                    <string />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="i">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="ArrayShifter">
              <type>
                <derived name="ShiftArray" />
              </type>
            </variable>
            <variable name="TactGenerator">
              <type>
                <derived name="BLINK" />
              </type>
            </variable>
            <variable name="vShift">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="vRandomNumber">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="vPlaceNewBottle">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="vNewBottle">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="ShiftTrig">
              <type>
                <derived name="R_TRIG" />
              </type>
            </variable>
            <variable name="vBoxSum">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="vBoxFull">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="vPackageEfficiency">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="vBoxValue">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="vBrokenBottleDetected">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">vRandomNumber := vRandomNumber + 1;
IF vRandomNumber &gt; 4 THEN
	vRandomNumber := 0;
END_IF
TactGenerator(ENABLE:= TRUE, TIMELOW:= T#0.5S, TIMEHIGH:= T#0.5S, OUT=&gt;vShift );
ShiftTrig(CLK:=vShift);

IF ShiftTrig.Q THEN
	vNewBottle := vRandomNumber;
ELSE
	vNewBottle := 0;
END_IF

(* Fill the box with the last element and then shift *)
IF ShiftTrig.Q AND vConveyorElements[31]&lt;&gt; 0 THEN
	FOR i:=0 TO 23 BY 1 DO
		IF vBox[i] = 0 THEN
			vBox[i] := vConveyorElements[31];
			EXIT;
		END_IF
	END_FOR
END_IF
ArrayShifter(DataArray:= vConveyorElements, ShiftLeft:= FALSE, ShiftRight:= ShiftTrig.Q , Value:= vNewBottle );

(* Check if position 5 has a broken bottle *)
vBrokenBottleDetected := vConveyorElements[4] = 2;

(* Check if box is full *)
vBoxSum := 0;
vBoxValue := 0;
FOR i:=0 TO 23 BY 1 DO
	IF vBox[i]&lt;&gt;0 THEN
		vBoxSum := vBoxSum + 1;
	END_IF;
	vBoxValue := vBoxValue + vBox[i];
END_FOR

IF vBoxSum &gt;= 24 THEN
	vBoxFull := TRUE;
ELSE
	vBoxFull := FALSE;
END_IF
vPackageEfficiency := (vBoxValue/96) * 100;



IF vBoxFull THEN
	FOR i:=0 TO 23 BY 1 DO
		vBox[i] := 0;
	END_FOR
END_IF
FOR i:=0 TO 31 BY 1 DO
	IF vConveyorElements[i] = 0 THEN
		vBottleImage[i] := '';
	ELSIF vConveyorElements[i] = 1 THEN
		vBottleImage[i] := 'Bottle0';
	ELSIF vConveyorElements[i] = 2 THEN
		vBottleImage[i] := 'Bottle1';
	ELSIF vConveyorElements[i] = 3 THEN
		vBottleImage[i] := 'Bottle2';
	ELSIF vConveyorElements[i] = 4 THEN
		vBottleImage[i] := 'Bottle3';
	ELSE
		vBottleImage[i] := '';
	END_IF
END_FOR



FOR i:=0 TO 23 BY 1 DO
		IF vBox[i] = 0 THEN
		vBoxBottleImage[i] := '';
	ELSIF vBox[i] = 1 THEN
		vBoxBottleImage[i] := 'Bottle0';
	ELSIF vBox[i] = 2 THEN
		vBoxBottleImage[i] := 'Bottle1';
	ELSIF vBox[i] = 3 THEN
		vBoxBottleImage[i] := 'Bottle2';
	ELSIF vBox[i] = 4 THEN
		vBoxBottleImage[i] := 'Bottle3';
	ELSE
		vBoxBottleImage[i] := '';
	END_IF
END_FOR

vPlaceNewBottle := FALSE;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>a47974f0-818d-4695-b066-f4792e9f5e11</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task06Sim" pouType="program">
        <interface>
          <localVars>
            <variable name="vHookx">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="774" />
              </initialValue>
            </variable>
            <variable name="vHooky">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="378" />
              </initialValue>
            </variable>
            <variable name="vLinex">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="vLiney">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="vLoadx">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="vLoady">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="vMoveRight">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="vMoveLeft">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="vMoveUp">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="vMoveDown">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="vSpeed">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="20" />
              </initialValue>
            </variable>
            <variable name="vWireBreak">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="MoveRight">
              <type>
                <derived name="MoveSprite" />
              </type>
            </variable>
            <variable name="MoveLeft">
              <type>
                <derived name="MoveSprite" />
              </type>
            </variable>
            <variable name="MoveUp">
              <type>
                <derived name="MoveSprite" />
              </type>
            </variable>
            <variable name="MoveDown">
              <type>
                <derived name="MoveSprite" />
              </type>
            </variable>
            <variable name="DropDown">
              <type>
                <derived name="MoveSprite" />
              </type>
            </variable>
            <variable name="vSpeedDown">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="vReset">
              <type>
                <BOOL />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF vReset THEN
	vHookx := 774;
	vHooky := 378;
END_IF

vWireBreak := vHookx &lt; 350 OR vHookx &gt; 1100;

IF vWireBreak AND vHooky &lt; 836 THEN
	vSpeedDown := vSpeedDown + 5;
	MoveRight(
		xCor:= vHookx, 
		yCor:= vHooky, 
		xScreen:= 1830, 
		yScreen:= 930, 
		SpriteWidth:= 15, 
		SpriteHeight:= 15, 
		ySpeed:= vSpeedDown, 
		xSpeed:= 0);
ELSE
		vSpeedDown := vSpeed;
END_IF

Task06GVL.LeftLimit := vHookx &gt; 388;
Task06GVL.RightLimit := vHookx &lt; 1007;

IF Task06GVL.MotorRight AND NOT vWireBreak THEN
	MoveRight(
		xCor:= vHookx, 
		yCor:= vHooky, 
		xScreen:= 1830, 
		yScreen:= 930, 
		SpriteWidth:= 15, 
		SpriteHeight:= 15, 
		ySpeed:= 0, 
		xSpeed:= vSpeed);
END_IF;
IF Task06GVL.MotorLeft AND NOT vWireBreak THEN	
	MoveLeft(
		xCor:= vHookx, 
		yCor:= vHooky, 
		xScreen:= 1830, 
		yScreen:= 930, 
		SpriteWidth:= 15, 
		SpriteHeight:= 15, 
		ySpeed:= 0, 
		xSpeed:= -vSpeed);
END_IF;
IF Task06GVL.CraneUp AND vHooky &gt; 300 THEN	
	MoveUp(
		xCor:= vHookx, 
		yCor:= vHooky, 
		xScreen:= 1830, 
		yScreen:= 930, 
		SpriteWidth:= 15, 
		SpriteHeight:= 15, 
		ySpeed:= -vSpeed, 
		xSpeed:= 0);
END_IF;
IF Task06GVL.CraneDown  AND vHooky &lt; 836 THEN
	MoveDown(
		xCor:= vHookx, 
		yCor:= vHooky, 
		xScreen:= 1830, 
		yScreen:= 930, 
		SpriteWidth:= 15, 
		SpriteHeight:= 15, 
		ySpeed:= vSpeed,
		xSpeed:= 0);
END_IF;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>8d136aed-5c7d-4253-b4bc-b0bfc156ba09</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task07Sim" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>cb31825b-2e05-4e6e-b210-38a0023a66e3</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task08Sim" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>45414d7a-73ea-4929-b44d-b8e779b60e74</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task09Sim" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>6e5d9cfc-37cf-4369-b0cb-a1c016b2024b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task10Sim" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>10e981f1-e773-4212-9c7c-f710d140b580</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task11" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>0f696a03-72bd-4ad2-9605-439e929feb75</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task12" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>294b7ecb-8b5f-4597-9303-fafbf378b67f</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task13" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>5d88f5bc-a394-43de-a380-5458a5535e95</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task14" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>42856c41-6994-4b90-85c5-9ce41257888f</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task15" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>1b238e45-8d9a-4d96-9a52-d4e4dc2c3ecd</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task16" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e3d2574e-fcfb-4cec-90bf-d26e98d1f34e</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task17" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>872d9bbb-58fd-49da-b8c8-76ac8f6e599f</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task18" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>4e39097d-1cb4-4b6f-ad54-64ac97f7c225</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task19" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>27dd06c4-d739-4a96-8c6b-d2a3922d1f06</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task20" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>69b030b7-645b-462d-b91b-0aa0b674d007</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_2_7" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>8dbd1e14-8b84-4670-87ec-a931fa7f256b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_3" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>94b03d25-7c25-4fc2-9596-20f647c424c7</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_3_1" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e9b6c3d1-e5cd-4d00-954e-15a298264040</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_3_2" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>38ac2665-9dbe-4035-92f1-e94854ae885c</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_3_3" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>1e729639-9066-4c01-a301-d9f40254e780</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_3_4" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>f17c14d2-a22a-4384-b794-385b83b5fd28</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_3_5" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>1089910d-9056-44a5-84fa-5c96cf6915db</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_3_6" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>5bbd4c2c-1918-49dc-a0c2-a7ab3ca3c4e2</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_3_7" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ad99f4fb-8bec-447a-b5b1-5f472bfe3972</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_4" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>80358f4e-5316-4868-b3b0-986db59d56a8</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_4_1" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d8b8487d-7317-4cad-b2cf-35b5c11e16a8</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_4_2" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>216ab91c-73bb-4521-abd7-158b230d2d31</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_4_3" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>aee4a5e0-bb61-4707-bd44-313fa1afb81d</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_4_4" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>d6d56345-f10e-47df-93d1-dbddb058a343</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_4_5" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b5699da7-0e66-42d2-bd5c-9ca7fad7f63d</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_4_6" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>6785bfd4-c60f-4146-ae64-2492c7a9672e</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_4_7" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>06b2a1ef-22bf-49ab-830b-02188cb27381</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_5" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ab24956b-03a4-4be4-9439-ca572a46e68e</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_5_1" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>6670f67d-6e06-47eb-837a-367856b811e2</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_5_2" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>0786eb0c-8466-4d84-8c82-6ae1673cccba</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_5_3" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ea59ee08-c430-407d-a96a-02372b475e27</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_5_4" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>9246f0e2-192b-4efe-8aa6-3a5b92f93329</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_5_5" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b725fbc6-8ccb-4345-a93f-2f6a9f60c5e6</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_5_6" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>0adcc850-3fe7-4cd8-b176-f53aff1e9872</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_5_7" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>1f87fc3b-ae65-4c18-9596-e7cb8326553a</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_6" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>0ec4c281-a975-4a2a-a72c-e2ef4a447e77</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_6_1" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>fa456a7b-d659-4e17-a957-e7ccda048e91</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_6_2" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>9de1253a-7082-4765-9e24-dfd4d91be6f1</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_6_3" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>26fe6db2-1347-4755-b1af-1a5970dc52c6</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_6_4" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>98e952f5-2b59-4a01-a97c-3226eeb549e0</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_6_5" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>29602933-e5a6-4fc5-b811-4df820f29692</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_6_6" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>8cb3b8db-f24c-4df9-b9d6-dc7d07b2d710</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_6_7" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>0a81f790-5f3a-48a4-8685-a2984606ef86</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_7" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>1196458b-de97-43e6-88db-c7e5cf399021</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_8" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ef7827e7-12ff-435a-bede-745c3d60ed5b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Task1_9" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b663c1e2-001b-4eec-9679-597ef582eaa5</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="ThreeWayIncrementValve" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="ForwardCMD">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="BackwardCMD">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="cfgTaskSeq_ms">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="cfgOpenSpeed_s">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="cfgCloseSpeed_s">
              <type>
                <REAL />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Position">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
          </outputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF ForwardCMD AND NOT (Position &gt;= 180) THEN
	Position := Position + (cfgOpenSpeed_s/cfgTaskSeq_ms);
ELSIF BackwardCMD AND NOT (Position &lt;= -180) THEN
	Position := Position - (cfgCloseSpeed_s/cfgTaskSeq_ms);	
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>75b819dd-8c65-4928-a069-08f8a4c05b8f</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Counter_Down" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">// GVL.CounterDown := GVL.CounterDown - 1;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>829b6d81-9be6-43d7-93b0-682f25ab3af9</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Counter_UP" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">//GVL.CounterUP := GVL.CounterUP + 1;</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>a6829a7f-3489-4678-83d4-8a5eb12c8abc</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Garage_Logic" pouType="program">
        <interface>
          <localVars>
            <variable name="MotorUP">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="MotorDown">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="qMotorUpContactor">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="qMotorDownContactor">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Timer_Off">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="qLightsContactor">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="iSystemPower">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <variable name="iEmcyStop">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="iLimitSwitchUpper">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="iInteruptionSensor">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="iPB_Up">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="iPB_Down">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="iLimitSwitchDown">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="TON1">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="Time_Elapsed">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="iLightsControl">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="iPhotoPair1">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="iPhotoPair2">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="counterdown">
              <type>
                <DINT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="CTU">
              <type>
                <derived name="CTU" />
              </type>
            </variable>
            <variable name="TON_0">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="ElapsedTimeGoingUp">
              <type>
                <TIME />
              </type>
            </variable>
            <variable name="TON_2">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="ElapsedTimeGoingDown">
              <type>
                <TIME />
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <LD>
            <leftPowerRail localId="0">
              <position x="0" y="0" />
              <connectionPointOut formalParameter="none" />
            </leftPowerRail>
            <rightPowerRail localId="2147483646">
              <position x="0" y="0" />
              <connectionPointIn />
            </rightPowerRail>
          </LD>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>2627423d-a996-4bfd-a7d5-7568c86a4d1b</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="PLC_PRG_2" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Garage_Logic ();
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>78e7c88c-c002-4b99-9be6-080219d7301c</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="TwoWayIncrementValve" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="OpenCMD">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="CloseCMD">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="cfgTaskSeq_ms">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="cfgOpenSpeed_s">
              <type>
                <REAL />
              </type>
            </variable>
            <variable name="cfgCloseSpeed_s">
              <type>
                <REAL />
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Position">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
          </outputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF OpenCMD AND NOT (Position &gt; 100) THEN
	Position := Position + (cfgOpenSpeed_s/cfgTaskSeq_ms);
ELSIF CloseCMD AND NOT (Position &lt;= 0) THEN
	Position := Position - (cfgCloseSpeed_s/cfgTaskSeq_ms);	
END_IF</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>9567f734-b5c5-46b4-92b5-7bf9ecc2c691</ObjectId>
          </data>
        </addData>
      </pou>
    </pous>
  </types>
  <instances>
    <configurations>
      <configuration name="SoftPLC">
        <resource name="Application">
          <task name="Main" interval="PT0.02S" priority="1">
            <pouInstance name="ShiftPOU" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="MixingTank" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="Task02" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="Task03" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="Task04" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="Task05" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="Task06" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="Task07" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="Task08" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="Task09" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="Task10" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Cyclic" Interval="t#20ms" IntervalUnit="ms" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>0f3f938f-f677-46c8-9fe8-5c2f521b0799</ObjectId>
              </data>
            </addData>
          </task>
          <task name="VISU_TASK" interval="PT0.1S" priority="31">
            <pouInstance name="VisuElems.Visu_Prg" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Cyclic" Interval="100" IntervalUnit="ms" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>36dd8743-addf-4031-9feb-dce731836678</ObjectId>
              </data>
            </addData>
          </task>
          <task name="Simulators" interval="PT0.001S" priority="1">
            <pouInstance name="Task01Sim" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="Task02Sim" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="Task03Sim" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="Task04Sim" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="Task05Sim" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="Task06Sim" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="Task07Sim" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="Task08Sim" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="Task09Sim" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="Task10Sim" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Cyclic" Interval="t#1ms" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>218332eb-b6ff-4fe5-8db2-6ef928876df3</ObjectId>
              </data>
            </addData>
          </task>
          <task name="ms1000" interval="PT1S" priority="1">
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Cyclic" Interval="1000" IntervalUnit="ms" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>2c30a013-8fab-4738-b4c2-b228f8a0ee25</ObjectId>
              </data>
            </addData>
          </task>
          <task name="ms100" interval="PT0.1S" priority="1">
            <pouInstance name="FOR_Loop" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Cyclic" Interval="100" IntervalUnit="ms" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>9745839a-2974-4a7a-addc-e5d5f46fbeca</ObjectId>
              </data>
            </addData>
          </task>
          <task name="ms10" interval="PT0.01S" priority="1">
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Cyclic" Interval="10" IntervalUnit="ms" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>0977b13d-19f7-4740-a40c-079c91847b9b</ObjectId>
              </data>
            </addData>
          </task>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/libraries" handleUnknown="implementation">
              <Libraries>
                <Library Name="#Standard" Namespace="Standard" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="Standard, * (System)" />
                <Library Name="#Util" Namespace="Util" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="Util, * (System)">
                  <Parameters>
                    <Parameter Name="IBLOCKSIZE" Value="22800" />
                  </Parameters>
                </Library>
                <Library Name="#Standard64" Namespace="Standard64" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="Standard64, * (System)" />
                <Library Name="#VisuDialogs" Namespace="VisuDialogs" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="VisuDialogs, * (System)" />
                <Library Name="#IoStandard" Namespace="IoStandard" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="true" DefaultResolution="IoStandard, 3.5.15.0 (System)" />
                <Library Name="#3SLicense" Namespace="_3S_LICENSE" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="3SLicense, 0.0.0.0 (3S - Smart Software Solutions GmbH)" ResolverGuid="97c3b452-d9fa-4ac2-9d0c-3d420aa6d95b" />
                <Library Name="#CAA Device Diagnosis" Namespace="DED" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="CAA Device Diagnosis, 3.5.15.0 (CAA Technical Workgroup)" />
                <Library Name="#BreakpointLogging" Namespace="BPLog" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="Breakpoint Logging Functions, 3.5.5.0 (3S - Smart Software Solutions GmbH)" />
                <Library Name="MemoryUtils, 3.5.15.0 (3S - Smart Software Solutions GmbH)" Namespace="MEMUtils" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" />
                <Library Name="#System_VisuElems" Namespace="VisuElems" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElems, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemMeter" Namespace="VisuElemMeter" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemMeter, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemsSpecialControls" Namespace="VisuElemsSpecialControls" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsSpecialControls, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemsWinControls" Namespace="VisuElemsWinControls" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsWinControls, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemTextEditor" Namespace="VisuElemTextEditor" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemTextEditor, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemTrace" Namespace="VisuElemTrace" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemTrace, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuNativeControl" Namespace="VisuNativeControl" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuNativeControl, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemsAlarm" Namespace="VisuElemsAlarm" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsAlarm, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemCamDisplayer" Namespace="VisuElemCamDisplayer" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemCamDisplayer, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae">
                  <Parameters>
                    <Parameter Name="GC_POINTS_PER_CAM" Value="100" />
                  </Parameters>
                </Library>
                <Library Name="#System_VisuElem3DPath" Namespace="VisuElem3DPath" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElem3DPath, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae">
                  <Parameters>
                    <Parameter Name="GC_POINTS_PER_POLYGON" Value="100" />
                  </Parameters>
                </Library>
                <Library Name="#System_VisuElemsDateTime" Namespace="VisuElemsDateTime" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsDateTime, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemXYChart" Namespace="VisuElemXYChart" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemXYChart, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#system_visuinputs" Namespace="visuinputs" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="visuinputs, 3.5.16.0 (system)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>29e9a39f-d9e1-4ae5-8462-7b18ca48243c</ObjectId>
                  </data>
                </addData>
              </Libraries>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
              <ObjectId>e86a3aad-ca93-4d44-88a5-66019f089c92</ObjectId>
            </data>
          </addData>
        </resource>
        <addData>
          <data name="Device" handleUnknown="discard">
            <Device xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="">
              <DeviceType>
                <DeviceIdentification>
                  <Type>4096</Type>
                  <Id>0000 0004</Id>
                  <Version>3.5.15.10</Version>
                </DeviceIdentification>
                <Connector moduleType="256" interface="Common.PCI" connectorId="0">
                  <HostParameterSet />
                </Connector>
                <Connector moduleType="769" interface="SafetyInterface" connectorId="1">
                  <HostParameterSet />
                </Connector>
                <DeviceParameterSet />
              </DeviceType>
            </Device>
          </data>
          <data name="configurations" handleUnknown="discard">
            <configurations />
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>83075d4d-9f61-4b3f-9b20-72bffe864b6d</ObjectId>
          </data>
        </addData>
      </configuration>
    </configurations>
  </instances>
  <addData>
    <data name="http://www.3s-software.com/plcopenxml/globalvars" handleUnknown="implementation">
      <globalVars name="MixingTankGVL">
        <variable name="PushButtonStart">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">	DIGITAL INPUT	Naredba operator za start sustava </xhtml>
          </documentation>
        </variable>
        <variable name="PushButtonStop">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">	DIGITAL INPUT	Naredba operator za stop sustava </xhtml>
          </documentation>
        </variable>
        <variable name="Pump1StartCmd">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">	    DIGITAL OUTPUT	Naredba automatike za start pumpe 1 </xhtml>
          </documentation>
        </variable>
        <variable name="Pump1StopCmd">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">	    DIGITAL OUTPUT	Naredba automatike za stop pumpe 1 </xhtml>
          </documentation>
        </variable>
        <variable name="Pump1Running">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">	    DIGITAL INPUT	Indikacija pokrenutog status pumpe 1 </xhtml>
          </documentation>
        </variable>
        <variable name="Pump2StartCmd">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">	    DIGITAL OUTPUT	Naredba automatike za start pumpe 2 </xhtml>
          </documentation>
        </variable>
        <variable name="Pump2StopCmd">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">	    DIGITAL OUTPUT	Naredba automatike za stop pumpe 2 </xhtml>
          </documentation>
        </variable>
        <variable name="Pump2Running">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">	    DIGITAL INPUT	Indikacija pokrenutog status pumpe 2 </xhtml>
          </documentation>
        </variable>
        <variable name="DrainValveOpenCmd">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">	DIGITAL OUTPUT	Naredba automatike za otvaranje ventila za odvod </xhtml>
          </documentation>
        </variable>
        <variable name="DrainValveCloseCmd">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">DIGITAL OUTPUT	Naredba automatike za zatvaranje ventila za odvod </xhtml>
          </documentation>
        </variable>
        <variable name="DrainValveClosed">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">	DIGITAL INPUT	Indikacija zatvorenog stanja odvodnog ventila </xhtml>
          </documentation>
        </variable>
        <variable name="DrainValveOpened">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">	DIGITAL INPUT	Indikacija otvorenog stanja odvodnog ventila </xhtml>
          </documentation>
        </variable>
        <variable name="TankLevel">
          <type>
            <REAL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">	    	REAL VALUE	Trenutna razina tanka u postocima </xhtml>
          </documentation>
        </variable>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="qualified_only" Value="" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>4c826d48-3338-4934-8c38-ee14b03cf4fe</ObjectId>
          </data>
        </addData>
      </globalVars>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/globalvars" handleUnknown="implementation">
      <globalVars name="Task02GVL">
        <variable name="HorizontalS1">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Configuration
Inputs</xhtml>
          </documentation>
        </variable>
        <variable name="HorizontalS2">
          <type>
            <BOOL />
          </type>
        </variable>
        <variable name="VerticalS1">
          <type>
            <BOOL />
          </type>
        </variable>
        <variable name="VerticalS2">
          <type>
            <BOOL />
          </type>
        </variable>
        <variable name="ManUp">
          <type>
            <BOOL />
          </type>
        </variable>
        <variable name="ManDown">
          <type>
            <BOOL />
          </type>
        </variable>
        <variable name="ManRight">
          <type>
            <BOOL />
          </type>
        </variable>
        <variable name="ManLeft">
          <type>
            <BOOL />
          </type>
        </variable>
        <variable name="ManUpRight">
          <type>
            <BOOL />
          </type>
        </variable>
        <variable name="ManUpLeft">
          <type>
            <BOOL />
          </type>
        </variable>
        <variable name="ManDownRight">
          <type>
            <BOOL />
          </type>
        </variable>
        <variable name="ManDownLeft">
          <type>
            <BOOL />
          </type>
        </variable>
        <variable name="Reset">
          <type>
            <BOOL />
          </type>
        </variable>
        <variable name="HorizontalRight">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Outputs</xhtml>
          </documentation>
        </variable>
        <variable name="HorizontalLeft">
          <type>
            <BOOL />
          </type>
        </variable>
        <variable name="VerticalUp">
          <type>
            <BOOL />
          </type>
        </variable>
        <variable name="VerticalDown">
          <type>
            <BOOL />
          </type>
        </variable>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="qualified_only" Value="" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>343cba84-c661-4210-8954-2e13cbc67b6d</ObjectId>
          </data>
        </addData>
      </globalVars>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/globalvars" handleUnknown="implementation">
      <globalVars name="Task03GVL">
        <variable name="cfgPeriodTime">
          <type>
            <TIME />
          </type>
          <initialValue>
            <simpleValue value="TIME#1m24s0ms" />
          </initialValue>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Configuration</xhtml>
          </documentation>
        </variable>
        <variable name="cfgStartDirection">
          <type>
            <DINT />
          </type>
          <initialValue>
            <simpleValue value="0" />
          </initialValue>
        </variable>
        <variable name="TLight1Red">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> DIGITAL OUTPUT	Activate red light traffic light 1 </xhtml>
          </documentation>
        </variable>
        <variable name="TLight1Yellow">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> DIGITAL OUTPUT	Activate yellow light traffic light 1 </xhtml>
          </documentation>
        </variable>
        <variable name="TLight1Green">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> DIGITAL OUTPUT	Activate green light traffic light 1 </xhtml>
          </documentation>
        </variable>
        <variable name="TLight2Red">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> DIGITAL OUTPUT	Activate red light traffic light 2 </xhtml>
          </documentation>
        </variable>
        <variable name="TLight2Yellow">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> DIGITAL OUTPUT	Activate yellow light traffic light 2 </xhtml>
          </documentation>
        </variable>
        <variable name="TLight2Green">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> DIGITAL OUTPUT	Activate green light traffic light 2 </xhtml>
          </documentation>
        </variable>
        <variable name="TLight3Red">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> DIGITAL OUTPUT	Activate red light traffic light 3 </xhtml>
          </documentation>
        </variable>
        <variable name="TLight3Yellow">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> DIGITAL OUTPUT	Activate yellow light traffic light 3 </xhtml>
          </documentation>
        </variable>
        <variable name="TLight3Green">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> DIGITAL OUTPUT	Activate green light traffic light 3 </xhtml>
          </documentation>
        </variable>
        <variable name="TLight4Red">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> DIGITAL OUTPUT	Activate red light traffic light 4 </xhtml>
          </documentation>
        </variable>
        <variable name="TLight4Yellow">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> DIGITAL OUTPUT	Activate yellow light traffic light 4 </xhtml>
          </documentation>
        </variable>
        <variable name="TLight4Green">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> DIGITAL OUTPUT	Activate green light traffic light 4 </xhtml>
          </documentation>
        </variable>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="qualified_only" Value="" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>45b9d55d-90d0-48a9-8d7e-2af6e1714d26</ObjectId>
          </data>
        </addData>
      </globalVars>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/globalvars" handleUnknown="implementation">
      <globalVars name="Task04GVL">
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="qualified_only" Value="" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>afaea012-41d7-4410-9001-a9a2b68f9de4</ObjectId>
          </data>
        </addData>
      </globalVars>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/globalvars" handleUnknown="implementation">
      <globalVars name="Task05GVL">
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="qualified_only" Value="" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>0345dc2f-a9c6-4b45-a482-cd15ee046323</ObjectId>
          </data>
        </addData>
      </globalVars>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/globalvars" handleUnknown="implementation">
      <globalVars name="Task06GVL">
        <variable name="JoyUp">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Configuration
Inputs</xhtml>
          </documentation>
        </variable>
        <variable name="JoyDown">
          <type>
            <BOOL />
          </type>
        </variable>
        <variable name="JoyRight">
          <type>
            <BOOL />
          </type>
        </variable>
        <variable name="JoyLeft">
          <type>
            <BOOL />
          </type>
        </variable>
        <variable name="JoyUpRight">
          <type>
            <BOOL />
          </type>
        </variable>
        <variable name="JoyUpLeft">
          <type>
            <BOOL />
          </type>
        </variable>
        <variable name="JoyDownRight">
          <type>
            <BOOL />
          </type>
        </variable>
        <variable name="JoyDownLeft">
          <type>
            <BOOL />
          </type>
        </variable>
        <variable name="EmcyStop">
          <type>
            <BOOL />
          </type>
        </variable>
        <variable name="RightLimit">
          <type>
            <BOOL />
          </type>
        </variable>
        <variable name="LeftLimit">
          <type>
            <BOOL />
          </type>
        </variable>
        <variable name="UpperLimit">
          <type>
            <BOOL />
          </type>
        </variable>
        <variable name="LowerLimit">
          <type>
            <BOOL />
          </type>
        </variable>
        <variable name="MotorLeft">
          <type>
            <BOOL />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">Outputs</xhtml>
          </documentation>
        </variable>
        <variable name="MotorRight">
          <type>
            <BOOL />
          </type>
        </variable>
        <variable name="CraneDown">
          <type>
            <BOOL />
          </type>
        </variable>
        <variable name="CraneUp">
          <type>
            <BOOL />
          </type>
        </variable>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="qualified_only" Value="" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>c326e88c-69cf-4d7f-a487-7db4fa8e1234</ObjectId>
          </data>
        </addData>
      </globalVars>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/globalvars" handleUnknown="implementation">
      <globalVars name="Task07GVL">
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="qualified_only" Value="" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>cb8d759b-fa0d-4ae2-83e3-333902714a77</ObjectId>
          </data>
        </addData>
      </globalVars>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/globalvars" handleUnknown="implementation">
      <globalVars name="Task08GVL">
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="qualified_only" Value="" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ac7acf56-67ee-4039-8e7d-c76924050af3</ObjectId>
          </data>
        </addData>
      </globalVars>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/globalvars" handleUnknown="implementation">
      <globalVars name="Task09GVL">
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="qualified_only" Value="" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>812c0c2b-4216-4da2-98de-e49eef868a20</ObjectId>
          </data>
        </addData>
      </globalVars>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/globalvars" handleUnknown="implementation">
      <globalVars name="Task10GVL">
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="qualified_only" Value="" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>30219264-6ffe-4f61-bb70-2aefb00d0f93</ObjectId>
          </data>
        </addData>
      </globalVars>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/libraries" handleUnknown="implementation">
      <Libraries>
        <Library Name="VisuSymbols, 3.5.10.0 (System)" Namespace="VisuSymbols" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" />
        <Library Name="#CmpBitmapPool" Namespace="CmpBitmapPool" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="CmpBitmapPool, * (System)" />
        <Library Name="#System_VisuElems" Namespace="VisuElems" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElems, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemMeter" Namespace="VisuElemMeter" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemMeter, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemsSpecialControls" Namespace="VisuElemsSpecialControls" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsSpecialControls, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemsWinControls" Namespace="VisuElemsWinControls" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsWinControls, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemTextEditor" Namespace="VisuElemTextEditor" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemTextEditor, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemTrace" Namespace="VisuElemTrace" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemTrace, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuNativeControl" Namespace="VisuNativeControl" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuNativeControl, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemsAlarm" Namespace="VisuElemsAlarm" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsAlarm, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemCamDisplayer" Namespace="VisuElemCamDisplayer" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemCamDisplayer, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae">
          <Parameters>
            <Parameter Name="GC_POINTS_PER_CAM" Value="100" />
          </Parameters>
        </Library>
        <Library Name="#System_VisuElem3DPath" Namespace="VisuElem3DPath" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElem3DPath, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae">
          <Parameters>
            <Parameter Name="GC_POINTS_PER_POLYGON" Value="100" />
          </Parameters>
        </Library>
        <Library Name="#System_VisuElemsDateTime" Namespace="VisuElemsDateTime" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsDateTime, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemXYChart" Namespace="VisuElemXYChart" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemXYChart, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#system_visuinputs" Namespace="visuinputs" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="visuinputs, 3.5.16.0 (system)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>497477f5-d561-4978-840d-bbcb3520b9e4</ObjectId>
          </data>
        </addData>
      </Libraries>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/projectstructure" handleUnknown="discard">
      <ProjectStructure>
        <Folder Name="03. Introduction">
          <Folder Name="03.3. FOR Loop">
            <Object Name="FOR_Loop" ObjectId="60883219-bc23-476c-91db-fffffee32da6" />
          </Folder>
        </Folder>
        <Object Name="CollisionDetection" ObjectId="2bb3af1c-50de-4ea4-8cc2-9e0bdbff8bf2" />
        <Object Name="CONCAT2" ObjectId="4935d0e0-96c6-41b2-9c1f-bc15f183da79" />
        <Object Name="Library Manager" ObjectId="497477f5-d561-4978-840d-bbcb3520b9e4" />
        <Folder Name="MarkingMachine">
          <Object Name="PLC_PRG_1" ObjectId="987637a4-49bc-4a6f-847b-45d0bd88f175" />
        </Folder>
        <Object Name="Motor_Model" ObjectId="1505332d-a29d-40f9-96df-69cc96037121" />
        <Object Name="On_Off_Constructor" ObjectId="aa484129-fb06-4af2-a089-7854403240d6" />
        <Object Name="OnOff_ConstructorLIO" ObjectId="03f815a1-4b3d-468c-aa4d-45cdb818d733" />
        <Object Name="OnOffValve_Model" ObjectId="6734a321-abac-4b15-a10b-d0fe6fe7b2f6" />
        <Object Name="OnOffValve_Object" ObjectId="488ff859-327d-4aec-a99e-54a706512310" />
        <Folder Name="Prioritylist">
          <Object Name="PrioritySort" ObjectId="d892b45b-76e9-460d-ae2b-0149332154a4" />
          <Object Name="PriorityPOU" ObjectId="28c4622b-4282-464e-9123-021d132cdf4c" />
          <Object Name="dint8" ObjectId="b51107bc-8a33-4c20-a5b0-9c44e44966a0" />
          <Object Name="Swapper" ObjectId="ead7635a-ee19-4e90-9319-96762077517e" />
        </Folder>
        <Folder Name="ProgramiSaTehnickogFaksa">
          <Object Name="MotorPump" ObjectId="ffd50fef-0d21-4836-a27c-5cd87c6223b1" />
          <Object Name="MotorVentilator" ObjectId="9b700c35-f999-405b-a710-de63145f0877" />
          <Object Name="VJEZBA0" ObjectId="8f39462e-a3cd-4e55-b9c9-b08c42190070" />
          <Object Name="VJEZBA1" ObjectId="c40a828a-8e8c-4c6f-b79c-7baa0a29c365" />
          <Object Name="VJEZBA_PID" ObjectId="5fccfb84-f9df-4f92-9d4f-dd055b11f07e" />
        </Folder>
        <Object Name="Pump_Model" ObjectId="384c9f0a-fb8c-4f23-bf7e-e5999e5b7c60" />
        <Object Name="Rand" ObjectId="3c70ca2b-944a-4582-8eaf-4059251bbcb8" />
        <Folder Name="ScrollingText">
          <Object Name="PLC_PRG" ObjectId="963a9665-e31d-443f-a029-4b389fb56250" />
        </Folder>
        <Folder Name="ShiftArray">
          <Object Name="ShiftPOU" ObjectId="6d00b0bb-951b-4d70-baa4-605147281a36" />
          <Object Name="ShiftArray" ObjectId="e85c3188-3f87-4883-a53c-302082425315" />
        </Folder>
        <Object Name="SoftPLC" ObjectId="83075d4d-9f61-4b3f-9b20-72bffe864b6d">
          <Object Name="Application" ObjectId="e86a3aad-ca93-4d44-88a5-66019f089c92">
            <Object Name="Library Manager" ObjectId="29e9a39f-d9e1-4ae5-8462-7b18ca48243c" />
            <Object Name="Main" ObjectId="0f3f938f-f677-46c8-9fe8-5c2f521b0799" />
            <Object Name="VISU_TASK" ObjectId="36dd8743-addf-4031-9feb-dce731836678" />
            <Object Name="Simulators" ObjectId="218332eb-b6ff-4fe5-8db2-6ef928876df3" />
            <Object Name="ms1000" ObjectId="2c30a013-8fab-4738-b4c2-b228f8a0ee25" />
            <Object Name="ms100" ObjectId="9745839a-2974-4a7a-addc-e5d5f46fbeca" />
            <Object Name="ms10" ObjectId="0977b13d-19f7-4740-a40c-079c91847b9b" />
          </Object>
        </Object>
        <Folder Name="SrpskiPrimeri">
          <Object Name="Zadatak4" ObjectId="acabf99f-9949-4167-a32e-804426fcd702" />
          <Object Name="Zadatak5" ObjectId="80181576-bdb6-452a-9454-5eaaa26e5e88" />
          <Object Name="POU" ObjectId="b5254b6c-8806-4ee6-8485-7012155be54a" />
        </Folder>
        <Object Name="Tank_Model" ObjectId="ddc61a00-3778-4b50-8361-25581b367426" />
        <Object Name="TankControl" ObjectId="f62bed87-80ae-4dc4-888e-c2a34b811c2c" />
        <Folder Name="Tasks1-10">
          <Folder Name="Control">
            <Object Name="MixingTank" ObjectId="9a69d563-82da-4abf-8956-aa135d80ff28" />
            <Object Name="Task02" ObjectId="0e43dcec-62b5-40b5-a883-59b832cbbbc4" />
            <Object Name="Task07" ObjectId="6556073a-87e5-46d1-a2cd-8c2ff68fa95d" />
            <Object Name="Task08" ObjectId="cf2b9d28-b015-460e-a77c-54443dd3a3f0" />
            <Object Name="Task09" ObjectId="244d14cc-6511-4f01-b74d-42e40d4c31a2" />
            <Object Name="Task03" ObjectId="e7eb72fd-dd19-4d64-b3b3-1d670977a2d9" />
            <Object Name="Task10" ObjectId="047a811e-bca2-4c80-8334-bed6a6193400" />
            <Object Name="Task04" ObjectId="44854fd1-ca8f-4c69-9c3e-b20f739e131e" />
            <Object Name="Task05" ObjectId="e6ece021-1b40-409f-8b4d-28e53f6719ba" />
            <Object Name="Task06" ObjectId="f709c5ee-b0aa-445c-af2b-bf543f210ff5" />
            <Object Name="MoveSprite" ObjectId="efe1e0d8-4162-41ed-bb90-87826e90fc6b" />
            <Object Name="Servo" ObjectId="6ff4fb81-292f-4a52-8f07-693ce750afde" />
          </Folder>
          <Object Name="PrometnoSvjetlo" ObjectId="d28ca644-bb67-4465-8a4e-faecb202c873" />
          <Folder Name="IO">
            <Object Name="MixingTankGVL" ObjectId="4c826d48-3338-4934-8c38-ee14b03cf4fe" />
            <Object Name="Task02GVL" ObjectId="343cba84-c661-4210-8954-2e13cbc67b6d" />
            <Object Name="Task03GVL" ObjectId="45b9d55d-90d0-48a9-8d7e-2af6e1714d26" />
            <Object Name="Task04GVL" ObjectId="afaea012-41d7-4410-9001-a9a2b68f9de4" />
            <Object Name="Task05GVL" ObjectId="0345dc2f-a9c6-4b45-a482-cd15ee046323" />
            <Object Name="Task06GVL" ObjectId="c326e88c-69cf-4d7f-a487-7db4fa8e1234" />
            <Object Name="Task07GVL" ObjectId="cb8d759b-fa0d-4ae2-83e3-333902714a77" />
            <Object Name="Task08GVL" ObjectId="ac7acf56-67ee-4039-8e7d-c76924050af3" />
            <Object Name="Task09GVL" ObjectId="812c0c2b-4216-4da2-98de-e49eef868a20" />
            <Object Name="Task10GVL" ObjectId="30219264-6ffe-4f61-bb70-2aefb00d0f93" />
          </Folder>
          <Folder Name="Simulator">
            <Object Name="Task01Sim" ObjectId="0c49e400-ee18-44bb-9c02-11f51c58f352" />
            <Object Name="Task02Sim" ObjectId="57530bb6-c5e2-400f-b723-a133d092dff8" />
            <Object Name="Task03Sim" ObjectId="e8cc3a31-36c9-4946-a8e8-c5e86e24c67e" />
            <Object Name="Task06Sim" ObjectId="8d136aed-5c7d-4253-b4bc-b0bfc156ba09" />
            <Object Name="Task04Sim" ObjectId="166974fc-801d-4a40-901b-41b59d178321" />
            <Object Name="Task07Sim" ObjectId="cb31825b-2e05-4e6e-b210-38a0023a66e3" />
            <Object Name="Task05Sim" ObjectId="a47974f0-818d-4695-b066-f4792e9f5e11" />
            <Object Name="Task08Sim" ObjectId="45414d7a-73ea-4929-b44d-b8e779b60e74" />
            <Object Name="Task09Sim" ObjectId="6e5d9cfc-37cf-4369-b0cb-a1c016b2024b" />
            <Object Name="Task10Sim" ObjectId="10e981f1-e773-4212-9c7c-f710d140b580" />
          </Folder>
        </Folder>
        <Folder Name="Tasks11-20">
          <Object Name="Task14" ObjectId="42856c41-6994-4b90-85c5-9ce41257888f" />
          <Object Name="Task15" ObjectId="1b238e45-8d9a-4d96-9a52-d4e4dc2c3ecd" />
          <Object Name="Task16" ObjectId="e3d2574e-fcfb-4cec-90bf-d26e98d1f34e" />
          <Object Name="Task17" ObjectId="872d9bbb-58fd-49da-b8c8-76ac8f6e599f" />
          <Object Name="Task18" ObjectId="4e39097d-1cb4-4b6f-ad54-64ac97f7c225" />
          <Object Name="Task11" ObjectId="0f696a03-72bd-4ad2-9605-439e929feb75" />
          <Object Name="Task19" ObjectId="27dd06c4-d739-4a96-8c6b-d2a3922d1f06" />
          <Object Name="Task12" ObjectId="294b7ecb-8b5f-4597-9303-fafbf378b67f" />
          <Object Name="Task20" ObjectId="69b030b7-645b-462d-b91b-0aa0b674d007" />
          <Object Name="Task13" ObjectId="5d88f5bc-a394-43de-a380-5458a5535e95" />
        </Folder>
        <Folder Name="Tasks21-30">
          <Object Name="Task1_3" ObjectId="94b03d25-7c25-4fc2-9596-20f647c424c7" />
          <Object Name="Task1_4" ObjectId="80358f4e-5316-4868-b3b0-986db59d56a8" />
          <Object Name="Task1_3_1" ObjectId="e9b6c3d1-e5cd-4d00-954e-15a298264040" />
          <Object Name="Task1_3_2" ObjectId="38ac2665-9dbe-4035-92f1-e94854ae885c" />
          <Object Name="Task1_3_3" ObjectId="1e729639-9066-4c01-a301-d9f40254e780" />
          <Object Name="Task1_3_4" ObjectId="f17c14d2-a22a-4384-b794-385b83b5fd28" />
          <Object Name="Task1_3_5" ObjectId="1089910d-9056-44a5-84fa-5c96cf6915db" />
          <Object Name="Task1_3_6" ObjectId="5bbd4c2c-1918-49dc-a0c2-a7ab3ca3c4e2" />
          <Object Name="Task1_2_7" ObjectId="8dbd1e14-8b84-4670-87ec-a931fa7f256b" />
          <Object Name="Task1_3_7" ObjectId="ad99f4fb-8bec-447a-b5b1-5f472bfe3972" />
        </Folder>
        <Folder Name="Tasks31-40">
          <Object Name="Task1_5" ObjectId="ab24956b-03a4-4be4-9439-ca572a46e68e" />
          <Object Name="Task1_4_1" ObjectId="d8b8487d-7317-4cad-b2cf-35b5c11e16a8" />
          <Object Name="Task1_5_1" ObjectId="6670f67d-6e06-47eb-837a-367856b811e2" />
          <Object Name="Task1_4_2" ObjectId="216ab91c-73bb-4521-abd7-158b230d2d31" />
          <Object Name="Task1_5_2" ObjectId="0786eb0c-8466-4d84-8c82-6ae1673cccba" />
          <Object Name="Task1_4_3" ObjectId="aee4a5e0-bb61-4707-bd44-313fa1afb81d" />
          <Object Name="Task1_4_4" ObjectId="d6d56345-f10e-47df-93d1-dbddb058a343" />
          <Object Name="Task1_4_5" ObjectId="b5699da7-0e66-42d2-bd5c-9ca7fad7f63d" />
          <Object Name="Task1_4_6" ObjectId="6785bfd4-c60f-4146-ae64-2492c7a9672e" />
          <Object Name="Task1_4_7" ObjectId="06b2a1ef-22bf-49ab-830b-02188cb27381" />
        </Folder>
        <Folder Name="Tasks41-50">
          <Object Name="Task1_6" ObjectId="0ec4c281-a975-4a2a-a72c-e2ef4a447e77" />
          <Object Name="Task1_6_1" ObjectId="fa456a7b-d659-4e17-a957-e7ccda048e91" />
          <Object Name="Task1_6_2" ObjectId="9de1253a-7082-4765-9e24-dfd4d91be6f1" />
          <Object Name="Task1_5_3" ObjectId="ea59ee08-c430-407d-a96a-02372b475e27" />
          <Object Name="Task1_6_3" ObjectId="26fe6db2-1347-4755-b1af-1a5970dc52c6" />
          <Object Name="Task1_5_4" ObjectId="9246f0e2-192b-4efe-8aa6-3a5b92f93329" />
          <Object Name="Task1_6_4" ObjectId="98e952f5-2b59-4a01-a97c-3226eeb549e0" />
          <Object Name="Task1_5_5" ObjectId="b725fbc6-8ccb-4345-a93f-2f6a9f60c5e6" />
          <Object Name="Task1_5_6" ObjectId="0adcc850-3fe7-4cd8-b176-f53aff1e9872" />
          <Object Name="Task1_5_7" ObjectId="1f87fc3b-ae65-4c18-9596-e7cb8326553a" />
        </Folder>
        <Folder Name="Tasks51-60">
          <Object Name="Task1_7" ObjectId="1196458b-de97-43e6-88db-c7e5cf399021" />
          <Object Name="Task1_8" ObjectId="ef7827e7-12ff-435a-bede-745c3d60ed5b" />
          <Object Name="Task1_9" ObjectId="b663c1e2-001b-4eec-9679-597ef582eaa5" />
          <Object Name="Task1_6_5" ObjectId="29602933-e5a6-4fc5-b811-4df820f29692" />
          <Object Name="Task1_6_6" ObjectId="8cb3b8db-f24c-4df9-b9d6-dc7d07b2d710" />
          <Object Name="Task1_6_7" ObjectId="0a81f790-5f3a-48a4-8685-a2984606ef86" />
        </Folder>
        <Object Name="ThreeWayIncrementValve" ObjectId="75b819dd-8c65-4928-a069-08f8a4c05b8f" />
        <Folder Name="ToniGaraza">
          <Object Name="Counter_Down" ObjectId="829b6d81-9be6-43d7-93b0-682f25ab3af9" />
          <Object Name="Counter_UP" ObjectId="a6829a7f-3489-4678-83d4-8a5eb12c8abc" />
          <Object Name="Garage_Logic" ObjectId="2627423d-a996-4bfd-a7d5-7568c86a4d1b" />
          <Object Name="PLC_PRG_2" ObjectId="78e7c88c-c002-4b99-9be6-080219d7301c" />
        </Folder>
        <Object Name="TwoWayIncrementValve" ObjectId="9567f734-b5c5-46b4-92b5-7bf9ecc2c691" />
      </ProjectStructure>
    </data>
  </addData>
</project>